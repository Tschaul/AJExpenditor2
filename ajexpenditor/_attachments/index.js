!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&"undefined"!=typeof require.resolve&&"undefined"!=typeof process&&process.platform&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], [], false, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
!function(e){function n(e,n){e=e.replace(l,"");var r=e.match(u),t=(r[1].split(",")[n]||"require").replace(s,""),i=p[t]||(p[t]=new RegExp(a+t+f,"g"));i.lastIndex=0;for(var o,c=[];o=i.exec(e);)c.push(o[2]||o[3]);return c}function r(e,n,t,o){if("object"==typeof e&&!(e instanceof Array))return r.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof n&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var l=i.get(e);return l.__useDefault?l["default"]:l}throw new TypeError("Invalid require")}for(var a=[],f=0;f<e.length;f++)a.push(i["import"](e[f],o));Promise.all(a).then(function(e){n&&n.apply(null,e)},t)}function t(t,l,a){"string"!=typeof t&&(a=l,l=t,t=null),l instanceof Array||(a=l,l=["require","exports","module"].splice(0,a.length)),"function"!=typeof a&&(a=function(e){return function(){return e}}(a)),void 0===l[l.length-1]&&l.pop();var f,u,s;-1!=(f=o.call(l,"require"))&&(l.splice(f,1),t||(l=l.concat(n(a.toString(),f)))),-1!=(u=o.call(l,"exports"))&&l.splice(u,1),-1!=(s=o.call(l,"module"))&&l.splice(s,1);var p={name:t,deps:l,execute:function(n,t,o){for(var p=[],c=0;c<l.length;c++)p.push(n(l[c]));o.uri=o.id,o.config=function(){},-1!=s&&p.splice(s,0,o),-1!=u&&p.splice(u,0,t),-1!=f&&p.splice(f,0,function(e,t,l){return"string"==typeof e&&"function"!=typeof t?n(e):r.call(i,e,t,l,o.id)});var d=a.apply(-1==u?e:t,p);return"undefined"==typeof d&&o&&(d=o.exports),"undefined"!=typeof d?d:void 0}};if(t)c.anonDefine||c.isBundle?c.anonDefine&&c.anonDefine.name&&(c.anonDefine=null):c.anonDefine=p,c.isBundle=!0,i.registerDynamic(p.name,p.deps,!1,p.execute);else{if(c.anonDefine&&!c.anonDefine.name)throw new Error("Multiple anonymous defines in module "+t);c.anonDefine=p}}var i=$__System,o=Array.prototype.indexOf||function(e){for(var n=0,r=this.length;r>n;n++)if(this[n]===e)return n;return-1},l=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,a="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",f="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",u=/\(([^\)]*)\)/,s=/^\s+|\s+$/g,p={};t.amd={};var c={isBundle:!1,anonDefine:null};i.amdDefine=t,i.amdRequire=r}("undefined"!=typeof self?self:global);
$__System.registerDynamic('2', ['3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var defined = $__require('3');
  module.exports = function (it) {
    return Object(defined(it));
  };
});
$__System.registerDynamic('4', ['5', '2', '6', '7'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('5'),
      toObject = $__require('2'),
      IObject = $__require('6');
  module.exports = $__require('7')(function () {
    var a = Object.assign,
        A = {},
        B = {},
        S = Symbol(),
        K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
  }) ? function assign(target, source) {
    var T = toObject(target),
        $$ = arguments,
        $$len = $$.length,
        index = 1,
        getKeys = $.getKeys,
        getSymbols = $.getSymbols,
        isEnum = $.isEnum;
    while ($$len > index) {
      var S = IObject($$[index++]),
          keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
          length = keys.length,
          j = 0,
          key;
      while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
    return T;
  } : Object.assign;
});
$__System.registerDynamic('8', ['9', '4'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('9');
  $export($export.S + $export.F, 'Object', { assign: $__require('4') });
});
$__System.registerDynamic('a', ['8', 'b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('8');
  module.exports = $__require('b').Object.assign;
});
$__System.registerDynamic("c", ["a"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("a"), __esModule: true };
});
$__System.register("d", ["10", "11", "12", "13", "c", "e", "f"], function (_export) {
    var getAmountDisplay, obervable, computed, extendObservable, observe, toJS, _createClass, _classCallCheck, _Object$assign, moment, getDrafts, _post, _put, _remove, InputDialogModel;

    return {
        setters: [function (_4) {
            getAmountDisplay = _4.getAmountDisplay;
        }, function (_3) {
            obervable = _3.obervable;
            computed = _3.computed;
            extendObservable = _3.extendObservable;
            observe = _3.observe;
            toJS = _3.toJS;
        }, function (_) {
            _createClass = _["default"];
        }, function (_2) {
            _classCallCheck = _2["default"];
        }, function (_c) {
            _Object$assign = _c["default"];
        }, function (_e) {
            moment = _e["default"];
        }, function (_f) {
            getDrafts = _f.getDrafts;
            _post = _f.post;
            _put = _f.put;
            _remove = _f.remove;
        }],
        execute: function () {
            "use strict";

            InputDialogModel = (function () {
                function InputDialogModel(parent) {
                    var _this = this;

                    _classCallCheck(this, InputDialogModel);

                    extendObservable(this, {
                        mode: "add",
                        parent: parent,
                        isShown: false,
                        draftsAreShown: false,
                        _id: "",
                        _rev: "",
                        amountRaw: "",
                        amount: computed(function () {
                            try {
                                var res = eval(_this.amountRaw);
                                return typeof res === "number" ? Math.round(res * 10000) : NaN;
                            } catch (e) {
                                return NaN;
                            }
                        }),
                        amountDisplay: computed(function () {
                            return getAmountDisplay(_this.amount);
                        }),
                        description: "",
                        date: moment(),
                        category: null,
                        expenditures: [],
                        ious: [],
                        drafts: [],
                        selectedDraft: null,
                        isValid: computed(function () {
                            return _this.ious.length && _this.expenditures.length && _this.amount && _this.category && _this.description;
                        }),
                        log: []
                    });

                    this.queryDrafts();

                    observe(this, "selectedDraft", function (change) {
                        if (change.newValue) {
                            var draft = change.newValue;
                            _this.ious.replace(draft.ious.map(function (x) {
                                return _Object$assign({}, x);
                            }));
                            _this.expenditures.replace(draft.expenditures.map(function (x) {
                                return _Object$assign({}, x);
                            }));
                        }
                    });
                }

                _createClass(InputDialogModel, [{
                    key: "queryDrafts",
                    value: function queryDrafts() {
                        var _this2 = this;

                        getDrafts().then(function (drafts) {
                            _this2.drafts = drafts;
                        });
                    }
                }, {
                    key: "showAddModal",
                    value: function showAddModal() {
                        this.mode = "add";
                        this.amountRaw = "";
                        this.description = "";
                        this.date = moment();
                        this.category = null;
                        this.expenditures = [];
                        this.ious = [];
                        this.selectedDraft = null;
                        this.isShown = true;
                        this._id = "";
                        this._rev = "";
                    }
                }, {
                    key: "showEditModal",
                    value: function showEditModal(event) {
                        this.mode = "edit";
                        this.amountRaw = event.amountScribble;
                        this.description = event.description;
                        this.selectedDraft = null;
                        this.ious.replace(event.ious);
                        this.expenditures.replace(event.expenditures);
                        this.category = this.parent.getCategory(event.category);
                        this.date = moment(event.date);
                        this._id = event._id;
                        this._rev = event._rev;
                        this.isShown = true;
                    }
                }, {
                    key: "send",
                    value: function send() {
                        if (this.mode === "add") {
                            this.post();
                        } else {
                            this.put();
                        }
                    }
                }, {
                    key: "post",
                    value: function post() {
                        var _this3 = this;

                        var doc = {
                            "type": "event",
                            "amount": this.amount,
                            "description": this.description,
                            "date": this.date.format("YYYY-MM-DD"),
                            "category": this.category.name,
                            "amountScribble": this.amountRaw,
                            "ious": toJS(this.ious),
                            "expenditures": toJS(this.expenditures)
                        };

                        return _post(doc).then(function () {
                            _this3.log.unshift(_this3.amountDisplay + " " + _this3.description + " " + _this3.date.format("YYYY-MM-DD") + " hinzugefügt");
                            _this3.amountRaw = "";
                            _this3.description = "";
                        });
                    }
                }, {
                    key: "put",
                    value: function put() {
                        var _this4 = this;

                        var doc = {
                            "_id": this._id,
                            "_rev": this._rev,
                            "type": "event",
                            "amount": this.amount,
                            "description": this.description,
                            "date": this.date.format("YYYY-MM-DD"),
                            "category": this.category.name,
                            "amountScribble": this.amountRaw,
                            "ious": toJS(this.ious),
                            "expenditures": toJS(this.expenditures)
                        };

                        console.log(doc);
                        return _put(doc).then(function (result) {
                            _this4._rev = result.rev;
                            _this4.log.unshift(_this4.amountDisplay + " " + _this4.description + " " + _this4.date.format("YYYY-MM-DD") + " upgedatet");
                        });
                    }
                }, {
                    key: "remove",
                    value: function remove() {
                        var _this5 = this;

                        return _remove(this._id, this._rev).then(function () {
                            return _this5.isShown = false;
                        });
                    }
                }]);

                return InputDialogModel;
            })();

            _export("InputDialogModel", InputDialogModel);
        }
    };
});
$__System.register("14", ["10", "11", "12", "13", "c", "f", "d"], function (_export) {
    var getAmountDisplay, obervable, computed, extendObservable, _createClass, _classCallCheck, _Object$assign, getEvents, onEventsChange, getExpendituresTotal, getIousTotal, InputDialogModel, TableViewModel, Event;

    return {
        setters: [function (_4) {
            getAmountDisplay = _4.getAmountDisplay;
        }, function (_3) {
            obervable = _3.obervable;
            computed = _3.computed;
            extendObservable = _3.extendObservable;
        }, function (_) {
            _createClass = _["default"];
        }, function (_2) {
            _classCallCheck = _2["default"];
        }, function (_c) {
            _Object$assign = _c["default"];
        }, function (_f) {
            getEvents = _f.getEvents;
            onEventsChange = _f.onEventsChange;
            getExpendituresTotal = _f.getExpendituresTotal;
            getIousTotal = _f.getIousTotal;
        }, function (_d) {
            InputDialogModel = _d.InputDialogModel;
        }],
        execute: function () {
            "use strict";

            TableViewModel = (function () {
                function TableViewModel(parent) {
                    var _this = this;

                    _classCallCheck(this, TableViewModel);

                    extendObservable(this, {
                        events: [],
                        queryingMoreEvents: false,
                        iouPairs: computed(function () {
                            var pairs = [];
                            parent.people.forEach(function (borrower) {
                                parent.people.forEach(function (creditor) {
                                    if (borrower.name < creditor.name) {
                                        pairs.push([borrower, creditor]);
                                    }
                                });
                            });
                            return pairs;
                        }),
                        expendituresTotals: [],
                        iousTotals: []
                    });
                    this.parent = parent;
                    this.inputDialog = new InputDialogModel(this);
                    this.queryEvents();
                    this.queryExpendituresTotal();
                    this.queryIousTotal();

                    onEventsChange(function () {
                        _this.requeryEvents();
                        _this.queryExpendituresTotal();
                        _this.queryIousTotal();
                    });
                }

                _createClass(TableViewModel, [{
                    key: "queryEvents",
                    value: function queryEvents() {
                        var _this2 = this;

                        getEvents(0, 20).then(function (events) {
                            _this2.events.replace(events.map(function (e) {
                                return new Event(e, _this2);
                            }));
                            _this2.queryMoreEvents();
                        });
                    }
                }, {
                    key: "queryMoreEvents",
                    value: function queryMoreEvents() {
                        var _this3 = this;

                        if (!this.queryingMoreEvents) {

                            this.queryingMoreEvents = true;
                            //console.log('querying more events');
                            getEvents(this.events.length, 20).then(function (events) {

                                _this3.events = _this3.events.concat(events.map(function (e) {
                                    return new Event(e, _this3);
                                }));
                                _this3.queryingMoreEvents = false;
                            });
                        }
                    }
                }, {
                    key: "requeryEvents",
                    value: function requeryEvents() {
                        var _this4 = this;

                        getEvents(0, this.events.length).then(function (events) {
                            _this4.events.replace(events.map(function (e) {
                                return new Event(e, _this4);
                            }));
                        });
                    }
                }, {
                    key: "queryExpendituresTotal",
                    value: function queryExpendituresTotal() {
                        var _this5 = this;

                        getExpendituresTotal().then(function (totals) {
                            _this5.expendituresTotals.replace(totals);
                        });
                    }
                }, {
                    key: "queryIousTotal",
                    value: function queryIousTotal() {
                        var _this6 = this;

                        getIousTotal().then(function (totals) {
                            _this6.iousTotals.replace(totals);
                        });
                    }
                }, {
                    key: "getCategory",
                    value: function getCategory(name) {
                        return this.categories.find(function (x) {
                            return x.name == name;
                        });
                    }
                }, {
                    key: "getExpendituresTotal",
                    value: function getExpendituresTotal(name) {
                        var total = this.expendituresTotals.find(function (x) {
                            return x.person === name;
                        });
                        return total ? getAmountDisplay(total.value) : undefined;
                    }
                }, {
                    key: "getIousTotal",
                    value: function getIousTotal(borrower, creditor) {
                        var total = this.iousTotals.find(function (x) {
                            return x.borrower === borrower && x.creditor === creditor;
                        });
                        return total ? getAmountDisplay(total.value) : undefined;
                    }
                }, {
                    key: "people",
                    get: function get() {
                        return this.parent.people;
                    }
                }, {
                    key: "categories",
                    get: function get() {
                        return this.parent.categories;
                    }
                }]);

                return TableViewModel;
            })();

            _export("TableViewModel", TableViewModel);

            Event = function Event(data, parent) {
                var _this7 = this;

                _classCallCheck(this, Event);

                this.parent = parent;
                extendObservable(this, _Object$assign(data, {
                    categoryFullName: computed(function () {
                        var cat = _this7.parent.getCategory(_this7.category);
                        return cat ? cat.fullName : _this7.category;
                    }),
                    amountDisplay: computed(function () {
                        return getAmountDisplay(_this7.amount);
                    })
                }));
            };

            _export("Event", Event);
        }
    };
});
$__System.registerDynamic("15", ["16"], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var global = this || self,
      GLOBAL = global;
  (function (process) {
    (function (f) {
      if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = f();
      } else if (typeof undefined === "function" && define.amd) {
        define([], f);
      } else {
        var g;
        if (typeof window !== "undefined") {
          g = window;
        } else if (typeof global !== "undefined") {
          g = global;
        } else if (typeof self !== "undefined") {
          g = self;
        } else {
          g = this;
        }
        g.PouchDB = f();
      }
    })(function () {
      var define, module, exports;
      return function e(t, n, r) {
        function s(o, u) {
          if (!n[o]) {
            if (!t[o]) {
              var a = typeof $__require == "function" && $__require;
              if (!u && a) return a(o, !0);
              if (i) return i(o, !0);
              var f = new Error("Cannot find module '" + o + "'");
              throw f.code = "MODULE_NOT_FOUND", f;
            }
            var l = n[o] = { exports: {} };
            t[o][0].call(l.exports, function (e) {
              var n = t[o][1][e];
              return s(n ? n : e);
            }, l, l.exports, e, t, n, r);
          }
          return n[o].exports;
        }
        var i = typeof $__require == "function" && $__require;
        for (var o = 0; o < r.length; o++) s(r[o]);
        return s;
      }({
        1: [function (_dereq_, module, exports) {
          'use strict';

          module.exports = argsArray;
          function argsArray(fun) {
            return function () {
              var len = arguments.length;
              if (len) {
                var args = [];
                var i = -1;
                while (++i < len) {
                  args[i] = arguments[i];
                }
                return fun.call(this, args);
              } else {
                return fun.call(this, []);
              }
            };
          }
        }, {}],
        2: [function (_dereq_, module, exports) {
          (function (process) {
            exports = module.exports = _dereq_(3);
            exports.log = log;
            exports.formatArgs = formatArgs;
            exports.save = save;
            exports.load = load;
            exports.useColors = useColors;
            exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();
            exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];
            function useColors() {
              if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {
                return true;
              }
              return typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style || typeof window !== 'undefined' && window && window.console && (console.firebug || console.exception && console.table) || typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
            }
            exports.formatters.j = function (v) {
              try {
                return JSON.stringify(v);
              } catch (err) {
                return '[UnexpectedJSONParseError]: ' + err.message;
              }
            };
            function formatArgs(args) {
              var useColors = this.useColors;
              args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);
              if (!useColors) return;
              var c = 'color: ' + this.color;
              args.splice(1, 0, c, 'color: inherit');
              var index = 0;
              var lastC = 0;
              args[0].replace(/%[a-zA-Z%]/g, function (match) {
                if ('%%' === match) return;
                index++;
                if ('%c' === match) {
                  lastC = index;
                }
              });
              args.splice(lastC, 0, c);
            }
            function log() {
              return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);
            }
            function save(namespaces) {
              try {
                if (null == namespaces) {
                  exports.storage.removeItem('debug');
                } else {
                  exports.storage.debug = namespaces;
                }
              } catch (e) {}
            }
            function load() {
              var r;
              try {
                r = exports.storage.debug;
              } catch (e) {}
              if (!r && typeof process !== 'undefined' && 'env' in process) {
                r = process.env.DEBUG;
              }
              return r;
            }
            exports.enable(load());
            function localstorage() {
              try {
                return window.localStorage;
              } catch (e) {}
            }
          }).call(this, _dereq_(9));
        }, {
          "3": 3,
          "9": 9
        }],
        3: [function (_dereq_, module, exports) {
          exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
          exports.coerce = coerce;
          exports.disable = disable;
          exports.enable = enable;
          exports.enabled = enabled;
          exports.humanize = _dereq_(8);
          exports.names = [];
          exports.skips = [];
          exports.formatters = {};
          var prevTime;
          function selectColor(namespace) {
            var hash = 0,
                i;
            for (i in namespace) {
              hash = (hash << 5) - hash + namespace.charCodeAt(i);
              hash |= 0;
            }
            return exports.colors[Math.abs(hash) % exports.colors.length];
          }
          function createDebug(namespace) {
            function debug() {
              if (!debug.enabled) return;
              var self = debug;
              var curr = +new Date();
              var ms = curr - (prevTime || curr);
              self.diff = ms;
              self.prev = prevTime;
              self.curr = curr;
              prevTime = curr;
              var args = new Array(arguments.length);
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i];
              }
              args[0] = exports.coerce(args[0]);
              if ('string' !== typeof args[0]) {
                args.unshift('%O');
              }
              var index = 0;
              args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
                if (match === '%%') return match;
                index++;
                var formatter = exports.formatters[format];
                if ('function' === typeof formatter) {
                  var val = args[index];
                  match = formatter.call(self, val);
                  args.splice(index, 1);
                  index--;
                }
                return match;
              });
              exports.formatArgs.call(self, args);
              var logFn = debug.log || exports.log || console.log.bind(console);
              logFn.apply(self, args);
            }
            debug.namespace = namespace;
            debug.enabled = exports.enabled(namespace);
            debug.useColors = exports.useColors();
            debug.color = selectColor(namespace);
            if ('function' === typeof exports.init) {
              exports.init(debug);
            }
            return debug;
          }
          function enable(namespaces) {
            exports.save(namespaces);
            exports.names = [];
            exports.skips = [];
            var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
            var len = split.length;
            for (var i = 0; i < len; i++) {
              if (!split[i]) continue;
              namespaces = split[i].replace(/\*/g, '.*?');
              if (namespaces[0] === '-') {
                exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
              } else {
                exports.names.push(new RegExp('^' + namespaces + '$'));
              }
            }
          }
          function disable() {
            exports.enable('');
          }
          function enabled(name) {
            var i, len;
            for (i = 0, len = exports.skips.length; i < len; i++) {
              if (exports.skips[i].test(name)) {
                return false;
              }
            }
            for (i = 0, len = exports.names.length; i < len; i++) {
              if (exports.names[i].test(name)) {
                return true;
              }
            }
            return false;
          }
          function coerce(val) {
            if (val instanceof Error) return val.stack || val.message;
            return val;
          }
        }, { "8": 8 }],
        4: [function (_dereq_, module, exports) {
          function EventEmitter() {
            this._events = this._events || {};
            this._maxListeners = this._maxListeners || undefined;
          }
          module.exports = EventEmitter;
          EventEmitter.EventEmitter = EventEmitter;
          EventEmitter.prototype._events = undefined;
          EventEmitter.prototype._maxListeners = undefined;
          EventEmitter.defaultMaxListeners = 10;
          EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError('n must be a positive number');
            this._maxListeners = n;
            return this;
          };
          EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;
            if (!this._events) this._events = {};
            if (type === 'error') {
              if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
                er = arguments[1];
                if (er instanceof Error) {
                  throw er;
                } else {
                  var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
                  err.context = er;
                  throw err;
                }
              }
            }
            handler = this._events[type];
            if (isUndefined(handler)) return false;
            if (isFunction(handler)) {
              switch (arguments.length) {
                case 1:
                  handler.call(this);
                  break;
                case 2:
                  handler.call(this, arguments[1]);
                  break;
                case 3:
                  handler.call(this, arguments[1], arguments[2]);
                  break;
                default:
                  args = Array.prototype.slice.call(arguments, 1);
                  handler.apply(this, args);
              }
            } else if (isObject(handler)) {
              args = Array.prototype.slice.call(arguments, 1);
              listeners = handler.slice();
              len = listeners.length;
              for (i = 0; i < len; i++) listeners[i].apply(this, args);
            }
            return true;
          };
          EventEmitter.prototype.addListener = function (type, listener) {
            var m;
            if (!isFunction(listener)) throw TypeError('listener must be a function');
            if (!this._events) this._events = {};
            if (this._events.newListener) this.emit('newListener', type, isFunction(listener.listener) ? listener.listener : listener);
            if (!this._events[type]) this._events[type] = listener;else if (isObject(this._events[type])) this._events[type].push(listener);else this._events[type] = [this._events[type], listener];
            if (isObject(this._events[type]) && !this._events[type].warned) {
              if (!isUndefined(this._maxListeners)) {
                m = this._maxListeners;
              } else {
                m = EventEmitter.defaultMaxListeners;
              }
              if (m && m > 0 && this._events[type].length > m) {
                this._events[type].warned = true;
                console.error('(node) warning: possible EventEmitter memory ' + 'leak detected. %d listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.', this._events[type].length);
                if (typeof console.trace === 'function') {
                  console.trace();
                }
              }
            }
            return this;
          };
          EventEmitter.prototype.on = EventEmitter.prototype.addListener;
          EventEmitter.prototype.once = function (type, listener) {
            if (!isFunction(listener)) throw TypeError('listener must be a function');
            var fired = false;
            function g() {
              this.removeListener(type, g);
              if (!fired) {
                fired = true;
                listener.apply(this, arguments);
              }
            }
            g.listener = listener;
            this.on(type, g);
            return this;
          };
          EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;
            if (!isFunction(listener)) throw TypeError('listener must be a function');
            if (!this._events || !this._events[type]) return this;
            list = this._events[type];
            length = list.length;
            position = -1;
            if (list === listener || isFunction(list.listener) && list.listener === listener) {
              delete this._events[type];
              if (this._events.removeListener) this.emit('removeListener', type, listener);
            } else if (isObject(list)) {
              for (i = length; i-- > 0;) {
                if (list[i] === listener || list[i].listener && list[i].listener === listener) {
                  position = i;
                  break;
                }
              }
              if (position < 0) return this;
              if (list.length === 1) {
                list.length = 0;
                delete this._events[type];
              } else {
                list.splice(position, 1);
              }
              if (this._events.removeListener) this.emit('removeListener', type, listener);
            }
            return this;
          };
          EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;
            if (!this._events) return this;
            if (!this._events.removeListener) {
              if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];
              return this;
            }
            if (arguments.length === 0) {
              for (key in this._events) {
                if (key === 'removeListener') continue;
                this.removeAllListeners(key);
              }
              this.removeAllListeners('removeListener');
              this._events = {};
              return this;
            }
            listeners = this._events[type];
            if (isFunction(listeners)) {
              this.removeListener(type, listeners);
            } else if (listeners) {
              while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);
            }
            delete this._events[type];
            return this;
          };
          EventEmitter.prototype.listeners = function (type) {
            var ret;
            if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();
            return ret;
          };
          EventEmitter.prototype.listenerCount = function (type) {
            if (this._events) {
              var evlistener = this._events[type];
              if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;
            }
            return 0;
          };
          EventEmitter.listenerCount = function (emitter, type) {
            return emitter.listenerCount(type);
          };
          function isFunction(arg) {
            return typeof arg === 'function';
          }
          function isNumber(arg) {
            return typeof arg === 'number';
          }
          function isObject(arg) {
            return typeof arg === 'object' && arg !== null;
          }
          function isUndefined(arg) {
            return arg === void 0;
          }
        }, {}],
        5: [function (_dereq_, module, exports) {
          (function (global) {
            'use strict';

            var Mutation = global.MutationObserver || global.WebKitMutationObserver;
            var scheduleDrain;
            {
              if (Mutation) {
                var called = 0;
                var observer = new Mutation(nextTick);
                var element = global.document.createTextNode('');
                observer.observe(element, { characterData: true });
                scheduleDrain = function () {
                  element.data = called = ++called % 2;
                };
              } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {
                var channel = new global.MessageChannel();
                channel.port1.onmessage = nextTick;
                scheduleDrain = function () {
                  channel.port2.postMessage(0);
                };
              } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {
                scheduleDrain = function () {
                  var scriptEl = global.document.createElement('script');
                  scriptEl.onreadystatechange = function () {
                    nextTick();
                    scriptEl.onreadystatechange = null;
                    scriptEl.parentNode.removeChild(scriptEl);
                    scriptEl = null;
                  };
                  global.document.documentElement.appendChild(scriptEl);
                };
              } else {
                scheduleDrain = function () {
                  setTimeout(nextTick, 0);
                };
              }
            }
            var draining;
            var queue = [];
            function nextTick() {
              draining = true;
              var i, oldQueue;
              var len = queue.length;
              while (len) {
                oldQueue = queue;
                queue = [];
                i = -1;
                while (++i < len) {
                  oldQueue[i]();
                }
                len = queue.length;
              }
              draining = false;
            }
            module.exports = immediate;
            function immediate(task) {
              if (queue.push(task) === 1 && !draining) {
                scheduleDrain();
              }
            }
          }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {}],
        6: [function (_dereq_, module, exports) {
          if (typeof Object.create === 'function') {
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              ctor.prototype = Object.create(superCtor.prototype, { constructor: {
                  value: ctor,
                  enumerable: false,
                  writable: true,
                  configurable: true
                } });
            };
          } else {
            module.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function () {};
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            };
          }
        }, {}],
        7: [function (_dereq_, module, exports) {
          'use strict';

          var immediate = _dereq_(5);
          function INTERNAL() {}
          var handlers = {};
          var REJECTED = ['REJECTED'];
          var FULFILLED = ['FULFILLED'];
          var PENDING = ['PENDING'];
          module.exports = Promise;
          function Promise(resolver) {
            if (typeof resolver !== 'function') {
              throw new TypeError('resolver must be a function');
            }
            this.state = PENDING;
            this.queue = [];
            this.outcome = void 0;
            if (resolver !== INTERNAL) {
              safelyResolveThenable(this, resolver);
            }
          }
          Promise.prototype["catch"] = function (onRejected) {
            return this.then(null, onRejected);
          };
          Promise.prototype.then = function (onFulfilled, onRejected) {
            if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {
              return this;
            }
            var promise = new this.constructor(INTERNAL);
            if (this.state !== PENDING) {
              var resolver = this.state === FULFILLED ? onFulfilled : onRejected;
              unwrap(promise, resolver, this.outcome);
            } else {
              this.queue.push(new QueueItem(promise, onFulfilled, onRejected));
            }
            return promise;
          };
          function QueueItem(promise, onFulfilled, onRejected) {
            this.promise = promise;
            if (typeof onFulfilled === 'function') {
              this.onFulfilled = onFulfilled;
              this.callFulfilled = this.otherCallFulfilled;
            }
            if (typeof onRejected === 'function') {
              this.onRejected = onRejected;
              this.callRejected = this.otherCallRejected;
            }
          }
          QueueItem.prototype.callFulfilled = function (value) {
            handlers.resolve(this.promise, value);
          };
          QueueItem.prototype.otherCallFulfilled = function (value) {
            unwrap(this.promise, this.onFulfilled, value);
          };
          QueueItem.prototype.callRejected = function (value) {
            handlers.reject(this.promise, value);
          };
          QueueItem.prototype.otherCallRejected = function (value) {
            unwrap(this.promise, this.onRejected, value);
          };
          function unwrap(promise, func, value) {
            immediate(function () {
              var returnValue;
              try {
                returnValue = func(value);
              } catch (e) {
                return handlers.reject(promise, e);
              }
              if (returnValue === promise) {
                handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));
              } else {
                handlers.resolve(promise, returnValue);
              }
            });
          }
          handlers.resolve = function (self, value) {
            var result = tryCatch(getThen, value);
            if (result.status === 'error') {
              return handlers.reject(self, result.value);
            }
            var thenable = result.value;
            if (thenable) {
              safelyResolveThenable(self, thenable);
            } else {
              self.state = FULFILLED;
              self.outcome = value;
              var i = -1;
              var len = self.queue.length;
              while (++i < len) {
                self.queue[i].callFulfilled(value);
              }
            }
            return self;
          };
          handlers.reject = function (self, error) {
            self.state = REJECTED;
            self.outcome = error;
            var i = -1;
            var len = self.queue.length;
            while (++i < len) {
              self.queue[i].callRejected(error);
            }
            return self;
          };
          function getThen(obj) {
            var then = obj && obj.then;
            if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {
              return function appyThen() {
                then.apply(obj, arguments);
              };
            }
          }
          function safelyResolveThenable(self, thenable) {
            var called = false;
            function onError(value) {
              if (called) {
                return;
              }
              called = true;
              handlers.reject(self, value);
            }
            function onSuccess(value) {
              if (called) {
                return;
              }
              called = true;
              handlers.resolve(self, value);
            }
            function tryToUnwrap() {
              thenable(onSuccess, onError);
            }
            var result = tryCatch(tryToUnwrap);
            if (result.status === 'error') {
              onError(result.value);
            }
          }
          function tryCatch(func, value) {
            var out = {};
            try {
              out.value = func(value);
              out.status = 'success';
            } catch (e) {
              out.status = 'error';
              out.value = e;
            }
            return out;
          }
          Promise.resolve = resolve;
          function resolve(value) {
            if (value instanceof this) {
              return value;
            }
            return handlers.resolve(new this(INTERNAL), value);
          }
          Promise.reject = reject;
          function reject(reason) {
            var promise = new this(INTERNAL);
            return handlers.reject(promise, reason);
          }
          Promise.all = all;
          function all(iterable) {
            var self = this;
            if (Object.prototype.toString.call(iterable) !== '[object Array]') {
              return this.reject(new TypeError('must be an array'));
            }
            var len = iterable.length;
            var called = false;
            if (!len) {
              return this.resolve([]);
            }
            var values = new Array(len);
            var resolved = 0;
            var i = -1;
            var promise = new this(INTERNAL);
            while (++i < len) {
              allResolver(iterable[i], i);
            }
            return promise;
            function allResolver(value, i) {
              self.resolve(value).then(resolveFromAll, function (error) {
                if (!called) {
                  called = true;
                  handlers.reject(promise, error);
                }
              });
              function resolveFromAll(outValue) {
                values[i] = outValue;
                if (++resolved === len && !called) {
                  called = true;
                  handlers.resolve(promise, values);
                }
              }
            }
          }
          Promise.race = race;
          function race(iterable) {
            var self = this;
            if (Object.prototype.toString.call(iterable) !== '[object Array]') {
              return this.reject(new TypeError('must be an array'));
            }
            var len = iterable.length;
            var called = false;
            if (!len) {
              return this.resolve([]);
            }
            var i = -1;
            var promise = new this(INTERNAL);
            while (++i < len) {
              resolver(iterable[i]);
            }
            return promise;
            function resolver(value) {
              self.resolve(value).then(function (response) {
                if (!called) {
                  called = true;
                  handlers.resolve(promise, response);
                }
              }, function (error) {
                if (!called) {
                  called = true;
                  handlers.reject(promise, error);
                }
              });
            }
          }
        }, { "5": 5 }],
        8: [function (_dereq_, module, exports) {
          var s = 1000;
          var m = s * 60;
          var h = m * 60;
          var d = h * 24;
          var y = d * 365.25;
          module.exports = function (val, options) {
            options = options || {};
            var type = typeof val;
            if (type === 'string' && val.length > 0) {
              return parse(val);
            } else if (type === 'number' && isNaN(val) === false) {
              return options.long ? fmtLong(val) : fmtShort(val);
            }
            throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
          };
          function parse(str) {
            str = String(str);
            if (str.length > 10000) {
              return;
            }
            var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
            if (!match) {
              return;
            }
            var n = parseFloat(match[1]);
            var type = (match[2] || 'ms').toLowerCase();
            switch (type) {
              case 'years':
              case 'year':
              case 'yrs':
              case 'yr':
              case 'y':
                return n * y;
              case 'days':
              case 'day':
              case 'd':
                return n * d;
              case 'hours':
              case 'hour':
              case 'hrs':
              case 'hr':
              case 'h':
                return n * h;
              case 'minutes':
              case 'minute':
              case 'mins':
              case 'min':
              case 'm':
                return n * m;
              case 'seconds':
              case 'second':
              case 'secs':
              case 'sec':
              case 's':
                return n * s;
              case 'milliseconds':
              case 'millisecond':
              case 'msecs':
              case 'msec':
              case 'ms':
                return n;
              default:
                return undefined;
            }
          }
          function fmtShort(ms) {
            if (ms >= d) {
              return Math.round(ms / d) + 'd';
            }
            if (ms >= h) {
              return Math.round(ms / h) + 'h';
            }
            if (ms >= m) {
              return Math.round(ms / m) + 'm';
            }
            if (ms >= s) {
              return Math.round(ms / s) + 's';
            }
            return ms + 'ms';
          }
          function fmtLong(ms) {
            return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';
          }
          function plural(ms, n, name) {
            if (ms < n) {
              return;
            }
            if (ms < n * 1.5) {
              return Math.floor(ms / n) + ' ' + name;
            }
            return Math.ceil(ms / n) + ' ' + name + 's';
          }
        }, {}],
        9: [function (_dereq_, module, exports) {
          var process = module.exports = {};
          var cachedSetTimeout;
          var cachedClearTimeout;
          function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
          }
          function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
          }
          (function () {
            try {
              if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
              } else {
                cachedSetTimeout = defaultSetTimout;
              }
            } catch (e) {
              cachedSetTimeout = defaultSetTimout;
            }
            try {
              if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
              } else {
                cachedClearTimeout = defaultClearTimeout;
              }
            } catch (e) {
              cachedClearTimeout = defaultClearTimeout;
            }
          })();
          function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
              return setTimeout(fun, 0);
            }
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
              cachedSetTimeout = setTimeout;
              return setTimeout(fun, 0);
            }
            try {
              return cachedSetTimeout(fun, 0);
            } catch (e) {
              try {
                return cachedSetTimeout.call(null, fun, 0);
              } catch (e) {
                return cachedSetTimeout.call(this, fun, 0);
              }
            }
          }
          function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
              return clearTimeout(marker);
            }
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
              cachedClearTimeout = clearTimeout;
              return clearTimeout(marker);
            }
            try {
              return cachedClearTimeout(marker);
            } catch (e) {
              try {
                return cachedClearTimeout.call(null, marker);
              } catch (e) {
                return cachedClearTimeout.call(this, marker);
              }
            }
          }
          var queue = [];
          var draining = false;
          var currentQueue;
          var queueIndex = -1;
          function cleanUpNextTick() {
            if (!draining || !currentQueue) {
              return;
            }
            draining = false;
            if (currentQueue.length) {
              queue = currentQueue.concat(queue);
            } else {
              queueIndex = -1;
            }
            if (queue.length) {
              drainQueue();
            }
          }
          function drainQueue() {
            if (draining) {
              return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;
            var len = queue.length;
            while (len) {
              currentQueue = queue;
              queue = [];
              while (++queueIndex < len) {
                if (currentQueue) {
                  currentQueue[queueIndex].run();
                }
              }
              queueIndex = -1;
              len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
          }
          process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
              for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
              }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
              runTimeout(drainQueue);
            }
          };
          function Item(fun, array) {
            this.fun = fun;
            this.array = array;
          }
          Item.prototype.run = function () {
            this.fun.apply(null, this.array);
          };
          process.title = 'browser';
          process.browser = true;
          process.env = {};
          process.argv = [];
          process.version = '';
          process.versions = {};
          function noop() {}
          process.on = noop;
          process.addListener = noop;
          process.once = noop;
          process.off = noop;
          process.removeListener = noop;
          process.removeAllListeners = noop;
          process.emit = noop;
          process.prependListener = noop;
          process.prependOnceListener = noop;
          process.listeners = function (name) {
            return [];
          };
          process.binding = function (name) {
            throw new Error('process.binding is not supported');
          };
          process.cwd = function () {
            return '/';
          };
          process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
          };
          process.umask = function () {
            return 0;
          };
        }, {}],
        10: [function (_dereq_, module, exports) {
          (function (factory) {
            if (typeof exports === 'object') {
              module.exports = factory();
            } else if (typeof define === 'function' && define.amd) {
              define(factory);
            } else {
              var glob;
              try {
                glob = window;
              } catch (e) {
                glob = self;
              }
              glob.SparkMD5 = factory();
            }
          })(function (undefined) {
            'use strict';

            var add32 = function (a, b) {
              return a + b & 0xFFFFFFFF;
            },
                hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];
            function cmn(q, a, b, x, s, t) {
              a = add32(add32(a, q), add32(x, t));
              return add32(a << s | a >>> 32 - s, b);
            }
            function md5cycle(x, k) {
              var a = x[0],
                  b = x[1],
                  c = x[2],
                  d = x[3];
              a += (b & c | ~b & d) + k[0] - 680876936 | 0;
              a = (a << 7 | a >>> 25) + b | 0;
              d += (a & b | ~a & c) + k[1] - 389564586 | 0;
              d = (d << 12 | d >>> 20) + a | 0;
              c += (d & a | ~d & b) + k[2] + 606105819 | 0;
              c = (c << 17 | c >>> 15) + d | 0;
              b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
              b = (b << 22 | b >>> 10) + c | 0;
              a += (b & c | ~b & d) + k[4] - 176418897 | 0;
              a = (a << 7 | a >>> 25) + b | 0;
              d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
              d = (d << 12 | d >>> 20) + a | 0;
              c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
              c = (c << 17 | c >>> 15) + d | 0;
              b += (c & d | ~c & a) + k[7] - 45705983 | 0;
              b = (b << 22 | b >>> 10) + c | 0;
              a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
              a = (a << 7 | a >>> 25) + b | 0;
              d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
              d = (d << 12 | d >>> 20) + a | 0;
              c += (d & a | ~d & b) + k[10] - 42063 | 0;
              c = (c << 17 | c >>> 15) + d | 0;
              b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
              b = (b << 22 | b >>> 10) + c | 0;
              a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
              a = (a << 7 | a >>> 25) + b | 0;
              d += (a & b | ~a & c) + k[13] - 40341101 | 0;
              d = (d << 12 | d >>> 20) + a | 0;
              c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
              c = (c << 17 | c >>> 15) + d | 0;
              b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
              b = (b << 22 | b >>> 10) + c | 0;
              a += (b & d | c & ~d) + k[1] - 165796510 | 0;
              a = (a << 5 | a >>> 27) + b | 0;
              d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
              d = (d << 9 | d >>> 23) + a | 0;
              c += (d & b | a & ~b) + k[11] + 643717713 | 0;
              c = (c << 14 | c >>> 18) + d | 0;
              b += (c & a | d & ~a) + k[0] - 373897302 | 0;
              b = (b << 20 | b >>> 12) + c | 0;
              a += (b & d | c & ~d) + k[5] - 701558691 | 0;
              a = (a << 5 | a >>> 27) + b | 0;
              d += (a & c | b & ~c) + k[10] + 38016083 | 0;
              d = (d << 9 | d >>> 23) + a | 0;
              c += (d & b | a & ~b) + k[15] - 660478335 | 0;
              c = (c << 14 | c >>> 18) + d | 0;
              b += (c & a | d & ~a) + k[4] - 405537848 | 0;
              b = (b << 20 | b >>> 12) + c | 0;
              a += (b & d | c & ~d) + k[9] + 568446438 | 0;
              a = (a << 5 | a >>> 27) + b | 0;
              d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
              d = (d << 9 | d >>> 23) + a | 0;
              c += (d & b | a & ~b) + k[3] - 187363961 | 0;
              c = (c << 14 | c >>> 18) + d | 0;
              b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
              b = (b << 20 | b >>> 12) + c | 0;
              a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
              a = (a << 5 | a >>> 27) + b | 0;
              d += (a & c | b & ~c) + k[2] - 51403784 | 0;
              d = (d << 9 | d >>> 23) + a | 0;
              c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
              c = (c << 14 | c >>> 18) + d | 0;
              b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
              b = (b << 20 | b >>> 12) + c | 0;
              a += (b ^ c ^ d) + k[5] - 378558 | 0;
              a = (a << 4 | a >>> 28) + b | 0;
              d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
              d = (d << 11 | d >>> 21) + a | 0;
              c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
              c = (c << 16 | c >>> 16) + d | 0;
              b += (c ^ d ^ a) + k[14] - 35309556 | 0;
              b = (b << 23 | b >>> 9) + c | 0;
              a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
              a = (a << 4 | a >>> 28) + b | 0;
              d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
              d = (d << 11 | d >>> 21) + a | 0;
              c += (d ^ a ^ b) + k[7] - 155497632 | 0;
              c = (c << 16 | c >>> 16) + d | 0;
              b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
              b = (b << 23 | b >>> 9) + c | 0;
              a += (b ^ c ^ d) + k[13] + 681279174 | 0;
              a = (a << 4 | a >>> 28) + b | 0;
              d += (a ^ b ^ c) + k[0] - 358537222 | 0;
              d = (d << 11 | d >>> 21) + a | 0;
              c += (d ^ a ^ b) + k[3] - 722521979 | 0;
              c = (c << 16 | c >>> 16) + d | 0;
              b += (c ^ d ^ a) + k[6] + 76029189 | 0;
              b = (b << 23 | b >>> 9) + c | 0;
              a += (b ^ c ^ d) + k[9] - 640364487 | 0;
              a = (a << 4 | a >>> 28) + b | 0;
              d += (a ^ b ^ c) + k[12] - 421815835 | 0;
              d = (d << 11 | d >>> 21) + a | 0;
              c += (d ^ a ^ b) + k[15] + 530742520 | 0;
              c = (c << 16 | c >>> 16) + d | 0;
              b += (c ^ d ^ a) + k[2] - 995338651 | 0;
              b = (b << 23 | b >>> 9) + c | 0;
              a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
              a = (a << 6 | a >>> 26) + b | 0;
              d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
              d = (d << 10 | d >>> 22) + a | 0;
              c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
              c = (c << 15 | c >>> 17) + d | 0;
              b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
              b = (b << 21 | b >>> 11) + c | 0;
              a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
              a = (a << 6 | a >>> 26) + b | 0;
              d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
              d = (d << 10 | d >>> 22) + a | 0;
              c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
              c = (c << 15 | c >>> 17) + d | 0;
              b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
              b = (b << 21 | b >>> 11) + c | 0;
              a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
              a = (a << 6 | a >>> 26) + b | 0;
              d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
              d = (d << 10 | d >>> 22) + a | 0;
              c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
              c = (c << 15 | c >>> 17) + d | 0;
              b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
              b = (b << 21 | b >>> 11) + c | 0;
              a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
              a = (a << 6 | a >>> 26) + b | 0;
              d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
              d = (d << 10 | d >>> 22) + a | 0;
              c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
              c = (c << 15 | c >>> 17) + d | 0;
              b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
              b = (b << 21 | b >>> 11) + c | 0;
              x[0] = a + x[0] | 0;
              x[1] = b + x[1] | 0;
              x[2] = c + x[2] | 0;
              x[3] = d + x[3] | 0;
            }
            function md5blk(s) {
              var md5blks = [],
                  i;
              for (i = 0; i < 64; i += 4) {
                md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
              }
              return md5blks;
            }
            function md5blk_array(a) {
              var md5blks = [],
                  i;
              for (i = 0; i < 64; i += 4) {
                md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);
              }
              return md5blks;
            }
            function md51(s) {
              var n = s.length,
                  state = [1732584193, -271733879, -1732584194, 271733878],
                  i,
                  length,
                  tail,
                  tmp,
                  lo,
                  hi;
              for (i = 64; i <= n; i += 64) {
                md5cycle(state, md5blk(s.substring(i - 64, i)));
              }
              s = s.substring(i - 64);
              length = s.length;
              tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
              for (i = 0; i < length; i += 1) {
                tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);
              }
              tail[i >> 2] |= 0x80 << (i % 4 << 3);
              if (i > 55) {
                md5cycle(state, tail);
                for (i = 0; i < 16; i += 1) {
                  tail[i] = 0;
                }
              }
              tmp = n * 8;
              tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
              lo = parseInt(tmp[2], 16);
              hi = parseInt(tmp[1], 16) || 0;
              tail[14] = lo;
              tail[15] = hi;
              md5cycle(state, tail);
              return state;
            }
            function md51_array(a) {
              var n = a.length,
                  state = [1732584193, -271733879, -1732584194, 271733878],
                  i,
                  length,
                  tail,
                  tmp,
                  lo,
                  hi;
              for (i = 64; i <= n; i += 64) {
                md5cycle(state, md5blk_array(a.subarray(i - 64, i)));
              }
              a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);
              length = a.length;
              tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
              for (i = 0; i < length; i += 1) {
                tail[i >> 2] |= a[i] << (i % 4 << 3);
              }
              tail[i >> 2] |= 0x80 << (i % 4 << 3);
              if (i > 55) {
                md5cycle(state, tail);
                for (i = 0; i < 16; i += 1) {
                  tail[i] = 0;
                }
              }
              tmp = n * 8;
              tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
              lo = parseInt(tmp[2], 16);
              hi = parseInt(tmp[1], 16) || 0;
              tail[14] = lo;
              tail[15] = hi;
              md5cycle(state, tail);
              return state;
            }
            function rhex(n) {
              var s = '',
                  j;
              for (j = 0; j < 4; j += 1) {
                s += hex_chr[n >> j * 8 + 4 & 0x0F] + hex_chr[n >> j * 8 & 0x0F];
              }
              return s;
            }
            function hex(x) {
              var i;
              for (i = 0; i < x.length; i += 1) {
                x[i] = rhex(x[i]);
              }
              return x.join('');
            }
            if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {
              add32 = function (x, y) {
                var lsw = (x & 0xFFFF) + (y & 0xFFFF),
                    msw = (x >> 16) + (y >> 16) + (lsw >> 16);
                return msw << 16 | lsw & 0xFFFF;
              };
            }
            if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {
              (function () {
                function clamp(val, length) {
                  val = val | 0 || 0;
                  if (val < 0) {
                    return Math.max(val + length, 0);
                  }
                  return Math.min(val, length);
                }
                ArrayBuffer.prototype.slice = function (from, to) {
                  var length = this.byteLength,
                      begin = clamp(from, length),
                      end = length,
                      num,
                      target,
                      targetArray,
                      sourceArray;
                  if (to !== undefined) {
                    end = clamp(to, length);
                  }
                  if (begin > end) {
                    return new ArrayBuffer(0);
                  }
                  num = end - begin;
                  target = new ArrayBuffer(num);
                  targetArray = new Uint8Array(target);
                  sourceArray = new Uint8Array(this, begin, num);
                  targetArray.set(sourceArray);
                  return target;
                };
              })();
            }
            function toUtf8(str) {
              if (/[\u0080-\uFFFF]/.test(str)) {
                str = unescape(encodeURIComponent(str));
              }
              return str;
            }
            function utf8Str2ArrayBuffer(str, returnUInt8Array) {
              var length = str.length,
                  buff = new ArrayBuffer(length),
                  arr = new Uint8Array(buff),
                  i;
              for (i = 0; i < length; i += 1) {
                arr[i] = str.charCodeAt(i);
              }
              return returnUInt8Array ? arr : buff;
            }
            function arrayBuffer2Utf8Str(buff) {
              return String.fromCharCode.apply(null, new Uint8Array(buff));
            }
            function concatenateArrayBuffers(first, second, returnUInt8Array) {
              var result = new Uint8Array(first.byteLength + second.byteLength);
              result.set(new Uint8Array(first));
              result.set(new Uint8Array(second), first.byteLength);
              return returnUInt8Array ? result : result.buffer;
            }
            function hexToBinaryString(hex) {
              var bytes = [],
                  length = hex.length,
                  x;
              for (x = 0; x < length - 1; x += 2) {
                bytes.push(parseInt(hex.substr(x, 2), 16));
              }
              return String.fromCharCode.apply(String, bytes);
            }
            function SparkMD5() {
              this.reset();
            }
            SparkMD5.prototype.append = function (str) {
              this.appendBinary(toUtf8(str));
              return this;
            };
            SparkMD5.prototype.appendBinary = function (contents) {
              this._buff += contents;
              this._length += contents.length;
              var length = this._buff.length,
                  i;
              for (i = 64; i <= length; i += 64) {
                md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));
              }
              this._buff = this._buff.substring(i - 64);
              return this;
            };
            SparkMD5.prototype.end = function (raw) {
              var buff = this._buff,
                  length = buff.length,
                  i,
                  tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  ret;
              for (i = 0; i < length; i += 1) {
                tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);
              }
              this._finish(tail, length);
              ret = hex(this._hash);
              if (raw) {
                ret = hexToBinaryString(ret);
              }
              this.reset();
              return ret;
            };
            SparkMD5.prototype.reset = function () {
              this._buff = '';
              this._length = 0;
              this._hash = [1732584193, -271733879, -1732584194, 271733878];
              return this;
            };
            SparkMD5.prototype.getState = function () {
              return {
                buff: this._buff,
                length: this._length,
                hash: this._hash
              };
            };
            SparkMD5.prototype.setState = function (state) {
              this._buff = state.buff;
              this._length = state.length;
              this._hash = state.hash;
              return this;
            };
            SparkMD5.prototype.destroy = function () {
              delete this._hash;
              delete this._buff;
              delete this._length;
            };
            SparkMD5.prototype._finish = function (tail, length) {
              var i = length,
                  tmp,
                  lo,
                  hi;
              tail[i >> 2] |= 0x80 << (i % 4 << 3);
              if (i > 55) {
                md5cycle(this._hash, tail);
                for (i = 0; i < 16; i += 1) {
                  tail[i] = 0;
                }
              }
              tmp = this._length * 8;
              tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
              lo = parseInt(tmp[2], 16);
              hi = parseInt(tmp[1], 16) || 0;
              tail[14] = lo;
              tail[15] = hi;
              md5cycle(this._hash, tail);
            };
            SparkMD5.hash = function (str, raw) {
              return SparkMD5.hashBinary(toUtf8(str), raw);
            };
            SparkMD5.hashBinary = function (content, raw) {
              var hash = md51(content),
                  ret = hex(hash);
              return raw ? hexToBinaryString(ret) : ret;
            };
            SparkMD5.ArrayBuffer = function () {
              this.reset();
            };
            SparkMD5.ArrayBuffer.prototype.append = function (arr) {
              var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
                  length = buff.length,
                  i;
              this._length += arr.byteLength;
              for (i = 64; i <= length; i += 64) {
                md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));
              }
              this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);
              return this;
            };
            SparkMD5.ArrayBuffer.prototype.end = function (raw) {
              var buff = this._buff,
                  length = buff.length,
                  tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  i,
                  ret;
              for (i = 0; i < length; i += 1) {
                tail[i >> 2] |= buff[i] << (i % 4 << 3);
              }
              this._finish(tail, length);
              ret = hex(this._hash);
              if (raw) {
                ret = hexToBinaryString(ret);
              }
              this.reset();
              return ret;
            };
            SparkMD5.ArrayBuffer.prototype.reset = function () {
              this._buff = new Uint8Array(0);
              this._length = 0;
              this._hash = [1732584193, -271733879, -1732584194, 271733878];
              return this;
            };
            SparkMD5.ArrayBuffer.prototype.getState = function () {
              var state = SparkMD5.prototype.getState.call(this);
              state.buff = arrayBuffer2Utf8Str(state.buff);
              return state;
            };
            SparkMD5.ArrayBuffer.prototype.setState = function (state) {
              state.buff = utf8Str2ArrayBuffer(state.buff, true);
              return SparkMD5.prototype.setState.call(this, state);
            };
            SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;
            SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;
            SparkMD5.ArrayBuffer.hash = function (arr, raw) {
              var hash = md51_array(new Uint8Array(arr)),
                  ret = hex(hash);
              return raw ? hexToBinaryString(ret) : ret;
            };
            return SparkMD5;
          });
        }, {}],
        11: [function (_dereq_, module, exports) {
          var byteToHex = [];
          for (var i = 0; i < 256; ++i) {
            byteToHex[i] = (i + 0x100).toString(16).substr(1);
          }
          function bytesToUuid(buf, offset) {
            var i = offset || 0;
            var bth = byteToHex;
            return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];
          }
          module.exports = bytesToUuid;
        }, {}],
        12: [function (_dereq_, module, exports) {
          (function (global) {
            var rng;
            var crypto = global.crypto || global.msCrypto;
            if (crypto && crypto.getRandomValues) {
              var rnds8 = new Uint8Array(16);
              rng = function whatwgRNG() {
                crypto.getRandomValues(rnds8);
                return rnds8;
              };
            }
            if (!rng) {
              var rnds = new Array(16);
              rng = function () {
                for (var i = 0, r; i < 16; i++) {
                  if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
                  rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
                }
                return rnds;
              };
            }
            module.exports = rng;
          }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {}],
        13: [function (_dereq_, module, exports) {
          var rng = _dereq_(12);
          var bytesToUuid = _dereq_(11);
          function v4(options, buf, offset) {
            var i = buf && offset || 0;
            if (typeof options == 'string') {
              buf = options == 'binary' ? new Array(16) : null;
              options = null;
            }
            options = options || {};
            var rnds = options.random || (options.rng || rng)();
            rnds[6] = rnds[6] & 0x0f | 0x40;
            rnds[8] = rnds[8] & 0x3f | 0x80;
            if (buf) {
              for (var ii = 0; ii < 16; ++ii) {
                buf[i + ii] = rnds[ii];
              }
            }
            return buf || bytesToUuid(rnds);
          }
          module.exports = v4;
        }, {
          "11": 11,
          "12": 12
        }],
        14: [function (_dereq_, module, exports) {
          'use strict';

          exports.stringify = function stringify(input) {
            var queue = [];
            queue.push({ obj: input });
            var res = '';
            var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;
            while (next = queue.pop()) {
              obj = next.obj;
              prefix = next.prefix || '';
              val = next.val || '';
              res += prefix;
              if (val) {
                res += val;
              } else if (typeof obj !== 'object') {
                res += typeof obj === 'undefined' ? null : JSON.stringify(obj);
              } else if (obj === null) {
                res += 'null';
              } else if (Array.isArray(obj)) {
                queue.push({ val: ']' });
                for (i = obj.length - 1; i >= 0; i--) {
                  arrayPrefix = i === 0 ? '' : ',';
                  queue.push({
                    obj: obj[i],
                    prefix: arrayPrefix
                  });
                }
                queue.push({ val: '[' });
              } else {
                keys = [];
                for (k in obj) {
                  if (obj.hasOwnProperty(k)) {
                    keys.push(k);
                  }
                }
                queue.push({ val: '}' });
                for (i = keys.length - 1; i >= 0; i--) {
                  key = keys[i];
                  value = obj[key];
                  objPrefix = i > 0 ? ',' : '';
                  objPrefix += JSON.stringify(key) + ':';
                  queue.push({
                    obj: value,
                    prefix: objPrefix
                  });
                }
                queue.push({ val: '{' });
              }
            }
            return res;
          };
          function pop(obj, stack, metaStack) {
            var lastMetaElement = metaStack[metaStack.length - 1];
            if (obj === lastMetaElement.element) {
              metaStack.pop();
              lastMetaElement = metaStack[metaStack.length - 1];
            }
            var element = lastMetaElement.element;
            var lastElementIndex = lastMetaElement.index;
            if (Array.isArray(element)) {
              element.push(obj);
            } else if (lastElementIndex === stack.length - 2) {
              var key = stack.pop();
              element[key] = obj;
            } else {
              stack.push(obj);
            }
          }
          exports.parse = function (str) {
            var stack = [];
            var metaStack = [];
            var i = 0;
            var collationIndex, parsedNum, numChar;
            var parsedString, lastCh, numConsecutiveSlashes, ch;
            var arrayElement, objElement;
            while (true) {
              collationIndex = str[i++];
              if (collationIndex === '}' || collationIndex === ']' || typeof collationIndex === 'undefined') {
                if (stack.length === 1) {
                  return stack.pop();
                } else {
                  pop(stack.pop(), stack, metaStack);
                  continue;
                }
              }
              switch (collationIndex) {
                case ' ':
                case '\t':
                case '\n':
                case ':':
                case ',':
                  break;
                case 'n':
                  i += 3;
                  pop(null, stack, metaStack);
                  break;
                case 't':
                  i += 3;
                  pop(true, stack, metaStack);
                  break;
                case 'f':
                  i += 4;
                  pop(false, stack, metaStack);
                  break;
                case '0':
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case '-':
                  parsedNum = '';
                  i--;
                  while (true) {
                    numChar = str[i++];
                    if (/[\d\.\-e\+]/.test(numChar)) {
                      parsedNum += numChar;
                    } else {
                      i--;
                      break;
                    }
                  }
                  pop(parseFloat(parsedNum), stack, metaStack);
                  break;
                case '"':
                  parsedString = '';
                  lastCh = void 0;
                  numConsecutiveSlashes = 0;
                  while (true) {
                    ch = str[i++];
                    if (ch !== '"' || lastCh === '\\' && numConsecutiveSlashes % 2 === 1) {
                      parsedString += ch;
                      lastCh = ch;
                      if (lastCh === '\\') {
                        numConsecutiveSlashes++;
                      } else {
                        numConsecutiveSlashes = 0;
                      }
                    } else {
                      break;
                    }
                  }
                  pop(JSON.parse('"' + parsedString + '"'), stack, metaStack);
                  break;
                case '[':
                  arrayElement = {
                    element: [],
                    index: stack.length
                  };
                  stack.push(arrayElement.element);
                  metaStack.push(arrayElement);
                  break;
                case '{':
                  objElement = {
                    element: {},
                    index: stack.length
                  };
                  stack.push(objElement.element);
                  metaStack.push(objElement);
                  break;
                default:
                  throw new Error('unexpectedly reached end of input: ' + collationIndex);
              }
            }
          };
        }, {}],
        15: [function (_dereq_, module, exports) {
          (function (global) {
            'use strict';

            function _interopDefault(ex) {
              return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
            }
            var lie = _interopDefault(_dereq_(7));
            var getArguments = _interopDefault(_dereq_(1));
            var events = _dereq_(4);
            var inherits = _interopDefault(_dereq_(6));
            var nextTick = _interopDefault(_dereq_(5));
            var v4 = _interopDefault(_dereq_(13));
            var debug = _interopDefault(_dereq_(2));
            var Md5 = _interopDefault(_dereq_(10));
            var vuvuzela = _interopDefault(_dereq_(14));
            var PouchPromise$1 = typeof Promise === 'function' ? Promise : lie;
            function isBinaryObject(object) {
              return typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer || typeof Blob !== 'undefined' && object instanceof Blob;
            }
            function cloneArrayBuffer(buff) {
              if (typeof buff.slice === 'function') {
                return buff.slice(0);
              }
              var target = new ArrayBuffer(buff.byteLength);
              var targetArray = new Uint8Array(target);
              var sourceArray = new Uint8Array(buff);
              targetArray.set(sourceArray);
              return target;
            }
            function cloneBinaryObject(object) {
              if (object instanceof ArrayBuffer) {
                return cloneArrayBuffer(object);
              }
              var size = object.size;
              var type = object.type;
              if (typeof object.slice === 'function') {
                return object.slice(0, size, type);
              }
              return object.webkitSlice(0, size, type);
            }
            var funcToString = Function.prototype.toString;
            var objectCtorString = funcToString.call(Object);
            function isPlainObject(value) {
              var proto = Object.getPrototypeOf(value);
              if (proto === null) {
                return true;
              }
              var Ctor = proto.constructor;
              return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
            }
            function clone(object) {
              var newObject;
              var i;
              var len;
              if (!object || typeof object !== 'object') {
                return object;
              }
              if (Array.isArray(object)) {
                newObject = [];
                for (i = 0, len = object.length; i < len; i++) {
                  newObject[i] = clone(object[i]);
                }
                return newObject;
              }
              if (object instanceof Date) {
                return object.toISOString();
              }
              if (isBinaryObject(object)) {
                return cloneBinaryObject(object);
              }
              if (!isPlainObject(object)) {
                return object;
              }
              newObject = {};
              for (i in object) {
                if (Object.prototype.hasOwnProperty.call(object, i)) {
                  var value = clone(object[i]);
                  if (typeof value !== 'undefined') {
                    newObject[i] = value;
                  }
                }
              }
              return newObject;
            }
            function once(fun) {
              var called = false;
              return getArguments(function (args) {
                if (called) {
                  throw new Error('once called more than once');
                } else {
                  called = true;
                  fun.apply(this, args);
                }
              });
            }
            function toPromise(func) {
              return getArguments(function (args) {
                args = clone(args);
                var self = this;
                var usedCB = typeof args[args.length - 1] === 'function' ? args.pop() : false;
                var promise = new PouchPromise$1(function (fulfill, reject) {
                  var resp;
                  try {
                    var callback = once(function (err, mesg) {
                      if (err) {
                        reject(err);
                      } else {
                        fulfill(mesg);
                      }
                    });
                    args.push(callback);
                    resp = func.apply(self, args);
                    if (resp && typeof resp.then === 'function') {
                      fulfill(resp);
                    }
                  } catch (e) {
                    reject(e);
                  }
                });
                if (usedCB) {
                  promise.then(function (result) {
                    usedCB(null, result);
                  }, usedCB);
                }
                return promise;
              });
            }
            function logApiCall(self, name, args) {
              if (self.constructor.listeners('debug').length) {
                var logArgs = ['api', self.name, name];
                for (var i = 0; i < args.length - 1; i++) {
                  logArgs.push(args[i]);
                }
                self.constructor.emit('debug', logArgs);
                var origCallback = args[args.length - 1];
                args[args.length - 1] = function (err, res) {
                  var responseArgs = ['api', self.name, name];
                  responseArgs = responseArgs.concat(err ? ['error', err] : ['success', res]);
                  self.constructor.emit('debug', responseArgs);
                  origCallback(err, res);
                };
              }
            }
            function adapterFun(name, callback) {
              return toPromise(getArguments(function (args) {
                if (this._closed) {
                  return PouchPromise$1.reject(new Error('database is closed'));
                }
                if (this._destroyed) {
                  return PouchPromise$1.reject(new Error('database is destroyed'));
                }
                var self = this;
                logApiCall(self, name, args);
                if (!this.taskqueue.isReady) {
                  return new PouchPromise$1(function (fulfill, reject) {
                    self.taskqueue.addTask(function (failed) {
                      if (failed) {
                        reject(failed);
                      } else {
                        fulfill(self[name].apply(self, args));
                      }
                    });
                  });
                }
                return callback.apply(this, args);
              }));
            }
            function mangle(key) {
              return '$' + key;
            }
            function unmangle(key) {
              return key.substring(1);
            }
            function Map$1() {
              this._store = {};
            }
            Map$1.prototype.get = function (key) {
              var mangled = mangle(key);
              return this._store[mangled];
            };
            Map$1.prototype.set = function (key, value) {
              var mangled = mangle(key);
              this._store[mangled] = value;
              return true;
            };
            Map$1.prototype.has = function (key) {
              var mangled = mangle(key);
              return mangled in this._store;
            };
            Map$1.prototype["delete"] = function (key) {
              var mangled = mangle(key);
              var res = mangled in this._store;
              delete this._store[mangled];
              return res;
            };
            Map$1.prototype.forEach = function (cb) {
              var keys = Object.keys(this._store);
              for (var i = 0, len = keys.length; i < len; i++) {
                var key = keys[i];
                var value = this._store[key];
                key = unmangle(key);
                cb(value, key);
              }
            };
            Object.defineProperty(Map$1.prototype, 'size', { get: function () {
                return Object.keys(this._store).length;
              } });
            function Set$1(array) {
              this._store = new Map$1();
              if (array && Array.isArray(array)) {
                for (var i = 0, len = array.length; i < len; i++) {
                  this.add(array[i]);
                }
              }
            }
            Set$1.prototype.add = function (key) {
              return this._store.set(key, true);
            };
            Set$1.prototype.has = function (key) {
              return this._store.has(key);
            };
            Set$1.prototype.forEach = function (cb) {
              this._store.forEach(function (value, key) {
                cb(key);
              });
            };
            Object.defineProperty(Set$1.prototype, 'size', { get: function () {
                return this._store.size;
              } });
            function supportsMapAndSet() {
              if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {
                return false;
              }
              var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);
              return prop && 'get' in prop && Map[Symbol.species] === Map;
            }
            var ExportedSet;
            var ExportedMap;
            {
              if (supportsMapAndSet()) {
                ExportedSet = Set;
                ExportedMap = Map;
              } else {
                ExportedSet = Set$1;
                ExportedMap = Map$1;
              }
            }
            function pick(obj, arr) {
              var res = {};
              for (var i = 0, len = arr.length; i < len; i++) {
                var prop = arr[i];
                if (prop in obj) {
                  res[prop] = obj[prop];
                }
              }
              return res;
            }
            var MAX_NUM_CONCURRENT_REQUESTS = 6;
            function identityFunction(x) {
              return x;
            }
            function formatResultForOpenRevsGet(result) {
              return [{ ok: result }];
            }
            function bulkGet(db, opts, callback) {
              var requests = opts.docs;
              var requestsById = new ExportedMap();
              requests.forEach(function (request) {
                if (requestsById.has(request.id)) {
                  requestsById.get(request.id).push(request);
                } else {
                  requestsById.set(request.id, [request]);
                }
              });
              var numDocs = requestsById.size;
              var numDone = 0;
              var perDocResults = new Array(numDocs);
              function collapseResultsAndFinish() {
                var results = [];
                perDocResults.forEach(function (res) {
                  res.docs.forEach(function (info) {
                    results.push({
                      id: res.id,
                      docs: [info]
                    });
                  });
                });
                callback(null, { results: results });
              }
              function checkDone() {
                if (++numDone === numDocs) {
                  collapseResultsAndFinish();
                }
              }
              function gotResult(docIndex, id, docs) {
                perDocResults[docIndex] = {
                  id: id,
                  docs: docs
                };
                checkDone();
              }
              var allRequests = [];
              requestsById.forEach(function (value, key) {
                allRequests.push(key);
              });
              var i = 0;
              function nextBatch() {
                if (i >= allRequests.length) {
                  return;
                }
                var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);
                var batch = allRequests.slice(i, upTo);
                processBatch(batch, i);
                i += batch.length;
              }
              function processBatch(batch, offset) {
                batch.forEach(function (docId, j) {
                  var docIdx = offset + j;
                  var docRequests = requestsById.get(docId);
                  var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);
                  docOpts.open_revs = docRequests.map(function (request) {
                    return request.rev;
                  });
                  docOpts.open_revs = docOpts.open_revs.filter(identityFunction);
                  var formatResult = identityFunction;
                  if (docOpts.open_revs.length === 0) {
                    delete docOpts.open_revs;
                    formatResult = formatResultForOpenRevsGet;
                  }
                  ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {
                    if (param in opts) {
                      docOpts[param] = opts[param];
                    }
                  });
                  db.get(docId, docOpts, function (err, res) {
                    var result;
                    if (err) {
                      result = [{ error: err }];
                    } else {
                      result = formatResult(res);
                    }
                    gotResult(docIdx, docId, result);
                    nextBatch();
                  });
                });
              }
              nextBatch();
            }
            function isChromeApp() {
              return typeof chrome !== "undefined" && typeof chrome.storage !== "undefined" && typeof chrome.storage.local !== "undefined";
            }
            var hasLocal;
            if (isChromeApp()) {
              hasLocal = false;
            } else {
              try {
                localStorage.setItem('_pouch_check_localstorage', 1);
                hasLocal = !!localStorage.getItem('_pouch_check_localstorage');
              } catch (e) {
                hasLocal = false;
              }
            }
            function hasLocalStorage() {
              return hasLocal;
            }
            inherits(Changes, events.EventEmitter);
            function attachBrowserEvents(self) {
              if (isChromeApp()) {
                chrome.storage.onChanged.addListener(function (e) {
                  if (e.db_name != null) {
                    self.emit(e.dbName.newValue);
                  }
                });
              } else if (hasLocalStorage()) {
                if (typeof addEventListener !== 'undefined') {
                  addEventListener("storage", function (e) {
                    self.emit(e.key);
                  });
                } else {
                  window.attachEvent("storage", function (e) {
                    self.emit(e.key);
                  });
                }
              }
            }
            function Changes() {
              events.EventEmitter.call(this);
              this._listeners = {};
              attachBrowserEvents(this);
            }
            Changes.prototype.addListener = function (dbName, id, db, opts) {
              if (this._listeners[id]) {
                return;
              }
              var self = this;
              var inprogress = false;
              function eventFunction() {
                if (!self._listeners[id]) {
                  return;
                }
                if (inprogress) {
                  inprogress = 'waiting';
                  return;
                }
                inprogress = true;
                var changesOpts = pick(opts, ['style', 'include_docs', 'attachments', 'conflicts', 'filter', 'doc_ids', 'view', 'since', 'query_params', 'binary']);
                function onError() {
                  inprogress = false;
                }
                db.changes(changesOpts).on('change', function (c) {
                  if (c.seq > opts.since && !opts.cancelled) {
                    opts.since = c.seq;
                    opts.onChange(c);
                  }
                }).on('complete', function () {
                  if (inprogress === 'waiting') {
                    nextTick(eventFunction);
                  }
                  inprogress = false;
                }).on('error', onError);
              }
              this._listeners[id] = eventFunction;
              this.on(dbName, eventFunction);
            };
            Changes.prototype.removeListener = function (dbName, id) {
              if (!(id in this._listeners)) {
                return;
              }
              events.EventEmitter.prototype.removeListener.call(this, dbName, this._listeners[id]);
              delete this._listeners[id];
            };
            Changes.prototype.notifyLocalWindows = function (dbName) {
              if (isChromeApp()) {
                chrome.storage.local.set({ dbName: dbName });
              } else if (hasLocalStorage()) {
                localStorage[dbName] = localStorage[dbName] === "a" ? "b" : "a";
              }
            };
            Changes.prototype.notify = function (dbName) {
              this.emit(dbName);
              this.notifyLocalWindows(dbName);
            };
            function guardedConsole(method) {
              if (console !== 'undefined' && method in console) {
                var args = Array.prototype.slice.call(arguments, 1);
                console[method].apply(console, args);
              }
            }
            function randomNumber(min, max) {
              var maxTimeout = 600000;
              min = parseInt(min, 10) || 0;
              max = parseInt(max, 10);
              if (max !== max || max <= min) {
                max = (min || 1) << 1;
              } else {
                max = max + 1;
              }
              if (max > maxTimeout) {
                min = maxTimeout >> 1;
                max = maxTimeout;
              }
              var ratio = Math.random();
              var range = max - min;
              return ~~(range * ratio + min);
            }
            function defaultBackOff(min) {
              var max = 0;
              if (!min) {
                max = 2000;
              }
              return randomNumber(min, max);
            }
            function explainError(status, str) {
              guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);
            }
            var assign;
            {
              if (typeof Object.assign === 'function') {
                assign = Object.assign;
              } else {
                assign = function (target) {
                  var to = Object(target);
                  for (var index = 1; index < arguments.length; index++) {
                    var nextSource = arguments[index];
                    if (nextSource != null) {
                      for (var nextKey in nextSource) {
                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                          to[nextKey] = nextSource[nextKey];
                        }
                      }
                    }
                  }
                  return to;
                };
              }
            }
            var $inject_Object_assign = assign;
            inherits(PouchError, Error);
            function PouchError(status, error, reason) {
              Error.call(this, reason);
              this.status = status;
              this.name = error;
              this.message = reason;
              this.error = true;
            }
            PouchError.prototype.toString = function () {
              return JSON.stringify({
                status: this.status,
                name: this.name,
                message: this.message,
                reason: this.reason
              });
            };
            var UNAUTHORIZED = new PouchError(401, 'unauthorized', "Name or password is incorrect.");
            var MISSING_BULK_DOCS = new PouchError(400, 'bad_request', "Missing JSON list of 'docs'");
            var MISSING_DOC = new PouchError(404, 'not_found', 'missing');
            var REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');
            var INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');
            var MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');
            var RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');
            var NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');
            var UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');
            var BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');
            var INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');
            var QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');
            var DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');
            var BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');
            var NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');
            var DB_MISSING = new PouchError(404, 'not_found', 'Database not found');
            var IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');
            var WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');
            var LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');
            var FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');
            var INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');
            var FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');
            var MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\'t found');
            var INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');
            function createError(error, reason) {
              function CustomPouchError(reason) {
                for (var p in error) {
                  if (typeof error[p] !== 'function') {
                    this[p] = error[p];
                  }
                }
                if (reason !== undefined) {
                  this.reason = reason;
                }
              }
              CustomPouchError.prototype = PouchError.prototype;
              return new CustomPouchError(reason);
            }
            function generateErrorFromResponse(err) {
              if (typeof err !== 'object') {
                var data = err;
                err = UNKNOWN_ERROR;
                err.data = data;
              }
              if ('error' in err && err.error === 'conflict') {
                err.name = 'conflict';
                err.status = 409;
              }
              if (!('name' in err)) {
                err.name = err.error || 'unknown';
              }
              if (!('status' in err)) {
                err.status = 500;
              }
              if (!('message' in err)) {
                err.message = err.message || err.reason;
              }
              return err;
            }
            function tryFilter(filter, doc, req) {
              try {
                return !filter(doc, req);
              } catch (err) {
                var msg = 'Filter function threw: ' + err.toString();
                return createError(BAD_REQUEST, msg);
              }
            }
            function filterChange(opts) {
              var req = {};
              var hasFilter = opts.filter && typeof opts.filter === 'function';
              req.query = opts.query_params;
              return function filter(change) {
                if (!change.doc) {
                  change.doc = {};
                }
                var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);
                if (typeof filterReturn === 'object') {
                  return filterReturn;
                }
                if (filterReturn) {
                  return false;
                }
                if (!opts.include_docs) {
                  delete change.doc;
                } else if (!opts.attachments) {
                  for (var att in change.doc._attachments) {
                    if (change.doc._attachments.hasOwnProperty(att)) {
                      change.doc._attachments[att].stub = true;
                    }
                  }
                }
                return true;
              };
            }
            function flatten(arrs) {
              var res = [];
              for (var i = 0, len = arrs.length; i < len; i++) {
                res = res.concat(arrs[i]);
              }
              return res;
            }
            function f() {}
            var hasName = f.name;
            var res;
            if (hasName) {
              res = function (fun) {
                return fun.name;
              };
            } else {
              res = function (fun) {
                return fun.toString().match(/^\s*function\s*(\S*)\s*\(/)[1];
              };
            }
            function invalidIdError(id) {
              var err;
              if (!id) {
                err = createError(MISSING_ID);
              } else if (typeof id !== 'string') {
                err = createError(INVALID_ID);
              } else if (/^_/.test(id) && !/^_(design|local)/.test(id)) {
                err = createError(RESERVED_ID);
              }
              if (err) {
                throw err;
              }
            }
            function isRemote(db) {
              if (typeof db._remote === 'boolean') {
                return db._remote;
              }
              if (typeof db.type === 'function') {
                guardedConsole('warn', 'db.type() is deprecated and will be removed in ' + 'a future version of PouchDB');
                return db.type() === 'http';
              }
              return false;
            }
            function listenerCount(ee, type) {
              return 'listenerCount' in ee ? ee.listenerCount(type) : events.EventEmitter.listenerCount(ee, type);
            }
            function parseDesignDocFunctionName(s) {
              if (!s) {
                return null;
              }
              var parts = s.split('/');
              if (parts.length === 2) {
                return parts;
              }
              if (parts.length === 1) {
                return [s, s];
              }
              return null;
            }
            function normalizeDesignDocFunctionName(s) {
              var normalized = parseDesignDocFunctionName(s);
              return normalized ? normalized.join('/') : null;
            }
            var keys = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
            var qName = "queryKey";
            var qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;
            var parser = /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
            function parseUri(str) {
              var m = parser.exec(str);
              var uri = {};
              var i = 14;
              while (i--) {
                var key = keys[i];
                var value = m[i] || "";
                var encoded = ['user', 'password'].indexOf(key) !== -1;
                uri[key] = encoded ? decodeURIComponent(value) : value;
              }
              uri[qName] = {};
              uri[keys[12]].replace(qParser, function ($0, $1, $2) {
                if ($1) {
                  uri[qName][$1] = $2;
                }
              });
              return uri;
            }
            function scopeEval(source, scope) {
              var keys = [];
              var values = [];
              for (var key in scope) {
                if (scope.hasOwnProperty(key)) {
                  keys.push(key);
                  values.push(scope[key]);
                }
              }
              keys.push(source);
              return Function.apply(null, keys).apply(null, values);
            }
            function upsert(db, docId, diffFun) {
              return new PouchPromise$1(function (fulfill, reject) {
                db.get(docId, function (err, doc) {
                  if (err) {
                    if (err.status !== 404) {
                      return reject(err);
                    }
                    doc = {};
                  }
                  var docRev = doc._rev;
                  var newDoc = diffFun(doc);
                  if (!newDoc) {
                    return fulfill({
                      updated: false,
                      rev: docRev
                    });
                  }
                  newDoc._id = docId;
                  newDoc._rev = docRev;
                  fulfill(tryAndPut(db, newDoc, diffFun));
                });
              });
            }
            function tryAndPut(db, doc, diffFun) {
              return db.put(doc).then(function (res) {
                return {
                  updated: true,
                  rev: res.rev
                };
              }, function (err) {
                if (err.status !== 409) {
                  throw err;
                }
                return upsert(db, doc._id, diffFun);
              });
            }
            function rev() {
              return v4().replace(/-/g, '').toLowerCase();
            }
            var uuid = v4;
            function winningRev(metadata) {
              var winningId;
              var winningPos;
              var winningDeleted;
              var toVisit = metadata.rev_tree.slice();
              var node;
              while (node = toVisit.pop()) {
                var tree = node.ids;
                var branches = tree[2];
                var pos = node.pos;
                if (branches.length) {
                  for (var i = 0, len = branches.length; i < len; i++) {
                    toVisit.push({
                      pos: pos + 1,
                      ids: branches[i]
                    });
                  }
                  continue;
                }
                var deleted = !!tree[1].deleted;
                var id = tree[0];
                if (!winningId || (winningDeleted !== deleted ? winningDeleted : winningPos !== pos ? winningPos < pos : winningId < id)) {
                  winningId = id;
                  winningPos = pos;
                  winningDeleted = deleted;
                }
              }
              return winningPos + '-' + winningId;
            }
            function traverseRevTree(revs, callback) {
              var toVisit = revs.slice();
              var node;
              while (node = toVisit.pop()) {
                var pos = node.pos;
                var tree = node.ids;
                var branches = tree[2];
                var newCtx = callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);
                for (var i = 0, len = branches.length; i < len; i++) {
                  toVisit.push({
                    pos: pos + 1,
                    ids: branches[i],
                    ctx: newCtx
                  });
                }
              }
            }
            function sortByPos(a, b) {
              return a.pos - b.pos;
            }
            function collectLeaves(revs) {
              var leaves = [];
              traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {
                if (isLeaf) {
                  leaves.push({
                    rev: pos + "-" + id,
                    pos: pos,
                    opts: opts
                  });
                }
              });
              leaves.sort(sortByPos).reverse();
              for (var i = 0, len = leaves.length; i < len; i++) {
                delete leaves[i].pos;
              }
              return leaves;
            }
            function collectConflicts(metadata) {
              var win = winningRev(metadata);
              var leaves = collectLeaves(metadata.rev_tree);
              var conflicts = [];
              for (var i = 0, len = leaves.length; i < len; i++) {
                var leaf = leaves[i];
                if (leaf.rev !== win && !leaf.opts.deleted) {
                  conflicts.push(leaf.rev);
                }
              }
              return conflicts;
            }
            function compactTree(metadata) {
              var revs = [];
              traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {
                if (opts.status === 'available' && !isLeaf) {
                  revs.push(pos + '-' + revHash);
                  opts.status = 'missing';
                }
              });
              return revs;
            }
            function rootToLeaf(revs) {
              var paths = [];
              var toVisit = revs.slice();
              var node;
              while (node = toVisit.pop()) {
                var pos = node.pos;
                var tree = node.ids;
                var id = tree[0];
                var opts = tree[1];
                var branches = tree[2];
                var isLeaf = branches.length === 0;
                var history = node.history ? node.history.slice() : [];
                history.push({
                  id: id,
                  opts: opts
                });
                if (isLeaf) {
                  paths.push({
                    pos: pos + 1 - history.length,
                    ids: history
                  });
                }
                for (var i = 0, len = branches.length; i < len; i++) {
                  toVisit.push({
                    pos: pos + 1,
                    ids: branches[i],
                    history: history
                  });
                }
              }
              return paths.reverse();
            }
            function sortByPos$1(a, b) {
              return a.pos - b.pos;
            }
            function binarySearch(arr, item, comparator) {
              var low = 0;
              var high = arr.length;
              var mid;
              while (low < high) {
                mid = low + high >>> 1;
                if (comparator(arr[mid], item) < 0) {
                  low = mid + 1;
                } else {
                  high = mid;
                }
              }
              return low;
            }
            function insertSorted(arr, item, comparator) {
              var idx = binarySearch(arr, item, comparator);
              arr.splice(idx, 0, item);
            }
            function pathToTree(path, numStemmed) {
              var root;
              var leaf;
              for (var i = numStemmed, len = path.length; i < len; i++) {
                var node = path[i];
                var currentLeaf = [node.id, node.opts, []];
                if (leaf) {
                  leaf[2].push(currentLeaf);
                  leaf = currentLeaf;
                } else {
                  root = leaf = currentLeaf;
                }
              }
              return root;
            }
            function compareTree(a, b) {
              return a[0] < b[0] ? -1 : 1;
            }
            function mergeTree(in_tree1, in_tree2) {
              var queue = [{
                tree1: in_tree1,
                tree2: in_tree2
              }];
              var conflicts = false;
              while (queue.length > 0) {
                var item = queue.pop();
                var tree1 = item.tree1;
                var tree2 = item.tree2;
                if (tree1[1].status || tree2[1].status) {
                  tree1[1].status = tree1[1].status === 'available' || tree2[1].status === 'available' ? 'available' : 'missing';
                }
                for (var i = 0; i < tree2[2].length; i++) {
                  if (!tree1[2][0]) {
                    conflicts = 'new_leaf';
                    tree1[2][0] = tree2[2][i];
                    continue;
                  }
                  var merged = false;
                  for (var j = 0; j < tree1[2].length; j++) {
                    if (tree1[2][j][0] === tree2[2][i][0]) {
                      queue.push({
                        tree1: tree1[2][j],
                        tree2: tree2[2][i]
                      });
                      merged = true;
                    }
                  }
                  if (!merged) {
                    conflicts = 'new_branch';
                    insertSorted(tree1[2], tree2[2][i], compareTree);
                  }
                }
              }
              return {
                conflicts: conflicts,
                tree: in_tree1
              };
            }
            function doMerge(tree, path, dontExpand) {
              var restree = [];
              var conflicts = false;
              var merged = false;
              var res;
              if (!tree.length) {
                return {
                  tree: [path],
                  conflicts: 'new_leaf'
                };
              }
              for (var i = 0, len = tree.length; i < len; i++) {
                var branch = tree[i];
                if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {
                  res = mergeTree(branch.ids, path.ids);
                  restree.push({
                    pos: branch.pos,
                    ids: res.tree
                  });
                  conflicts = conflicts || res.conflicts;
                  merged = true;
                } else if (dontExpand !== true) {
                  var t1 = branch.pos < path.pos ? branch : path;
                  var t2 = branch.pos < path.pos ? path : branch;
                  var diff = t2.pos - t1.pos;
                  var candidateParents = [];
                  var trees = [];
                  trees.push({
                    ids: t1.ids,
                    diff: diff,
                    parent: null,
                    parentIdx: null
                  });
                  while (trees.length > 0) {
                    var item = trees.pop();
                    if (item.diff === 0) {
                      if (item.ids[0] === t2.ids[0]) {
                        candidateParents.push(item);
                      }
                      continue;
                    }
                    var elements = item.ids[2];
                    for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {
                      trees.push({
                        ids: elements[j],
                        diff: item.diff - 1,
                        parent: item.ids,
                        parentIdx: j
                      });
                    }
                  }
                  var el = candidateParents[0];
                  if (!el) {
                    restree.push(branch);
                  } else {
                    res = mergeTree(el.ids, t2.ids);
                    el.parent[2][el.parentIdx] = res.tree;
                    restree.push({
                      pos: t1.pos,
                      ids: t1.ids
                    });
                    conflicts = conflicts || res.conflicts;
                    merged = true;
                  }
                } else {
                  restree.push(branch);
                }
              }
              if (!merged) {
                restree.push(path);
              }
              restree.sort(sortByPos$1);
              return {
                tree: restree,
                conflicts: conflicts || 'internal_node'
              };
            }
            function stem(tree, depth) {
              var paths = rootToLeaf(tree);
              var stemmedRevs;
              var result;
              for (var i = 0, len = paths.length; i < len; i++) {
                var path = paths[i];
                var stemmed = path.ids;
                var node;
                if (stemmed.length > depth) {
                  if (!stemmedRevs) {
                    stemmedRevs = {};
                  }
                  var numStemmed = stemmed.length - depth;
                  node = {
                    pos: path.pos + numStemmed,
                    ids: pathToTree(stemmed, numStemmed)
                  };
                  for (var s = 0; s < numStemmed; s++) {
                    var rev = path.pos + s + '-' + stemmed[s].id;
                    stemmedRevs[rev] = true;
                  }
                } else {
                  node = {
                    pos: path.pos,
                    ids: pathToTree(stemmed, 0)
                  };
                }
                if (result) {
                  result = doMerge(result, node, true).tree;
                } else {
                  result = [node];
                }
              }
              if (stemmedRevs) {
                traverseRevTree(result, function (isLeaf, pos, revHash) {
                  delete stemmedRevs[pos + '-' + revHash];
                });
              }
              return {
                tree: result,
                revs: stemmedRevs ? Object.keys(stemmedRevs) : []
              };
            }
            function merge(tree, path, depth) {
              var newTree = doMerge(tree, path);
              var stemmed = stem(newTree.tree, depth);
              return {
                tree: stemmed.tree,
                stemmedRevs: stemmed.revs,
                conflicts: newTree.conflicts
              };
            }
            function revExists(revs, rev) {
              var toVisit = revs.slice();
              var splitRev = rev.split('-');
              var targetPos = parseInt(splitRev[0], 10);
              var targetId = splitRev[1];
              var node;
              while (node = toVisit.pop()) {
                if (node.pos === targetPos && node.ids[0] === targetId) {
                  return true;
                }
                var branches = node.ids[2];
                for (var i = 0, len = branches.length; i < len; i++) {
                  toVisit.push({
                    pos: node.pos + 1,
                    ids: branches[i]
                  });
                }
              }
              return false;
            }
            function getTrees(node) {
              return node.ids;
            }
            function isDeleted(metadata, rev) {
              if (!rev) {
                rev = winningRev(metadata);
              }
              var id = rev.substring(rev.indexOf('-') + 1);
              var toVisit = metadata.rev_tree.map(getTrees);
              var tree;
              while (tree = toVisit.pop()) {
                if (tree[0] === id) {
                  return !!tree[1].deleted;
                }
                toVisit = toVisit.concat(tree[2]);
              }
            }
            function isLocalId(id) {
              return (/^_local/.test(id)
              );
            }
            function latest(rev, metadata) {
              var toVisit = metadata.rev_tree.slice();
              var node;
              while (node = toVisit.pop()) {
                var pos = node.pos;
                var tree = node.ids;
                var id = tree[0];
                var opts = tree[1];
                var branches = tree[2];
                var isLeaf = branches.length === 0;
                var history = node.history ? node.history.slice() : [];
                history.push({
                  id: id,
                  pos: pos,
                  opts: opts
                });
                if (isLeaf) {
                  for (var i = 0, len = history.length; i < len; i++) {
                    var historyNode = history[i];
                    var historyRev = historyNode.pos + '-' + historyNode.id;
                    if (historyRev === rev) {
                      return pos + '-' + id;
                    }
                  }
                }
                for (var j = 0, l = branches.length; j < l; j++) {
                  toVisit.push({
                    pos: pos + 1,
                    ids: branches[j],
                    history: history
                  });
                }
              }
              throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);
            }
            inherits(Changes$2, events.EventEmitter);
            function tryCatchInChangeListener(self, change) {
              try {
                self.emit('change', change);
              } catch (e) {
                guardedConsole('error', 'Error in .on("change", function):', e);
              }
            }
            function Changes$2(db, opts, callback) {
              events.EventEmitter.call(this);
              var self = this;
              this.db = db;
              opts = opts ? clone(opts) : {};
              var complete = opts.complete = once(function (err, resp) {
                if (err) {
                  if (listenerCount(self, 'error') > 0) {
                    self.emit('error', err);
                  }
                } else {
                  self.emit('complete', resp);
                }
                self.removeAllListeners();
                db.removeListener('destroyed', onDestroy);
              });
              if (callback) {
                self.on('complete', function (resp) {
                  callback(null, resp);
                });
                self.on('error', callback);
              }
              function onDestroy() {
                self.cancel();
              }
              db.once('destroyed', onDestroy);
              opts.onChange = function (change) {
                if (self.isCancelled) {
                  return;
                }
                tryCatchInChangeListener(self, change);
              };
              var promise = new PouchPromise$1(function (fulfill, reject) {
                opts.complete = function (err, res) {
                  if (err) {
                    reject(err);
                  } else {
                    fulfill(res);
                  }
                };
              });
              self.once('cancel', function () {
                db.removeListener('destroyed', onDestroy);
                opts.complete(null, { status: 'cancelled' });
              });
              this.then = promise.then.bind(promise);
              this['catch'] = promise['catch'].bind(promise);
              this.then(function (result) {
                complete(null, result);
              }, complete);
              if (!db.taskqueue.isReady) {
                db.taskqueue.addTask(function (failed) {
                  if (failed) {
                    opts.complete(failed);
                  } else if (self.isCancelled) {
                    self.emit('cancel');
                  } else {
                    self.validateChanges(opts);
                  }
                });
              } else {
                self.validateChanges(opts);
              }
            }
            Changes$2.prototype.cancel = function () {
              this.isCancelled = true;
              if (this.db.taskqueue.isReady) {
                this.emit('cancel');
              }
            };
            function processChange(doc, metadata, opts) {
              var changeList = [{ rev: doc._rev }];
              if (opts.style === 'all_docs') {
                changeList = collectLeaves(metadata.rev_tree).map(function (x) {
                  return { rev: x.rev };
                });
              }
              var change = {
                id: metadata.id,
                changes: changeList,
                doc: doc
              };
              if (isDeleted(metadata, doc._rev)) {
                change.deleted = true;
              }
              if (opts.conflicts) {
                change.doc._conflicts = collectConflicts(metadata);
                if (!change.doc._conflicts.length) {
                  delete change.doc._conflicts;
                }
              }
              return change;
            }
            Changes$2.prototype.validateChanges = function (opts) {
              var callback = opts.complete;
              var self = this;
              if (PouchDB$5._changesFilterPlugin) {
                PouchDB$5._changesFilterPlugin.validate(opts, function (err) {
                  if (err) {
                    return callback(err);
                  }
                  self.doChanges(opts);
                });
              } else {
                self.doChanges(opts);
              }
            };
            Changes$2.prototype.doChanges = function (opts) {
              var self = this;
              var callback = opts.complete;
              opts = clone(opts);
              if ('live' in opts && !('continuous' in opts)) {
                opts.continuous = opts.live;
              }
              opts.processChange = processChange;
              if (opts.since === 'latest') {
                opts.since = 'now';
              }
              if (!opts.since) {
                opts.since = 0;
              }
              if (opts.since === 'now') {
                this.db.info().then(function (info) {
                  if (self.isCancelled) {
                    callback(null, { status: 'cancelled' });
                    return;
                  }
                  opts.since = info.update_seq;
                  self.doChanges(opts);
                }, callback);
                return;
              }
              if (PouchDB$5._changesFilterPlugin) {
                PouchDB$5._changesFilterPlugin.normalize(opts);
                if (PouchDB$5._changesFilterPlugin.shouldFilter(this, opts)) {
                  return PouchDB$5._changesFilterPlugin.filter(this, opts);
                }
              } else {
                ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {
                  if (key in opts) {
                    guardedConsole('warn', 'The "' + key + '" option was passed in to changes/replicate, ' + 'but pouchdb-changes-filter plugin is not installed, so it ' + 'was ignored. Please install the plugin to enable filtering.');
                  }
                });
              }
              if (!('descending' in opts)) {
                opts.descending = false;
              }
              opts.limit = opts.limit === 0 ? 1 : opts.limit;
              opts.complete = callback;
              var newPromise = this.db._changes(opts);
              if (newPromise && typeof newPromise.cancel === 'function') {
                var cancel = self.cancel;
                self.cancel = getArguments(function (args) {
                  newPromise.cancel();
                  cancel.apply(this, args);
                });
              }
            };
            function compare(left, right) {
              return left < right ? -1 : left > right ? 1 : 0;
            }
            function yankError(callback, docId) {
              return function (err, results) {
                if (err || results[0] && results[0].error) {
                  err = err || results[0];
                  err.docId = docId;
                  callback(err);
                } else {
                  callback(null, results.length ? results[0] : results);
                }
              };
            }
            function cleanDocs(docs) {
              for (var i = 0; i < docs.length; i++) {
                var doc = docs[i];
                if (doc._deleted) {
                  delete doc._attachments;
                } else if (doc._attachments) {
                  var atts = Object.keys(doc._attachments);
                  for (var j = 0; j < atts.length; j++) {
                    var att = atts[j];
                    doc._attachments[att] = pick(doc._attachments[att], ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);
                  }
                }
              }
            }
            function compareByIdThenRev(a, b) {
              var idCompare = compare(a._id, b._id);
              if (idCompare !== 0) {
                return idCompare;
              }
              var aStart = a._revisions ? a._revisions.start : 0;
              var bStart = b._revisions ? b._revisions.start : 0;
              return compare(aStart, bStart);
            }
            function computeHeight(revs) {
              var height = {};
              var edges = [];
              traverseRevTree(revs, function (isLeaf, pos, id, prnt) {
                var rev$$1 = pos + "-" + id;
                if (isLeaf) {
                  height[rev$$1] = 0;
                }
                if (prnt !== undefined) {
                  edges.push({
                    from: prnt,
                    to: rev$$1
                  });
                }
                return rev$$1;
              });
              edges.reverse();
              edges.forEach(function (edge) {
                if (height[edge.from] === undefined) {
                  height[edge.from] = 1 + height[edge.to];
                } else {
                  height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);
                }
              });
              return height;
            }
            function allDocsKeysQuery(api, opts, callback) {
              var keys = 'limit' in opts ? opts.keys.slice(opts.skip, opts.limit + opts.skip) : opts.skip > 0 ? opts.keys.slice(opts.skip) : opts.keys;
              if (opts.descending) {
                keys.reverse();
              }
              if (!keys.length) {
                return api._allDocs({ limit: 0 }, callback);
              }
              var finalResults = { offset: opts.skip };
              return PouchPromise$1.all(keys.map(function (key) {
                var subOpts = $inject_Object_assign({
                  key: key,
                  deleted: 'ok'
                }, opts);
                ['limit', 'skip', 'keys'].forEach(function (optKey) {
                  delete subOpts[optKey];
                });
                return new PouchPromise$1(function (resolve, reject) {
                  api._allDocs(subOpts, function (err, res) {
                    if (err) {
                      return reject(err);
                    }
                    finalResults.total_rows = res.total_rows;
                    resolve(res.rows[0] || {
                      key: key,
                      error: 'not_found'
                    });
                  });
                });
              })).then(function (results) {
                finalResults.rows = results;
                return finalResults;
              });
            }
            function doNextCompaction(self) {
              var task = self._compactionQueue[0];
              var opts = task.opts;
              var callback = task.callback;
              self.get('_local/compaction')["catch"](function () {
                return false;
              }).then(function (doc) {
                if (doc && doc.last_seq) {
                  opts.last_seq = doc.last_seq;
                }
                self._compact(opts, function (err, res) {
                  if (err) {
                    callback(err);
                  } else {
                    callback(null, res);
                  }
                  nextTick(function () {
                    self._compactionQueue.shift();
                    if (self._compactionQueue.length) {
                      doNextCompaction(self);
                    }
                  });
                });
              });
            }
            function attachmentNameError(name) {
              if (name.charAt(0) === '_') {
                return name + ' is not a valid attachment name, attachment ' + 'names cannot start with \'_\'';
              }
              return false;
            }
            inherits(AbstractPouchDB, events.EventEmitter);
            function AbstractPouchDB() {
              events.EventEmitter.call(this);
            }
            AbstractPouchDB.prototype.post = adapterFun('post', function (doc, opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              if (typeof doc !== 'object' || Array.isArray(doc)) {
                return callback(createError(NOT_AN_OBJECT));
              }
              this.bulkDocs({ docs: [doc] }, opts, yankError(callback, doc._id));
            });
            AbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {
              if (typeof opts === 'function') {
                cb = opts;
                opts = {};
              }
              if (typeof doc !== 'object' || Array.isArray(doc)) {
                return cb(createError(NOT_AN_OBJECT));
              }
              invalidIdError(doc._id);
              if (isLocalId(doc._id) && typeof this._putLocal === 'function') {
                if (doc._deleted) {
                  return this._removeLocal(doc, cb);
                } else {
                  return this._putLocal(doc, cb);
                }
              }
              var self = this;
              if (opts.force && doc._rev) {
                transformForceOptionToNewEditsOption();
                putDoc(function (err) {
                  var result = err ? null : {
                    ok: true,
                    id: doc._id,
                    rev: doc._rev
                  };
                  cb(err, result);
                });
              } else {
                putDoc(cb);
              }
              function transformForceOptionToNewEditsOption() {
                var parts = doc._rev.split('-');
                var oldRevId = parts[1];
                var oldRevNum = parseInt(parts[0], 10);
                var newRevNum = oldRevNum + 1;
                var newRevId = rev();
                doc._revisions = {
                  start: newRevNum,
                  ids: [newRevId, oldRevId]
                };
                doc._rev = newRevNum + '-' + newRevId;
                opts.new_edits = false;
              }
              function putDoc(next) {
                if (typeof self._put === 'function' && opts.new_edits !== false) {
                  self._put(doc, opts, next);
                } else {
                  self.bulkDocs({ docs: [doc] }, opts, yankError(next, doc._id));
                }
              }
            });
            AbstractPouchDB.prototype.putAttachment = adapterFun('putAttachment', function (docId, attachmentId, rev$$1, blob, type) {
              var api = this;
              if (typeof type === 'function') {
                type = blob;
                blob = rev$$1;
                rev$$1 = null;
              }
              if (typeof type === 'undefined') {
                type = blob;
                blob = rev$$1;
                rev$$1 = null;
              }
              if (!type) {
                guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');
              }
              function createAttachment(doc) {
                var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;
                doc._attachments = doc._attachments || {};
                doc._attachments[attachmentId] = {
                  content_type: type,
                  data: blob,
                  revpos: ++prevrevpos
                };
                return api.put(doc);
              }
              return api.get(docId).then(function (doc) {
                if (doc._rev !== rev$$1) {
                  throw createError(REV_CONFLICT);
                }
                return createAttachment(doc);
              }, function (err) {
                if (err.reason === MISSING_DOC.message) {
                  return createAttachment({ _id: docId });
                } else {
                  throw err;
                }
              });
            });
            AbstractPouchDB.prototype.removeAttachment = adapterFun('removeAttachment', function (docId, attachmentId, rev$$1, callback) {
              var self = this;
              self.get(docId, function (err, obj) {
                if (err) {
                  callback(err);
                  return;
                }
                if (obj._rev !== rev$$1) {
                  callback(createError(REV_CONFLICT));
                  return;
                }
                if (!obj._attachments) {
                  return callback();
                }
                delete obj._attachments[attachmentId];
                if (Object.keys(obj._attachments).length === 0) {
                  delete obj._attachments;
                }
                self.put(obj, callback);
              });
            });
            AbstractPouchDB.prototype.remove = adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {
              var doc;
              if (typeof optsOrRev === 'string') {
                doc = {
                  _id: docOrId,
                  _rev: optsOrRev
                };
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
              } else {
                doc = docOrId;
                if (typeof optsOrRev === 'function') {
                  callback = optsOrRev;
                  opts = {};
                } else {
                  callback = opts;
                  opts = optsOrRev;
                }
              }
              opts = opts || {};
              opts.was_delete = true;
              var newDoc = {
                _id: doc._id,
                _rev: doc._rev || opts.rev
              };
              newDoc._deleted = true;
              if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {
                return this._removeLocal(doc, callback);
              }
              this.bulkDocs({ docs: [newDoc] }, opts, yankError(callback, newDoc._id));
            });
            AbstractPouchDB.prototype.revsDiff = adapterFun('revsDiff', function (req, opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              var ids = Object.keys(req);
              if (!ids.length) {
                return callback(null, {});
              }
              var count = 0;
              var missing = new ExportedMap();
              function addToMissing(id, revId) {
                if (!missing.has(id)) {
                  missing.set(id, { missing: [] });
                }
                missing.get(id).missing.push(revId);
              }
              function processDoc(id, rev_tree) {
                var missingForId = req[id].slice(0);
                traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx, opts) {
                  var rev$$1 = pos + '-' + revHash;
                  var idx = missingForId.indexOf(rev$$1);
                  if (idx === -1) {
                    return;
                  }
                  missingForId.splice(idx, 1);
                  if (opts.status !== 'available') {
                    addToMissing(id, rev$$1);
                  }
                });
                missingForId.forEach(function (rev$$1) {
                  addToMissing(id, rev$$1);
                });
              }
              ids.map(function (id) {
                this._getRevisionTree(id, function (err, rev_tree) {
                  if (err && err.status === 404 && err.message === 'missing') {
                    missing.set(id, { missing: req[id] });
                  } else if (err) {
                    return callback(err);
                  } else {
                    processDoc(id, rev_tree);
                  }
                  if (++count === ids.length) {
                    var missingObj = {};
                    missing.forEach(function (value, key) {
                      missingObj[key] = value;
                    });
                    return callback(null, missingObj);
                  }
                });
              }, this);
            });
            AbstractPouchDB.prototype.bulkGet = adapterFun('bulkGet', function (opts, callback) {
              bulkGet(this, opts, callback);
            });
            AbstractPouchDB.prototype.compactDocument = adapterFun('compactDocument', function (docId, maxHeight, callback) {
              var self = this;
              this._getRevisionTree(docId, function (err, revTree) {
                if (err) {
                  return callback(err);
                }
                var height = computeHeight(revTree);
                var candidates = [];
                var revs = [];
                Object.keys(height).forEach(function (rev$$1) {
                  if (height[rev$$1] > maxHeight) {
                    candidates.push(rev$$1);
                  }
                });
                traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {
                  var rev$$1 = pos + '-' + revHash;
                  if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {
                    revs.push(rev$$1);
                  }
                });
                self._doCompaction(docId, revs, callback);
              });
            });
            AbstractPouchDB.prototype.compact = adapterFun('compact', function (opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              var self = this;
              opts = opts || {};
              self._compactionQueue = self._compactionQueue || [];
              self._compactionQueue.push({
                opts: opts,
                callback: callback
              });
              if (self._compactionQueue.length === 1) {
                doNextCompaction(self);
              }
            });
            AbstractPouchDB.prototype._compact = function (opts, callback) {
              var self = this;
              var changesOpts = {
                return_docs: false,
                last_seq: opts.last_seq || 0
              };
              var promises = [];
              function onChange(row) {
                promises.push(self.compactDocument(row.id, 0));
              }
              function onComplete(resp) {
                var lastSeq = resp.last_seq;
                PouchPromise$1.all(promises).then(function () {
                  return upsert(self, '_local/compaction', function deltaFunc(doc) {
                    if (!doc.last_seq || doc.last_seq < lastSeq) {
                      doc.last_seq = lastSeq;
                      return doc;
                    }
                    return false;
                  });
                }).then(function () {
                  callback(null, { ok: true });
                })["catch"](callback);
              }
              self.changes(changesOpts).on('change', onChange).on('complete', onComplete).on('error', callback);
            };
            AbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {
              if (typeof opts === 'function') {
                cb = opts;
                opts = {};
              }
              if (typeof id !== 'string') {
                return cb(createError(INVALID_ID));
              }
              if (isLocalId(id) && typeof this._getLocal === 'function') {
                return this._getLocal(id, cb);
              }
              var leaves = [],
                  self = this;
              function finishOpenRevs() {
                var result = [];
                var count = leaves.length;
                if (!count) {
                  return cb(null, result);
                }
                leaves.forEach(function (leaf) {
                  self.get(id, {
                    rev: leaf,
                    revs: opts.revs,
                    latest: opts.latest,
                    attachments: opts.attachments
                  }, function (err, doc) {
                    if (!err) {
                      var existing;
                      for (var i = 0, l = result.length; i < l; i++) {
                        if (result[i].ok && result[i].ok._rev === doc._rev) {
                          existing = true;
                          break;
                        }
                      }
                      if (!existing) {
                        result.push({ ok: doc });
                      }
                    } else {
                      result.push({ missing: leaf });
                    }
                    count--;
                    if (!count) {
                      cb(null, result);
                    }
                  });
                });
              }
              if (opts.open_revs) {
                if (opts.open_revs === "all") {
                  this._getRevisionTree(id, function (err, rev_tree) {
                    if (err) {
                      return cb(err);
                    }
                    leaves = collectLeaves(rev_tree).map(function (leaf) {
                      return leaf.rev;
                    });
                    finishOpenRevs();
                  });
                } else {
                  if (Array.isArray(opts.open_revs)) {
                    leaves = opts.open_revs;
                    for (var i = 0; i < leaves.length; i++) {
                      var l = leaves[i];
                      if (!(typeof l === "string" && /^\d+-/.test(l))) {
                        return cb(createError(INVALID_REV));
                      }
                    }
                    finishOpenRevs();
                  } else {
                    return cb(createError(UNKNOWN_ERROR, 'function_clause'));
                  }
                }
                return;
              }
              return this._get(id, opts, function (err, result) {
                if (err) {
                  err.docId = id;
                  return cb(err);
                }
                var doc = result.doc;
                var metadata = result.metadata;
                var ctx = result.ctx;
                if (opts.conflicts) {
                  var conflicts = collectConflicts(metadata);
                  if (conflicts.length) {
                    doc._conflicts = conflicts;
                  }
                }
                if (isDeleted(metadata, doc._rev)) {
                  doc._deleted = true;
                }
                if (opts.revs || opts.revs_info) {
                  var splittedRev = doc._rev.split('-');
                  var revNo = parseInt(splittedRev[0], 10);
                  var revHash = splittedRev[1];
                  var paths = rootToLeaf(metadata.rev_tree);
                  var path = null;
                  for (var i = 0; i < paths.length; i++) {
                    var currentPath = paths[i];
                    var hashIndex = currentPath.ids.map(function (x) {
                      return x.id;
                    }).indexOf(revHash);
                    var hashFoundAtRevPos = hashIndex === revNo - 1;
                    if (hashFoundAtRevPos || !path && hashIndex !== -1) {
                      path = currentPath;
                    }
                  }
                  var indexOfRev = path.ids.map(function (x) {
                    return x.id;
                  }).indexOf(doc._rev.split('-')[1]) + 1;
                  var howMany = path.ids.length - indexOfRev;
                  path.ids.splice(indexOfRev, howMany);
                  path.ids.reverse();
                  if (opts.revs) {
                    doc._revisions = {
                      start: path.pos + path.ids.length - 1,
                      ids: path.ids.map(function (rev$$1) {
                        return rev$$1.id;
                      })
                    };
                  }
                  if (opts.revs_info) {
                    var pos = path.pos + path.ids.length;
                    doc._revs_info = path.ids.map(function (rev$$1) {
                      pos--;
                      return {
                        rev: pos + '-' + rev$$1.id,
                        status: rev$$1.opts.status
                      };
                    });
                  }
                }
                if (opts.attachments && doc._attachments) {
                  var attachments = doc._attachments;
                  var count = Object.keys(attachments).length;
                  if (count === 0) {
                    return cb(null, doc);
                  }
                  Object.keys(attachments).forEach(function (key) {
                    this._getAttachment(doc._id, key, attachments[key], {
                      rev: doc._rev,
                      binary: opts.binary,
                      ctx: ctx
                    }, function (err, data) {
                      var att = doc._attachments[key];
                      att.data = data;
                      delete att.stub;
                      delete att.length;
                      if (! --count) {
                        cb(null, doc);
                      }
                    });
                  }, self);
                } else {
                  if (doc._attachments) {
                    for (var key in doc._attachments) {
                      if (doc._attachments.hasOwnProperty(key)) {
                        doc._attachments[key].stub = true;
                      }
                    }
                  }
                  cb(null, doc);
                }
              });
            });
            AbstractPouchDB.prototype.getAttachment = adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {
              var self = this;
              if (opts instanceof Function) {
                callback = opts;
                opts = {};
              }
              this._get(docId, opts, function (err, res) {
                if (err) {
                  return callback(err);
                }
                if (res.doc._attachments && res.doc._attachments[attachmentId]) {
                  opts.ctx = res.ctx;
                  opts.binary = true;
                  self._getAttachment(docId, attachmentId, res.doc._attachments[attachmentId], opts, callback);
                } else {
                  return callback(createError(MISSING_DOC));
                }
              });
            });
            AbstractPouchDB.prototype.allDocs = adapterFun('allDocs', function (opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;
              if (opts.start_key) {
                opts.startkey = opts.start_key;
              }
              if (opts.end_key) {
                opts.endkey = opts.end_key;
              }
              if ('keys' in opts) {
                if (!Array.isArray(opts.keys)) {
                  return callback(new TypeError('options.keys must be an array'));
                }
                var incompatibleOpt = ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {
                  return incompatibleOpt in opts;
                })[0];
                if (incompatibleOpt) {
                  callback(createError(QUERY_PARSE_ERROR, 'Query parameter `' + incompatibleOpt + '` is not compatible with multi-get'));
                  return;
                }
                if (!isRemote(this)) {
                  return allDocsKeysQuery(this, opts, callback);
                }
              }
              return this._allDocs(opts, callback);
            });
            AbstractPouchDB.prototype.changes = function (opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              return new Changes$2(this, opts, callback);
            };
            AbstractPouchDB.prototype.close = adapterFun('close', function (callback) {
              this._closed = true;
              this.emit('closed');
              return this._close(callback);
            });
            AbstractPouchDB.prototype.info = adapterFun('info', function (callback) {
              var self = this;
              this._info(function (err, info) {
                if (err) {
                  return callback(err);
                }
                info.db_name = info.db_name || self.name;
                info.auto_compaction = !!(self.auto_compaction && !isRemote(self));
                info.adapter = self.adapter;
                callback(null, info);
              });
            });
            AbstractPouchDB.prototype.id = adapterFun('id', function (callback) {
              return this._id(callback);
            });
            AbstractPouchDB.prototype.type = function () {
              return typeof this._type === 'function' ? this._type() : this.adapter;
            };
            AbstractPouchDB.prototype.bulkDocs = adapterFun('bulkDocs', function (req, opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              opts = opts || {};
              if (Array.isArray(req)) {
                req = { docs: req };
              }
              if (!req || !req.docs || !Array.isArray(req.docs)) {
                return callback(createError(MISSING_BULK_DOCS));
              }
              for (var i = 0; i < req.docs.length; ++i) {
                if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {
                  return callback(createError(NOT_AN_OBJECT));
                }
              }
              var attachmentError;
              req.docs.forEach(function (doc) {
                if (doc._attachments) {
                  Object.keys(doc._attachments).forEach(function (name) {
                    attachmentError = attachmentError || attachmentNameError(name);
                    if (!doc._attachments[name].content_type) {
                      guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');
                    }
                  });
                }
              });
              if (attachmentError) {
                return callback(createError(BAD_REQUEST, attachmentError));
              }
              if (!('new_edits' in opts)) {
                if ('new_edits' in req) {
                  opts.new_edits = req.new_edits;
                } else {
                  opts.new_edits = true;
                }
              }
              var adapter = this;
              if (!opts.new_edits && !isRemote(adapter)) {
                req.docs.sort(compareByIdThenRev);
              }
              cleanDocs(req.docs);
              var ids = req.docs.map(function (doc) {
                return doc._id;
              });
              return this._bulkDocs(req, opts, function (err, res) {
                if (err) {
                  return callback(err);
                }
                if (!opts.new_edits) {
                  res = res.filter(function (x) {
                    return x.error;
                  });
                }
                if (!isRemote(adapter)) {
                  for (var i = 0, l = res.length; i < l; i++) {
                    res[i].id = res[i].id || ids[i];
                  }
                }
                callback(null, res);
              });
            });
            AbstractPouchDB.prototype.registerDependentDatabase = adapterFun('registerDependentDatabase', function (dependentDb, callback) {
              var depDB = new this.constructor(dependentDb, this.__opts);
              function diffFun(doc) {
                doc.dependentDbs = doc.dependentDbs || {};
                if (doc.dependentDbs[dependentDb]) {
                  return false;
                }
                doc.dependentDbs[dependentDb] = true;
                return doc;
              }
              upsert(this, '_local/_pouch_dependentDbs', diffFun).then(function () {
                callback(null, { db: depDB });
              })["catch"](callback);
            });
            AbstractPouchDB.prototype.destroy = adapterFun('destroy', function (opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              var self = this;
              var usePrefix = 'use_prefix' in self ? self.use_prefix : true;
              function destroyDb() {
                self._destroy(opts, function (err, resp) {
                  if (err) {
                    return callback(err);
                  }
                  self._destroyed = true;
                  self.emit('destroyed');
                  callback(null, resp || { 'ok': true });
                });
              }
              if (isRemote(self)) {
                return destroyDb();
              }
              self.get('_local/_pouch_dependentDbs', function (err, localDoc) {
                if (err) {
                  if (err.status !== 404) {
                    return callback(err);
                  } else {
                    return destroyDb();
                  }
                }
                var dependentDbs = localDoc.dependentDbs;
                var PouchDB = self.constructor;
                var deletedMap = Object.keys(dependentDbs).map(function (name) {
                  var trueName = usePrefix ? name.replace(new RegExp('^' + PouchDB.prefix), '') : name;
                  return new PouchDB(trueName, self.__opts).destroy();
                });
                PouchPromise$1.all(deletedMap).then(destroyDb, callback);
              });
            });
            function TaskQueue$1() {
              this.isReady = false;
              this.failed = false;
              this.queue = [];
            }
            TaskQueue$1.prototype.execute = function () {
              var fun;
              if (this.failed) {
                while (fun = this.queue.shift()) {
                  fun(this.failed);
                }
              } else {
                while (fun = this.queue.shift()) {
                  fun();
                }
              }
            };
            TaskQueue$1.prototype.fail = function (err) {
              this.failed = err;
              this.execute();
            };
            TaskQueue$1.prototype.ready = function (db) {
              this.isReady = true;
              this.db = db;
              this.execute();
            };
            TaskQueue$1.prototype.addTask = function (fun) {
              this.queue.push(fun);
              if (this.failed) {
                this.execute();
              }
            };
            function parseAdapter(name, opts) {
              var match = name.match(/([a-z-]*):\/\/(.*)/);
              if (match) {
                return {
                  name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],
                  adapter: match[1]
                };
              }
              var adapters = PouchDB$5.adapters;
              var preferredAdapters = PouchDB$5.preferredAdapters;
              var prefix = PouchDB$5.prefix;
              var adapterName = opts.adapter;
              if (!adapterName) {
                for (var i = 0; i < preferredAdapters.length; ++i) {
                  adapterName = preferredAdapters[i];
                  if (adapterName === 'idb' && 'websql' in adapters && hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {
                    guardedConsole('log', 'PouchDB is downgrading "' + name + '" to WebSQL to' + ' avoid data loss, because it was already opened with WebSQL.');
                    continue;
                  }
                  break;
                }
              }
              var adapter = adapters[adapterName];
              var usePrefix = adapter && 'use_prefix' in adapter ? adapter.use_prefix : true;
              return {
                name: usePrefix ? prefix + name : name,
                adapter: adapterName
              };
            }
            function prepareForDestruction(self) {
              function onDestroyed(from_constructor) {
                self.removeListener('closed', onClosed);
                if (!from_constructor) {
                  self.constructor.emit('destroyed', self.name);
                }
              }
              function onClosed() {
                self.removeListener('destroyed', onDestroyed);
                self.constructor.emit('unref', self);
              }
              self.once('destroyed', onDestroyed);
              self.once('closed', onClosed);
              self.constructor.emit('ref', self);
            }
            inherits(PouchDB$5, AbstractPouchDB);
            function PouchDB$5(name, opts) {
              if (!(this instanceof PouchDB$5)) {
                return new PouchDB$5(name, opts);
              }
              var self = this;
              opts = opts || {};
              if (name && typeof name === 'object') {
                opts = name;
                name = opts.name;
                delete opts.name;
              }
              this.__opts = opts = clone(opts);
              self.auto_compaction = opts.auto_compaction;
              self.prefix = PouchDB$5.prefix;
              if (typeof name !== 'string') {
                throw new Error('Missing/invalid DB name');
              }
              var prefixedName = (opts.prefix || '') + name;
              var backend = parseAdapter(prefixedName, opts);
              opts.name = backend.name;
              opts.adapter = opts.adapter || backend.adapter;
              self.name = name;
              self._adapter = opts.adapter;
              PouchDB$5.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);
              if (!PouchDB$5.adapters[opts.adapter] || !PouchDB$5.adapters[opts.adapter].valid()) {
                throw new Error('Invalid Adapter: ' + opts.adapter);
              }
              AbstractPouchDB.call(self);
              self.taskqueue = new TaskQueue$1();
              self.adapter = opts.adapter;
              PouchDB$5.adapters[opts.adapter].call(self, opts, function (err) {
                if (err) {
                  return self.taskqueue.fail(err);
                }
                prepareForDestruction(self);
                self.emit('created', self);
                PouchDB$5.emit('created', self.name);
                self.taskqueue.ready(self);
              });
            }
            PouchDB$5.adapters = {};
            PouchDB$5.preferredAdapters = [];
            PouchDB$5.prefix = '_pouch_';
            var eventEmitter = new events.EventEmitter();
            function setUpEventEmitter(Pouch) {
              Object.keys(events.EventEmitter.prototype).forEach(function (key) {
                if (typeof events.EventEmitter.prototype[key] === 'function') {
                  Pouch[key] = eventEmitter[key].bind(eventEmitter);
                }
              });
              var destructListeners = Pouch._destructionListeners = new ExportedMap();
              Pouch.on('ref', function onConstructorRef(db) {
                if (!destructListeners.has(db.name)) {
                  destructListeners.set(db.name, []);
                }
                destructListeners.get(db.name).push(db);
              });
              Pouch.on('unref', function onConstructorUnref(db) {
                if (!destructListeners.has(db.name)) {
                  return;
                }
                var dbList = destructListeners.get(db.name);
                var pos = dbList.indexOf(db);
                if (pos < 0) {
                  return;
                }
                dbList.splice(pos, 1);
                if (dbList.length > 1) {
                  destructListeners.set(db.name, dbList);
                } else {
                  destructListeners["delete"](db.name);
                }
              });
              Pouch.on('destroyed', function onConstructorDestroyed(name) {
                if (!destructListeners.has(name)) {
                  return;
                }
                var dbList = destructListeners.get(name);
                destructListeners["delete"](name);
                dbList.forEach(function (db) {
                  db.emit('destroyed', true);
                });
              });
            }
            setUpEventEmitter(PouchDB$5);
            PouchDB$5.adapter = function (id, obj, addToPreferredAdapters) {
              if (obj.valid()) {
                PouchDB$5.adapters[id] = obj;
                if (addToPreferredAdapters) {
                  PouchDB$5.preferredAdapters.push(id);
                }
              }
            };
            PouchDB$5.plugin = function (obj) {
              if (typeof obj === 'function') {
                obj(PouchDB$5);
              } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {
                throw new Error('Invalid plugin: got "' + obj + '", expected an object or a function');
              } else {
                Object.keys(obj).forEach(function (id) {
                  PouchDB$5.prototype[id] = obj[id];
                });
              }
              if (this.__defaults) {
                PouchDB$5.__defaults = $inject_Object_assign({}, this.__defaults);
              }
              return PouchDB$5;
            };
            PouchDB$5.defaults = function (defaultOpts) {
              function PouchAlt(name, opts) {
                if (!(this instanceof PouchAlt)) {
                  return new PouchAlt(name, opts);
                }
                opts = opts || {};
                if (name && typeof name === 'object') {
                  opts = name;
                  name = opts.name;
                  delete opts.name;
                }
                opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);
                PouchDB$5.call(this, name, opts);
              }
              inherits(PouchAlt, PouchDB$5);
              PouchAlt.preferredAdapters = PouchDB$5.preferredAdapters.slice();
              Object.keys(PouchDB$5).forEach(function (key) {
                if (!(key in PouchAlt)) {
                  PouchAlt[key] = PouchDB$5[key];
                }
              });
              PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);
              return PouchAlt;
            };
            var version = "6.3.2";
            function debugPouch(PouchDB) {
              PouchDB.debug = debug;
              var logs = {};
              PouchDB.on('debug', function (args) {
                var logId = args[0];
                var logArgs = args.slice(1);
                if (!logs[logId]) {
                  logs[logId] = debug('pouchdb:' + logId);
                }
                logs[logId].apply(null, logArgs);
              });
            }
            function getFieldFromDoc(doc, parsedField) {
              var value = doc;
              for (var i = 0, len = parsedField.length; i < len; i++) {
                var key = parsedField[i];
                value = value[key];
                if (!value) {
                  break;
                }
              }
              return value;
            }
            function compare$1(left, right) {
              return left < right ? -1 : left > right ? 1 : 0;
            }
            function parseField(fieldName) {
              var fields = [];
              var current = '';
              for (var i = 0, len = fieldName.length; i < len; i++) {
                var ch = fieldName[i];
                if (ch === '.') {
                  if (i > 0 && fieldName[i - 1] === '\\') {
                    current = current.substring(0, current.length - 1) + '.';
                  } else {
                    fields.push(current);
                    current = '';
                  }
                } else {
                  current += ch;
                }
              }
              fields.push(current);
              return fields;
            }
            var combinationFields = ['$or', '$nor', '$not'];
            function isCombinationalField(field) {
              return combinationFields.indexOf(field) > -1;
            }
            function getKey(obj) {
              return Object.keys(obj)[0];
            }
            function getValue(obj) {
              return obj[getKey(obj)];
            }
            function mergeAndedSelectors(selectors) {
              var res = {};
              selectors.forEach(function (selector) {
                Object.keys(selector).forEach(function (field) {
                  var matcher = selector[field];
                  if (typeof matcher !== 'object') {
                    matcher = { $eq: matcher };
                  }
                  if (isCombinationalField(field)) {
                    if (matcher instanceof Array) {
                      res[field] = matcher.map(function (m) {
                        return mergeAndedSelectors([m]);
                      });
                    } else {
                      res[field] = mergeAndedSelectors([matcher]);
                    }
                  } else {
                    var fieldMatchers = res[field] = res[field] || {};
                    Object.keys(matcher).forEach(function (operator) {
                      var value = matcher[operator];
                      if (operator === '$gt' || operator === '$gte') {
                        return mergeGtGte(operator, value, fieldMatchers);
                      } else if (operator === '$lt' || operator === '$lte') {
                        return mergeLtLte(operator, value, fieldMatchers);
                      } else if (operator === '$ne') {
                        return mergeNe(value, fieldMatchers);
                      } else if (operator === '$eq') {
                        return mergeEq(value, fieldMatchers);
                      }
                      fieldMatchers[operator] = value;
                    });
                  }
                });
              });
              return res;
            }
            function mergeGtGte(operator, value, fieldMatchers) {
              if (typeof fieldMatchers.$eq !== 'undefined') {
                return;
              }
              if (typeof fieldMatchers.$gte !== 'undefined') {
                if (operator === '$gte') {
                  if (value > fieldMatchers.$gte) {
                    fieldMatchers.$gte = value;
                  }
                } else {
                  if (value >= fieldMatchers.$gte) {
                    delete fieldMatchers.$gte;
                    fieldMatchers.$gt = value;
                  }
                }
              } else if (typeof fieldMatchers.$gt !== 'undefined') {
                if (operator === '$gte') {
                  if (value > fieldMatchers.$gt) {
                    delete fieldMatchers.$gt;
                    fieldMatchers.$gte = value;
                  }
                } else {
                  if (value > fieldMatchers.$gt) {
                    fieldMatchers.$gt = value;
                  }
                }
              } else {
                fieldMatchers[operator] = value;
              }
            }
            function mergeLtLte(operator, value, fieldMatchers) {
              if (typeof fieldMatchers.$eq !== 'undefined') {
                return;
              }
              if (typeof fieldMatchers.$lte !== 'undefined') {
                if (operator === '$lte') {
                  if (value < fieldMatchers.$lte) {
                    fieldMatchers.$lte = value;
                  }
                } else {
                  if (value <= fieldMatchers.$lte) {
                    delete fieldMatchers.$lte;
                    fieldMatchers.$lt = value;
                  }
                }
              } else if (typeof fieldMatchers.$lt !== 'undefined') {
                if (operator === '$lte') {
                  if (value < fieldMatchers.$lt) {
                    delete fieldMatchers.$lt;
                    fieldMatchers.$lte = value;
                  }
                } else {
                  if (value < fieldMatchers.$lt) {
                    fieldMatchers.$lt = value;
                  }
                }
              } else {
                fieldMatchers[operator] = value;
              }
            }
            function mergeNe(value, fieldMatchers) {
              if ('$ne' in fieldMatchers) {
                fieldMatchers.$ne.push(value);
              } else {
                fieldMatchers.$ne = [value];
              }
            }
            function mergeEq(value, fieldMatchers) {
              delete fieldMatchers.$gt;
              delete fieldMatchers.$gte;
              delete fieldMatchers.$lt;
              delete fieldMatchers.$lte;
              delete fieldMatchers.$ne;
              fieldMatchers.$eq = value;
            }
            function massageSelector(input) {
              var result = clone(input);
              var wasAnded = false;
              if ('$and' in result) {
                result = mergeAndedSelectors(result['$and']);
                wasAnded = true;
              }
              ['$or', '$nor'].forEach(function (orOrNor) {
                if (orOrNor in result) {
                  result[orOrNor].forEach(function (subSelector) {
                    var fields = Object.keys(subSelector);
                    for (var i = 0; i < fields.length; i++) {
                      var field = fields[i];
                      var matcher = subSelector[field];
                      if (typeof matcher !== 'object' || matcher === null) {
                        subSelector[field] = { $eq: matcher };
                      }
                    }
                  });
                }
              });
              if ('$not' in result) {
                result['$not'] = mergeAndedSelectors([result['$not']]);
              }
              var fields = Object.keys(result);
              for (var i = 0; i < fields.length; i++) {
                var field = fields[i];
                var matcher = result[field];
                if (typeof matcher !== 'object' || matcher === null) {
                  matcher = { $eq: matcher };
                } else if ('$ne' in matcher && !wasAnded) {
                  matcher.$ne = [matcher.$ne];
                }
                result[field] = matcher;
              }
              return result;
            }
            function pad(str, padWith, upToLength) {
              var padding = '';
              var targetLength = upToLength - str.length;
              while (padding.length < targetLength) {
                padding += padWith;
              }
              return padding;
            }
            function padLeft(str, padWith, upToLength) {
              var padding = pad(str, padWith, upToLength);
              return padding + str;
            }
            var MIN_MAGNITUDE = -324;
            var MAGNITUDE_DIGITS = 3;
            var SEP = '';
            function collate(a, b) {
              if (a === b) {
                return 0;
              }
              a = normalizeKey(a);
              b = normalizeKey(b);
              var ai = collationIndex(a);
              var bi = collationIndex(b);
              if (ai - bi !== 0) {
                return ai - bi;
              }
              switch (typeof a) {
                case 'number':
                  return a - b;
                case 'boolean':
                  return a < b ? -1 : 1;
                case 'string':
                  return stringCollate(a, b);
              }
              return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);
            }
            function normalizeKey(key) {
              switch (typeof key) {
                case 'undefined':
                  return null;
                case 'number':
                  if (key === Infinity || key === -Infinity || isNaN(key)) {
                    return null;
                  }
                  return key;
                case 'object':
                  var origKey = key;
                  if (Array.isArray(key)) {
                    var len = key.length;
                    key = new Array(len);
                    for (var i = 0; i < len; i++) {
                      key[i] = normalizeKey(origKey[i]);
                    }
                  } else if (key instanceof Date) {
                    return key.toJSON();
                  } else if (key !== null) {
                    key = {};
                    for (var k in origKey) {
                      if (origKey.hasOwnProperty(k)) {
                        var val = origKey[k];
                        if (typeof val !== 'undefined') {
                          key[k] = normalizeKey(val);
                        }
                      }
                    }
                  }
              }
              return key;
            }
            function indexify(key) {
              if (key !== null) {
                switch (typeof key) {
                  case 'boolean':
                    return key ? 1 : 0;
                  case 'number':
                    return numToIndexableString(key);
                  case 'string':
                    return key.replace(/\u0002/g, '\u0002\u0002').replace(/\u0001/g, '\u0001\u0002').replace(/\u0000/g, '\u0001\u0001');
                  case 'object':
                    var isArray = Array.isArray(key);
                    var arr = isArray ? key : Object.keys(key);
                    var i = -1;
                    var len = arr.length;
                    var result = '';
                    if (isArray) {
                      while (++i < len) {
                        result += toIndexableString(arr[i]);
                      }
                    } else {
                      while (++i < len) {
                        var objKey = arr[i];
                        result += toIndexableString(objKey) + toIndexableString(key[objKey]);
                      }
                    }
                    return result;
                }
              }
              return '';
            }
            function toIndexableString(key) {
              var zero = '\u0000';
              key = normalizeKey(key);
              return collationIndex(key) + SEP + indexify(key) + zero;
            }
            function parseNumber(str, i) {
              var originalIdx = i;
              var num;
              var zero = str[i] === '1';
              if (zero) {
                num = 0;
                i++;
              } else {
                var neg = str[i] === '0';
                i++;
                var numAsString = '';
                var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);
                var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;
                if (neg) {
                  magnitude = -magnitude;
                }
                i += MAGNITUDE_DIGITS;
                while (true) {
                  var ch = str[i];
                  if (ch === '\u0000') {
                    break;
                  } else {
                    numAsString += ch;
                  }
                  i++;
                }
                numAsString = numAsString.split('.');
                if (numAsString.length === 1) {
                  num = parseInt(numAsString, 10);
                } else {
                  num = parseFloat(numAsString[0] + '.' + numAsString[1]);
                }
                if (neg) {
                  num = num - 10;
                }
                if (magnitude !== 0) {
                  num = parseFloat(num + 'e' + magnitude);
                }
              }
              return {
                num: num,
                length: i - originalIdx
              };
            }
            function pop(stack, metaStack) {
              var obj = stack.pop();
              if (metaStack.length) {
                var lastMetaElement = metaStack[metaStack.length - 1];
                if (obj === lastMetaElement.element) {
                  metaStack.pop();
                  lastMetaElement = metaStack[metaStack.length - 1];
                }
                var element = lastMetaElement.element;
                var lastElementIndex = lastMetaElement.index;
                if (Array.isArray(element)) {
                  element.push(obj);
                } else if (lastElementIndex === stack.length - 2) {
                  var key = stack.pop();
                  element[key] = obj;
                } else {
                  stack.push(obj);
                }
              }
            }
            function parseIndexableString(str) {
              var stack = [];
              var metaStack = [];
              var i = 0;
              while (true) {
                var collationIndex = str[i++];
                if (collationIndex === '\u0000') {
                  if (stack.length === 1) {
                    return stack.pop();
                  } else {
                    pop(stack, metaStack);
                    continue;
                  }
                }
                switch (collationIndex) {
                  case '1':
                    stack.push(null);
                    break;
                  case '2':
                    stack.push(str[i] === '1');
                    i++;
                    break;
                  case '3':
                    var parsedNum = parseNumber(str, i);
                    stack.push(parsedNum.num);
                    i += parsedNum.length;
                    break;
                  case '4':
                    var parsedStr = '';
                    while (true) {
                      var ch = str[i];
                      if (ch === '\u0000') {
                        break;
                      }
                      parsedStr += ch;
                      i++;
                    }
                    parsedStr = parsedStr.replace(/\u0001\u0001/g, '\u0000').replace(/\u0001\u0002/g, '\u0001').replace(/\u0002\u0002/g, '\u0002');
                    stack.push(parsedStr);
                    break;
                  case '5':
                    var arrayElement = {
                      element: [],
                      index: stack.length
                    };
                    stack.push(arrayElement.element);
                    metaStack.push(arrayElement);
                    break;
                  case '6':
                    var objElement = {
                      element: {},
                      index: stack.length
                    };
                    stack.push(objElement.element);
                    metaStack.push(objElement);
                    break;
                  default:
                    throw new Error('bad collationIndex or unexpectedly reached end of input: ' + collationIndex);
                }
              }
            }
            function arrayCollate(a, b) {
              var len = Math.min(a.length, b.length);
              for (var i = 0; i < len; i++) {
                var sort = collate(a[i], b[i]);
                if (sort !== 0) {
                  return sort;
                }
              }
              return a.length === b.length ? 0 : a.length > b.length ? 1 : -1;
            }
            function stringCollate(a, b) {
              return a === b ? 0 : a > b ? 1 : -1;
            }
            function objectCollate(a, b) {
              var ak = Object.keys(a),
                  bk = Object.keys(b);
              var len = Math.min(ak.length, bk.length);
              for (var i = 0; i < len; i++) {
                var sort = collate(ak[i], bk[i]);
                if (sort !== 0) {
                  return sort;
                }
                sort = collate(a[ak[i]], b[bk[i]]);
                if (sort !== 0) {
                  return sort;
                }
              }
              return ak.length === bk.length ? 0 : ak.length > bk.length ? 1 : -1;
            }
            function collationIndex(x) {
              var id = ['boolean', 'number', 'string', 'object'];
              var idx = id.indexOf(typeof x);
              if (~idx) {
                if (x === null) {
                  return 1;
                }
                if (Array.isArray(x)) {
                  return 5;
                }
                return idx < 3 ? idx + 2 : idx + 3;
              }
              if (Array.isArray(x)) {
                return 5;
              }
            }
            function numToIndexableString(num) {
              if (num === 0) {
                return '1';
              }
              var expFormat = num.toExponential().split(/e\+?/);
              var magnitude = parseInt(expFormat[1], 10);
              var neg = num < 0;
              var result = neg ? '0' : '2';
              var magForComparison = (neg ? -magnitude : magnitude) - MIN_MAGNITUDE;
              var magString = padLeft(magForComparison.toString(), '0', MAGNITUDE_DIGITS);
              result += SEP + magString;
              var factor = Math.abs(parseFloat(expFormat[0]));
              if (neg) {
                factor = 10 - factor;
              }
              var factorStr = factor.toFixed(20);
              factorStr = factorStr.replace(/\.?0+$/, '');
              result += SEP + factorStr;
              return result;
            }
            function createFieldSorter(sort) {
              function getFieldValuesAsArray(doc) {
                return sort.map(function (sorting) {
                  var fieldName = getKey(sorting);
                  var parsedField = parseField(fieldName);
                  var docFieldValue = getFieldFromDoc(doc, parsedField);
                  return docFieldValue;
                });
              }
              return function (aRow, bRow) {
                var aFieldValues = getFieldValuesAsArray(aRow.doc);
                var bFieldValues = getFieldValuesAsArray(bRow.doc);
                var collation = collate(aFieldValues, bFieldValues);
                if (collation !== 0) {
                  return collation;
                }
                return compare$1(aRow.doc._id, bRow.doc._id);
              };
            }
            function filterInMemoryFields(rows, requestDef, inMemoryFields) {
              rows = rows.filter(function (row) {
                return rowFilter(row.doc, requestDef.selector, inMemoryFields);
              });
              if (requestDef.sort) {
                var fieldSorter = createFieldSorter(requestDef.sort);
                rows = rows.sort(fieldSorter);
                if (typeof requestDef.sort[0] !== 'string' && getValue(requestDef.sort[0]) === 'desc') {
                  rows = rows.reverse();
                }
              }
              if ('limit' in requestDef || 'skip' in requestDef) {
                var skip = requestDef.skip || 0;
                var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;
                rows = rows.slice(skip, limit);
              }
              return rows;
            }
            function rowFilter(doc, selector, inMemoryFields) {
              return inMemoryFields.every(function (field) {
                var matcher = selector[field];
                var parsedField = parseField(field);
                var docFieldValue = getFieldFromDoc(doc, parsedField);
                if (isCombinationalField(field)) {
                  return matchCominationalSelector(field, matcher, doc);
                }
                return matchSelector(matcher, doc, parsedField, docFieldValue);
              });
            }
            function matchSelector(matcher, doc, parsedField, docFieldValue) {
              if (!matcher) {
                return true;
              }
              return Object.keys(matcher).every(function (userOperator) {
                var userValue = matcher[userOperator];
                return match(userOperator, doc, userValue, parsedField, docFieldValue);
              });
            }
            function matchCominationalSelector(field, matcher, doc) {
              if (field === '$or') {
                return matcher.some(function (orMatchers) {
                  return rowFilter(doc, orMatchers, Object.keys(orMatchers));
                });
              }
              if (field === '$not') {
                return !rowFilter(doc, matcher, Object.keys(matcher));
              }
              return !matcher.find(function (orMatchers) {
                return rowFilter(doc, orMatchers, Object.keys(orMatchers));
              });
            }
            function match(userOperator, doc, userValue, parsedField, docFieldValue) {
              if (!matchers[userOperator]) {
                throw new Error('unknown operator "' + userOperator + '" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' + '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');
              }
              return matchers[userOperator](doc, userValue, parsedField, docFieldValue);
            }
            function fieldExists(docFieldValue) {
              return typeof docFieldValue !== 'undefined' && docFieldValue !== null;
            }
            function fieldIsNotUndefined(docFieldValue) {
              return typeof docFieldValue !== 'undefined';
            }
            function modField(docFieldValue, userValue) {
              var divisor = userValue[0];
              var mod = userValue[1];
              if (divisor === 0) {
                throw new Error('Bad divisor, cannot divide by zero');
              }
              if (parseInt(divisor, 10) !== divisor) {
                throw new Error('Divisor is not an integer');
              }
              if (parseInt(mod, 10) !== mod) {
                throw new Error('Modulus is not an integer');
              }
              if (parseInt(docFieldValue, 10) !== docFieldValue) {
                return false;
              }
              return docFieldValue % divisor === mod;
            }
            function arrayContainsValue(docFieldValue, userValue) {
              return userValue.some(function (val) {
                if (docFieldValue instanceof Array) {
                  return docFieldValue.indexOf(val) > -1;
                }
                return docFieldValue === val;
              });
            }
            function arrayContainsAllValues(docFieldValue, userValue) {
              return userValue.every(function (val) {
                return docFieldValue.indexOf(val) > -1;
              });
            }
            function arraySize(docFieldValue, userValue) {
              return docFieldValue.length === userValue;
            }
            function regexMatch(docFieldValue, userValue) {
              var re = new RegExp(userValue);
              return re.test(docFieldValue);
            }
            function typeMatch(docFieldValue, userValue) {
              switch (userValue) {
                case 'null':
                  return docFieldValue === null;
                case 'boolean':
                  return typeof docFieldValue === 'boolean';
                case 'number':
                  return typeof docFieldValue === 'number';
                case 'string':
                  return typeof docFieldValue === 'string';
                case 'array':
                  return docFieldValue instanceof Array;
                case 'object':
                  return {}.toString.call(docFieldValue) === '[object Object]';
              }
              throw new Error(userValue + ' not supported as a type.' + 'Please use one of object, string, array, number, boolean or null.');
            }
            var matchers = {
              '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {
                if (!Array.isArray(docFieldValue)) {
                  return false;
                }
                if (docFieldValue.length === 0) {
                  return false;
                }
                if (typeof docFieldValue[0] === 'object') {
                  return docFieldValue.some(function (val) {
                    return rowFilter(val, userValue, Object.keys(userValue));
                  });
                }
                return docFieldValue.some(function (val) {
                  return matchSelector(userValue, doc, parsedField, val);
                });
              },
              '$allMatch': function (doc, userValue, parsedField, docFieldValue) {
                if (!Array.isArray(docFieldValue)) {
                  return false;
                }
                if (docFieldValue.length === 0) {
                  return false;
                }
                if (typeof docFieldValue[0] === 'object') {
                  return docFieldValue.every(function (val) {
                    return rowFilter(val, userValue, Object.keys(userValue));
                  });
                }
                return docFieldValue.every(function (val) {
                  return matchSelector(userValue, doc, parsedField, val);
                });
              },
              '$eq': function (doc, userValue, parsedField, docFieldValue) {
                return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;
              },
              '$gte': function (doc, userValue, parsedField, docFieldValue) {
                return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;
              },
              '$gt': function (doc, userValue, parsedField, docFieldValue) {
                return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;
              },
              '$lte': function (doc, userValue, parsedField, docFieldValue) {
                return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;
              },
              '$lt': function (doc, userValue, parsedField, docFieldValue) {
                return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;
              },
              '$exists': function (doc, userValue, parsedField, docFieldValue) {
                if (userValue) {
                  return fieldIsNotUndefined(docFieldValue);
                }
                return !fieldIsNotUndefined(docFieldValue);
              },
              '$mod': function (doc, userValue, parsedField, docFieldValue) {
                return fieldExists(docFieldValue) && modField(docFieldValue, userValue);
              },
              '$ne': function (doc, userValue, parsedField, docFieldValue) {
                return userValue.every(function (neValue) {
                  return collate(docFieldValue, neValue) !== 0;
                });
              },
              '$in': function (doc, userValue, parsedField, docFieldValue) {
                return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);
              },
              '$nin': function (doc, userValue, parsedField, docFieldValue) {
                return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);
              },
              '$size': function (doc, userValue, parsedField, docFieldValue) {
                return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);
              },
              '$all': function (doc, userValue, parsedField, docFieldValue) {
                return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);
              },
              '$regex': function (doc, userValue, parsedField, docFieldValue) {
                return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);
              },
              '$type': function (doc, userValue, parsedField, docFieldValue) {
                return typeMatch(docFieldValue, userValue);
              }
            };
            function matchesSelector(doc, selector) {
              if (typeof selector !== 'object') {
                throw new Error('Selector error: expected a JSON object');
              }
              selector = massageSelector(selector);
              var row = { 'doc': doc };
              var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));
              return rowsMatched && rowsMatched.length === 1;
            }
            function evalFilter(input) {
              return scopeEval('"use strict";\nreturn ' + input + ';', {});
            }
            function evalView(input) {
              var code = ['return function(doc) {', '  "use strict";', '  var emitted = false;', '  var emit = function (a, b) {', '    emitted = true;', '  };', '  var view = ' + input + ';', '  view(doc);', '  if (emitted) {', '    return true;', '  }', '};'].join('\n');
              return scopeEval(code, {});
            }
            function validate(opts, callback) {
              if (opts.selector) {
                if (opts.filter && opts.filter !== '_selector') {
                  var filterName = typeof opts.filter === 'string' ? opts.filter : 'function';
                  return callback(new Error('selector invalid for filter "' + filterName + '"'));
                }
              }
              callback();
            }
            function normalize(opts) {
              if (opts.view && !opts.filter) {
                opts.filter = '_view';
              }
              if (opts.selector && !opts.filter) {
                opts.filter = '_selector';
              }
              if (opts.filter && typeof opts.filter === 'string') {
                if (opts.filter === '_view') {
                  opts.view = normalizeDesignDocFunctionName(opts.view);
                } else {
                  opts.filter = normalizeDesignDocFunctionName(opts.filter);
                }
              }
            }
            function shouldFilter(changesHandler, opts) {
              return opts.filter && typeof opts.filter === 'string' && !opts.doc_ids && !isRemote(changesHandler.db);
            }
            function filter(changesHandler, opts) {
              var callback = opts.complete;
              if (opts.filter === '_view') {
                if (!opts.view || typeof opts.view !== 'string') {
                  var err = createError(BAD_REQUEST, '`view` filter parameter not found or invalid.');
                  return callback(err);
                }
                var viewName = parseDesignDocFunctionName(opts.view);
                changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {
                  if (changesHandler.isCancelled) {
                    return callback(null, { status: 'cancelled' });
                  }
                  if (err) {
                    return callback(generateErrorFromResponse(err));
                  }
                  var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] && ddoc.views[viewName[1]].map;
                  if (!mapFun) {
                    return callback(createError(MISSING_DOC, ddoc.views ? 'missing json key: ' + viewName[1] : 'missing json key: views'));
                  }
                  opts.filter = evalView(mapFun);
                  changesHandler.doChanges(opts);
                });
              } else if (opts.selector) {
                opts.filter = function (doc) {
                  return matchesSelector(doc, opts.selector);
                };
                changesHandler.doChanges(opts);
              } else {
                var filterName = parseDesignDocFunctionName(opts.filter);
                changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {
                  if (changesHandler.isCancelled) {
                    return callback(null, { status: 'cancelled' });
                  }
                  if (err) {
                    return callback(generateErrorFromResponse(err));
                  }
                  var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];
                  if (!filterFun) {
                    return callback(createError(MISSING_DOC, ddoc && ddoc.filters ? 'missing json key: ' + filterName[1] : 'missing json key: filters'));
                  }
                  opts.filter = evalFilter(filterFun);
                  changesHandler.doChanges(opts);
                });
              }
            }
            function applyChangesFilterPlugin(PouchDB) {
              PouchDB._changesFilterPlugin = {
                validate: validate,
                normalize: normalize,
                shouldFilter: shouldFilter,
                filter: filter
              };
            }
            PouchDB$5.plugin(debugPouch);
            PouchDB$5.plugin(applyChangesFilterPlugin);
            PouchDB$5.version = version;
            function toObject(array) {
              return array.reduce(function (obj, item) {
                obj[item] = true;
                return obj;
              }, {});
            }
            var reservedWords = toObject(['_id', '_rev', '_attachments', '_deleted', '_revisions', '_revs_info', '_conflicts', '_deleted_conflicts', '_local_seq', '_rev_tree', '_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats', '_removed']);
            var dataWords = toObject(['_attachments', '_replication_id', '_replication_state', '_replication_state_time', '_replication_state_reason', '_replication_stats']);
            function parseRevisionInfo(rev$$1) {
              if (!/^\d+-./.test(rev$$1)) {
                return createError(INVALID_REV);
              }
              var idx = rev$$1.indexOf('-');
              var left = rev$$1.substring(0, idx);
              var right = rev$$1.substring(idx + 1);
              return {
                prefix: parseInt(left, 10),
                id: right
              };
            }
            function makeRevTreeFromRevisions(revisions, opts) {
              var pos = revisions.start - revisions.ids.length + 1;
              var revisionIds = revisions.ids;
              var ids = [revisionIds[0], opts, []];
              for (var i = 1, len = revisionIds.length; i < len; i++) {
                ids = [revisionIds[i], { status: 'missing' }, [ids]];
              }
              return [{
                pos: pos,
                ids: ids
              }];
            }
            function parseDoc(doc, newEdits) {
              var nRevNum;
              var newRevId;
              var revInfo;
              var opts = { status: 'available' };
              if (doc._deleted) {
                opts.deleted = true;
              }
              if (newEdits) {
                if (!doc._id) {
                  doc._id = uuid();
                }
                newRevId = rev();
                if (doc._rev) {
                  revInfo = parseRevisionInfo(doc._rev);
                  if (revInfo.error) {
                    return revInfo;
                  }
                  doc._rev_tree = [{
                    pos: revInfo.prefix,
                    ids: [revInfo.id, { status: 'missing' }, [[newRevId, opts, []]]]
                  }];
                  nRevNum = revInfo.prefix + 1;
                } else {
                  doc._rev_tree = [{
                    pos: 1,
                    ids: [newRevId, opts, []]
                  }];
                  nRevNum = 1;
                }
              } else {
                if (doc._revisions) {
                  doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);
                  nRevNum = doc._revisions.start;
                  newRevId = doc._revisions.ids[0];
                }
                if (!doc._rev_tree) {
                  revInfo = parseRevisionInfo(doc._rev);
                  if (revInfo.error) {
                    return revInfo;
                  }
                  nRevNum = revInfo.prefix;
                  newRevId = revInfo.id;
                  doc._rev_tree = [{
                    pos: nRevNum,
                    ids: [newRevId, opts, []]
                  }];
                }
              }
              invalidIdError(doc._id);
              doc._rev = nRevNum + '-' + newRevId;
              var result = {
                metadata: {},
                data: {}
              };
              for (var key in doc) {
                if (Object.prototype.hasOwnProperty.call(doc, key)) {
                  var specialKey = key[0] === '_';
                  if (specialKey && !reservedWords[key]) {
                    var error = createError(DOC_VALIDATION, key);
                    error.message = DOC_VALIDATION.message + ': ' + key;
                    throw error;
                  } else if (specialKey && !dataWords[key]) {
                    result.metadata[key.slice(1)] = doc[key];
                  } else {
                    result.data[key] = doc[key];
                  }
                }
              }
              return result;
            }
            var thisAtob = function (str) {
              return atob(str);
            };
            var thisBtoa = function (str) {
              return btoa(str);
            };
            function createBlob(parts, properties) {
              parts = parts || [];
              properties = properties || {};
              try {
                return new Blob(parts, properties);
              } catch (e) {
                if (e.name !== "TypeError") {
                  throw e;
                }
                var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;
                var builder = new Builder();
                for (var i = 0; i < parts.length; i += 1) {
                  builder.append(parts[i]);
                }
                return builder.getBlob(properties.type);
              }
            }
            function binaryStringToArrayBuffer(bin) {
              var length = bin.length;
              var buf = new ArrayBuffer(length);
              var arr = new Uint8Array(buf);
              for (var i = 0; i < length; i++) {
                arr[i] = bin.charCodeAt(i);
              }
              return buf;
            }
            function binStringToBluffer(binString, type) {
              return createBlob([binaryStringToArrayBuffer(binString)], { type: type });
            }
            function b64ToBluffer(b64, type) {
              return binStringToBluffer(thisAtob(b64), type);
            }
            function arrayBufferToBinaryString(buffer) {
              var binary = '';
              var bytes = new Uint8Array(buffer);
              var length = bytes.byteLength;
              for (var i = 0; i < length; i++) {
                binary += String.fromCharCode(bytes[i]);
              }
              return binary;
            }
            function readAsBinaryString(blob, callback) {
              if (typeof FileReader === 'undefined') {
                return callback(arrayBufferToBinaryString(new FileReaderSync().readAsArrayBuffer(blob)));
              }
              var reader = new FileReader();
              var hasBinaryString = typeof reader.readAsBinaryString === 'function';
              reader.onloadend = function (e) {
                var result = e.target.result || '';
                if (hasBinaryString) {
                  return callback(result);
                }
                callback(arrayBufferToBinaryString(result));
              };
              if (hasBinaryString) {
                reader.readAsBinaryString(blob);
              } else {
                reader.readAsArrayBuffer(blob);
              }
            }
            function blobToBinaryString(blobOrBuffer, callback) {
              readAsBinaryString(blobOrBuffer, function (bin) {
                callback(bin);
              });
            }
            function blobToBase64(blobOrBuffer, callback) {
              blobToBinaryString(blobOrBuffer, function (base64) {
                callback(thisBtoa(base64));
              });
            }
            function readAsArrayBuffer(blob, callback) {
              if (typeof FileReader === 'undefined') {
                return callback(new FileReaderSync().readAsArrayBuffer(blob));
              }
              var reader = new FileReader();
              reader.onloadend = function (e) {
                var result = e.target.result || new ArrayBuffer(0);
                callback(result);
              };
              reader.readAsArrayBuffer(blob);
            }
            var setImmediateShim = global.setImmediate || global.setTimeout;
            var MD5_CHUNK_SIZE = 32768;
            function rawToBase64(raw) {
              return thisBtoa(raw);
            }
            function sliceBlob(blob, start, end) {
              if (blob.webkitSlice) {
                return blob.webkitSlice(start, end);
              }
              return blob.slice(start, end);
            }
            function appendBlob(buffer, blob, start, end, callback) {
              if (start > 0 || end < blob.size) {
                blob = sliceBlob(blob, start, end);
              }
              readAsArrayBuffer(blob, function (arrayBuffer) {
                buffer.append(arrayBuffer);
                callback();
              });
            }
            function appendString(buffer, string, start, end, callback) {
              if (start > 0 || end < string.length) {
                string = string.substring(start, end);
              }
              buffer.appendBinary(string);
              callback();
            }
            function binaryMd5(data, callback) {
              var inputIsString = typeof data === 'string';
              var len = inputIsString ? data.length : data.size;
              var chunkSize = Math.min(MD5_CHUNK_SIZE, len);
              var chunks = Math.ceil(len / chunkSize);
              var currentChunk = 0;
              var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();
              var append = inputIsString ? appendString : appendBlob;
              function next() {
                setImmediateShim(loadNextChunk);
              }
              function done() {
                var raw = buffer.end(true);
                var base64 = rawToBase64(raw);
                callback(base64);
                buffer.destroy();
              }
              function loadNextChunk() {
                var start = currentChunk * chunkSize;
                var end = start + chunkSize;
                currentChunk++;
                if (currentChunk < chunks) {
                  append(buffer, data, start, end, next);
                } else {
                  append(buffer, data, start, end, done);
                }
              }
              loadNextChunk();
            }
            function stringMd5(string) {
              return Md5.hash(string);
            }
            function parseBase64(data) {
              try {
                return thisAtob(data);
              } catch (e) {
                var err = createError(BAD_ARG, 'Attachment is not a valid base64 string');
                return { error: err };
              }
            }
            function preprocessString(att, blobType, callback) {
              var asBinary = parseBase64(att.data);
              if (asBinary.error) {
                return callback(asBinary.error);
              }
              att.length = asBinary.length;
              if (blobType === 'blob') {
                att.data = binStringToBluffer(asBinary, att.content_type);
              } else if (blobType === 'base64') {
                att.data = thisBtoa(asBinary);
              } else {
                att.data = asBinary;
              }
              binaryMd5(asBinary, function (result) {
                att.digest = 'md5-' + result;
                callback();
              });
            }
            function preprocessBlob(att, blobType, callback) {
              binaryMd5(att.data, function (md5) {
                att.digest = 'md5-' + md5;
                att.length = att.data.size || att.data.length || 0;
                if (blobType === 'binary') {
                  blobToBinaryString(att.data, function (binString) {
                    att.data = binString;
                    callback();
                  });
                } else if (blobType === 'base64') {
                  blobToBase64(att.data, function (b64) {
                    att.data = b64;
                    callback();
                  });
                } else {
                  callback();
                }
              });
            }
            function preprocessAttachment(att, blobType, callback) {
              if (att.stub) {
                return callback();
              }
              if (typeof att.data === 'string') {
                preprocessString(att, blobType, callback);
              } else {
                preprocessBlob(att, blobType, callback);
              }
            }
            function preprocessAttachments(docInfos, blobType, callback) {
              if (!docInfos.length) {
                return callback();
              }
              var docv = 0;
              var overallErr;
              docInfos.forEach(function (docInfo) {
                var attachments = docInfo.data && docInfo.data._attachments ? Object.keys(docInfo.data._attachments) : [];
                var recv = 0;
                if (!attachments.length) {
                  return done();
                }
                function processedAttachment(err) {
                  overallErr = err;
                  recv++;
                  if (recv === attachments.length) {
                    done();
                  }
                }
                for (var key in docInfo.data._attachments) {
                  if (docInfo.data._attachments.hasOwnProperty(key)) {
                    preprocessAttachment(docInfo.data._attachments[key], blobType, processedAttachment);
                  }
                }
              });
              function done() {
                docv++;
                if (docInfos.length === docv) {
                  if (overallErr) {
                    callback(overallErr);
                  } else {
                    callback();
                  }
                }
              }
            }
            function updateDoc(revLimit, prev, docInfo, results, i, cb, writeDoc, newEdits) {
              if (revExists(prev.rev_tree, docInfo.metadata.rev)) {
                results[i] = docInfo;
                return cb();
              }
              var previousWinningRev = prev.winningRev || winningRev(prev);
              var previouslyDeleted = 'deleted' in prev ? prev.deleted : isDeleted(prev, previousWinningRev);
              var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted : isDeleted(docInfo.metadata);
              var isRoot = /^1-/.test(docInfo.metadata.rev);
              if (previouslyDeleted && !deleted && newEdits && isRoot) {
                var newDoc = docInfo.data;
                newDoc._rev = previousWinningRev;
                newDoc._id = docInfo.metadata.id;
                docInfo = parseDoc(newDoc, newEdits);
              }
              var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);
              var inConflict = newEdits && (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf' || !previouslyDeleted && merged.conflicts !== 'new_leaf' || previouslyDeleted && !deleted && merged.conflicts === 'new_branch');
              if (inConflict) {
                var err = createError(REV_CONFLICT);
                results[i] = err;
                return cb();
              }
              var newRev = docInfo.metadata.rev;
              docInfo.metadata.rev_tree = merged.tree;
              docInfo.stemmedRevs = merged.stemmedRevs || [];
              if (prev.rev_map) {
                docInfo.metadata.rev_map = prev.rev_map;
              }
              var winningRev$$1 = winningRev(docInfo.metadata);
              var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);
              var delta = previouslyDeleted === winningRevIsDeleted ? 0 : previouslyDeleted < winningRevIsDeleted ? -1 : 1;
              var newRevIsDeleted;
              if (newRev === winningRev$$1) {
                newRevIsDeleted = winningRevIsDeleted;
              } else {
                newRevIsDeleted = isDeleted(docInfo.metadata, newRev);
              }
              writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, true, delta, i, cb);
            }
            function rootIsMissing(docInfo) {
              return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';
            }
            function processDocs(revLimit, docInfos, api, fetchedDocs, tx, results, writeDoc, opts, overallCallback) {
              revLimit = revLimit || 1000;
              function insertDoc(docInfo, resultsIdx, callback) {
                var winningRev$$1 = winningRev(docInfo.metadata);
                var deleted = isDeleted(docInfo.metadata, winningRev$$1);
                if ('was_delete' in opts && deleted) {
                  results[resultsIdx] = createError(MISSING_DOC, 'deleted');
                  return callback();
                }
                var inConflict = newEdits && rootIsMissing(docInfo);
                if (inConflict) {
                  var err = createError(REV_CONFLICT);
                  results[resultsIdx] = err;
                  return callback();
                }
                var delta = deleted ? 0 : 1;
                writeDoc(docInfo, winningRev$$1, deleted, deleted, false, delta, resultsIdx, callback);
              }
              var newEdits = opts.new_edits;
              var idsToDocs = new ExportedMap();
              var docsDone = 0;
              var docsToDo = docInfos.length;
              function checkAllDocsDone() {
                if (++docsDone === docsToDo && overallCallback) {
                  overallCallback();
                }
              }
              docInfos.forEach(function (currentDoc, resultsIdx) {
                if (currentDoc._id && isLocalId(currentDoc._id)) {
                  var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';
                  api[fun](currentDoc, { ctx: tx }, function (err, res) {
                    results[resultsIdx] = err || res;
                    checkAllDocsDone();
                  });
                  return;
                }
                var id = currentDoc.metadata.id;
                if (idsToDocs.has(id)) {
                  docsToDo--;
                  idsToDocs.get(id).push([currentDoc, resultsIdx]);
                } else {
                  idsToDocs.set(id, [[currentDoc, resultsIdx]]);
                }
              });
              idsToDocs.forEach(function (docs, id) {
                var numDone = 0;
                function docWritten() {
                  if (++numDone < docs.length) {
                    nextDoc();
                  } else {
                    checkAllDocsDone();
                  }
                }
                function nextDoc() {
                  var value = docs[numDone];
                  var currentDoc = value[0];
                  var resultsIdx = value[1];
                  if (fetchedDocs.has(id)) {
                    updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results, resultsIdx, docWritten, writeDoc, newEdits);
                  } else {
                    var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);
                    currentDoc.metadata.rev_tree = merged.tree;
                    currentDoc.stemmedRevs = merged.stemmedRevs || [];
                    insertDoc(currentDoc, resultsIdx, docWritten);
                  }
                }
                nextDoc();
              });
            }
            var ADAPTER_VERSION = 5;
            var DOC_STORE = 'document-store';
            var BY_SEQ_STORE = 'by-sequence';
            var ATTACH_STORE = 'attach-store';
            var ATTACH_AND_SEQ_STORE = 'attach-seq-store';
            var META_STORE = 'meta-store';
            var LOCAL_STORE = 'local-store';
            var DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';
            function safeJsonParse(str) {
              try {
                return JSON.parse(str);
              } catch (e) {
                return vuvuzela.parse(str);
              }
            }
            function safeJsonStringify(json) {
              try {
                return JSON.stringify(json);
              } catch (e) {
                return vuvuzela.stringify(json);
              }
            }
            function idbError(callback) {
              return function (evt) {
                var message = 'unknown_error';
                if (evt.target && evt.target.error) {
                  message = evt.target.error.name || evt.target.error.message;
                }
                callback(createError(IDB_ERROR, message, evt.type));
              };
            }
            function encodeMetadata(metadata, winningRev, deleted) {
              return {
                data: safeJsonStringify(metadata),
                winningRev: winningRev,
                deletedOrLocal: deleted ? '1' : '0',
                seq: metadata.seq,
                id: metadata.id
              };
            }
            function decodeMetadata(storedObject) {
              if (!storedObject) {
                return null;
              }
              var metadata = safeJsonParse(storedObject.data);
              metadata.winningRev = storedObject.winningRev;
              metadata.deleted = storedObject.deletedOrLocal === '1';
              metadata.seq = storedObject.seq;
              return metadata;
            }
            function decodeDoc(doc) {
              if (!doc) {
                return doc;
              }
              var idx = doc._doc_id_rev.lastIndexOf(':');
              doc._id = doc._doc_id_rev.substring(0, idx - 1);
              doc._rev = doc._doc_id_rev.substring(idx + 1);
              delete doc._doc_id_rev;
              return doc;
            }
            function readBlobData(body, type, asBlob, callback) {
              if (asBlob) {
                if (!body) {
                  callback(createBlob([''], { type: type }));
                } else if (typeof body !== 'string') {
                  callback(body);
                } else {
                  callback(b64ToBluffer(body, type));
                }
              } else {
                if (!body) {
                  callback('');
                } else if (typeof body !== 'string') {
                  readAsBinaryString(body, function (binary) {
                    callback(thisBtoa(binary));
                  });
                } else {
                  callback(body);
                }
              }
            }
            function fetchAttachmentsIfNecessary(doc, opts, txn, cb) {
              var attachments = Object.keys(doc._attachments || {});
              if (!attachments.length) {
                return cb && cb();
              }
              var numDone = 0;
              function checkDone() {
                if (++numDone === attachments.length && cb) {
                  cb();
                }
              }
              function fetchAttachment(doc, att) {
                var attObj = doc._attachments[att];
                var digest = attObj.digest;
                var req = txn.objectStore(ATTACH_STORE).get(digest);
                req.onsuccess = function (e) {
                  attObj.body = e.target.result.body;
                  checkDone();
                };
              }
              attachments.forEach(function (att) {
                if (opts.attachments && opts.include_docs) {
                  fetchAttachment(doc, att);
                } else {
                  doc._attachments[att].stub = true;
                  checkDone();
                }
              });
            }
            function postProcessAttachments(results, asBlob) {
              return PouchPromise$1.all(results.map(function (row) {
                if (row.doc && row.doc._attachments) {
                  var attNames = Object.keys(row.doc._attachments);
                  return PouchPromise$1.all(attNames.map(function (att) {
                    var attObj = row.doc._attachments[att];
                    if (!('body' in attObj)) {
                      return;
                    }
                    var body = attObj.body;
                    var type = attObj.content_type;
                    return new PouchPromise$1(function (resolve) {
                      readBlobData(body, type, asBlob, function (data) {
                        row.doc._attachments[att] = $inject_Object_assign(pick(attObj, ['digest', 'content_type']), { data: data });
                        resolve();
                      });
                    });
                  }));
                }
              }));
            }
            function compactRevs(revs, docId, txn) {
              var possiblyOrphanedDigests = [];
              var seqStore = txn.objectStore(BY_SEQ_STORE);
              var attStore = txn.objectStore(ATTACH_STORE);
              var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);
              var count = revs.length;
              function checkDone() {
                count--;
                if (!count) {
                  deleteOrphanedAttachments();
                }
              }
              function deleteOrphanedAttachments() {
                if (!possiblyOrphanedDigests.length) {
                  return;
                }
                possiblyOrphanedDigests.forEach(function (digest) {
                  var countReq = attAndSeqStore.index('digestSeq').count(IDBKeyRange.bound(digest + '::', digest + '::\uffff', false, false));
                  countReq.onsuccess = function (e) {
                    var count = e.target.result;
                    if (!count) {
                      attStore["delete"](digest);
                    }
                  };
                });
              }
              revs.forEach(function (rev$$1) {
                var index = seqStore.index('_doc_id_rev');
                var key = docId + "::" + rev$$1;
                index.getKey(key).onsuccess = function (e) {
                  var seq = e.target.result;
                  if (typeof seq !== 'number') {
                    return checkDone();
                  }
                  seqStore["delete"](seq);
                  var cursor = attAndSeqStore.index('seq').openCursor(IDBKeyRange.only(seq));
                  cursor.onsuccess = function (event) {
                    var cursor = event.target.result;
                    if (cursor) {
                      var digest = cursor.value.digestSeq.split('::')[0];
                      possiblyOrphanedDigests.push(digest);
                      attAndSeqStore["delete"](cursor.primaryKey);
                      cursor["continue"]();
                    } else {
                      checkDone();
                    }
                  };
                };
              });
            }
            function openTransactionSafely(idb, stores, mode) {
              try {
                return { txn: idb.transaction(stores, mode) };
              } catch (err) {
                return { error: err };
              }
            }
            var changesHandler = new Changes();
            function idbBulkDocs(dbOpts, req, opts, api, idb, callback) {
              var docInfos = req.docs;
              var txn;
              var docStore;
              var bySeqStore;
              var attachStore;
              var attachAndSeqStore;
              var metaStore;
              var docInfoError;
              var metaDoc;
              for (var i = 0, len = docInfos.length; i < len; i++) {
                var doc = docInfos[i];
                if (doc._id && isLocalId(doc._id)) {
                  continue;
                }
                doc = docInfos[i] = parseDoc(doc, opts.new_edits);
                if (doc.error && !docInfoError) {
                  docInfoError = doc;
                }
              }
              if (docInfoError) {
                return callback(docInfoError);
              }
              var allDocsProcessed = false;
              var docCountDelta = 0;
              var results = new Array(docInfos.length);
              var fetchedDocs = new ExportedMap();
              var preconditionErrored = false;
              var blobType = api._meta.blobSupport ? 'blob' : 'base64';
              preprocessAttachments(docInfos, blobType, function (err) {
                if (err) {
                  return callback(err);
                }
                startTransaction();
              });
              function startTransaction() {
                var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, LOCAL_STORE, ATTACH_AND_SEQ_STORE, META_STORE];
                var txnResult = openTransactionSafely(idb, stores, 'readwrite');
                if (txnResult.error) {
                  return callback(txnResult.error);
                }
                txn = txnResult.txn;
                txn.onabort = idbError(callback);
                txn.ontimeout = idbError(callback);
                txn.oncomplete = complete;
                docStore = txn.objectStore(DOC_STORE);
                bySeqStore = txn.objectStore(BY_SEQ_STORE);
                attachStore = txn.objectStore(ATTACH_STORE);
                attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);
                metaStore = txn.objectStore(META_STORE);
                metaStore.get(META_STORE).onsuccess = function (e) {
                  metaDoc = e.target.result;
                  updateDocCountIfReady();
                };
                verifyAttachments(function (err) {
                  if (err) {
                    preconditionErrored = true;
                    return callback(err);
                  }
                  fetchExistingDocs();
                });
              }
              function onAllDocsProcessed() {
                allDocsProcessed = true;
                updateDocCountIfReady();
              }
              function idbProcessDocs() {
                processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, txn, results, writeDoc, opts, onAllDocsProcessed);
              }
              function updateDocCountIfReady() {
                if (!metaDoc || !allDocsProcessed) {
                  return;
                }
                metaDoc.docCount += docCountDelta;
                metaStore.put(metaDoc);
              }
              function fetchExistingDocs() {
                if (!docInfos.length) {
                  return;
                }
                var numFetched = 0;
                function checkDone() {
                  if (++numFetched === docInfos.length) {
                    idbProcessDocs();
                  }
                }
                function readMetadata(event) {
                  var metadata = decodeMetadata(event.target.result);
                  if (metadata) {
                    fetchedDocs.set(metadata.id, metadata);
                  }
                  checkDone();
                }
                for (var i = 0, len = docInfos.length; i < len; i++) {
                  var docInfo = docInfos[i];
                  if (docInfo._id && isLocalId(docInfo._id)) {
                    checkDone();
                    continue;
                  }
                  var req = docStore.get(docInfo.metadata.id);
                  req.onsuccess = readMetadata;
                }
              }
              function complete() {
                if (preconditionErrored) {
                  return;
                }
                changesHandler.notify(api._meta.name);
                callback(null, results);
              }
              function verifyAttachment(digest, callback) {
                var req = attachStore.get(digest);
                req.onsuccess = function (e) {
                  if (!e.target.result) {
                    var err = createError(MISSING_STUB, 'unknown stub attachment with digest ' + digest);
                    err.status = 412;
                    callback(err);
                  } else {
                    callback();
                  }
                };
              }
              function verifyAttachments(finish) {
                var digests = [];
                docInfos.forEach(function (docInfo) {
                  if (docInfo.data && docInfo.data._attachments) {
                    Object.keys(docInfo.data._attachments).forEach(function (filename) {
                      var att = docInfo.data._attachments[filename];
                      if (att.stub) {
                        digests.push(att.digest);
                      }
                    });
                  }
                });
                if (!digests.length) {
                  return finish();
                }
                var numDone = 0;
                var err;
                function checkDone() {
                  if (++numDone === digests.length) {
                    finish(err);
                  }
                }
                digests.forEach(function (digest) {
                  verifyAttachment(digest, function (attErr) {
                    if (attErr && !err) {
                      err = attErr;
                    }
                    checkDone();
                  });
                });
              }
              function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, isUpdate, delta, resultsIdx, callback) {
                docInfo.metadata.winningRev = winningRev$$1;
                docInfo.metadata.deleted = winningRevIsDeleted;
                var doc = docInfo.data;
                doc._id = docInfo.metadata.id;
                doc._rev = docInfo.metadata.rev;
                if (newRevIsDeleted) {
                  doc._deleted = true;
                }
                var hasAttachments = doc._attachments && Object.keys(doc._attachments).length;
                if (hasAttachments) {
                  return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);
                }
                docCountDelta += delta;
                updateDocCountIfReady();
                finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);
              }
              function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {
                var doc = docInfo.data;
                var metadata = docInfo.metadata;
                doc._doc_id_rev = metadata.id + '::' + metadata.rev;
                delete doc._id;
                delete doc._rev;
                function afterPutDoc(e) {
                  var revsToDelete = docInfo.stemmedRevs || [];
                  if (isUpdate && api.auto_compaction) {
                    revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));
                  }
                  if (revsToDelete && revsToDelete.length) {
                    compactRevs(revsToDelete, docInfo.metadata.id, txn);
                  }
                  metadata.seq = e.target.result;
                  var metadataToStore = encodeMetadata(metadata, winningRev$$1, winningRevIsDeleted);
                  var metaDataReq = docStore.put(metadataToStore);
                  metaDataReq.onsuccess = afterPutMetadata;
                }
                function afterPutDocError(e) {
                  e.preventDefault();
                  e.stopPropagation();
                  var index = bySeqStore.index('_doc_id_rev');
                  var getKeyReq = index.getKey(doc._doc_id_rev);
                  getKeyReq.onsuccess = function (e) {
                    var putReq = bySeqStore.put(doc, e.target.result);
                    putReq.onsuccess = afterPutDoc;
                  };
                }
                function afterPutMetadata() {
                  results[resultsIdx] = {
                    ok: true,
                    id: metadata.id,
                    rev: metadata.rev
                  };
                  fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);
                  insertAttachmentMappings(docInfo, metadata.seq, callback);
                }
                var putReq = bySeqStore.put(doc);
                putReq.onsuccess = afterPutDoc;
                putReq.onerror = afterPutDocError;
              }
              function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback) {
                var doc = docInfo.data;
                var numDone = 0;
                var attachments = Object.keys(doc._attachments);
                function collectResults() {
                  if (numDone === attachments.length) {
                    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted, isUpdate, resultsIdx, callback);
                  }
                }
                function attachmentSaved() {
                  numDone++;
                  collectResults();
                }
                attachments.forEach(function (key) {
                  var att = docInfo.data._attachments[key];
                  if (!att.stub) {
                    var data = att.data;
                    delete att.data;
                    att.revpos = parseInt(winningRev$$1, 10);
                    var digest = att.digest;
                    saveAttachment(digest, data, attachmentSaved);
                  } else {
                    numDone++;
                    collectResults();
                  }
                });
              }
              function insertAttachmentMappings(docInfo, seq, callback) {
                var attsAdded = 0;
                var attsToAdd = Object.keys(docInfo.data._attachments || {});
                if (!attsToAdd.length) {
                  return callback();
                }
                function checkDone() {
                  if (++attsAdded === attsToAdd.length) {
                    callback();
                  }
                }
                function add(att) {
                  var digest = docInfo.data._attachments[att].digest;
                  var req = attachAndSeqStore.put({
                    seq: seq,
                    digestSeq: digest + '::' + seq
                  });
                  req.onsuccess = checkDone;
                  req.onerror = function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    checkDone();
                  };
                }
                for (var i = 0; i < attsToAdd.length; i++) {
                  add(attsToAdd[i]);
                }
              }
              function saveAttachment(digest, data, callback) {
                var getKeyReq = attachStore.count(digest);
                getKeyReq.onsuccess = function (e) {
                  var count = e.target.result;
                  if (count) {
                    return callback();
                  }
                  var newAtt = {
                    digest: digest,
                    body: data
                  };
                  var putReq = attachStore.put(newAtt);
                  putReq.onsuccess = callback;
                };
              }
            }
            function runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {
              var useGetAll = typeof objectStore.getAll === 'function' && typeof objectStore.getAllKeys === 'function' && batchSize > 1 && !descending;
              var keysBatch;
              var valuesBatch;
              var pseudoCursor;
              function onGetAll(e) {
                valuesBatch = e.target.result;
                if (keysBatch) {
                  onBatch(keysBatch, valuesBatch, pseudoCursor);
                }
              }
              function onGetAllKeys(e) {
                keysBatch = e.target.result;
                if (valuesBatch) {
                  onBatch(keysBatch, valuesBatch, pseudoCursor);
                }
              }
              function continuePseudoCursor() {
                if (!keysBatch.length) {
                  return onBatch();
                }
                var lastKey = keysBatch[keysBatch.length - 1];
                var newKeyRange;
                if (keyRange && keyRange.upper) {
                  try {
                    newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper, true, keyRange.upperOpen);
                  } catch (e) {
                    if (e.name === "DataError" && e.code === 0) {
                      return onBatch();
                    }
                  }
                } else {
                  newKeyRange = IDBKeyRange.lowerBound(lastKey, true);
                }
                keyRange = newKeyRange;
                keysBatch = null;
                valuesBatch = null;
                objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;
                objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;
              }
              function onCursor(e) {
                var cursor = e.target.result;
                if (!cursor) {
                  return onBatch();
                }
                onBatch([cursor.key], [cursor.value], cursor);
              }
              if (useGetAll) {
                pseudoCursor = { "continue": continuePseudoCursor };
                objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;
                objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;
              } else if (descending) {
                objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;
              } else {
                objectStore.openCursor(keyRange).onsuccess = onCursor;
              }
            }
            function getAll(objectStore, keyRange, onSuccess) {
              if (typeof objectStore.getAll === 'function') {
                objectStore.getAll(keyRange).onsuccess = onSuccess;
                return;
              }
              var values = [];
              function onCursor(e) {
                var cursor = e.target.result;
                if (cursor) {
                  values.push(cursor.value);
                  cursor["continue"]();
                } else {
                  onSuccess({ target: { result: values } });
                }
              }
              objectStore.openCursor(keyRange).onsuccess = onCursor;
            }
            function createKeyRange(start, end, inclusiveEnd, key, descending) {
              try {
                if (start && end) {
                  if (descending) {
                    return IDBKeyRange.bound(end, start, !inclusiveEnd, false);
                  } else {
                    return IDBKeyRange.bound(start, end, false, !inclusiveEnd);
                  }
                } else if (start) {
                  if (descending) {
                    return IDBKeyRange.upperBound(start);
                  } else {
                    return IDBKeyRange.lowerBound(start);
                  }
                } else if (end) {
                  if (descending) {
                    return IDBKeyRange.lowerBound(end, !inclusiveEnd);
                  } else {
                    return IDBKeyRange.upperBound(end, !inclusiveEnd);
                  }
                } else if (key) {
                  return IDBKeyRange.only(key);
                }
              } catch (e) {
                return { error: e };
              }
              return null;
            }
            function idbAllDocs(opts, idb, callback) {
              var start = 'startkey' in opts ? opts.startkey : false;
              var end = 'endkey' in opts ? opts.endkey : false;
              var key = 'key' in opts ? opts.key : false;
              var skip = opts.skip || 0;
              var limit = typeof opts.limit === 'number' ? opts.limit : -1;
              var inclusiveEnd = opts.inclusive_end !== false;
              var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);
              var keyRangeError = keyRange && keyRange.error;
              if (keyRangeError && !(keyRangeError.name === "DataError" && keyRangeError.code === 0)) {
                return callback(createError(IDB_ERROR, keyRangeError.name, keyRangeError.message));
              }
              var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];
              if (opts.attachments) {
                stores.push(ATTACH_STORE);
              }
              var txnResult = openTransactionSafely(idb, stores, 'readonly');
              if (txnResult.error) {
                return callback(txnResult.error);
              }
              var txn = txnResult.txn;
              txn.oncomplete = onTxnComplete;
              txn.onabort = idbError(callback);
              var docStore = txn.objectStore(DOC_STORE);
              var seqStore = txn.objectStore(BY_SEQ_STORE);
              var metaStore = txn.objectStore(META_STORE);
              var docIdRevIndex = seqStore.index('_doc_id_rev');
              var results = [];
              var docCount;
              metaStore.get(META_STORE).onsuccess = function (e) {
                docCount = e.target.result.docCount;
              };
              function fetchDocAsynchronously(metadata, row, winningRev$$1) {
                var key = metadata.id + "::" + winningRev$$1;
                docIdRevIndex.get(key).onsuccess = function onGetDoc(e) {
                  row.doc = decodeDoc(e.target.result);
                  if (opts.conflicts) {
                    var conflicts = collectConflicts(metadata);
                    if (conflicts.length) {
                      row.doc._conflicts = conflicts;
                    }
                  }
                  fetchAttachmentsIfNecessary(row.doc, opts, txn);
                };
              }
              function allDocsInner(winningRev$$1, metadata) {
                var row = {
                  id: metadata.id,
                  key: metadata.id,
                  value: { rev: winningRev$$1 }
                };
                var deleted = metadata.deleted;
                if (opts.deleted === 'ok') {
                  results.push(row);
                  if (deleted) {
                    row.value.deleted = true;
                    row.doc = null;
                  } else if (opts.include_docs) {
                    fetchDocAsynchronously(metadata, row, winningRev$$1);
                  }
                } else if (!deleted && skip-- <= 0) {
                  results.push(row);
                  if (opts.include_docs) {
                    fetchDocAsynchronously(metadata, row, winningRev$$1);
                  }
                }
              }
              function processBatch(batchValues) {
                for (var i = 0, len = batchValues.length; i < len; i++) {
                  if (results.length === limit) {
                    break;
                  }
                  var batchValue = batchValues[i];
                  var metadata = decodeMetadata(batchValue);
                  var winningRev$$1 = metadata.winningRev;
                  allDocsInner(winningRev$$1, metadata);
                }
              }
              function onBatch(batchKeys, batchValues, cursor) {
                if (!cursor) {
                  return;
                }
                processBatch(batchValues);
                if (results.length < limit) {
                  cursor["continue"]();
                }
              }
              function onGetAll(e) {
                var values = e.target.result;
                if (opts.descending) {
                  values = values.reverse();
                }
                processBatch(values);
              }
              function onResultsReady() {
                callback(null, {
                  total_rows: docCount,
                  offset: opts.skip,
                  rows: results
                });
              }
              function onTxnComplete() {
                if (opts.attachments) {
                  postProcessAttachments(results, opts.binary).then(onResultsReady);
                } else {
                  onResultsReady();
                }
              }
              if (keyRangeError || limit === 0) {
                return;
              }
              if (limit === -1) {
                return getAll(docStore, keyRange, onGetAll);
              }
              runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);
            }
            function checkBlobSupport(txn) {
              return new PouchPromise$1(function (resolve) {
                var blob = createBlob(['']);
                var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');
                req.onsuccess = function () {
                  var matchedChrome = navigator.userAgent.match(/Chrome\/(\d+)/);
                  var matchedEdge = navigator.userAgent.match(/Edge\//);
                  resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);
                };
                txn.onabort = function (e) {
                  e.preventDefault();
                  e.stopPropagation();
                  resolve(false);
                };
              })["catch"](function () {
                return false;
              });
            }
            function countDocs(txn, cb) {
              var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');
              index.count(IDBKeyRange.only('0')).onsuccess = function (e) {
                cb(e.target.result);
              };
            }
            var running = false;
            var queue = [];
            function tryCode(fun, err, res, PouchDB) {
              try {
                fun(err, res);
              } catch (err) {
                PouchDB.emit('error', err);
              }
            }
            function applyNext() {
              if (running || !queue.length) {
                return;
              }
              running = true;
              queue.shift()();
            }
            function enqueueTask(action, callback, PouchDB) {
              queue.push(function runAction() {
                action(function runCallback(err, res) {
                  tryCode(callback, err, res, PouchDB);
                  running = false;
                  nextTick(function runNext() {
                    applyNext(PouchDB);
                  });
                });
              });
              applyNext();
            }
            function changes(opts, api, dbName, idb) {
              opts = clone(opts);
              if (opts.continuous) {
                var id = dbName + ':' + uuid();
                changesHandler.addListener(dbName, id, api, opts);
                changesHandler.notify(dbName);
                return { cancel: function () {
                    changesHandler.removeListener(dbName, id);
                  } };
              }
              var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);
              opts.since = opts.since || 0;
              var lastSeq = opts.since;
              var limit = 'limit' in opts ? opts.limit : -1;
              if (limit === 0) {
                limit = 1;
              }
              var returnDocs;
              if ('return_docs' in opts) {
                returnDocs = opts.return_docs;
              } else if ('returnDocs' in opts) {
                returnDocs = opts.returnDocs;
              } else {
                returnDocs = true;
              }
              var results = [];
              var numResults = 0;
              var filter = filterChange(opts);
              var docIdsToMetadata = new ExportedMap();
              var txn;
              var bySeqStore;
              var docStore;
              var docIdRevIndex;
              function onBatch(batchKeys, batchValues, cursor) {
                if (!cursor || !batchKeys.length) {
                  return;
                }
                var winningDocs = new Array(batchKeys.length);
                var metadatas = new Array(batchKeys.length);
                function processMetadataAndWinningDoc(metadata, winningDoc) {
                  var change = opts.processChange(winningDoc, metadata, opts);
                  lastSeq = change.seq = metadata.seq;
                  var filtered = filter(change);
                  if (typeof filtered === 'object') {
                    return opts.complete(filtered);
                  }
                  if (filtered) {
                    numResults++;
                    if (returnDocs) {
                      results.push(change);
                    }
                    if (opts.attachments && opts.include_docs) {
                      fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {
                        postProcessAttachments([change], opts.binary).then(function () {
                          opts.onChange(change);
                        });
                      });
                    } else {
                      opts.onChange(change);
                    }
                  }
                }
                function onBatchDone() {
                  for (var i = 0, len = winningDocs.length; i < len; i++) {
                    if (numResults === limit) {
                      break;
                    }
                    var winningDoc = winningDocs[i];
                    if (!winningDoc) {
                      continue;
                    }
                    var metadata = metadatas[i];
                    processMetadataAndWinningDoc(metadata, winningDoc);
                  }
                  if (numResults !== limit) {
                    cursor["continue"]();
                  }
                }
                var numDone = 0;
                batchValues.forEach(function (value, i) {
                  var doc = decodeDoc(value);
                  var seq = batchKeys[i];
                  fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {
                    metadatas[i] = metadata;
                    winningDocs[i] = winningDoc;
                    if (++numDone === batchKeys.length) {
                      onBatchDone();
                    }
                  });
                });
              }
              function onGetMetadata(doc, seq, metadata, cb) {
                if (metadata.seq !== seq) {
                  return cb();
                }
                if (metadata.winningRev === doc._rev) {
                  return cb(metadata, doc);
                }
                var docIdRev = doc._id + '::' + metadata.winningRev;
                var req = docIdRevIndex.get(docIdRev);
                req.onsuccess = function (e) {
                  cb(metadata, decodeDoc(e.target.result));
                };
              }
              function fetchWinningDocAndMetadata(doc, seq, cb) {
                if (docIds && !docIds.has(doc._id)) {
                  return cb();
                }
                var metadata = docIdsToMetadata.get(doc._id);
                if (metadata) {
                  return onGetMetadata(doc, seq, metadata, cb);
                }
                docStore.get(doc._id).onsuccess = function (e) {
                  metadata = decodeMetadata(e.target.result);
                  docIdsToMetadata.set(doc._id, metadata);
                  onGetMetadata(doc, seq, metadata, cb);
                };
              }
              function finish() {
                opts.complete(null, {
                  results: results,
                  last_seq: lastSeq
                });
              }
              function onTxnComplete() {
                if (!opts.continuous && opts.attachments) {
                  postProcessAttachments(results).then(finish);
                } else {
                  finish();
                }
              }
              var objectStores = [DOC_STORE, BY_SEQ_STORE];
              if (opts.attachments) {
                objectStores.push(ATTACH_STORE);
              }
              var txnResult = openTransactionSafely(idb, objectStores, 'readonly');
              if (txnResult.error) {
                return opts.complete(txnResult.error);
              }
              txn = txnResult.txn;
              txn.onabort = idbError(opts.complete);
              txn.oncomplete = onTxnComplete;
              bySeqStore = txn.objectStore(BY_SEQ_STORE);
              docStore = txn.objectStore(DOC_STORE);
              docIdRevIndex = bySeqStore.index('_doc_id_rev');
              var keyRange = opts.since && !opts.descending ? IDBKeyRange.lowerBound(opts.since, true) : null;
              runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);
            }
            var cachedDBs = new ExportedMap();
            var blobSupportPromise;
            var openReqList = new ExportedMap();
            function IdbPouch(opts, callback) {
              var api = this;
              enqueueTask(function (thisCallback) {
                init(api, opts, thisCallback);
              }, callback, api.constructor);
            }
            function init(api, opts, callback) {
              var dbName = opts.name;
              var idb = null;
              api._meta = null;
              function createSchema(db) {
                var docStore = db.createObjectStore(DOC_STORE, { keyPath: 'id' });
                db.createObjectStore(BY_SEQ_STORE, { autoIncrement: true }).createIndex('_doc_id_rev', '_doc_id_rev', { unique: true });
                db.createObjectStore(ATTACH_STORE, { keyPath: 'digest' });
                db.createObjectStore(META_STORE, {
                  keyPath: 'id',
                  autoIncrement: false
                });
                db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);
                docStore.createIndex('deletedOrLocal', 'deletedOrLocal', { unique: false });
                db.createObjectStore(LOCAL_STORE, { keyPath: '_id' });
                var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, { autoIncrement: true });
                attAndSeqStore.createIndex('seq', 'seq');
                attAndSeqStore.createIndex('digestSeq', 'digestSeq', { unique: true });
              }
              function addDeletedOrLocalIndex(txn, callback) {
                var docStore = txn.objectStore(DOC_STORE);
                docStore.createIndex('deletedOrLocal', 'deletedOrLocal', { unique: false });
                docStore.openCursor().onsuccess = function (event) {
                  var cursor = event.target.result;
                  if (cursor) {
                    var metadata = cursor.value;
                    var deleted = isDeleted(metadata);
                    metadata.deletedOrLocal = deleted ? "1" : "0";
                    docStore.put(metadata);
                    cursor["continue"]();
                  } else {
                    callback();
                  }
                };
              }
              function createLocalStoreSchema(db) {
                db.createObjectStore(LOCAL_STORE, { keyPath: '_id' }).createIndex('_doc_id_rev', '_doc_id_rev', { unique: true });
              }
              function migrateLocalStore(txn, cb) {
                var localStore = txn.objectStore(LOCAL_STORE);
                var docStore = txn.objectStore(DOC_STORE);
                var seqStore = txn.objectStore(BY_SEQ_STORE);
                var cursor = docStore.openCursor();
                cursor.onsuccess = function (event) {
                  var cursor = event.target.result;
                  if (cursor) {
                    var metadata = cursor.value;
                    var docId = metadata.id;
                    var local = isLocalId(docId);
                    var rev$$1 = winningRev(metadata);
                    if (local) {
                      var docIdRev = docId + "::" + rev$$1;
                      var start = docId + "::";
                      var end = docId + "::~";
                      var index = seqStore.index('_doc_id_rev');
                      var range = IDBKeyRange.bound(start, end, false, false);
                      var seqCursor = index.openCursor(range);
                      seqCursor.onsuccess = function (e) {
                        seqCursor = e.target.result;
                        if (!seqCursor) {
                          docStore["delete"](cursor.primaryKey);
                          cursor["continue"]();
                        } else {
                          var data = seqCursor.value;
                          if (data._doc_id_rev === docIdRev) {
                            localStore.put(data);
                          }
                          seqStore["delete"](seqCursor.primaryKey);
                          seqCursor["continue"]();
                        }
                      };
                    } else {
                      cursor["continue"]();
                    }
                  } else if (cb) {
                    cb();
                  }
                };
              }
              function addAttachAndSeqStore(db) {
                var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE, { autoIncrement: true });
                attAndSeqStore.createIndex('seq', 'seq');
                attAndSeqStore.createIndex('digestSeq', 'digestSeq', { unique: true });
              }
              function migrateAttsAndSeqs(txn, callback) {
                var seqStore = txn.objectStore(BY_SEQ_STORE);
                var attStore = txn.objectStore(ATTACH_STORE);
                var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);
                var req = attStore.count();
                req.onsuccess = function (e) {
                  var count = e.target.result;
                  if (!count) {
                    return callback();
                  }
                  seqStore.openCursor().onsuccess = function (e) {
                    var cursor = e.target.result;
                    if (!cursor) {
                      return callback();
                    }
                    var doc = cursor.value;
                    var seq = cursor.primaryKey;
                    var atts = Object.keys(doc._attachments || {});
                    var digestMap = {};
                    for (var j = 0; j < atts.length; j++) {
                      var att = doc._attachments[atts[j]];
                      digestMap[att.digest] = true;
                    }
                    var digests = Object.keys(digestMap);
                    for (j = 0; j < digests.length; j++) {
                      var digest = digests[j];
                      attAndSeqStore.put({
                        seq: seq,
                        digestSeq: digest + '::' + seq
                      });
                    }
                    cursor["continue"]();
                  };
                };
              }
              function migrateMetadata(txn) {
                function decodeMetadataCompat(storedObject) {
                  if (!storedObject.data) {
                    storedObject.deleted = storedObject.deletedOrLocal === '1';
                    return storedObject;
                  }
                  return decodeMetadata(storedObject);
                }
                var bySeqStore = txn.objectStore(BY_SEQ_STORE);
                var docStore = txn.objectStore(DOC_STORE);
                var cursor = docStore.openCursor();
                cursor.onsuccess = function (e) {
                  var cursor = e.target.result;
                  if (!cursor) {
                    return;
                  }
                  var metadata = decodeMetadataCompat(cursor.value);
                  metadata.winningRev = metadata.winningRev || winningRev(metadata);
                  function fetchMetadataSeq() {
                    var start = metadata.id + '::';
                    var end = metadata.id + '::\uffff';
                    var req = bySeqStore.index('_doc_id_rev').openCursor(IDBKeyRange.bound(start, end));
                    var metadataSeq = 0;
                    req.onsuccess = function (e) {
                      var cursor = e.target.result;
                      if (!cursor) {
                        metadata.seq = metadataSeq;
                        return onGetMetadataSeq();
                      }
                      var seq = cursor.primaryKey;
                      if (seq > metadataSeq) {
                        metadataSeq = seq;
                      }
                      cursor["continue"]();
                    };
                  }
                  function onGetMetadataSeq() {
                    var metadataToStore = encodeMetadata(metadata, metadata.winningRev, metadata.deleted);
                    var req = docStore.put(metadataToStore);
                    req.onsuccess = function () {
                      cursor["continue"]();
                    };
                  }
                  if (metadata.seq) {
                    return onGetMetadataSeq();
                  }
                  fetchMetadataSeq();
                };
              }
              api._remote = false;
              api.type = function () {
                return 'idb';
              };
              api._id = toPromise(function (callback) {
                callback(null, api._meta.instanceId);
              });
              api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {
                idbBulkDocs(opts, req, reqOpts, api, idb, callback);
              };
              api._get = function idb_get(id, opts, callback) {
                var doc;
                var metadata;
                var err;
                var txn = opts.ctx;
                if (!txn) {
                  var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');
                  if (txnResult.error) {
                    return callback(txnResult.error);
                  }
                  txn = txnResult.txn;
                }
                function finish() {
                  callback(err, {
                    doc: doc,
                    metadata: metadata,
                    ctx: txn
                  });
                }
                txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {
                  metadata = decodeMetadata(e.target.result);
                  if (!metadata) {
                    err = createError(MISSING_DOC, 'missing');
                    return finish();
                  }
                  var rev$$1;
                  if (!opts.rev) {
                    rev$$1 = metadata.winningRev;
                    var deleted = isDeleted(metadata);
                    if (deleted) {
                      err = createError(MISSING_DOC, "deleted");
                      return finish();
                    }
                  } else {
                    rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;
                  }
                  var objectStore = txn.objectStore(BY_SEQ_STORE);
                  var key = metadata.id + '::' + rev$$1;
                  objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {
                    doc = e.target.result;
                    if (doc) {
                      doc = decodeDoc(doc);
                    }
                    if (!doc) {
                      err = createError(MISSING_DOC, 'missing');
                      return finish();
                    }
                    finish();
                  };
                };
              };
              api._getAttachment = function (docId, attachId, attachment, opts, callback) {
                var txn;
                if (opts.ctx) {
                  txn = opts.ctx;
                } else {
                  var txnResult = openTransactionSafely(idb, [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');
                  if (txnResult.error) {
                    return callback(txnResult.error);
                  }
                  txn = txnResult.txn;
                }
                var digest = attachment.digest;
                var type = attachment.content_type;
                txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {
                  var body = e.target.result.body;
                  readBlobData(body, type, opts.binary, function (blobData) {
                    callback(null, blobData);
                  });
                };
              };
              api._info = function idb_info(callback) {
                var updateSeq;
                var docCount;
                var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');
                if (txnResult.error) {
                  return callback(txnResult.error);
                }
                var txn = txnResult.txn;
                txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {
                  docCount = e.target.result.docCount;
                };
                txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {
                  var cursor = e.target.result;
                  updateSeq = cursor ? cursor.key : 0;
                };
                txn.oncomplete = function () {
                  callback(null, {
                    doc_count: docCount,
                    update_seq: updateSeq,
                    idb_attachment_format: api._meta.blobSupport ? 'binary' : 'base64'
                  });
                };
              };
              api._allDocs = function idb_allDocs(opts, callback) {
                idbAllDocs(opts, idb, callback);
              };
              api._changes = function idbChanges(opts) {
                return changes(opts, api, dbName, idb);
              };
              api._close = function (callback) {
                idb.close();
                cachedDBs["delete"](dbName);
                callback();
              };
              api._getRevisionTree = function (docId, callback) {
                var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');
                if (txnResult.error) {
                  return callback(txnResult.error);
                }
                var txn = txnResult.txn;
                var req = txn.objectStore(DOC_STORE).get(docId);
                req.onsuccess = function (event) {
                  var doc = decodeMetadata(event.target.result);
                  if (!doc) {
                    callback(createError(MISSING_DOC));
                  } else {
                    callback(null, doc.rev_tree);
                  }
                };
              };
              api._doCompaction = function (docId, revs, callback) {
                var stores = [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE, ATTACH_AND_SEQ_STORE];
                var txnResult = openTransactionSafely(idb, stores, 'readwrite');
                if (txnResult.error) {
                  return callback(txnResult.error);
                }
                var txn = txnResult.txn;
                var docStore = txn.objectStore(DOC_STORE);
                docStore.get(docId).onsuccess = function (event) {
                  var metadata = decodeMetadata(event.target.result);
                  traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {
                    var rev$$1 = pos + '-' + revHash;
                    if (revs.indexOf(rev$$1) !== -1) {
                      opts.status = 'missing';
                    }
                  });
                  compactRevs(revs, docId, txn);
                  var winningRev$$1 = metadata.winningRev;
                  var deleted = metadata.deleted;
                  txn.objectStore(DOC_STORE).put(encodeMetadata(metadata, winningRev$$1, deleted));
                };
                txn.onabort = idbError(callback);
                txn.oncomplete = function () {
                  callback();
                };
              };
              api._getLocal = function (id, callback) {
                var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');
                if (txnResult.error) {
                  return callback(txnResult.error);
                }
                var tx = txnResult.txn;
                var req = tx.objectStore(LOCAL_STORE).get(id);
                req.onerror = idbError(callback);
                req.onsuccess = function (e) {
                  var doc = e.target.result;
                  if (!doc) {
                    callback(createError(MISSING_DOC));
                  } else {
                    delete doc['_doc_id_rev'];
                    callback(null, doc);
                  }
                };
              };
              api._putLocal = function (doc, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                delete doc._revisions;
                var oldRev = doc._rev;
                var id = doc._id;
                if (!oldRev) {
                  doc._rev = '0-1';
                } else {
                  doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);
                }
                var tx = opts.ctx;
                var ret;
                if (!tx) {
                  var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');
                  if (txnResult.error) {
                    return callback(txnResult.error);
                  }
                  tx = txnResult.txn;
                  tx.onerror = idbError(callback);
                  tx.oncomplete = function () {
                    if (ret) {
                      callback(null, ret);
                    }
                  };
                }
                var oStore = tx.objectStore(LOCAL_STORE);
                var req;
                if (oldRev) {
                  req = oStore.get(id);
                  req.onsuccess = function (e) {
                    var oldDoc = e.target.result;
                    if (!oldDoc || oldDoc._rev !== oldRev) {
                      callback(createError(REV_CONFLICT));
                    } else {
                      var req = oStore.put(doc);
                      req.onsuccess = function () {
                        ret = {
                          ok: true,
                          id: doc._id,
                          rev: doc._rev
                        };
                        if (opts.ctx) {
                          callback(null, ret);
                        }
                      };
                    }
                  };
                } else {
                  req = oStore.add(doc);
                  req.onerror = function (e) {
                    callback(createError(REV_CONFLICT));
                    e.preventDefault();
                    e.stopPropagation();
                  };
                  req.onsuccess = function () {
                    ret = {
                      ok: true,
                      id: doc._id,
                      rev: doc._rev
                    };
                    if (opts.ctx) {
                      callback(null, ret);
                    }
                  };
                }
              };
              api._removeLocal = function (doc, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                var tx = opts.ctx;
                if (!tx) {
                  var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');
                  if (txnResult.error) {
                    return callback(txnResult.error);
                  }
                  tx = txnResult.txn;
                  tx.oncomplete = function () {
                    if (ret) {
                      callback(null, ret);
                    }
                  };
                }
                var ret;
                var id = doc._id;
                var oStore = tx.objectStore(LOCAL_STORE);
                var req = oStore.get(id);
                req.onerror = idbError(callback);
                req.onsuccess = function (e) {
                  var oldDoc = e.target.result;
                  if (!oldDoc || oldDoc._rev !== doc._rev) {
                    callback(createError(MISSING_DOC));
                  } else {
                    oStore["delete"](id);
                    ret = {
                      ok: true,
                      id: id,
                      rev: '0-0'
                    };
                    if (opts.ctx) {
                      callback(null, ret);
                    }
                  }
                };
              };
              api._destroy = function (opts, callback) {
                changesHandler.removeAllListeners(dbName);
                var openReq = openReqList.get(dbName);
                if (openReq && openReq.result) {
                  openReq.result.close();
                  cachedDBs["delete"](dbName);
                }
                var req = indexedDB.deleteDatabase(dbName);
                req.onsuccess = function () {
                  openReqList["delete"](dbName);
                  if (hasLocalStorage() && dbName in localStorage) {
                    delete localStorage[dbName];
                  }
                  callback(null, { 'ok': true });
                };
                req.onerror = idbError(callback);
              };
              var cached = cachedDBs.get(dbName);
              if (cached) {
                idb = cached.idb;
                api._meta = cached.global;
                return nextTick(function () {
                  callback(null, api);
                });
              }
              var req;
              if (opts.storage) {
                req = tryStorageOption(dbName, opts.storage);
              } else {
                req = indexedDB.open(dbName, ADAPTER_VERSION);
              }
              openReqList.set(dbName, req);
              req.onupgradeneeded = function (e) {
                var db = e.target.result;
                if (e.oldVersion < 1) {
                  return createSchema(db);
                }
                var txn = e.currentTarget.transaction;
                if (e.oldVersion < 3) {
                  createLocalStoreSchema(db);
                }
                if (e.oldVersion < 4) {
                  addAttachAndSeqStore(db);
                }
                var migrations = [addDeletedOrLocalIndex, migrateLocalStore, migrateAttsAndSeqs, migrateMetadata];
                var i = e.oldVersion;
                function next() {
                  var migration = migrations[i - 1];
                  i++;
                  if (migration) {
                    migration(txn, next);
                  }
                }
                next();
              };
              req.onsuccess = function (e) {
                idb = e.target.result;
                idb.onversionchange = function () {
                  idb.close();
                  cachedDBs["delete"](dbName);
                };
                idb.onabort = function (e) {
                  guardedConsole('error', 'Database has a global failure', e.target.error);
                  idb.close();
                  cachedDBs["delete"](dbName);
                };
                var txn = idb.transaction([META_STORE, DETECT_BLOB_SUPPORT_STORE, DOC_STORE], 'readwrite');
                var storedMetaDoc = false;
                var metaDoc;
                var docCount;
                var blobSupport;
                var instanceId;
                function completeSetup() {
                  if (typeof blobSupport === 'undefined' || !storedMetaDoc) {
                    return;
                  }
                  api._meta = {
                    name: dbName,
                    instanceId: instanceId,
                    blobSupport: blobSupport
                  };
                  cachedDBs.set(dbName, {
                    idb: idb,
                    global: api._meta
                  });
                  callback(null, api);
                }
                function storeMetaDocIfReady() {
                  if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {
                    return;
                  }
                  var instanceKey = dbName + '_id';
                  if (instanceKey in metaDoc) {
                    instanceId = metaDoc[instanceKey];
                  } else {
                    metaDoc[instanceKey] = instanceId = uuid();
                  }
                  metaDoc.docCount = docCount;
                  txn.objectStore(META_STORE).put(metaDoc);
                }
                txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {
                  metaDoc = e.target.result || { id: META_STORE };
                  storeMetaDocIfReady();
                };
                countDocs(txn, function (count) {
                  docCount = count;
                  storeMetaDocIfReady();
                });
                if (!blobSupportPromise) {
                  blobSupportPromise = checkBlobSupport(txn);
                }
                blobSupportPromise.then(function (val) {
                  blobSupport = val;
                  completeSetup();
                });
                txn.oncomplete = function () {
                  storedMetaDoc = true;
                  completeSetup();
                };
              };
              req.onerror = function () {
                var msg = 'Failed to open indexedDB, are you in private browsing mode?';
                guardedConsole('error', msg);
                callback(createError(IDB_ERROR, msg));
              };
            }
            IdbPouch.valid = function () {
              var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);
              return !isSafari && typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';
            };
            function tryStorageOption(dbName, storage) {
              try {
                return indexedDB.open(dbName, {
                  version: ADAPTER_VERSION,
                  storage: storage
                });
              } catch (err) {
                return indexedDB.open(dbName, ADAPTER_VERSION);
              }
            }
            var IDBPouch = function (PouchDB) {
              PouchDB.adapter('idb', IdbPouch, true);
            };
            function decodeUtf8(str) {
              return decodeURIComponent(escape(str));
            }
            function hexToInt(charCode) {
              return charCode < 65 ? charCode - 48 : charCode - 55;
            }
            function parseHexUtf8(str, start, end) {
              var result = '';
              while (start < end) {
                result += String.fromCharCode(hexToInt(str.charCodeAt(start++)) << 4 | hexToInt(str.charCodeAt(start++)));
              }
              return result;
            }
            function parseHexUtf16(str, start, end) {
              var result = '';
              while (start < end) {
                result += String.fromCharCode(hexToInt(str.charCodeAt(start + 2)) << 12 | hexToInt(str.charCodeAt(start + 3)) << 8 | hexToInt(str.charCodeAt(start)) << 4 | hexToInt(str.charCodeAt(start + 1)));
                start += 4;
              }
              return result;
            }
            function parseHexString(str, encoding) {
              if (encoding === 'UTF-8') {
                return decodeUtf8(parseHexUtf8(str, 0, str.length));
              } else {
                return parseHexUtf16(str, 0, str.length);
              }
            }
            function quote(str) {
              return "'" + str + "'";
            }
            var ADAPTER_VERSION$1 = 7;
            var DOC_STORE$1 = quote('document-store');
            var BY_SEQ_STORE$1 = quote('by-sequence');
            var ATTACH_STORE$1 = quote('attach-store');
            var LOCAL_STORE$1 = quote('local-store');
            var META_STORE$1 = quote('metadata-store');
            var ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');
            function escapeBlob(str) {
              return str.replace(/\u0002/g, '\u0002\u0002').replace(/\u0001/g, '\u0001\u0002').replace(/\u0000/g, '\u0001\u0001');
            }
            function unescapeBlob(str) {
              return str.replace(/\u0001\u0001/g, '\u0000').replace(/\u0001\u0002/g, '\u0001').replace(/\u0002\u0002/g, '\u0002');
            }
            function stringifyDoc(doc) {
              delete doc._id;
              delete doc._rev;
              return JSON.stringify(doc);
            }
            function unstringifyDoc(doc, id, rev$$1) {
              doc = JSON.parse(doc);
              doc._id = id;
              doc._rev = rev$$1;
              return doc;
            }
            function qMarks(num) {
              var s = '(';
              while (num--) {
                s += '?';
                if (num) {
                  s += ',';
                }
              }
              return s + ')';
            }
            function select(selector, table, joiner, where, orderBy) {
              return 'SELECT ' + selector + ' FROM ' + (typeof table === 'string' ? table : table.join(' JOIN ')) + (joiner ? ' ON ' + joiner : '') + (where ? ' WHERE ' + (typeof where === 'string' ? where : where.join(' AND ')) : '') + (orderBy ? ' ORDER BY ' + orderBy : '');
            }
            function compactRevs$1(revs, docId, tx) {
              if (!revs.length) {
                return;
              }
              var numDone = 0;
              var seqs = [];
              function checkDone() {
                if (++numDone === revs.length) {
                  deleteOrphans();
                }
              }
              function deleteOrphans() {
                if (!seqs.length) {
                  return;
                }
                var sql = 'SELECT DISTINCT digest AS digest FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);
                tx.executeSql(sql, seqs, function (tx, res) {
                  var digestsToCheck = [];
                  for (var i = 0; i < res.rows.length; i++) {
                    digestsToCheck.push(res.rows.item(i).digest);
                  }
                  if (!digestsToCheck.length) {
                    return;
                  }
                  var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN (' + seqs.map(function () {
                    return '?';
                  }).join(',') + ')';
                  tx.executeSql(sql, seqs, function (tx) {
                    var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest IN (' + digestsToCheck.map(function () {
                      return '?';
                    }).join(',') + ')';
                    tx.executeSql(sql, digestsToCheck, function (tx, res) {
                      var nonOrphanedDigests = new ExportedSet();
                      for (var i = 0; i < res.rows.length; i++) {
                        nonOrphanedDigests.add(res.rows.item(i).digest);
                      }
                      digestsToCheck.forEach(function (digest) {
                        if (nonOrphanedDigests.has(digest)) {
                          return;
                        }
                        tx.executeSql('DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?', [digest]);
                        tx.executeSql('DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);
                      });
                    });
                  });
                });
              }
              revs.forEach(function (rev$$1) {
                var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 + ' WHERE doc_id=? AND rev=?';
                tx.executeSql(sql, [docId, rev$$1], function (tx, res) {
                  if (!res.rows.length) {
                    return checkDone();
                  }
                  var seq = res.rows.item(0).seq;
                  seqs.push(seq);
                  tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);
                });
              });
            }
            function websqlError(callback) {
              return function (event) {
                guardedConsole('error', 'WebSQL threw an error', event);
                var errorNameMatch = event && event.constructor.toString().match(/function ([^(]+)/);
                var errorName = errorNameMatch && errorNameMatch[1] || event.type;
                var errorReason = event.target || event.message;
                callback(createError(WSQ_ERROR, errorReason, errorName));
              };
            }
            function getSize(opts) {
              if ('size' in opts) {
                return opts.size * 1000000;
              }
              var isAndroid = typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent);
              return isAndroid ? 5000000 : 1;
            }
            function websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {
              var newEdits = opts.new_edits;
              var userDocs = req.docs;
              var docInfos = userDocs.map(function (doc) {
                if (doc._id && isLocalId(doc._id)) {
                  return doc;
                }
                var newDoc = parseDoc(doc, newEdits);
                return newDoc;
              });
              var docInfoErrors = docInfos.filter(function (docInfo) {
                return docInfo.error;
              });
              if (docInfoErrors.length) {
                return callback(docInfoErrors[0]);
              }
              var tx;
              var results = new Array(docInfos.length);
              var fetchedDocs = new ExportedMap();
              var preconditionErrored;
              function complete() {
                if (preconditionErrored) {
                  return callback(preconditionErrored);
                }
                websqlChanges.notify(api._name);
                callback(null, results);
              }
              function verifyAttachment(digest, callback) {
                var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';
                tx.executeSql(sql, [digest], function (tx, result) {
                  if (result.rows.item(0).cnt === 0) {
                    var err = createError(MISSING_STUB, 'unknown stub attachment with digest ' + digest);
                    callback(err);
                  } else {
                    callback();
                  }
                });
              }
              function verifyAttachments(finish) {
                var digests = [];
                docInfos.forEach(function (docInfo) {
                  if (docInfo.data && docInfo.data._attachments) {
                    Object.keys(docInfo.data._attachments).forEach(function (filename) {
                      var att = docInfo.data._attachments[filename];
                      if (att.stub) {
                        digests.push(att.digest);
                      }
                    });
                  }
                });
                if (!digests.length) {
                  return finish();
                }
                var numDone = 0;
                var err;
                function checkDone() {
                  if (++numDone === digests.length) {
                    finish(err);
                  }
                }
                digests.forEach(function (digest) {
                  verifyAttachment(digest, function (attErr) {
                    if (attErr && !err) {
                      err = attErr;
                    }
                    checkDone();
                  });
                });
              }
              function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted, isUpdate, delta, resultsIdx, callback) {
                function finish() {
                  var data = docInfo.data;
                  var deletedInt = newRevIsDeleted ? 1 : 0;
                  var id = data._id;
                  var rev = data._rev;
                  var json = stringifyDoc(data);
                  var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 + ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';
                  var sqlArgs = [id, rev, json, deletedInt];
                  function insertAttachmentMappings(seq, callback) {
                    var attsAdded = 0;
                    var attsToAdd = Object.keys(data._attachments || {});
                    if (!attsToAdd.length) {
                      return callback();
                    }
                    function checkDone() {
                      if (++attsAdded === attsToAdd.length) {
                        callback();
                      }
                      return false;
                    }
                    function add(att) {
                      var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 + ' (digest, seq) VALUES (?,?)';
                      var sqlArgs = [data._attachments[att].digest, seq];
                      tx.executeSql(sql, sqlArgs, checkDone, checkDone);
                    }
                    for (var i = 0; i < attsToAdd.length; i++) {
                      add(attsToAdd[i]);
                    }
                  }
                  tx.executeSql(sql, sqlArgs, function (tx, result) {
                    var seq = result.insertId;
                    insertAttachmentMappings(seq, function () {
                      dataWritten(tx, seq);
                    });
                  }, function () {
                    var fetchSql = select('seq', BY_SEQ_STORE$1, null, 'doc_id=? AND rev=?');
                    tx.executeSql(fetchSql, [id, rev], function (tx, res) {
                      var seq = res.rows.item(0).seq;
                      var sql = 'UPDATE ' + BY_SEQ_STORE$1 + ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';
                      var sqlArgs = [json, deletedInt, id, rev];
                      tx.executeSql(sql, sqlArgs, function (tx) {
                        insertAttachmentMappings(seq, function () {
                          dataWritten(tx, seq);
                        });
                      });
                    });
                    return false;
                  });
                }
                function collectResults(attachmentErr) {
                  if (!err) {
                    if (attachmentErr) {
                      err = attachmentErr;
                      callback(err);
                    } else if (recv === attachments.length) {
                      finish();
                    }
                  }
                }
                var err = null;
                var recv = 0;
                docInfo.data._id = docInfo.metadata.id;
                docInfo.data._rev = docInfo.metadata.rev;
                var attachments = Object.keys(docInfo.data._attachments || {});
                if (newRevIsDeleted) {
                  docInfo.data._deleted = true;
                }
                function attachmentSaved(err) {
                  recv++;
                  collectResults(err);
                }
                attachments.forEach(function (key) {
                  var att = docInfo.data._attachments[key];
                  if (!att.stub) {
                    var data = att.data;
                    delete att.data;
                    att.revpos = parseInt(winningRev$$1, 10);
                    var digest = att.digest;
                    saveAttachment(digest, data, attachmentSaved);
                  } else {
                    recv++;
                    collectResults();
                  }
                });
                if (!attachments.length) {
                  finish();
                }
                function dataWritten(tx, seq) {
                  var id = docInfo.metadata.id;
                  var revsToCompact = docInfo.stemmedRevs || [];
                  if (isUpdate && api.auto_compaction) {
                    revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);
                  }
                  if (revsToCompact.length) {
                    compactRevs$1(revsToCompact, id, tx);
                  }
                  docInfo.metadata.seq = seq;
                  var rev = docInfo.metadata.rev;
                  delete docInfo.metadata.rev;
                  var sql = isUpdate ? 'UPDATE ' + DOC_STORE$1 + ' SET json=?, max_seq=?, winningseq=' + '(SELECT seq FROM ' + BY_SEQ_STORE$1 + ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?' : 'INSERT INTO ' + DOC_STORE$1 + ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';
                  var metadataStr = safeJsonStringify(docInfo.metadata);
                  var params = isUpdate ? [metadataStr, seq, winningRev$$1, id] : [id, seq, seq, metadataStr];
                  tx.executeSql(sql, params, function () {
                    results[resultsIdx] = {
                      ok: true,
                      id: docInfo.metadata.id,
                      rev: rev
                    };
                    fetchedDocs.set(id, docInfo.metadata);
                    callback();
                  });
                }
              }
              function websqlProcessDocs() {
                processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx, results, writeDoc, opts);
              }
              function fetchExistingDocs(callback) {
                if (!docInfos.length) {
                  return callback();
                }
                var numFetched = 0;
                function checkDone() {
                  if (++numFetched === docInfos.length) {
                    callback();
                  }
                }
                docInfos.forEach(function (docInfo) {
                  if (docInfo._id && isLocalId(docInfo._id)) {
                    return checkDone();
                  }
                  var id = docInfo.metadata.id;
                  tx.executeSql('SELECT json FROM ' + DOC_STORE$1 + ' WHERE id = ?', [id], function (tx, result) {
                    if (result.rows.length) {
                      var metadata = safeJsonParse(result.rows.item(0).json);
                      fetchedDocs.set(id, metadata);
                    }
                    checkDone();
                  });
                });
              }
              function saveAttachment(digest, data, callback) {
                var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';
                tx.executeSql(sql, [digest], function (tx, result) {
                  if (result.rows.length) {
                    return callback();
                  }
                  sql = 'INSERT INTO ' + ATTACH_STORE$1 + ' (digest, body, escaped) VALUES (?,?,1)';
                  tx.executeSql(sql, [digest, escapeBlob(data)], function () {
                    callback();
                  }, function () {
                    callback();
                    return false;
                  });
                });
              }
              preprocessAttachments(docInfos, 'binary', function (err) {
                if (err) {
                  return callback(err);
                }
                db.transaction(function (txn) {
                  tx = txn;
                  verifyAttachments(function (err) {
                    if (err) {
                      preconditionErrored = err;
                    } else {
                      fetchExistingDocs(websqlProcessDocs);
                    }
                  });
                }, websqlError(callback), complete);
              });
            }
            var cachedDatabases = new ExportedMap();
            function openDatabaseWithOpts(opts) {
              return opts.websql(opts.name, opts.version, opts.description, opts.size);
            }
            function openDBSafely(opts) {
              try {
                return { db: openDatabaseWithOpts(opts) };
              } catch (err) {
                return { error: err };
              }
            }
            function openDB$1(opts) {
              var cachedResult = cachedDatabases.get(opts.name);
              if (!cachedResult) {
                cachedResult = openDBSafely(opts);
                cachedDatabases.set(opts.name, cachedResult);
              }
              return cachedResult;
            }
            var websqlChanges = new Changes();
            function fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {
              var attachments = Object.keys(doc._attachments || {});
              if (!attachments.length) {
                return cb && cb();
              }
              var numDone = 0;
              function checkDone() {
                if (++numDone === attachments.length && cb) {
                  cb();
                }
              }
              function fetchAttachment(doc, att) {
                var attObj = doc._attachments[att];
                var attOpts = {
                  binary: opts.binary,
                  ctx: txn
                };
                api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {
                  doc._attachments[att] = $inject_Object_assign(pick(attObj, ['digest', 'content_type']), { data: data });
                  checkDone();
                });
              }
              attachments.forEach(function (att) {
                if (opts.attachments && opts.include_docs) {
                  fetchAttachment(doc, att);
                } else {
                  doc._attachments[att].stub = true;
                  checkDone();
                }
              });
            }
            var POUCH_VERSION = 1;
            var BY_SEQ_STORE_DELETED_INDEX_SQL = 'CREATE INDEX IF NOT EXISTS \'by-seq-deleted-idx\' ON ' + BY_SEQ_STORE$1 + ' (seq, deleted)';
            var BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL = 'CREATE UNIQUE INDEX IF NOT EXISTS \'by-seq-doc-id-rev\' ON ' + BY_SEQ_STORE$1 + ' (doc_id, rev)';
            var DOC_STORE_WINNINGSEQ_INDEX_SQL = 'CREATE INDEX IF NOT EXISTS \'doc-winningseq-idx\' ON ' + DOC_STORE$1 + ' (winningseq)';
            var ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL = 'CREATE INDEX IF NOT EXISTS \'attach-seq-seq-idx\' ON ' + ATTACH_AND_SEQ_STORE$1 + ' (seq)';
            var ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL = 'CREATE UNIQUE INDEX IF NOT EXISTS \'attach-seq-digest-idx\' ON ' + ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';
            var DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';
            var SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' + BY_SEQ_STORE$1 + '.deleted AS deleted, ' + BY_SEQ_STORE$1 + '.json AS data, ' + BY_SEQ_STORE$1 + '.rev AS rev, ' + DOC_STORE$1 + '.json AS metadata';
            function WebSqlPouch$1(opts, callback) {
              var api = this;
              var instanceId = null;
              var size = getSize(opts);
              var idRequests = [];
              var encoding;
              api._name = opts.name;
              var websqlOpts = $inject_Object_assign({}, opts, {
                version: POUCH_VERSION,
                description: opts.name,
                size: size
              });
              var openDBResult = openDB$1(websqlOpts);
              if (openDBResult.error) {
                return websqlError(callback)(openDBResult.error);
              }
              var db = openDBResult.db;
              if (typeof db.readTransaction !== 'function') {
                db.readTransaction = db.transaction;
              }
              function dbCreated() {
                if (hasLocalStorage()) {
                  window.localStorage['_pouch__websqldb_' + api._name] = true;
                }
                callback(null, api);
              }
              function runMigration2(tx, callback) {
                tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);
                tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {
                  tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);
                  tx.executeSql('ALTER TABLE ' + DOC_STORE$1 + ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {
                    tx.executeSql('CREATE INDEX IF NOT EXISTS \'doc-store-local-idx\' ON ' + DOC_STORE$1 + ' (local, id)');
                    var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 + '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';
                    tx.executeSql(sql, [], function (tx, result) {
                      var deleted = [];
                      var local = [];
                      for (var i = 0; i < result.rows.length; i++) {
                        var item = result.rows.item(i);
                        var seq = item.seq;
                        var metadata = JSON.parse(item.metadata);
                        if (isDeleted(metadata)) {
                          deleted.push(seq);
                        }
                        if (isLocalId(metadata.id)) {
                          local.push(metadata.id);
                        }
                      }
                      tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' + qMarks(local.length), local, function () {
                        tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 + ' SET deleted = 1 WHERE seq IN ' + qMarks(deleted.length), deleted, callback);
                      });
                    });
                  });
                });
              }
              function runMigration3(tx, callback) {
                var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 + ' (id UNIQUE, rev, json)';
                tx.executeSql(local, [], function () {
                  var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' + BY_SEQ_STORE$1 + '.json AS data ' + 'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq WHERE local = 1';
                  tx.executeSql(sql, [], function (tx, res) {
                    var rows = [];
                    for (var i = 0; i < res.rows.length; i++) {
                      rows.push(res.rows.item(i));
                    }
                    function doNext() {
                      if (!rows.length) {
                        return callback(tx);
                      }
                      var row = rows.shift();
                      var rev$$1 = JSON.parse(row.data)._rev;
                      tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)', [row.id, rev$$1, row.data], function (tx) {
                        tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?', [row.id], function (tx) {
                          tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [row.seq], function () {
                            doNext();
                          });
                        });
                      });
                    }
                    doNext();
                  });
                });
              }
              function runMigration4(tx, callback) {
                function updateRows(rows) {
                  function doNext() {
                    if (!rows.length) {
                      return callback(tx);
                    }
                    var row = rows.shift();
                    var doc_id_rev = parseHexString(row.hex, encoding);
                    var idx = doc_id_rev.lastIndexOf('::');
                    var doc_id = doc_id_rev.substring(0, idx);
                    var rev$$1 = doc_id_rev.substring(idx + 2);
                    var sql = 'UPDATE ' + BY_SEQ_STORE$1 + ' SET doc_id=?, rev=? WHERE doc_id_rev=?';
                    tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {
                      doNext();
                    });
                  }
                  doNext();
                }
                var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';
                tx.executeSql(sql, [], function (tx) {
                  var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';
                  tx.executeSql(sql, [], function (tx) {
                    tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {
                      var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;
                      tx.executeSql(sql, [], function (tx, res) {
                        var rows = [];
                        for (var i = 0; i < res.rows.length; i++) {
                          rows.push(res.rows.item(i));
                        }
                        updateRows(rows);
                      });
                    });
                  });
                });
              }
              function runMigration5(tx, callback) {
                function migrateAttsAndSeqs(tx) {
                  var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;
                  tx.executeSql(sql, [], function (tx, res) {
                    var count = res.rows.item(0).cnt;
                    if (!count) {
                      return callback(tx);
                    }
                    var offset = 0;
                    var pageSize = 10;
                    function nextPage() {
                      var sql = select(SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id', [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE_AND_BY_SEQ_JOINER, null, DOC_STORE$1 + '.id ');
                      sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;
                      offset += pageSize;
                      tx.executeSql(sql, [], function (tx, res) {
                        if (!res.rows.length) {
                          return callback(tx);
                        }
                        var digestSeqs = {};
                        function addDigestSeq(digest, seq) {
                          var seqs = digestSeqs[digest] = digestSeqs[digest] || [];
                          if (seqs.indexOf(seq) === -1) {
                            seqs.push(seq);
                          }
                        }
                        for (var i = 0; i < res.rows.length; i++) {
                          var row = res.rows.item(i);
                          var doc = unstringifyDoc(row.data, row.id, row.rev);
                          var atts = Object.keys(doc._attachments || {});
                          for (var j = 0; j < atts.length; j++) {
                            var att = doc._attachments[atts[j]];
                            addDigestSeq(att.digest, row.seq);
                          }
                        }
                        var digestSeqPairs = [];
                        Object.keys(digestSeqs).forEach(function (digest) {
                          var seqs = digestSeqs[digest];
                          seqs.forEach(function (seq) {
                            digestSeqPairs.push([digest, seq]);
                          });
                        });
                        if (!digestSeqPairs.length) {
                          return nextPage();
                        }
                        var numDone = 0;
                        digestSeqPairs.forEach(function (pair) {
                          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 + ' (digest, seq) VALUES (?,?)';
                          tx.executeSql(sql, pair, function () {
                            if (++numDone === digestSeqPairs.length) {
                              nextPage();
                            }
                          });
                        });
                      });
                    }
                    nextPage();
                  });
                }
                var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';
                tx.executeSql(attachAndRev, [], function (tx) {
                  tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {
                    tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [], migrateAttsAndSeqs);
                  });
                });
              }
              function runMigration6(tx, callback) {
                var sql = 'ALTER TABLE ' + ATTACH_STORE$1 + ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';
                tx.executeSql(sql, [], callback);
              }
              function runMigration7(tx, callback) {
                var sql = 'ALTER TABLE ' + DOC_STORE$1 + ' ADD COLUMN max_seq INTEGER';
                tx.executeSql(sql, [], function (tx) {
                  var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' + BY_SEQ_STORE$1 + ' WHERE doc_id=id)';
                  tx.executeSql(sql, [], function (tx) {
                    var sql = 'CREATE UNIQUE INDEX IF NOT EXISTS \'doc-max-seq-idx\' ON ' + DOC_STORE$1 + ' (max_seq)';
                    tx.executeSql(sql, [], callback);
                  });
                });
              }
              function checkEncoding(tx, cb) {
                tx.executeSql('SELECT HEX("a") AS hex', [], function (tx, res) {
                  var hex = res.rows.item(0).hex;
                  encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';
                  cb();
                });
              }
              function onGetInstanceId() {
                while (idRequests.length > 0) {
                  var idCallback = idRequests.pop();
                  idCallback(null, instanceId);
                }
              }
              function onGetVersion(tx, dbVersion) {
                if (dbVersion === 0) {
                  var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 + ' (dbid, db_version INTEGER)';
                  var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 + ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';
                  var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';
                  var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 + ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';
                  var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 + ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' + 'json, deleted TINYINT(1), doc_id, rev)';
                  var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 + ' (id UNIQUE, rev, json)';
                  tx.executeSql(attach);
                  tx.executeSql(local);
                  tx.executeSql(attachAndRev, [], function () {
                    tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);
                    tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);
                  });
                  tx.executeSql(doc, [], function () {
                    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);
                    tx.executeSql(seq, [], function () {
                      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);
                      tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);
                      tx.executeSql(meta, [], function () {
                        var initSeq = 'INSERT INTO ' + META_STORE$1 + ' (db_version, dbid) VALUES (?,?)';
                        instanceId = uuid();
                        var initSeqArgs = [ADAPTER_VERSION$1, instanceId];
                        tx.executeSql(initSeq, initSeqArgs, function () {
                          onGetInstanceId();
                        });
                      });
                    });
                  });
                } else {
                  var setupDone = function () {
                    var migrated = dbVersion < ADAPTER_VERSION$1;
                    if (migrated) {
                      tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' + ADAPTER_VERSION$1);
                    }
                    var sql = 'SELECT dbid FROM ' + META_STORE$1;
                    tx.executeSql(sql, [], function (tx, result) {
                      instanceId = result.rows.item(0).dbid;
                      onGetInstanceId();
                    });
                  };
                  var tasks = [runMigration2, runMigration3, runMigration4, runMigration5, runMigration6, runMigration7, setupDone];
                  var i = dbVersion;
                  var nextMigration = function (tx) {
                    tasks[i - 1](tx, nextMigration);
                    i++;
                  };
                  nextMigration(tx);
                }
              }
              function setup() {
                db.transaction(function (tx) {
                  checkEncoding(tx, function () {
                    fetchVersion(tx);
                  });
                }, websqlError(callback), dbCreated);
              }
              function fetchVersion(tx) {
                var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;
                tx.executeSql(sql, [], function (tx, result) {
                  if (!result.rows.length) {
                    onGetVersion(tx, 0);
                  } else if (!/db_version/.test(result.rows.item(0).sql)) {
                    tx.executeSql('ALTER TABLE ' + META_STORE$1 + ' ADD COLUMN db_version INTEGER', [], function () {
                      onGetVersion(tx, 1);
                    });
                  } else {
                    tx.executeSql('SELECT db_version FROM ' + META_STORE$1, [], function (tx, result) {
                      var dbVersion = result.rows.item(0).db_version;
                      onGetVersion(tx, dbVersion);
                    });
                  }
                });
              }
              setup();
              function getMaxSeq(tx, callback) {
                var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;
                tx.executeSql(sql, [], function (tx, res) {
                  var updateSeq = res.rows.item(0).seq || 0;
                  callback(updateSeq);
                });
              }
              function countDocs(tx, callback) {
                var sql = select('COUNT(' + DOC_STORE$1 + '.id) AS \'num\'', [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE_AND_BY_SEQ_JOINER, BY_SEQ_STORE$1 + '.deleted=0');
                tx.executeSql(sql, [], function (tx, result) {
                  callback(result.rows.item(0).num);
                });
              }
              api._remote = false;
              api.type = function () {
                return 'websql';
              };
              api._id = toPromise(function (callback) {
                callback(null, instanceId);
              });
              api._info = function (callback) {
                var seq;
                var docCount;
                db.readTransaction(function (tx) {
                  getMaxSeq(tx, function (theSeq) {
                    seq = theSeq;
                  });
                  countDocs(tx, function (theDocCount) {
                    docCount = theDocCount;
                  });
                }, websqlError(callback), function () {
                  callback(null, {
                    doc_count: docCount,
                    update_seq: seq,
                    websql_encoding: encoding
                  });
                });
              };
              api._bulkDocs = function (req, reqOpts, callback) {
                websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);
              };
              function latest$$1(tx, id, rev$$1, callback, finish) {
                var sql = select(SELECT_DOCS, [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE_AND_BY_SEQ_JOINER, DOC_STORE$1 + '.id=?');
                var sqlArgs = [id];
                tx.executeSql(sql, sqlArgs, function (a, results) {
                  if (!results.rows.length) {
                    var err = createError(MISSING_DOC, 'missing');
                    return finish(err);
                  }
                  var item = results.rows.item(0);
                  var metadata = safeJsonParse(item.metadata);
                  callback(latest(rev$$1, metadata));
                });
              }
              api._get = function (id, opts, callback) {
                var doc;
                var metadata;
                var tx = opts.ctx;
                if (!tx) {
                  return db.readTransaction(function (txn) {
                    api._get(id, $inject_Object_assign({ ctx: txn }, opts), callback);
                  });
                }
                function finish(err) {
                  callback(err, {
                    doc: doc,
                    metadata: metadata,
                    ctx: tx
                  });
                }
                var sql;
                var sqlArgs;
                if (!opts.rev) {
                  sql = select(SELECT_DOCS, [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE_AND_BY_SEQ_JOINER, DOC_STORE$1 + '.id=?');
                  sqlArgs = [id];
                } else if (opts.latest) {
                  latest$$1(tx, id, opts.rev, function (latestRev) {
                    opts.latest = false;
                    opts.rev = latestRev;
                    api._get(id, opts, callback);
                  }, finish);
                  return;
                } else {
                  sql = select(SELECT_DOCS, [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id', [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);
                  sqlArgs = [id, opts.rev];
                }
                tx.executeSql(sql, sqlArgs, function (a, results) {
                  if (!results.rows.length) {
                    var missingErr = createError(MISSING_DOC, 'missing');
                    return finish(missingErr);
                  }
                  var item = results.rows.item(0);
                  metadata = safeJsonParse(item.metadata);
                  if (item.deleted && !opts.rev) {
                    var deletedErr = createError(MISSING_DOC, 'deleted');
                    return finish(deletedErr);
                  }
                  doc = unstringifyDoc(item.data, metadata.id, item.rev);
                  finish();
                });
              };
              api._allDocs = function (opts, callback) {
                var results = [];
                var totalRows;
                var start = 'startkey' in opts ? opts.startkey : false;
                var end = 'endkey' in opts ? opts.endkey : false;
                var key = 'key' in opts ? opts.key : false;
                var descending = 'descending' in opts ? opts.descending : false;
                var limit = 'limit' in opts ? opts.limit : -1;
                var offset = 'skip' in opts ? opts.skip : 0;
                var inclusiveEnd = opts.inclusive_end !== false;
                var sqlArgs = [];
                var criteria = [];
                if (key !== false) {
                  criteria.push(DOC_STORE$1 + '.id = ?');
                  sqlArgs.push(key);
                } else if (start !== false || end !== false) {
                  if (start !== false) {
                    criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');
                    sqlArgs.push(start);
                  }
                  if (end !== false) {
                    var comparator = descending ? '>' : '<';
                    if (inclusiveEnd) {
                      comparator += '=';
                    }
                    criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');
                    sqlArgs.push(end);
                  }
                  if (key !== false) {
                    criteria.push(DOC_STORE$1 + '.id = ?');
                    sqlArgs.push(key);
                  }
                }
                if (opts.deleted !== 'ok') {
                  criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');
                }
                db.readTransaction(function (tx) {
                  countDocs(tx, function (docCount) {
                    totalRows = docCount;
                  });
                  if (limit === 0) {
                    return;
                  }
                  var sql = select(SELECT_DOCS, [DOC_STORE$1, BY_SEQ_STORE$1], DOC_STORE_AND_BY_SEQ_JOINER, criteria, DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC'));
                  sql += ' LIMIT ' + limit + ' OFFSET ' + offset;
                  tx.executeSql(sql, sqlArgs, function (tx, result) {
                    for (var i = 0, l = result.rows.length; i < l; i++) {
                      var item = result.rows.item(i);
                      var metadata = safeJsonParse(item.metadata);
                      var id = metadata.id;
                      var data = unstringifyDoc(item.data, id, item.rev);
                      var winningRev$$1 = data._rev;
                      var doc = {
                        id: id,
                        key: id,
                        value: { rev: winningRev$$1 }
                      };
                      if (opts.include_docs) {
                        doc.doc = data;
                        doc.doc._rev = winningRev$$1;
                        if (opts.conflicts) {
                          var conflicts = collectConflicts(metadata);
                          if (conflicts.length) {
                            doc.doc._conflicts = conflicts;
                          }
                        }
                        fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);
                      }
                      if (item.deleted) {
                        if (opts.deleted === 'ok') {
                          doc.value.deleted = true;
                          doc.doc = null;
                        } else {
                          continue;
                        }
                      }
                      results.push(doc);
                    }
                  });
                }, websqlError(callback), function () {
                  callback(null, {
                    total_rows: totalRows,
                    offset: opts.skip,
                    rows: results
                  });
                });
              };
              api._changes = function (opts) {
                opts = clone(opts);
                if (opts.continuous) {
                  var id = api._name + ':' + uuid();
                  websqlChanges.addListener(api._name, id, api, opts);
                  websqlChanges.notify(api._name);
                  return { cancel: function () {
                      websqlChanges.removeListener(api._name, id);
                    } };
                }
                var descending = opts.descending;
                opts.since = opts.since && !descending ? opts.since : 0;
                var limit = 'limit' in opts ? opts.limit : -1;
                if (limit === 0) {
                  limit = 1;
                }
                var returnDocs;
                if ('return_docs' in opts) {
                  returnDocs = opts.return_docs;
                } else if ('returnDocs' in opts) {
                  returnDocs = opts.returnDocs;
                } else {
                  returnDocs = true;
                }
                var results = [];
                var numResults = 0;
                function fetchChanges() {
                  var selectStmt = DOC_STORE$1 + '.json AS metadata, ' + DOC_STORE$1 + '.max_seq AS maxSeq, ' + BY_SEQ_STORE$1 + '.json AS winningDoc, ' + BY_SEQ_STORE$1 + '.rev AS winningRev ';
                  var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;
                  var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' + ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';
                  var criteria = ['maxSeq > ?'];
                  var sqlArgs = [opts.since];
                  if (opts.doc_ids) {
                    criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));
                    sqlArgs = sqlArgs.concat(opts.doc_ids);
                  }
                  var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');
                  var sql = select(selectStmt, from, joiner, criteria, orderBy);
                  var filter = filterChange(opts);
                  if (!opts.view && !opts.filter) {
                    sql += ' LIMIT ' + limit;
                  }
                  var lastSeq = opts.since || 0;
                  db.readTransaction(function (tx) {
                    tx.executeSql(sql, sqlArgs, function (tx, result) {
                      function reportChange(change) {
                        return function () {
                          opts.onChange(change);
                        };
                      }
                      for (var i = 0, l = result.rows.length; i < l; i++) {
                        var item = result.rows.item(i);
                        var metadata = safeJsonParse(item.metadata);
                        lastSeq = item.maxSeq;
                        var doc = unstringifyDoc(item.winningDoc, metadata.id, item.winningRev);
                        var change = opts.processChange(doc, metadata, opts);
                        change.seq = item.maxSeq;
                        var filtered = filter(change);
                        if (typeof filtered === 'object') {
                          return opts.complete(filtered);
                        }
                        if (filtered) {
                          numResults++;
                          if (returnDocs) {
                            results.push(change);
                          }
                          if (opts.attachments && opts.include_docs) {
                            fetchAttachmentsIfNecessary$1(doc, opts, api, tx, reportChange(change));
                          } else {
                            reportChange(change)();
                          }
                        }
                        if (numResults === limit) {
                          break;
                        }
                      }
                    });
                  }, websqlError(opts.complete), function () {
                    if (!opts.continuous) {
                      opts.complete(null, {
                        results: results,
                        last_seq: lastSeq
                      });
                    }
                  });
                }
                fetchChanges();
              };
              api._close = function (callback) {
                callback();
              };
              api._getAttachment = function (docId, attachId, attachment, opts, callback) {
                var res;
                var tx = opts.ctx;
                var digest = attachment.digest;
                var type = attachment.content_type;
                var sql = 'SELECT escaped, ' + 'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';
                tx.executeSql(sql, [digest], function (tx, result) {
                  var item = result.rows.item(0);
                  var data = item.escaped ? unescapeBlob(item.body) : parseHexString(item.body, encoding);
                  if (opts.binary) {
                    res = binStringToBluffer(data, type);
                  } else {
                    res = thisBtoa(data);
                  }
                  callback(null, res);
                });
              };
              api._getRevisionTree = function (docId, callback) {
                db.readTransaction(function (tx) {
                  var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';
                  tx.executeSql(sql, [docId], function (tx, result) {
                    if (!result.rows.length) {
                      callback(createError(MISSING_DOC));
                    } else {
                      var data = safeJsonParse(result.rows.item(0).metadata);
                      callback(null, data.rev_tree);
                    }
                  });
                });
              };
              api._doCompaction = function (docId, revs, callback) {
                if (!revs.length) {
                  return callback();
                }
                db.transaction(function (tx) {
                  var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';
                  tx.executeSql(sql, [docId], function (tx, result) {
                    var metadata = safeJsonParse(result.rows.item(0).metadata);
                    traverseRevTree(metadata.rev_tree, function (isLeaf, pos, revHash, ctx, opts) {
                      var rev$$1 = pos + '-' + revHash;
                      if (revs.indexOf(rev$$1) !== -1) {
                        opts.status = 'missing';
                      }
                    });
                    var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';
                    tx.executeSql(sql, [safeJsonStringify(metadata), docId]);
                  });
                  compactRevs$1(revs, docId, tx);
                }, websqlError(callback), function () {
                  callback();
                });
              };
              api._getLocal = function (id, callback) {
                db.readTransaction(function (tx) {
                  var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';
                  tx.executeSql(sql, [id], function (tx, res) {
                    if (res.rows.length) {
                      var item = res.rows.item(0);
                      var doc = unstringifyDoc(item.json, id, item.rev);
                      callback(null, doc);
                    } else {
                      callback(createError(MISSING_DOC));
                    }
                  });
                });
              };
              api._putLocal = function (doc, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                delete doc._revisions;
                var oldRev = doc._rev;
                var id = doc._id;
                var newRev;
                if (!oldRev) {
                  newRev = doc._rev = '0-1';
                } else {
                  newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);
                }
                var json = stringifyDoc(doc);
                var ret;
                function putLocal(tx) {
                  var sql;
                  var values;
                  if (oldRev) {
                    sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' + 'WHERE id=? AND rev=?';
                    values = [newRev, json, id, oldRev];
                  } else {
                    sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';
                    values = [id, newRev, json];
                  }
                  tx.executeSql(sql, values, function (tx, res) {
                    if (res.rowsAffected) {
                      ret = {
                        ok: true,
                        id: id,
                        rev: newRev
                      };
                      if (opts.ctx) {
                        callback(null, ret);
                      }
                    } else {
                      callback(createError(REV_CONFLICT));
                    }
                  }, function () {
                    callback(createError(REV_CONFLICT));
                    return false;
                  });
                }
                if (opts.ctx) {
                  putLocal(opts.ctx);
                } else {
                  db.transaction(putLocal, websqlError(callback), function () {
                    if (ret) {
                      callback(null, ret);
                    }
                  });
                }
              };
              api._removeLocal = function (doc, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                var ret;
                function removeLocal(tx) {
                  var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';
                  var params = [doc._id, doc._rev];
                  tx.executeSql(sql, params, function (tx, res) {
                    if (!res.rowsAffected) {
                      return callback(createError(MISSING_DOC));
                    }
                    ret = {
                      ok: true,
                      id: doc._id,
                      rev: '0-0'
                    };
                    if (opts.ctx) {
                      callback(null, ret);
                    }
                  });
                }
                if (opts.ctx) {
                  removeLocal(opts.ctx);
                } else {
                  db.transaction(removeLocal, websqlError(callback), function () {
                    if (ret) {
                      callback(null, ret);
                    }
                  });
                }
              };
              api._destroy = function (opts, callback) {
                websqlChanges.removeAllListeners(api._name);
                db.transaction(function (tx) {
                  var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1, LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];
                  stores.forEach(function (store) {
                    tx.executeSql('DROP TABLE IF EXISTS ' + store, []);
                  });
                }, websqlError(callback), function () {
                  if (hasLocalStorage()) {
                    delete window.localStorage['_pouch__websqldb_' + api._name];
                    delete window.localStorage[api._name];
                  }
                  callback(null, { 'ok': true });
                });
              };
            }
            function canOpenTestDB() {
              try {
                openDatabase('_pouch_validate_websql', 1, '', 1);
                return true;
              } catch (err) {
                return false;
              }
            }
            function isValidWebSQL() {
              if (typeof indexedDB === 'undefined' || indexedDB === null || !/iP(hone|od|ad)/.test(navigator.userAgent)) {
                return true;
              }
              var hasLS = hasLocalStorage();
              var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;
              if (hasLS && localStorage[localStorageKey]) {
                return localStorage[localStorageKey] === '1';
              }
              var openedTestDB = canOpenTestDB();
              if (hasLS) {
                localStorage[localStorageKey] = openedTestDB ? '1' : '0';
              }
              return openedTestDB;
            }
            function valid() {
              if (typeof openDatabase !== 'function') {
                return false;
              }
              return isValidWebSQL();
            }
            function openDB(name, version, description, size) {
              return openDatabase(name, version, description, size);
            }
            function WebSQLPouch(opts, callback) {
              var _opts = $inject_Object_assign({ websql: openDB }, opts);
              WebSqlPouch$1.call(this, _opts, callback);
            }
            WebSQLPouch.valid = valid;
            WebSQLPouch.use_prefix = true;
            var WebSqlPouch = function (PouchDB) {
              PouchDB.adapter('websql', WebSQLPouch, true);
            };
            function wrappedFetch() {
              var wrappedPromise = {};
              var promise = new PouchPromise$1(function (resolve, reject) {
                wrappedPromise.resolve = resolve;
                wrappedPromise.reject = reject;
              });
              var args = new Array(arguments.length);
              for (var i = 0; i < args.length; i++) {
                args[i] = arguments[i];
              }
              wrappedPromise.promise = promise;
              PouchPromise$1.resolve().then(function () {
                return fetch.apply(null, args);
              }).then(function (response) {
                wrappedPromise.resolve(response);
              })["catch"](function (error) {
                wrappedPromise.reject(error);
              });
              return wrappedPromise;
            }
            function fetchRequest(options, callback) {
              var wrappedPromise, timer, response;
              var headers = new Headers();
              var fetchOptions = {
                method: options.method,
                credentials: 'include',
                headers: headers
              };
              if (options.json) {
                headers.set('Accept', 'application/json');
                headers.set('Content-Type', options.headers['Content-Type'] || 'application/json');
              }
              if (options.body && options.processData && typeof options.body !== 'string') {
                fetchOptions.body = JSON.stringify(options.body);
              } else if ('body' in options) {
                fetchOptions.body = options.body;
              } else {
                fetchOptions.body = null;
              }
              Object.keys(options.headers).forEach(function (key) {
                if (options.headers.hasOwnProperty(key)) {
                  headers.set(key, options.headers[key]);
                }
              });
              wrappedPromise = wrappedFetch(options.url, fetchOptions);
              if (options.timeout > 0) {
                timer = setTimeout(function () {
                  wrappedPromise.reject(new Error('Load timeout for resource: ' + options.url));
                }, options.timeout);
              }
              wrappedPromise.promise.then(function (fetchResponse) {
                response = { statusCode: fetchResponse.status };
                if (options.timeout > 0) {
                  clearTimeout(timer);
                }
                if (response.statusCode >= 200 && response.statusCode < 300) {
                  return options.binary ? fetchResponse.blob() : fetchResponse.text();
                }
                return fetchResponse.json();
              }).then(function (result) {
                if (response.statusCode >= 200 && response.statusCode < 300) {
                  callback(null, response, result);
                } else {
                  result.status = response.statusCode;
                  callback(result);
                }
              })["catch"](function (error) {
                if (!error) {
                  error = new Error('canceled');
                }
                callback(error);
              });
              return { abort: wrappedPromise.reject };
            }
            function xhRequest(options, callback) {
              var xhr, timer;
              var timedout = false;
              var abortReq = function () {
                xhr.abort();
                cleanUp();
              };
              var timeoutReq = function () {
                timedout = true;
                xhr.abort();
                cleanUp();
              };
              var ret = { abort: abortReq };
              var cleanUp = function () {
                clearTimeout(timer);
                ret.abort = function () {};
                if (xhr) {
                  xhr.onprogress = undefined;
                  if (xhr.upload) {
                    xhr.upload.onprogress = undefined;
                  }
                  xhr.onreadystatechange = undefined;
                  xhr = undefined;
                }
              };
              if (options.xhr) {
                xhr = new options.xhr();
              } else {
                xhr = new XMLHttpRequest();
              }
              try {
                xhr.open(options.method, options.url);
              } catch (exception) {
                return callback(new Error(exception.name || 'Url is invalid'));
              }
              xhr.withCredentials = 'withCredentials' in options ? options.withCredentials : true;
              if (options.method === 'GET') {
                delete options.headers['Content-Type'];
              } else if (options.json) {
                options.headers.Accept = 'application/json';
                options.headers['Content-Type'] = options.headers['Content-Type'] || 'application/json';
                if (options.body && options.processData && typeof options.body !== "string") {
                  options.body = JSON.stringify(options.body);
                }
              }
              if (options.binary) {
                xhr.responseType = 'arraybuffer';
              }
              if (!('body' in options)) {
                options.body = null;
              }
              for (var key in options.headers) {
                if (options.headers.hasOwnProperty(key)) {
                  xhr.setRequestHeader(key, options.headers[key]);
                }
              }
              if (options.timeout > 0) {
                timer = setTimeout(timeoutReq, options.timeout);
                xhr.onprogress = function () {
                  clearTimeout(timer);
                  if (xhr.readyState !== 4) {
                    timer = setTimeout(timeoutReq, options.timeout);
                  }
                };
                if (typeof xhr.upload !== 'undefined') {
                  xhr.upload.onprogress = xhr.onprogress;
                }
              }
              xhr.onreadystatechange = function () {
                if (xhr.readyState !== 4) {
                  return;
                }
                var response = { statusCode: xhr.status };
                if (xhr.status >= 200 && xhr.status < 300) {
                  var data;
                  if (options.binary) {
                    data = createBlob([xhr.response || ''], { type: xhr.getResponseHeader('Content-Type') });
                  } else {
                    data = xhr.responseText;
                  }
                  callback(null, response, data);
                } else {
                  var err = {};
                  if (timedout) {
                    err = new Error('ETIMEDOUT');
                    err.code = 'ETIMEDOUT';
                  } else if (typeof xhr.response === 'string') {
                    try {
                      err = JSON.parse(xhr.response);
                    } catch (e) {}
                  }
                  err.status = xhr.status;
                  callback(err);
                }
                cleanUp();
              };
              if (options.body && options.body instanceof Blob) {
                readAsArrayBuffer(options.body, function (arrayBuffer) {
                  xhr.send(arrayBuffer);
                });
              } else {
                xhr.send(options.body);
              }
              return ret;
            }
            function testXhr() {
              try {
                new XMLHttpRequest();
                return true;
              } catch (err) {
                return false;
              }
            }
            var hasXhr = testXhr();
            function ajax$1(options, callback) {
              if (!false && (hasXhr || options.xhr)) {
                return xhRequest(options, callback);
              } else {
                return fetchRequest(options, callback);
              }
            }
            var res$2 = function () {};
            function defaultBody() {
              return '';
            }
            function ajaxCore$1(options, callback) {
              options = clone(options);
              var defaultOptions = {
                method: "GET",
                headers: {},
                json: true,
                processData: true,
                timeout: 10000,
                cache: false
              };
              options = $inject_Object_assign(defaultOptions, options);
              function onSuccess(obj, resp, cb) {
                if (!options.binary && options.json && typeof obj === 'string') {
                  try {
                    obj = JSON.parse(obj);
                  } catch (e) {
                    return cb(e);
                  }
                }
                if (Array.isArray(obj)) {
                  obj = obj.map(function (v) {
                    if (v.error || v.missing) {
                      return generateErrorFromResponse(v);
                    } else {
                      return v;
                    }
                  });
                }
                if (options.binary) {
                  res$2(obj, resp);
                }
                cb(null, obj, resp);
              }
              if (options.json) {
                if (!options.binary) {
                  options.headers.Accept = 'application/json';
                }
                options.headers['Content-Type'] = options.headers['Content-Type'] || 'application/json';
              }
              if (options.binary) {
                options.encoding = null;
                options.json = false;
              }
              if (!options.processData) {
                options.json = false;
              }
              return ajax$1(options, function (err, response, body) {
                if (err) {
                  return callback(generateErrorFromResponse(err));
                }
                var error;
                var content_type = response.headers && response.headers['content-type'];
                var data = body || defaultBody();
                if (!options.binary && (options.json || !options.processData) && typeof data !== 'object' && (/json/.test(content_type) || /^[\s]*\{/.test(data) && /\}[\s]*$/.test(data))) {
                  try {
                    data = JSON.parse(data.toString());
                  } catch (e) {}
                }
                if (response.statusCode >= 200 && response.statusCode < 300) {
                  onSuccess(data, response, callback);
                } else {
                  error = generateErrorFromResponse(data);
                  error.status = response.statusCode;
                  callback(error);
                }
              });
            }
            function ajax(opts, callback) {
              var ua = navigator && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';
              var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;
              var isIE = ua.indexOf('msie') !== -1;
              var isEdge = ua.indexOf('edge') !== -1;
              var shouldCacheBust = isSafari || (isIE || isEdge) && opts.method === 'GET';
              var cache = 'cache' in opts ? opts.cache : true;
              var isBlobUrl = /^blob:/.test(opts.url);
              if (!isBlobUrl && (shouldCacheBust || !cache)) {
                var hasArgs = opts.url.indexOf('?') !== -1;
                opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();
              }
              return ajaxCore$1(opts, callback);
            }
            function pool(promiseFactories, limit) {
              return new PouchPromise$1(function (resolve, reject) {
                var running = 0;
                var current = 0;
                var done = 0;
                var len = promiseFactories.length;
                var err;
                function runNext() {
                  running++;
                  promiseFactories[current++]().then(onSuccess, onError);
                }
                function doNext() {
                  if (++done === len) {
                    if (err) {
                      reject(err);
                    } else {
                      resolve();
                    }
                  } else {
                    runNextBatch();
                  }
                }
                function onSuccess() {
                  running--;
                  doNext();
                }
                function onError(thisErr) {
                  running--;
                  err = err || thisErr;
                  doNext();
                }
                function runNextBatch() {
                  while (running < limit && current < len) {
                    runNext();
                  }
                }
                runNextBatch();
              });
            }
            var CHANGES_BATCH_SIZE = 25;
            var MAX_SIMULTANEOUS_REVS = 50;
            var CHANGES_TIMEOUT_BUFFER = 5000;
            var DEFAULT_HEARTBEAT = 10000;
            var supportsBulkGetMap = {};
            function readAttachmentsAsBlobOrBuffer(row) {
              var atts = row.doc && row.doc._attachments;
              if (!atts) {
                return;
              }
              Object.keys(atts).forEach(function (filename) {
                var att = atts[filename];
                att.data = b64ToBluffer(att.data, att.content_type);
              });
            }
            function encodeDocId(id) {
              if (/^_design/.test(id)) {
                return '_design/' + encodeURIComponent(id.slice(8));
              }
              if (/^_local/.test(id)) {
                return '_local/' + encodeURIComponent(id.slice(7));
              }
              return encodeURIComponent(id);
            }
            function preprocessAttachments$2(doc) {
              if (!doc._attachments || !Object.keys(doc._attachments)) {
                return PouchPromise$1.resolve();
              }
              return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {
                var attachment = doc._attachments[key];
                if (attachment.data && typeof attachment.data !== 'string') {
                  return new PouchPromise$1(function (resolve) {
                    blobToBase64(attachment.data, resolve);
                  }).then(function (b64) {
                    attachment.data = b64;
                  });
                }
              }));
            }
            function hasUrlPrefix(opts) {
              if (!opts.prefix) {
                return false;
              }
              var protocol = parseUri(opts.prefix).protocol;
              return protocol === 'http' || protocol === 'https';
            }
            function getHost(name, opts) {
              if (hasUrlPrefix(opts)) {
                var dbName = opts.name.substr(opts.prefix.length);
                name = opts.prefix + encodeURIComponent(dbName);
              }
              var uri = parseUri(name);
              if (uri.user || uri.password) {
                uri.auth = {
                  username: uri.user,
                  password: uri.password
                };
              }
              var parts = uri.path.replace(/(^\/|\/$)/g, '').split('/');
              uri.db = parts.pop();
              if (uri.db.indexOf('%') === -1) {
                uri.db = encodeURIComponent(uri.db);
              }
              uri.path = parts.join('/');
              return uri;
            }
            function genDBUrl(opts, path) {
              return genUrl(opts, opts.db + '/' + path);
            }
            function genUrl(opts, path) {
              var pathDel = !opts.path ? '' : '/';
              return opts.protocol + '://' + opts.host + (opts.port ? ':' + opts.port : '') + '/' + opts.path + pathDel + path;
            }
            function paramsToStr(params) {
              return '?' + Object.keys(params).map(function (k) {
                return k + '=' + encodeURIComponent(params[k]);
              }).join('&');
            }
            function HttpPouch(opts, callback) {
              var api = this;
              var host = getHost(opts.name, opts);
              var dbUrl = genDBUrl(host, '');
              opts = clone(opts);
              var ajaxOpts = opts.ajax || {};
              if (opts.auth || host.auth) {
                var nAuth = opts.auth || host.auth;
                var str = nAuth.username + ':' + nAuth.password;
                var token = thisBtoa(unescape(encodeURIComponent(str)));
                ajaxOpts.headers = ajaxOpts.headers || {};
                ajaxOpts.headers.Authorization = 'Basic ' + token;
              }
              api._ajax = ajax;
              function ajax$$1(userOpts, options, callback) {
                var reqAjax = userOpts.ajax || {};
                var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);
                var defaultHeaders = clone(ajaxOpts.headers || {});
                reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers, options.headers || {});
                if (api.constructor.listeners('debug').length) {
                  api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);
                }
                return api._ajax(reqOpts, callback);
              }
              function ajaxPromise(userOpts, opts) {
                return new PouchPromise$1(function (resolve, reject) {
                  ajax$$1(userOpts, opts, function (err, res) {
                    if (err) {
                      return reject(err);
                    }
                    resolve(res);
                  });
                });
              }
              function adapterFun$$1(name, fun) {
                return adapterFun(name, getArguments(function (args) {
                  setup().then(function () {
                    return fun.apply(this, args);
                  })["catch"](function (e) {
                    var callback = args.pop();
                    callback(e);
                  });
                }));
              }
              var setupPromise;
              function setup() {
                if (opts.skipSetup || opts.skip_setup) {
                  return PouchPromise$1.resolve();
                }
                if (setupPromise) {
                  return setupPromise;
                }
                var checkExists = {
                  method: 'GET',
                  url: dbUrl
                };
                setupPromise = ajaxPromise({}, checkExists)["catch"](function (err) {
                  if (err && err.status && err.status === 404) {
                    explainError(404, 'PouchDB is just detecting if the remote exists.');
                    return ajaxPromise({}, {
                      method: 'PUT',
                      url: dbUrl
                    });
                  } else {
                    return PouchPromise$1.reject(err);
                  }
                })["catch"](function (err) {
                  if (err && err.status && err.status === 412) {
                    return true;
                  }
                  return PouchPromise$1.reject(err);
                });
                setupPromise["catch"](function () {
                  setupPromise = null;
                });
                return setupPromise;
              }
              nextTick(function () {
                callback(null, api);
              });
              api._remote = true;
              api.type = function () {
                return 'http';
              };
              api.id = adapterFun$$1('id', function (callback) {
                ajax$$1({}, {
                  method: 'GET',
                  url: genUrl(host, '')
                }, function (err, result) {
                  var uuid$$1 = result && result.uuid ? result.uuid + host.db : genDBUrl(host, '');
                  callback(null, uuid$$1);
                });
              });
              api.request = adapterFun$$1('request', function (options, callback) {
                options.url = genDBUrl(host, options.url);
                ajax$$1({}, options, callback);
              });
              api.compact = adapterFun$$1('compact', function (opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                opts = clone(opts);
                ajax$$1(opts, {
                  url: genDBUrl(host, '_compact'),
                  method: 'POST'
                }, function () {
                  function ping() {
                    api.info(function (err, res) {
                      if (res && !res.compact_running) {
                        callback(null, { ok: true });
                      } else {
                        setTimeout(ping, opts.interval || 200);
                      }
                    });
                  }
                  ping();
                });
              });
              api.bulkGet = adapterFun('bulkGet', function (opts, callback) {
                var self = this;
                function doBulkGet(cb) {
                  var params = {};
                  if (opts.revs) {
                    params.revs = true;
                  }
                  if (opts.attachments) {
                    params.attachments = true;
                  }
                  if (opts.latest) {
                    params.latest = true;
                  }
                  ajax$$1(opts, {
                    url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),
                    method: 'POST',
                    body: { docs: opts.docs }
                  }, cb);
                }
                function doBulkGetShim() {
                  var batchSize = MAX_SIMULTANEOUS_REVS;
                  var numBatches = Math.ceil(opts.docs.length / batchSize);
                  var numDone = 0;
                  var results = new Array(numBatches);
                  function onResult(batchNum) {
                    return function (err, res) {
                      results[batchNum] = res.results;
                      if (++numDone === numBatches) {
                        callback(null, { results: flatten(results) });
                      }
                    };
                  }
                  for (var i = 0; i < numBatches; i++) {
                    var subOpts = pick(opts, ['revs', 'attachments', 'latest']);
                    subOpts.ajax = ajaxOpts;
                    subOpts.docs = opts.docs.slice(i * batchSize, Math.min(opts.docs.length, (i + 1) * batchSize));
                    bulkGet(self, subOpts, onResult(i));
                  }
                }
                var dbUrl = genUrl(host, '');
                var supportsBulkGet = supportsBulkGetMap[dbUrl];
                if (typeof supportsBulkGet !== 'boolean') {
                  doBulkGet(function (err, res) {
                    if (err) {
                      supportsBulkGetMap[dbUrl] = false;
                      explainError(err.status, 'PouchDB is just detecting if the remote ' + 'supports the _bulk_get API.');
                      doBulkGetShim();
                    } else {
                      supportsBulkGetMap[dbUrl] = true;
                      callback(null, res);
                    }
                  });
                } else if (supportsBulkGet) {
                  doBulkGet(callback);
                } else {
                  doBulkGetShim();
                }
              });
              api._info = function (callback) {
                setup().then(function () {
                  ajax$$1({}, {
                    method: 'GET',
                    url: genDBUrl(host, '')
                  }, function (err, res) {
                    if (err) {
                      return callback(err);
                    }
                    res.host = genDBUrl(host, '');
                    callback(null, res);
                  });
                })["catch"](callback);
              };
              api.get = adapterFun$$1('get', function (id, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                opts = clone(opts);
                var params = {};
                if (opts.revs) {
                  params.revs = true;
                }
                if (opts.revs_info) {
                  params.revs_info = true;
                }
                if (opts.latest) {
                  params.latest = true;
                }
                if (opts.open_revs) {
                  if (opts.open_revs !== "all") {
                    opts.open_revs = JSON.stringify(opts.open_revs);
                  }
                  params.open_revs = opts.open_revs;
                }
                if (opts.rev) {
                  params.rev = opts.rev;
                }
                if (opts.conflicts) {
                  params.conflicts = opts.conflicts;
                }
                id = encodeDocId(id);
                var options = {
                  method: 'GET',
                  url: genDBUrl(host, id + paramsToStr(params))
                };
                function fetchAttachments(doc) {
                  var atts = doc._attachments;
                  var filenames = atts && Object.keys(atts);
                  if (!atts || !filenames.length) {
                    return;
                  }
                  function fetch(filename) {
                    var att = atts[filename];
                    var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) + '?rev=' + doc._rev;
                    return ajaxPromise(opts, {
                      method: 'GET',
                      url: genDBUrl(host, path),
                      binary: true
                    }).then(function (blob) {
                      if (opts.binary) {
                        return blob;
                      }
                      return new PouchPromise$1(function (resolve) {
                        blobToBase64(blob, resolve);
                      });
                    }).then(function (data) {
                      delete att.stub;
                      delete att.length;
                      att.data = data;
                    });
                  }
                  var promiseFactories = filenames.map(function (filename) {
                    return function () {
                      return fetch(filename);
                    };
                  });
                  return pool(promiseFactories, 5);
                }
                function fetchAllAttachments(docOrDocs) {
                  if (Array.isArray(docOrDocs)) {
                    return PouchPromise$1.all(docOrDocs.map(function (doc) {
                      if (doc.ok) {
                        return fetchAttachments(doc.ok);
                      }
                    }));
                  }
                  return fetchAttachments(docOrDocs);
                }
                ajaxPromise(opts, options).then(function (res) {
                  return PouchPromise$1.resolve().then(function () {
                    if (opts.attachments) {
                      return fetchAllAttachments(res);
                    }
                  }).then(function () {
                    callback(null, res);
                  });
                })["catch"](function (e) {
                  e.docId = id;
                  callback(e);
                });
              });
              api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, callback) {
                var doc;
                if (typeof optsOrRev === 'string') {
                  doc = {
                    _id: docOrId,
                    _rev: optsOrRev
                  };
                  if (typeof opts === 'function') {
                    callback = opts;
                    opts = {};
                  }
                } else {
                  doc = docOrId;
                  if (typeof optsOrRev === 'function') {
                    callback = optsOrRev;
                    opts = {};
                  } else {
                    callback = opts;
                    opts = optsOrRev;
                  }
                }
                var rev$$1 = doc._rev || opts.rev;
                ajax$$1(opts, {
                  method: 'DELETE',
                  url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1
                }, callback);
              });
              function encodeAttachmentId(attachmentId) {
                return attachmentId.split("/").map(encodeURIComponent).join("/");
              }
              api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                var params = opts.rev ? '?rev=' + opts.rev : '';
                var url = genDBUrl(host, encodeDocId(docId)) + '/' + encodeAttachmentId(attachmentId) + params;
                ajax$$1(opts, {
                  method: 'GET',
                  url: url,
                  binary: true
                }, callback);
              });
              api.removeAttachment = adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1, callback) {
                var url = genDBUrl(host, encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;
                ajax$$1({}, {
                  method: 'DELETE',
                  url: url
                }, callback);
              });
              api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob, type, callback) {
                if (typeof type === 'function') {
                  callback = type;
                  type = blob;
                  blob = rev$$1;
                  rev$$1 = null;
                }
                var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);
                var url = genDBUrl(host, id);
                if (rev$$1) {
                  url += '?rev=' + rev$$1;
                }
                if (typeof blob === 'string') {
                  var binary;
                  try {
                    binary = thisAtob(blob);
                  } catch (err) {
                    return callback(createError(BAD_ARG, 'Attachment is not a valid base64 string'));
                  }
                  blob = binary ? binStringToBluffer(binary, type) : '';
                }
                var opts = {
                  headers: { 'Content-Type': type },
                  method: 'PUT',
                  url: url,
                  processData: false,
                  body: blob,
                  timeout: ajaxOpts.timeout || 60000
                };
                ajax$$1({}, opts, callback);
              });
              api._bulkDocs = function (req, opts, callback) {
                req.new_edits = opts.new_edits;
                setup().then(function () {
                  return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));
                }).then(function () {
                  ajax$$1(opts, {
                    method: 'POST',
                    url: genDBUrl(host, '_bulk_docs'),
                    timeout: opts.timeout,
                    body: req
                  }, function (err, results) {
                    if (err) {
                      return callback(err);
                    }
                    results.forEach(function (result) {
                      result.ok = true;
                    });
                    callback(null, results);
                  });
                })["catch"](callback);
              };
              api._put = function (doc, opts, callback) {
                setup().then(function () {
                  return preprocessAttachments$2(doc);
                }).then(function () {
                  ajax$$1(opts, {
                    method: 'PUT',
                    url: genDBUrl(host, encodeDocId(doc._id)),
                    body: doc
                  }, function (err, result) {
                    if (err) {
                      err.docId = doc && doc._id;
                      return callback(err);
                    }
                    callback(null, result);
                  });
                })["catch"](callback);
              };
              api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                opts = clone(opts);
                var params = {};
                var body;
                var method = 'GET';
                if (opts.conflicts) {
                  params.conflicts = true;
                }
                if (opts.descending) {
                  params.descending = true;
                }
                if (opts.include_docs) {
                  params.include_docs = true;
                }
                if (opts.attachments) {
                  params.attachments = true;
                }
                if (opts.key) {
                  params.key = JSON.stringify(opts.key);
                }
                if (opts.start_key) {
                  opts.startkey = opts.start_key;
                }
                if (opts.startkey) {
                  params.startkey = JSON.stringify(opts.startkey);
                }
                if (opts.end_key) {
                  opts.endkey = opts.end_key;
                }
                if (opts.endkey) {
                  params.endkey = JSON.stringify(opts.endkey);
                }
                if (typeof opts.inclusive_end !== 'undefined') {
                  params.inclusive_end = !!opts.inclusive_end;
                }
                if (typeof opts.limit !== 'undefined') {
                  params.limit = opts.limit;
                }
                if (typeof opts.skip !== 'undefined') {
                  params.skip = opts.skip;
                }
                var paramStr = paramsToStr(params);
                if (typeof opts.keys !== 'undefined') {
                  method = 'POST';
                  body = { keys: opts.keys };
                }
                ajaxPromise(opts, {
                  method: method,
                  url: genDBUrl(host, '_all_docs' + paramStr),
                  body: body
                }).then(function (res) {
                  if (opts.include_docs && opts.attachments && opts.binary) {
                    res.rows.forEach(readAttachmentsAsBlobOrBuffer);
                  }
                  callback(null, res);
                })["catch"](callback);
              });
              api._changes = function (opts) {
                var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;
                opts = clone(opts);
                if (opts.continuous && !('heartbeat' in opts)) {
                  opts.heartbeat = DEFAULT_HEARTBEAT;
                }
                var requestTimeout = 'timeout' in opts ? opts.timeout : 'timeout' in ajaxOpts ? ajaxOpts.timeout : 30 * 1000;
                if ('timeout' in opts && opts.timeout && requestTimeout - opts.timeout < CHANGES_TIMEOUT_BUFFER) {
                  requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;
                }
                if ('heartbeat' in opts && opts.heartbeat && requestTimeout - opts.heartbeat < CHANGES_TIMEOUT_BUFFER) {
                  requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;
                }
                var params = {};
                if ('timeout' in opts && opts.timeout) {
                  params.timeout = opts.timeout;
                }
                var limit = typeof opts.limit !== 'undefined' ? opts.limit : false;
                var returnDocs;
                if ('return_docs' in opts) {
                  returnDocs = opts.return_docs;
                } else if ('returnDocs' in opts) {
                  returnDocs = opts.returnDocs;
                } else {
                  returnDocs = true;
                }
                var leftToFetch = limit;
                if (opts.style) {
                  params.style = opts.style;
                }
                if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {
                  params.include_docs = true;
                }
                if (opts.attachments) {
                  params.attachments = true;
                }
                if (opts.continuous) {
                  params.feed = 'longpoll';
                }
                if (opts.conflicts) {
                  params.conflicts = true;
                }
                if (opts.descending) {
                  params.descending = true;
                }
                if ('heartbeat' in opts) {
                  if (opts.heartbeat) {
                    params.heartbeat = opts.heartbeat;
                  }
                }
                if (opts.filter && typeof opts.filter === 'string') {
                  params.filter = opts.filter;
                }
                if (opts.view && typeof opts.view === 'string') {
                  params.filter = '_view';
                  params.view = opts.view;
                }
                if (opts.query_params && typeof opts.query_params === 'object') {
                  for (var param_name in opts.query_params) {
                    if (opts.query_params.hasOwnProperty(param_name)) {
                      params[param_name] = opts.query_params[param_name];
                    }
                  }
                }
                var method = 'GET';
                var body;
                if (opts.doc_ids) {
                  params.filter = '_doc_ids';
                  method = 'POST';
                  body = { doc_ids: opts.doc_ids };
                } else if (opts.selector) {
                  params.filter = '_selector';
                  method = 'POST';
                  body = { selector: opts.selector };
                }
                var xhr;
                var lastFetchedSeq;
                var fetch = function (since, callback) {
                  if (opts.aborted) {
                    return;
                  }
                  params.since = since;
                  if (typeof params.since === "object") {
                    params.since = JSON.stringify(params.since);
                  }
                  if (opts.descending) {
                    if (limit) {
                      params.limit = leftToFetch;
                    }
                  } else {
                    params.limit = !limit || leftToFetch > batchSize ? batchSize : leftToFetch;
                  }
                  var xhrOpts = {
                    method: method,
                    url: genDBUrl(host, '_changes' + paramsToStr(params)),
                    timeout: requestTimeout,
                    body: body
                  };
                  lastFetchedSeq = since;
                  if (opts.aborted) {
                    return;
                  }
                  setup().then(function () {
                    xhr = ajax$$1(opts, xhrOpts, callback);
                  })["catch"](callback);
                };
                var results = { results: [] };
                var fetched = function (err, res) {
                  if (opts.aborted) {
                    return;
                  }
                  var raw_results_length = 0;
                  if (res && res.results) {
                    raw_results_length = res.results.length;
                    results.last_seq = res.last_seq;
                    var req = {};
                    req.query = opts.query_params;
                    res.results = res.results.filter(function (c) {
                      leftToFetch--;
                      var ret = filterChange(opts)(c);
                      if (ret) {
                        if (opts.include_docs && opts.attachments && opts.binary) {
                          readAttachmentsAsBlobOrBuffer(c);
                        }
                        if (returnDocs) {
                          results.results.push(c);
                        }
                        opts.onChange(c);
                      }
                      return ret;
                    });
                  } else if (err) {
                    opts.aborted = true;
                    opts.complete(err);
                    return;
                  }
                  if (res && res.last_seq) {
                    lastFetchedSeq = res.last_seq;
                  }
                  var finished = limit && leftToFetch <= 0 || res && raw_results_length < batchSize || opts.descending;
                  if (opts.continuous && !(limit && leftToFetch <= 0) || !finished) {
                    nextTick(function () {
                      fetch(lastFetchedSeq, fetched);
                    });
                  } else {
                    opts.complete(null, results);
                  }
                };
                fetch(opts.since || 0, fetched);
                return { cancel: function () {
                    opts.aborted = true;
                    if (xhr) {
                      xhr.abort();
                    }
                  } };
              };
              api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                ajax$$1(opts, {
                  method: 'POST',
                  url: genDBUrl(host, '_revs_diff'),
                  body: req
                }, callback);
              });
              api._close = function (callback) {
                callback();
              };
              api._destroy = function (options, callback) {
                ajax$$1(options, {
                  url: genDBUrl(host, ''),
                  method: 'DELETE'
                }, function (err, resp) {
                  if (err && err.status && err.status !== 404) {
                    return callback(err);
                  }
                  callback(null, resp);
                });
              };
            }
            HttpPouch.valid = function () {
              return true;
            };
            var HttpPouch$1 = function (PouchDB) {
              PouchDB.adapter('http', HttpPouch, false);
              PouchDB.adapter('https', HttpPouch, false);
            };
            function QueryParseError(message) {
              this.status = 400;
              this.name = 'query_parse_error';
              this.message = message;
              this.error = true;
              try {
                Error.captureStackTrace(this, QueryParseError);
              } catch (e) {}
            }
            inherits(QueryParseError, Error);
            function NotFoundError(message) {
              this.status = 404;
              this.name = 'not_found';
              this.message = message;
              this.error = true;
              try {
                Error.captureStackTrace(this, NotFoundError);
              } catch (e) {}
            }
            inherits(NotFoundError, Error);
            function BuiltInError(message) {
              this.status = 500;
              this.name = 'invalid_value';
              this.message = message;
              this.error = true;
              try {
                Error.captureStackTrace(this, BuiltInError);
              } catch (e) {}
            }
            inherits(BuiltInError, Error);
            function promisedCallback(promise, callback) {
              if (callback) {
                promise.then(function (res) {
                  nextTick(function () {
                    callback(null, res);
                  });
                }, function (reason) {
                  nextTick(function () {
                    callback(reason);
                  });
                });
              }
              return promise;
            }
            function callbackify(fun) {
              return getArguments(function (args) {
                var cb = args.pop();
                var promise = fun.apply(this, args);
                if (typeof cb === 'function') {
                  promisedCallback(promise, cb);
                }
                return promise;
              });
            }
            function fin(promise, finalPromiseFactory) {
              return promise.then(function (res) {
                return finalPromiseFactory().then(function () {
                  return res;
                });
              }, function (reason) {
                return finalPromiseFactory().then(function () {
                  throw reason;
                });
              });
            }
            function sequentialize(queue, promiseFactory) {
              return function () {
                var args = arguments;
                var that = this;
                return queue.add(function () {
                  return promiseFactory.apply(that, args);
                });
              };
            }
            function uniq(arr) {
              var theSet = new ExportedSet(arr);
              var result = new Array(theSet.size);
              var index = -1;
              theSet.forEach(function (value) {
                result[++index] = value;
              });
              return result;
            }
            function mapToKeysArray(map) {
              var result = new Array(map.size);
              var index = -1;
              map.forEach(function (value, key) {
                result[++index] = key;
              });
              return result;
            }
            function createBuiltInError(name) {
              var message = 'builtin ' + name + ' function requires map values to be numbers' + ' or number arrays';
              return new BuiltInError(message);
            }
            function sum(values) {
              var result = 0;
              for (var i = 0, len = values.length; i < len; i++) {
                var num = values[i];
                if (typeof num !== 'number') {
                  if (Array.isArray(num)) {
                    result = typeof result === 'number' ? [result] : result;
                    for (var j = 0, jLen = num.length; j < jLen; j++) {
                      var jNum = num[j];
                      if (typeof jNum !== 'number') {
                        throw createBuiltInError('_sum');
                      } else if (typeof result[j] === 'undefined') {
                        result.push(jNum);
                      } else {
                        result[j] += jNum;
                      }
                    }
                  } else {
                    throw createBuiltInError('_sum');
                  }
                } else if (typeof result === 'number') {
                  result += num;
                } else {
                  result[0] += num;
                }
              }
              return result;
            }
            var log = guardedConsole.bind(null, 'log');
            var isArray = Array.isArray;
            var toJSON = JSON.parse;
            function evalFunctionWithEval(func, emit) {
              return scopeEval("return (" + func.replace(/;\s*$/, "") + ");", {
                emit: emit,
                sum: sum,
                log: log,
                isArray: isArray,
                toJSON: toJSON
              });
            }
            function TaskQueue$2() {
              this.promise = new PouchPromise$1(function (fulfill) {
                fulfill();
              });
            }
            TaskQueue$2.prototype.add = function (promiseFactory) {
              this.promise = this.promise["catch"](function () {}).then(function () {
                return promiseFactory();
              });
              return this.promise;
            };
            TaskQueue$2.prototype.finish = function () {
              return this.promise;
            };
            function stringify(input) {
              if (!input) {
                return 'undefined';
              }
              switch (typeof input) {
                case 'function':
                  return input.toString();
                case 'string':
                  return input.toString();
                default:
                  return JSON.stringify(input);
              }
            }
            function createViewSignature(mapFun, reduceFun) {
              return stringify(mapFun) + stringify(reduceFun) + 'undefined';
            }
            function createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {
              var viewSignature = createViewSignature(mapFun, reduceFun);
              var cachedViews;
              if (!temporary) {
                cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};
                if (cachedViews[viewSignature]) {
                  return cachedViews[viewSignature];
                }
              }
              var promiseForView = sourceDB.info().then(function (info) {
                var depDbName = info.db_name + '-mrview-' + (temporary ? 'temp' : stringMd5(viewSignature));
                function diffFunction(doc) {
                  doc.views = doc.views || {};
                  var fullViewName = viewName;
                  if (fullViewName.indexOf('/') === -1) {
                    fullViewName = viewName + '/' + viewName;
                  }
                  var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};
                  if (depDbs[depDbName]) {
                    return;
                  }
                  depDbs[depDbName] = true;
                  return doc;
                }
                return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {
                  return sourceDB.registerDependentDatabase(depDbName).then(function (res) {
                    var db = res.db;
                    db.auto_compaction = true;
                    var view = {
                      name: depDbName,
                      db: db,
                      sourceDB: sourceDB,
                      adapter: sourceDB.adapter,
                      mapFun: mapFun,
                      reduceFun: reduceFun
                    };
                    return view.db.get('_local/lastSeq')["catch"](function (err) {
                      if (err.status !== 404) {
                        throw err;
                      }
                    }).then(function (lastSeqDoc) {
                      view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;
                      if (cachedViews) {
                        view.db.once('destroyed', function () {
                          delete cachedViews[viewSignature];
                        });
                      }
                      return view;
                    });
                  });
                });
              });
              if (cachedViews) {
                cachedViews[viewSignature] = promiseForView;
              }
              return promiseForView;
            }
            var persistentQueues = {};
            var tempViewQueue = new TaskQueue$2();
            var CHANGES_BATCH_SIZE$1 = 50;
            function parseViewName(name) {
              return name.indexOf('/') === -1 ? [name, name] : name.split('/');
            }
            function isGenOne(changes) {
              return changes.length === 1 && /^1-/.test(changes[0].rev);
            }
            function emitError(db, e) {
              try {
                db.emit('error', e);
              } catch (err) {
                guardedConsole('error', 'The user\'s map/reduce function threw an uncaught error.\n' + 'You can debug this error by doing:\n' + 'myDatabase.on(\'error\', function (err) { debugger; });\n' + 'Please double-check your map/reduce function.');
                guardedConsole('error', e);
              }
            }
            function createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {
              function tryMap(db, fun, doc) {
                try {
                  fun(doc);
                } catch (e) {
                  emitError(db, e);
                }
              }
              function tryReduce(db, fun, keys, values, rereduce) {
                try {
                  return { output: fun(keys, values, rereduce) };
                } catch (e) {
                  emitError(db, e);
                  return { error: e };
                }
              }
              function sortByKeyThenValue(x, y) {
                var keyCompare = collate(x.key, y.key);
                return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);
              }
              function sliceResults(results, limit, skip) {
                skip = skip || 0;
                if (typeof limit === 'number') {
                  return results.slice(skip, limit + skip);
                } else if (skip > 0) {
                  return results.slice(skip);
                }
                return results;
              }
              function rowToDocId(row) {
                var val = row.value;
                var docId = val && typeof val === 'object' && val._id || row.id;
                return docId;
              }
              function readAttachmentsAsBlobOrBuffer(res) {
                res.rows.forEach(function (row) {
                  var atts = row.doc && row.doc._attachments;
                  if (!atts) {
                    return;
                  }
                  Object.keys(atts).forEach(function (filename) {
                    var att = atts[filename];
                    atts[filename].data = b64ToBluffer(att.data, att.content_type);
                  });
                });
              }
              function postprocessAttachments(opts) {
                return function (res) {
                  if (opts.include_docs && opts.attachments && opts.binary) {
                    readAttachmentsAsBlobOrBuffer(res);
                  }
                  return res;
                };
              }
              function addHttpParam(paramName, opts, params, asJson) {
                var val = opts[paramName];
                if (typeof val !== 'undefined') {
                  if (asJson) {
                    val = encodeURIComponent(JSON.stringify(val));
                  }
                  params.push(paramName + '=' + val);
                }
              }
              function coerceInteger(integerCandidate) {
                if (typeof integerCandidate !== 'undefined') {
                  var asNumber = Number(integerCandidate);
                  if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {
                    return asNumber;
                  } else {
                    return integerCandidate;
                  }
                }
              }
              function coerceOptions(opts) {
                opts.group_level = coerceInteger(opts.group_level);
                opts.limit = coerceInteger(opts.limit);
                opts.skip = coerceInteger(opts.skip);
                return opts;
              }
              function checkPositiveInteger(number) {
                if (number) {
                  if (typeof number !== 'number') {
                    return new QueryParseError('Invalid value for integer: "' + number + '"');
                  }
                  if (number < 0) {
                    return new QueryParseError('Invalid value for positive integer: ' + '"' + number + '"');
                  }
                }
              }
              function checkQueryParseError(options, fun) {
                var startkeyName = options.descending ? 'endkey' : 'startkey';
                var endkeyName = options.descending ? 'startkey' : 'endkey';
                if (typeof options[startkeyName] !== 'undefined' && typeof options[endkeyName] !== 'undefined' && collate(options[startkeyName], options[endkeyName]) > 0) {
                  throw new QueryParseError('No rows can match your key range, ' + 'reverse your start_key and end_key or set {descending : true}');
                } else if (fun.reduce && options.reduce !== false) {
                  if (options.include_docs) {
                    throw new QueryParseError('{include_docs:true} is invalid for reduce');
                  } else if (options.keys && options.keys.length > 1 && !options.group && !options.group_level) {
                    throw new QueryParseError('Multi-key fetches for reduce views must use ' + '{group: true}');
                  }
                }
                ['group_level', 'limit', 'skip'].forEach(function (optionName) {
                  var error = checkPositiveInteger(options[optionName]);
                  if (error) {
                    throw error;
                  }
                });
              }
              function httpQuery(db, fun, opts) {
                var params = [];
                var body;
                var method = 'GET';
                addHttpParam('reduce', opts, params);
                addHttpParam('include_docs', opts, params);
                addHttpParam('attachments', opts, params);
                addHttpParam('limit', opts, params);
                addHttpParam('descending', opts, params);
                addHttpParam('group', opts, params);
                addHttpParam('group_level', opts, params);
                addHttpParam('skip', opts, params);
                addHttpParam('stale', opts, params);
                addHttpParam('conflicts', opts, params);
                addHttpParam('startkey', opts, params, true);
                addHttpParam('start_key', opts, params, true);
                addHttpParam('endkey', opts, params, true);
                addHttpParam('end_key', opts, params, true);
                addHttpParam('inclusive_end', opts, params);
                addHttpParam('key', opts, params, true);
                params = params.join('&');
                params = params === '' ? '' : '?' + params;
                if (typeof opts.keys !== 'undefined') {
                  var MAX_URL_LENGTH = 2000;
                  var keysAsString = 'keys=' + encodeURIComponent(JSON.stringify(opts.keys));
                  if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {
                    params += (params[0] === '?' ? '&' : '?') + keysAsString;
                  } else {
                    method = 'POST';
                    if (typeof fun === 'string') {
                      body = { keys: opts.keys };
                    } else {
                      fun.keys = opts.keys;
                    }
                  }
                }
                if (typeof fun === 'string') {
                  var parts = parseViewName(fun);
                  return db.request({
                    method: method,
                    url: '_design/' + parts[0] + '/_view/' + parts[1] + params,
                    body: body
                  }).then(function (result) {
                    result.rows.forEach(function (row) {
                      if (row.value && row.value.error && row.value.error === "builtin_reduce_error") {
                        throw new Error(row.reason);
                      }
                    });
                    return result;
                  }).then(postprocessAttachments(opts));
                }
                body = body || {};
                Object.keys(fun).forEach(function (key) {
                  if (Array.isArray(fun[key])) {
                    body[key] = fun[key];
                  } else {
                    body[key] = fun[key].toString();
                  }
                });
                return db.request({
                  method: 'POST',
                  url: '_temp_view' + params,
                  body: body
                }).then(postprocessAttachments(opts));
              }
              function customQuery(db, fun, opts) {
                return new PouchPromise$1(function (resolve, reject) {
                  db._query(fun, opts, function (err, res) {
                    if (err) {
                      return reject(err);
                    }
                    resolve(res);
                  });
                });
              }
              function customViewCleanup(db) {
                return new PouchPromise$1(function (resolve, reject) {
                  db._viewCleanup(function (err, res) {
                    if (err) {
                      return reject(err);
                    }
                    resolve(res);
                  });
                });
              }
              function defaultsTo(value) {
                return function (reason) {
                  if (reason.status === 404) {
                    return value;
                  } else {
                    throw reason;
                  }
                };
              }
              function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {
                var metaDocId = '_local/doc_' + docId;
                var defaultMetaDoc = {
                  _id: metaDocId,
                  keys: []
                };
                var docData = docIdsToChangesAndEmits.get(docId);
                var indexableKeysToKeyValues = docData[0];
                var changes = docData[1];
                function getMetaDoc() {
                  if (isGenOne(changes)) {
                    return PouchPromise$1.resolve(defaultMetaDoc);
                  }
                  return view.db.get(metaDocId)["catch"](defaultsTo(defaultMetaDoc));
                }
                function getKeyValueDocs(metaDoc) {
                  if (!metaDoc.keys.length) {
                    return PouchPromise$1.resolve({ rows: [] });
                  }
                  return view.db.allDocs({
                    keys: metaDoc.keys,
                    include_docs: true
                  });
                }
                function processKeyValueDocs(metaDoc, kvDocsRes) {
                  var kvDocs = [];
                  var oldKeys = new ExportedSet();
                  for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {
                    var row = kvDocsRes.rows[i];
                    var doc = row.doc;
                    if (!doc) {
                      continue;
                    }
                    kvDocs.push(doc);
                    oldKeys.add(doc._id);
                    doc._deleted = !indexableKeysToKeyValues.has(doc._id);
                    if (!doc._deleted) {
                      var keyValue = indexableKeysToKeyValues.get(doc._id);
                      if ('value' in keyValue) {
                        doc.value = keyValue.value;
                      }
                    }
                  }
                  var newKeys = mapToKeysArray(indexableKeysToKeyValues);
                  newKeys.forEach(function (key) {
                    if (!oldKeys.has(key)) {
                      var kvDoc = { _id: key };
                      var keyValue = indexableKeysToKeyValues.get(key);
                      if ('value' in keyValue) {
                        kvDoc.value = keyValue.value;
                      }
                      kvDocs.push(kvDoc);
                    }
                  });
                  metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));
                  kvDocs.push(metaDoc);
                  return kvDocs;
                }
                return getMetaDoc().then(function (metaDoc) {
                  return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {
                    return processKeyValueDocs(metaDoc, kvDocsRes);
                  });
                });
              }
              function saveKeyValues(view, docIdsToChangesAndEmits, seq) {
                var seqDocId = '_local/lastSeq';
                return view.db.get(seqDocId)["catch"](defaultsTo({
                  _id: seqDocId,
                  seq: 0
                })).then(function (lastSeqDoc) {
                  var docIds = mapToKeysArray(docIdsToChangesAndEmits);
                  return PouchPromise$1.all(docIds.map(function (docId) {
                    return getDocsToPersist(docId, view, docIdsToChangesAndEmits);
                  })).then(function (listOfDocsToPersist) {
                    var docsToPersist = flatten(listOfDocsToPersist);
                    lastSeqDoc.seq = seq;
                    docsToPersist.push(lastSeqDoc);
                    return view.db.bulkDocs({ docs: docsToPersist });
                  });
                });
              }
              function getQueue(view) {
                var viewName = typeof view === 'string' ? view : view.name;
                var queue = persistentQueues[viewName];
                if (!queue) {
                  queue = persistentQueues[viewName] = new TaskQueue$2();
                }
                return queue;
              }
              function updateView(view) {
                return sequentialize(getQueue(view), function () {
                  return updateViewInQueue(view);
                })();
              }
              function updateViewInQueue(view) {
                var mapResults;
                var doc;
                function emit(key, value) {
                  var output = {
                    id: doc._id,
                    key: normalizeKey(key)
                  };
                  if (typeof value !== 'undefined' && value !== null) {
                    output.value = normalizeKey(value);
                  }
                  mapResults.push(output);
                }
                var mapFun = mapper(view.mapFun, emit);
                var currentSeq = view.seq || 0;
                function processChange(docIdsToChangesAndEmits, seq) {
                  return function () {
                    return saveKeyValues(view, docIdsToChangesAndEmits, seq);
                  };
                }
                var queue = new TaskQueue$2();
                function processNextBatch() {
                  return view.sourceDB.changes({
                    conflicts: true,
                    include_docs: true,
                    style: 'all_docs',
                    since: currentSeq,
                    limit: CHANGES_BATCH_SIZE$1
                  }).then(processBatch);
                }
                function processBatch(response) {
                  var results = response.results;
                  if (!results.length) {
                    return;
                  }
                  var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);
                  queue.add(processChange(docIdsToChangesAndEmits, currentSeq));
                  if (results.length < CHANGES_BATCH_SIZE$1) {
                    return;
                  }
                  return processNextBatch();
                }
                function createDocIdsToChangesAndEmits(results) {
                  var docIdsToChangesAndEmits = new ExportedMap();
                  for (var i = 0, len = results.length; i < len; i++) {
                    var change = results[i];
                    if (change.doc._id[0] !== '_') {
                      mapResults = [];
                      doc = change.doc;
                      if (!doc._deleted) {
                        tryMap(view.sourceDB, mapFun, doc);
                      }
                      mapResults.sort(sortByKeyThenValue);
                      var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);
                      docIdsToChangesAndEmits.set(change.doc._id, [indexableKeysToKeyValues, change.changes]);
                    }
                    currentSeq = change.seq;
                  }
                  return docIdsToChangesAndEmits;
                }
                function createIndexableKeysToKeyValues(mapResults) {
                  var indexableKeysToKeyValues = new ExportedMap();
                  var lastKey;
                  for (var i = 0, len = mapResults.length; i < len; i++) {
                    var emittedKeyValue = mapResults[i];
                    var complexKey = [emittedKeyValue.key, emittedKeyValue.id];
                    if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {
                      complexKey.push(i);
                    }
                    indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);
                    lastKey = emittedKeyValue.key;
                  }
                  return indexableKeysToKeyValues;
                }
                return processNextBatch().then(function () {
                  return queue.finish();
                }).then(function () {
                  view.seq = currentSeq;
                });
              }
              function reduceView(view, results, options) {
                if (options.group_level === 0) {
                  delete options.group_level;
                }
                var shouldGroup = options.group || options.group_level;
                var reduceFun = reducer(view.reduceFun);
                var groups = [];
                var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY : options.group_level;
                results.forEach(function (e) {
                  var last = groups[groups.length - 1];
                  var groupKey = shouldGroup ? e.key : null;
                  if (shouldGroup && Array.isArray(groupKey)) {
                    groupKey = groupKey.slice(0, lvl);
                  }
                  if (last && collate(last.groupKey, groupKey) === 0) {
                    last.keys.push([e.key, e.id]);
                    last.values.push(e.value);
                    return;
                  }
                  groups.push({
                    keys: [[e.key, e.id]],
                    values: [e.value],
                    groupKey: groupKey
                  });
                });
                results = [];
                for (var i = 0, len = groups.length; i < len; i++) {
                  var e = groups[i];
                  var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);
                  if (reduceTry.error && reduceTry.error instanceof BuiltInError) {
                    throw reduceTry.error;
                  }
                  results.push({
                    value: reduceTry.error ? null : reduceTry.output,
                    key: e.groupKey
                  });
                }
                return { rows: sliceResults(results, options.limit, options.skip) };
              }
              function queryView(view, opts) {
                return sequentialize(getQueue(view), function () {
                  return queryViewInQueue(view, opts);
                })();
              }
              function queryViewInQueue(view, opts) {
                var totalRows;
                var shouldReduce = view.reduceFun && opts.reduce !== false;
                var skip = opts.skip || 0;
                if (typeof opts.keys !== 'undefined' && !opts.keys.length) {
                  opts.limit = 0;
                  delete opts.keys;
                }
                function fetchFromView(viewOpts) {
                  viewOpts.include_docs = true;
                  return view.db.allDocs(viewOpts).then(function (res) {
                    totalRows = res.total_rows;
                    return res.rows.map(function (result) {
                      if ('value' in result.doc && typeof result.doc.value === 'object' && result.doc.value !== null) {
                        var keys = Object.keys(result.doc.value).sort();
                        var expectedKeys = ['id', 'key', 'value'];
                        if (!(keys < expectedKeys || keys > expectedKeys)) {
                          return result.doc.value;
                        }
                      }
                      var parsedKeyAndDocId = parseIndexableString(result.doc._id);
                      return {
                        key: parsedKeyAndDocId[0],
                        id: parsedKeyAndDocId[1],
                        value: 'value' in result.doc ? result.doc.value : null
                      };
                    });
                  });
                }
                function onMapResultsReady(rows) {
                  var finalResults;
                  if (shouldReduce) {
                    finalResults = reduceView(view, rows, opts);
                  } else {
                    finalResults = {
                      total_rows: totalRows,
                      offset: skip,
                      rows: rows
                    };
                  }
                  if (opts.include_docs) {
                    var docIds = uniq(rows.map(rowToDocId));
                    return view.sourceDB.allDocs({
                      keys: docIds,
                      include_docs: true,
                      conflicts: opts.conflicts,
                      attachments: opts.attachments,
                      binary: opts.binary
                    }).then(function (allDocsRes) {
                      var docIdsToDocs = new ExportedMap();
                      allDocsRes.rows.forEach(function (row) {
                        docIdsToDocs.set(row.id, row.doc);
                      });
                      rows.forEach(function (row) {
                        var docId = rowToDocId(row);
                        var doc = docIdsToDocs.get(docId);
                        if (doc) {
                          row.doc = doc;
                        }
                      });
                      return finalResults;
                    });
                  } else {
                    return finalResults;
                  }
                }
                if (typeof opts.keys !== 'undefined') {
                  var keys = opts.keys;
                  var fetchPromises = keys.map(function (key) {
                    var viewOpts = {
                      startkey: toIndexableString([key]),
                      endkey: toIndexableString([key, {}])
                    };
                    return fetchFromView(viewOpts);
                  });
                  return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);
                } else {
                  var viewOpts = { descending: opts.descending };
                  var startkey;
                  var endkey;
                  if ('start_key' in opts) {
                    startkey = opts.start_key;
                  }
                  if ('startkey' in opts) {
                    startkey = opts.startkey;
                  }
                  if ('end_key' in opts) {
                    endkey = opts.end_key;
                  }
                  if ('endkey' in opts) {
                    endkey = opts.endkey;
                  }
                  if (typeof startkey !== 'undefined') {
                    viewOpts.startkey = opts.descending ? toIndexableString([startkey, {}]) : toIndexableString([startkey]);
                  }
                  if (typeof endkey !== 'undefined') {
                    var inclusiveEnd = opts.inclusive_end !== false;
                    if (opts.descending) {
                      inclusiveEnd = !inclusiveEnd;
                    }
                    viewOpts.endkey = toIndexableString(inclusiveEnd ? [endkey, {}] : [endkey]);
                  }
                  if (typeof opts.key !== 'undefined') {
                    var keyStart = toIndexableString([opts.key]);
                    var keyEnd = toIndexableString([opts.key, {}]);
                    if (viewOpts.descending) {
                      viewOpts.endkey = keyStart;
                      viewOpts.startkey = keyEnd;
                    } else {
                      viewOpts.startkey = keyStart;
                      viewOpts.endkey = keyEnd;
                    }
                  }
                  if (!shouldReduce) {
                    if (typeof opts.limit === 'number') {
                      viewOpts.limit = opts.limit;
                    }
                    viewOpts.skip = skip;
                  }
                  return fetchFromView(viewOpts).then(onMapResultsReady);
                }
              }
              function httpViewCleanup(db) {
                return db.request({
                  method: 'POST',
                  url: '_view_cleanup'
                });
              }
              function localViewCleanup(db) {
                return db.get('_local/' + localDocName).then(function (metaDoc) {
                  var docsToViews = new ExportedMap();
                  Object.keys(metaDoc.views).forEach(function (fullViewName) {
                    var parts = parseViewName(fullViewName);
                    var designDocName = '_design/' + parts[0];
                    var viewName = parts[1];
                    var views = docsToViews.get(designDocName);
                    if (!views) {
                      views = new ExportedSet();
                      docsToViews.set(designDocName, views);
                    }
                    views.add(viewName);
                  });
                  var opts = {
                    keys: mapToKeysArray(docsToViews),
                    include_docs: true
                  };
                  return db.allDocs(opts).then(function (res) {
                    var viewsToStatus = {};
                    res.rows.forEach(function (row) {
                      var ddocName = row.key.substring(8);
                      docsToViews.get(row.key).forEach(function (viewName) {
                        var fullViewName = ddocName + '/' + viewName;
                        if (!metaDoc.views[fullViewName]) {
                          fullViewName = viewName;
                        }
                        var viewDBNames = Object.keys(metaDoc.views[fullViewName]);
                        var statusIsGood = row.doc && row.doc.views && row.doc.views[viewName];
                        viewDBNames.forEach(function (viewDBName) {
                          viewsToStatus[viewDBName] = viewsToStatus[viewDBName] || statusIsGood;
                        });
                      });
                    });
                    var dbsToDelete = Object.keys(viewsToStatus).filter(function (viewDBName) {
                      return !viewsToStatus[viewDBName];
                    });
                    var destroyPromises = dbsToDelete.map(function (viewDBName) {
                      return sequentialize(getQueue(viewDBName), function () {
                        return new db.constructor(viewDBName, db.__opts).destroy();
                      })();
                    });
                    return PouchPromise$1.all(destroyPromises).then(function () {
                      return { ok: true };
                    });
                  });
                }, defaultsTo({ ok: true }));
              }
              function queryPromised(db, fun, opts) {
                if (typeof db._query === 'function') {
                  return customQuery(db, fun, opts);
                }
                if (isRemote(db)) {
                  return httpQuery(db, fun, opts);
                }
                if (typeof fun !== 'string') {
                  checkQueryParseError(opts, fun);
                  tempViewQueue.add(function () {
                    var createViewPromise = createView(db, 'temp_view/temp_view', fun.map, fun.reduce, true, localDocName);
                    return createViewPromise.then(function (view) {
                      return fin(updateView(view).then(function () {
                        return queryView(view, opts);
                      }), function () {
                        return view.db.destroy();
                      });
                    });
                  });
                  return tempViewQueue.finish();
                } else {
                  var fullViewName = fun;
                  var parts = parseViewName(fullViewName);
                  var designDocName = parts[0];
                  var viewName = parts[1];
                  return db.get('_design/' + designDocName).then(function (doc) {
                    var fun = doc.views && doc.views[viewName];
                    if (!fun) {
                      throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' + viewName);
                    }
                    ddocValidator(doc, viewName);
                    checkQueryParseError(opts, fun);
                    var createViewPromise = createView(db, fullViewName, fun.map, fun.reduce, false, localDocName);
                    return createViewPromise.then(function (view) {
                      if (opts.stale === 'ok' || opts.stale === 'update_after') {
                        if (opts.stale === 'update_after') {
                          nextTick(function () {
                            updateView(view);
                          });
                        }
                        return queryView(view, opts);
                      } else {
                        return updateView(view).then(function () {
                          return queryView(view, opts);
                        });
                      }
                    });
                  });
                }
              }
              function abstractQuery(fun, opts, callback) {
                var db = this;
                if (typeof opts === 'function') {
                  callback = opts;
                  opts = {};
                }
                opts = opts ? coerceOptions(opts) : {};
                if (typeof fun === 'function') {
                  fun = { map: fun };
                }
                var promise = PouchPromise$1.resolve().then(function () {
                  return queryPromised(db, fun, opts);
                });
                promisedCallback(promise, callback);
                return promise;
              }
              var abstractViewCleanup = callbackify(function () {
                var db = this;
                if (typeof db._viewCleanup === 'function') {
                  return customViewCleanup(db);
                }
                if (isRemote(db)) {
                  return httpViewCleanup(db);
                }
                return localViewCleanup(db);
              });
              return {
                query: abstractQuery,
                viewCleanup: abstractViewCleanup
              };
            }
            var builtInReduce = {
              _sum: function (keys, values) {
                return sum(values);
              },
              _count: function (keys, values) {
                return values.length;
              },
              _stats: function (keys, values) {
                function sumsqr(values) {
                  var _sumsqr = 0;
                  for (var i = 0, len = values.length; i < len; i++) {
                    var num = values[i];
                    _sumsqr += num * num;
                  }
                  return _sumsqr;
                }
                return {
                  sum: sum(values),
                  min: Math.min.apply(null, values),
                  max: Math.max.apply(null, values),
                  count: values.length,
                  sumsqr: sumsqr(values)
                };
              }
            };
            function getBuiltIn(reduceFunString) {
              if (/^_sum/.test(reduceFunString)) {
                return builtInReduce._sum;
              } else if (/^_count/.test(reduceFunString)) {
                return builtInReduce._count;
              } else if (/^_stats/.test(reduceFunString)) {
                return builtInReduce._stats;
              } else if (/^_/.test(reduceFunString)) {
                throw new Error(reduceFunString + ' is not a supported reduce function.');
              }
            }
            function mapper(mapFun, emit) {
              if (typeof mapFun === "function" && mapFun.length === 2) {
                var origMap = mapFun;
                return function (doc) {
                  return origMap(doc, emit);
                };
              } else {
                return evalFunctionWithEval(mapFun.toString(), emit);
              }
            }
            function reducer(reduceFun) {
              var reduceFunString = reduceFun.toString();
              var builtIn = getBuiltIn(reduceFunString);
              if (builtIn) {
                return builtIn;
              } else {
                return evalFunctionWithEval(reduceFunString);
              }
            }
            function ddocValidator(ddoc, viewName) {
              var fun = ddoc.views && ddoc.views[viewName];
              if (typeof fun.map !== 'string') {
                throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' + viewName + ', instead found object of type: ' + typeof fun.map);
              }
            }
            var localDocName = 'mrviews';
            var abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);
            function query(fun, opts, callback) {
              return abstract.query.call(this, fun, opts, callback);
            }
            function viewCleanup(callback) {
              return abstract.viewCleanup.call(this, callback);
            }
            var mapreduce = {
              query: query,
              viewCleanup: viewCleanup
            };
            function isGenOne$1(rev$$1) {
              return (/^1-/.test(rev$$1)
              );
            }
            function fileHasChanged(localDoc, remoteDoc, filename) {
              return !localDoc._attachments || !localDoc._attachments[filename] || localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;
            }
            function getDocAttachments(db, doc) {
              var filenames = Object.keys(doc._attachments);
              return PouchPromise$1.all(filenames.map(function (filename) {
                return db.getAttachment(doc._id, filename, { rev: doc._rev });
              }));
            }
            function getDocAttachmentsFromTargetOrSource(target, src, doc) {
              var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);
              var filenames = Object.keys(doc._attachments);
              if (!doCheckForLocalAttachments) {
                return getDocAttachments(src, doc);
              }
              return target.get(doc._id).then(function (localDoc) {
                return PouchPromise$1.all(filenames.map(function (filename) {
                  if (fileHasChanged(localDoc, doc, filename)) {
                    return src.getAttachment(doc._id, filename);
                  }
                  return target.getAttachment(localDoc._id, filename);
                }));
              })["catch"](function (error) {
                if (error.status !== 404) {
                  throw error;
                }
                return getDocAttachments(src, doc);
              });
            }
            function createBulkGetOpts(diffs) {
              var requests = [];
              Object.keys(diffs).forEach(function (id) {
                var missingRevs = diffs[id].missing;
                missingRevs.forEach(function (missingRev) {
                  requests.push({
                    id: id,
                    rev: missingRev
                  });
                });
              });
              return {
                docs: requests,
                revs: true,
                latest: true
              };
            }
            function getDocs(src, target, diffs, state) {
              diffs = clone(diffs);
              var resultDocs = [],
                  ok = true;
              function getAllDocs() {
                var bulkGetOpts = createBulkGetOpts(diffs);
                if (!bulkGetOpts.docs.length) {
                  return;
                }
                return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {
                  if (state.cancelled) {
                    throw new Error('cancelled');
                  }
                  return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {
                    return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {
                      var remoteDoc = doc.ok;
                      if (doc.error) {
                        ok = false;
                      }
                      if (!remoteDoc || !remoteDoc._attachments) {
                        return remoteDoc;
                      }
                      return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {
                        var filenames = Object.keys(remoteDoc._attachments);
                        attachments.forEach(function (attachment, i) {
                          var att = remoteDoc._attachments[filenames[i]];
                          delete att.stub;
                          delete att.length;
                          att.data = attachment;
                        });
                        return remoteDoc;
                      });
                    }));
                  })).then(function (results) {
                    resultDocs = resultDocs.concat(flatten(results).filter(Boolean));
                  });
                });
              }
              function hasAttachments(doc) {
                return doc._attachments && Object.keys(doc._attachments).length > 0;
              }
              function hasConflicts(doc) {
                return doc._conflicts && doc._conflicts.length > 0;
              }
              function fetchRevisionOneDocs(ids) {
                return src.allDocs({
                  keys: ids,
                  include_docs: true,
                  conflicts: true
                }).then(function (res) {
                  if (state.cancelled) {
                    throw new Error('cancelled');
                  }
                  res.rows.forEach(function (row) {
                    if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) || hasAttachments(row.doc) || hasConflicts(row.doc)) {
                      return;
                    }
                    if (row.doc._conflicts) {
                      delete row.doc._conflicts;
                    }
                    resultDocs.push(row.doc);
                    delete diffs[row.id];
                  });
                });
              }
              function getRevisionOneDocs() {
                var ids = Object.keys(diffs).filter(function (id) {
                  var missing = diffs[id].missing;
                  return missing.length === 1 && isGenOne$1(missing[0]);
                });
                if (ids.length > 0) {
                  return fetchRevisionOneDocs(ids);
                }
              }
              function returnResult() {
                return {
                  ok: ok,
                  docs: resultDocs
                };
              }
              return PouchPromise$1.resolve().then(getRevisionOneDocs).then(getAllDocs).then(returnResult);
            }
            var CHECKPOINT_VERSION = 1;
            var REPLICATOR = "pouchdb";
            var CHECKPOINT_HISTORY_SIZE = 5;
            var LOWEST_SEQ = 0;
            function updateCheckpoint(db, id, checkpoint, session, returnValue) {
              return db.get(id)["catch"](function (err) {
                if (err.status === 404) {
                  if (db.adapter === 'http' || db.adapter === 'https') {
                    explainError(404, 'PouchDB is just checking if a remote checkpoint exists.');
                  }
                  return {
                    session_id: session,
                    _id: id,
                    history: [],
                    replicator: REPLICATOR,
                    version: CHECKPOINT_VERSION
                  };
                }
                throw err;
              }).then(function (doc) {
                if (returnValue.cancelled) {
                  return;
                }
                if (doc.last_seq === checkpoint) {
                  return;
                }
                doc.history = (doc.history || []).filter(function (item) {
                  return item.session_id !== session;
                });
                doc.history.unshift({
                  last_seq: checkpoint,
                  session_id: session
                });
                doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);
                doc.version = CHECKPOINT_VERSION;
                doc.replicator = REPLICATOR;
                doc.session_id = session;
                doc.last_seq = checkpoint;
                return db.put(doc)["catch"](function (err) {
                  if (err.status === 409) {
                    return updateCheckpoint(db, id, checkpoint, session, returnValue);
                  }
                  throw err;
                });
              });
            }
            function Checkpointer(src, target, id, returnValue, opts) {
              this.src = src;
              this.target = target;
              this.id = id;
              this.returnValue = returnValue;
              this.opts = opts;
            }
            Checkpointer.prototype.writeCheckpoint = function (checkpoint, session) {
              var self = this;
              return this.updateTarget(checkpoint, session).then(function () {
                return self.updateSource(checkpoint, session);
              });
            };
            Checkpointer.prototype.updateTarget = function (checkpoint, session) {
              if (this.opts.writeTargetCheckpoint) {
                return updateCheckpoint(this.target, this.id, checkpoint, session, this.returnValue);
              } else {
                return PouchPromise$1.resolve(true);
              }
            };
            Checkpointer.prototype.updateSource = function (checkpoint, session) {
              if (this.opts.writeSourceCheckpoint) {
                var self = this;
                if (this.readOnlySource) {
                  return PouchPromise$1.resolve(true);
                }
                return updateCheckpoint(this.src, this.id, checkpoint, session, this.returnValue)["catch"](function (err) {
                  if (isForbiddenError(err)) {
                    self.readOnlySource = true;
                    return true;
                  }
                  throw err;
                });
              } else {
                return PouchPromise$1.resolve(true);
              }
            };
            var comparisons = {
              "undefined": function (targetDoc, sourceDoc) {
                if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {
                  return sourceDoc.last_seq;
                }
                return 0;
              },
              "1": function (targetDoc, sourceDoc) {
                return compareReplicationLogs(sourceDoc, targetDoc).last_seq;
              }
            };
            Checkpointer.prototype.getCheckpoint = function () {
              var self = this;
              return self.target.get(self.id).then(function (targetDoc) {
                if (self.readOnlySource) {
                  return PouchPromise$1.resolve(targetDoc.last_seq);
                }
                return self.src.get(self.id).then(function (sourceDoc) {
                  if (targetDoc.version !== sourceDoc.version) {
                    return LOWEST_SEQ;
                  }
                  var version;
                  if (targetDoc.version) {
                    version = targetDoc.version.toString();
                  } else {
                    version = "undefined";
                  }
                  if (version in comparisons) {
                    return comparisons[version](targetDoc, sourceDoc);
                  }
                  return LOWEST_SEQ;
                }, function (err) {
                  if (err.status === 404 && targetDoc.last_seq) {
                    return self.src.put({
                      _id: self.id,
                      last_seq: LOWEST_SEQ
                    }).then(function () {
                      return LOWEST_SEQ;
                    }, function (err) {
                      if (isForbiddenError(err)) {
                        self.readOnlySource = true;
                        return targetDoc.last_seq;
                      }
                      return LOWEST_SEQ;
                    });
                  }
                  throw err;
                });
              })["catch"](function (err) {
                if (err.status !== 404) {
                  throw err;
                }
                return LOWEST_SEQ;
              });
            };
            function compareReplicationLogs(srcDoc, tgtDoc) {
              if (srcDoc.session_id === tgtDoc.session_id) {
                return {
                  last_seq: srcDoc.last_seq,
                  history: srcDoc.history
                };
              }
              return compareReplicationHistory(srcDoc.history, tgtDoc.history);
            }
            function compareReplicationHistory(sourceHistory, targetHistory) {
              var S = sourceHistory[0];
              var sourceRest = sourceHistory.slice(1);
              var T = targetHistory[0];
              var targetRest = targetHistory.slice(1);
              if (!S || targetHistory.length === 0) {
                return {
                  last_seq: LOWEST_SEQ,
                  history: []
                };
              }
              var sourceId = S.session_id;
              if (hasSessionId(sourceId, targetHistory)) {
                return {
                  last_seq: S.last_seq,
                  history: sourceHistory
                };
              }
              var targetId = T.session_id;
              if (hasSessionId(targetId, sourceRest)) {
                return {
                  last_seq: T.last_seq,
                  history: targetRest
                };
              }
              return compareReplicationHistory(sourceRest, targetRest);
            }
            function hasSessionId(sessionId, history) {
              var props = history[0];
              var rest = history.slice(1);
              if (!sessionId || history.length === 0) {
                return false;
              }
              if (sessionId === props.session_id) {
                return true;
              }
              return hasSessionId(sessionId, rest);
            }
            function isForbiddenError(err) {
              return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;
            }
            var STARTING_BACK_OFF = 0;
            function backOff(opts, returnValue, error, callback) {
              if (opts.retry === false) {
                returnValue.emit('error', error);
                returnValue.removeAllListeners();
                return;
              }
              if (typeof opts.back_off_function !== 'function') {
                opts.back_off_function = defaultBackOff;
              }
              returnValue.emit('requestError', error);
              if (returnValue.state === 'active' || returnValue.state === 'pending') {
                returnValue.emit('paused', error);
                returnValue.state = 'stopped';
                var backOffSet = function backoffTimeSet() {
                  opts.current_back_off = STARTING_BACK_OFF;
                };
                var removeBackOffSetter = function removeBackOffTimeSet() {
                  returnValue.removeListener('active', backOffSet);
                };
                returnValue.once('paused', removeBackOffSetter);
                returnValue.once('active', backOffSet);
              }
              opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;
              opts.current_back_off = opts.back_off_function(opts.current_back_off);
              setTimeout(callback, opts.current_back_off);
            }
            function sortObjectPropertiesByKey(queryParams) {
              return Object.keys(queryParams).sort(collate).reduce(function (result, key) {
                result[key] = queryParams[key];
                return result;
              }, {});
            }
            function generateReplicationId(src, target, opts) {
              var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';
              var filterFun = opts.filter ? opts.filter.toString() : '';
              var queryParams = '';
              var filterViewName = '';
              var selector = '';
              if (opts.selector) {
                selector = JSON.stringify(opts.selector);
              }
              if (opts.filter && opts.query_params) {
                queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));
              }
              if (opts.filter && opts.filter === '_view') {
                filterViewName = opts.view.toString();
              }
              return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {
                var queryData = res[0] + res[1] + filterFun + filterViewName + queryParams + docIds + selector;
                return new PouchPromise$1(function (resolve) {
                  binaryMd5(queryData, resolve);
                });
              }).then(function (md5sum) {
                md5sum = md5sum.replace(/\//g, '.').replace(/\+/g, '_');
                return '_local/' + md5sum;
              });
            }
            function replicate(src, target, opts, returnValue, result) {
              var batches = [];
              var currentBatch;
              var pendingBatch = {
                seq: 0,
                changes: [],
                docs: []
              };
              var writingCheckpoint = false;
              var changesCompleted = false;
              var replicationCompleted = false;
              var last_seq = 0;
              var continuous = opts.continuous || opts.live || false;
              var batch_size = opts.batch_size || 100;
              var batches_limit = opts.batches_limit || 10;
              var changesPending = false;
              var doc_ids = opts.doc_ids;
              var selector = opts.selector;
              var repId;
              var checkpointer;
              var changedDocs = [];
              var session = uuid();
              result = result || {
                ok: true,
                start_time: new Date(),
                docs_read: 0,
                docs_written: 0,
                doc_write_failures: 0,
                errors: []
              };
              var changesOpts = {};
              returnValue.ready(src, target);
              function initCheckpointer() {
                if (checkpointer) {
                  return PouchPromise$1.resolve();
                }
                return generateReplicationId(src, target, opts).then(function (res) {
                  repId = res;
                  var checkpointOpts = {};
                  if (opts.checkpoint === false) {
                    checkpointOpts = {
                      writeSourceCheckpoint: false,
                      writeTargetCheckpoint: false
                    };
                  } else if (opts.checkpoint === 'source') {
                    checkpointOpts = {
                      writeSourceCheckpoint: true,
                      writeTargetCheckpoint: false
                    };
                  } else if (opts.checkpoint === 'target') {
                    checkpointOpts = {
                      writeSourceCheckpoint: false,
                      writeTargetCheckpoint: true
                    };
                  } else {
                    checkpointOpts = {
                      writeSourceCheckpoint: true,
                      writeTargetCheckpoint: true
                    };
                  }
                  checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);
                });
              }
              function writeDocs() {
                changedDocs = [];
                if (currentBatch.docs.length === 0) {
                  return;
                }
                var docs = currentBatch.docs;
                var bulkOpts = { timeout: opts.timeout };
                return target.bulkDocs({
                  docs: docs,
                  new_edits: false
                }, bulkOpts).then(function (res) {
                  if (returnValue.cancelled) {
                    completeReplication();
                    throw new Error('cancelled');
                  }
                  var errorsById = Object.create(null);
                  res.forEach(function (res) {
                    if (res.error) {
                      errorsById[res.id] = res;
                    }
                  });
                  var errorsNo = Object.keys(errorsById).length;
                  result.doc_write_failures += errorsNo;
                  result.docs_written += docs.length - errorsNo;
                  docs.forEach(function (doc) {
                    var error = errorsById[doc._id];
                    if (error) {
                      result.errors.push(error);
                      if (error.name === 'unauthorized' || error.name === 'forbidden') {
                        returnValue.emit('denied', clone(error));
                      } else {
                        throw error;
                      }
                    } else {
                      changedDocs.push(doc);
                    }
                  });
                }, function (err) {
                  result.doc_write_failures += docs.length;
                  throw err;
                });
              }
              function finishBatch() {
                if (currentBatch.error) {
                  throw new Error('There was a problem getting docs.');
                }
                result.last_seq = last_seq = currentBatch.seq;
                var outResult = clone(result);
                if (changedDocs.length) {
                  outResult.docs = changedDocs;
                  returnValue.emit('change', outResult);
                }
                writingCheckpoint = true;
                return checkpointer.writeCheckpoint(currentBatch.seq, session).then(function () {
                  writingCheckpoint = false;
                  if (returnValue.cancelled) {
                    completeReplication();
                    throw new Error('cancelled');
                  }
                  currentBatch = undefined;
                  getChanges();
                })["catch"](function (err) {
                  onCheckpointError(err);
                  throw err;
                });
              }
              function getDiffs() {
                var diff = {};
                currentBatch.changes.forEach(function (change) {
                  if (change.id === "_user/") {
                    return;
                  }
                  diff[change.id] = change.changes.map(function (x) {
                    return x.rev;
                  });
                });
                return target.revsDiff(diff).then(function (diffs) {
                  if (returnValue.cancelled) {
                    completeReplication();
                    throw new Error('cancelled');
                  }
                  currentBatch.diffs = diffs;
                });
              }
              function getBatchDocs() {
                return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {
                  currentBatch.error = !got.ok;
                  got.docs.forEach(function (doc) {
                    delete currentBatch.diffs[doc._id];
                    result.docs_read++;
                    currentBatch.docs.push(doc);
                  });
                });
              }
              function startNextBatch() {
                if (returnValue.cancelled || currentBatch) {
                  return;
                }
                if (batches.length === 0) {
                  processPendingBatch(true);
                  return;
                }
                currentBatch = batches.shift();
                getDiffs().then(getBatchDocs).then(writeDocs).then(finishBatch).then(startNextBatch)["catch"](function (err) {
                  abortReplication('batch processing terminated with error', err);
                });
              }
              function processPendingBatch(immediate) {
                if (pendingBatch.changes.length === 0) {
                  if (batches.length === 0 && !currentBatch) {
                    if (continuous && changesOpts.live || changesCompleted) {
                      returnValue.state = 'pending';
                      returnValue.emit('paused');
                    }
                    if (changesCompleted) {
                      completeReplication();
                    }
                  }
                  return;
                }
                if (immediate || changesCompleted || pendingBatch.changes.length >= batch_size) {
                  batches.push(pendingBatch);
                  pendingBatch = {
                    seq: 0,
                    changes: [],
                    docs: []
                  };
                  if (returnValue.state === 'pending' || returnValue.state === 'stopped') {
                    returnValue.state = 'active';
                    returnValue.emit('active');
                  }
                  startNextBatch();
                }
              }
              function abortReplication(reason, err) {
                if (replicationCompleted) {
                  return;
                }
                if (!err.message) {
                  err.message = reason;
                }
                result.ok = false;
                result.status = 'aborting';
                batches = [];
                pendingBatch = {
                  seq: 0,
                  changes: [],
                  docs: []
                };
                completeReplication(err);
              }
              function completeReplication(fatalError) {
                if (replicationCompleted) {
                  return;
                }
                if (returnValue.cancelled) {
                  result.status = 'cancelled';
                  if (writingCheckpoint) {
                    return;
                  }
                }
                result.status = result.status || 'complete';
                result.end_time = new Date();
                result.last_seq = last_seq;
                replicationCompleted = true;
                if (fatalError) {
                  fatalError = createError(fatalError);
                  fatalError.result = result;
                  if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {
                    returnValue.emit('error', fatalError);
                    returnValue.removeAllListeners();
                  } else {
                    backOff(opts, returnValue, fatalError, function () {
                      replicate(src, target, opts, returnValue);
                    });
                  }
                } else {
                  returnValue.emit('complete', result);
                  returnValue.removeAllListeners();
                }
              }
              function onChange(change) {
                if (returnValue.cancelled) {
                  return completeReplication();
                }
                var filter = filterChange(opts)(change);
                if (!filter) {
                  return;
                }
                pendingBatch.seq = change.seq;
                pendingBatch.changes.push(change);
                processPendingBatch(batches.length === 0 && changesOpts.live);
              }
              function onChangesComplete(changes) {
                changesPending = false;
                if (returnValue.cancelled) {
                  return completeReplication();
                }
                if (changes.results.length > 0) {
                  changesOpts.since = changes.last_seq;
                  getChanges();
                  processPendingBatch(true);
                } else {
                  var complete = function () {
                    if (continuous) {
                      changesOpts.live = true;
                      getChanges();
                    } else {
                      changesCompleted = true;
                    }
                    processPendingBatch(true);
                  };
                  if (!currentBatch && changes.results.length === 0) {
                    writingCheckpoint = true;
                    checkpointer.writeCheckpoint(changes.last_seq, session).then(function () {
                      writingCheckpoint = false;
                      result.last_seq = last_seq = changes.last_seq;
                      complete();
                    })["catch"](onCheckpointError);
                  } else {
                    complete();
                  }
                }
              }
              function onChangesError(err) {
                changesPending = false;
                if (returnValue.cancelled) {
                  return completeReplication();
                }
                abortReplication('changes rejected', err);
              }
              function getChanges() {
                if (!(!changesPending && !changesCompleted && batches.length < batches_limit)) {
                  return;
                }
                changesPending = true;
                function abortChanges() {
                  changes.cancel();
                }
                function removeListener() {
                  returnValue.removeListener('cancel', abortChanges);
                }
                if (returnValue._changes) {
                  returnValue.removeListener('cancel', returnValue._abortChanges);
                  returnValue._changes.cancel();
                }
                returnValue.once('cancel', abortChanges);
                var changes = src.changes(changesOpts).on('change', onChange);
                changes.then(removeListener, removeListener);
                changes.then(onChangesComplete)["catch"](onChangesError);
                if (opts.retry) {
                  returnValue._changes = changes;
                  returnValue._abortChanges = abortChanges;
                }
              }
              function startChanges() {
                initCheckpointer().then(function () {
                  if (returnValue.cancelled) {
                    completeReplication();
                    return;
                  }
                  return checkpointer.getCheckpoint().then(function (checkpoint) {
                    last_seq = checkpoint;
                    changesOpts = {
                      since: last_seq,
                      limit: batch_size,
                      batch_size: batch_size,
                      style: 'all_docs',
                      doc_ids: doc_ids,
                      selector: selector,
                      return_docs: true
                    };
                    if (opts.filter) {
                      if (typeof opts.filter !== 'string') {
                        changesOpts.include_docs = true;
                      } else {
                        changesOpts.filter = opts.filter;
                      }
                    }
                    if ('heartbeat' in opts) {
                      changesOpts.heartbeat = opts.heartbeat;
                    }
                    if ('timeout' in opts) {
                      changesOpts.timeout = opts.timeout;
                    }
                    if (opts.query_params) {
                      changesOpts.query_params = opts.query_params;
                    }
                    if (opts.view) {
                      changesOpts.view = opts.view;
                    }
                    getChanges();
                  });
                })["catch"](function (err) {
                  abortReplication('getCheckpoint rejected with ', err);
                });
              }
              function onCheckpointError(err) {
                writingCheckpoint = false;
                abortReplication('writeCheckpoint completed with error', err);
              }
              if (returnValue.cancelled) {
                completeReplication();
                return;
              }
              if (!returnValue._addedListeners) {
                returnValue.once('cancel', completeReplication);
                if (typeof opts.complete === 'function') {
                  returnValue.once('error', opts.complete);
                  returnValue.once('complete', function (result) {
                    opts.complete(null, result);
                  });
                }
                returnValue._addedListeners = true;
              }
              if (typeof opts.since === 'undefined') {
                startChanges();
              } else {
                initCheckpointer().then(function () {
                  writingCheckpoint = true;
                  return checkpointer.writeCheckpoint(opts.since, session);
                }).then(function () {
                  writingCheckpoint = false;
                  if (returnValue.cancelled) {
                    completeReplication();
                    return;
                  }
                  last_seq = opts.since;
                  startChanges();
                })["catch"](onCheckpointError);
              }
            }
            inherits(Replication, events.EventEmitter);
            function Replication() {
              events.EventEmitter.call(this);
              this.cancelled = false;
              this.state = 'pending';
              var self = this;
              var promise = new PouchPromise$1(function (fulfill, reject) {
                self.once('complete', fulfill);
                self.once('error', reject);
              });
              self.then = function (resolve, reject) {
                return promise.then(resolve, reject);
              };
              self["catch"] = function (reject) {
                return promise["catch"](reject);
              };
              self["catch"](function () {});
            }
            Replication.prototype.cancel = function () {
              this.cancelled = true;
              this.state = 'cancelled';
              this.emit('cancel');
            };
            Replication.prototype.ready = function (src, target) {
              var self = this;
              if (self._readyCalled) {
                return;
              }
              self._readyCalled = true;
              function onDestroy() {
                self.cancel();
              }
              src.once('destroyed', onDestroy);
              target.once('destroyed', onDestroy);
              function cleanup() {
                src.removeListener('destroyed', onDestroy);
                target.removeListener('destroyed', onDestroy);
              }
              self.once('complete', cleanup);
            };
            function toPouch(db, opts) {
              var PouchConstructor = opts.PouchConstructor;
              if (typeof db === 'string') {
                return new PouchConstructor(db, opts);
              } else {
                return db;
              }
            }
            function replicateWrapper(src, target, opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              if (typeof opts === 'undefined') {
                opts = {};
              }
              if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {
                throw createError(BAD_REQUEST, "`doc_ids` filter parameter is not a list.");
              }
              opts.complete = callback;
              opts = clone(opts);
              opts.continuous = opts.continuous || opts.live;
              opts.retry = 'retry' in opts ? opts.retry : false;
              opts.PouchConstructor = opts.PouchConstructor || this;
              var replicateRet = new Replication(opts);
              var srcPouch = toPouch(src, opts);
              var targetPouch = toPouch(target, opts);
              replicate(srcPouch, targetPouch, opts, replicateRet);
              return replicateRet;
            }
            inherits(Sync, events.EventEmitter);
            function sync$1(src, target, opts, callback) {
              if (typeof opts === 'function') {
                callback = opts;
                opts = {};
              }
              if (typeof opts === 'undefined') {
                opts = {};
              }
              opts = clone(opts);
              opts.PouchConstructor = opts.PouchConstructor || this;
              src = toPouch(src, opts);
              target = toPouch(target, opts);
              return new Sync(src, target, opts, callback);
            }
            function Sync(src, target, opts, callback) {
              var self = this;
              this.canceled = false;
              var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;
              var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;
              this.push = replicateWrapper(src, target, optsPush);
              this.pull = replicateWrapper(target, src, optsPull);
              this.pushPaused = true;
              this.pullPaused = true;
              function pullChange(change) {
                self.emit('change', {
                  direction: 'pull',
                  change: change
                });
              }
              function pushChange(change) {
                self.emit('change', {
                  direction: 'push',
                  change: change
                });
              }
              function pushDenied(doc) {
                self.emit('denied', {
                  direction: 'push',
                  doc: doc
                });
              }
              function pullDenied(doc) {
                self.emit('denied', {
                  direction: 'pull',
                  doc: doc
                });
              }
              function pushPaused() {
                self.pushPaused = true;
                if (self.pullPaused) {
                  self.emit('paused');
                }
              }
              function pullPaused() {
                self.pullPaused = true;
                if (self.pushPaused) {
                  self.emit('paused');
                }
              }
              function pushActive() {
                self.pushPaused = false;
                if (self.pullPaused) {
                  self.emit('active', { direction: 'push' });
                }
              }
              function pullActive() {
                self.pullPaused = false;
                if (self.pushPaused) {
                  self.emit('active', { direction: 'pull' });
                }
              }
              var removed = {};
              function removeAll(type) {
                return function (event, func) {
                  var isChange = event === 'change' && (func === pullChange || func === pushChange);
                  var isDenied = event === 'denied' && (func === pullDenied || func === pushDenied);
                  var isPaused = event === 'paused' && (func === pullPaused || func === pushPaused);
                  var isActive = event === 'active' && (func === pullActive || func === pushActive);
                  if (isChange || isDenied || isPaused || isActive) {
                    if (!(event in removed)) {
                      removed[event] = {};
                    }
                    removed[event][type] = true;
                    if (Object.keys(removed[event]).length === 2) {
                      self.removeAllListeners(event);
                    }
                  }
                };
              }
              if (opts.live) {
                this.push.on('complete', self.pull.cancel.bind(self.pull));
                this.pull.on('complete', self.push.cancel.bind(self.push));
              }
              function addOneListener(ee, event, listener) {
                if (ee.listeners(event).indexOf(listener) == -1) {
                  ee.on(event, listener);
                }
              }
              this.on('newListener', function (event) {
                if (event === 'change') {
                  addOneListener(self.pull, 'change', pullChange);
                  addOneListener(self.push, 'change', pushChange);
                } else if (event === 'denied') {
                  addOneListener(self.pull, 'denied', pullDenied);
                  addOneListener(self.push, 'denied', pushDenied);
                } else if (event === 'active') {
                  addOneListener(self.pull, 'active', pullActive);
                  addOneListener(self.push, 'active', pushActive);
                } else if (event === 'paused') {
                  addOneListener(self.pull, 'paused', pullPaused);
                  addOneListener(self.push, 'paused', pushPaused);
                }
              });
              this.on('removeListener', function (event) {
                if (event === 'change') {
                  self.pull.removeListener('change', pullChange);
                  self.push.removeListener('change', pushChange);
                } else if (event === 'denied') {
                  self.pull.removeListener('denied', pullDenied);
                  self.push.removeListener('denied', pushDenied);
                } else if (event === 'active') {
                  self.pull.removeListener('active', pullActive);
                  self.push.removeListener('active', pushActive);
                } else if (event === 'paused') {
                  self.pull.removeListener('paused', pullPaused);
                  self.push.removeListener('paused', pushPaused);
                }
              });
              this.pull.on('removeListener', removeAll('pull'));
              this.push.on('removeListener', removeAll('push'));
              var promise = PouchPromise$1.all([this.push, this.pull]).then(function (resp) {
                var out = {
                  push: resp[0],
                  pull: resp[1]
                };
                self.emit('complete', out);
                if (callback) {
                  callback(null, out);
                }
                self.removeAllListeners();
                return out;
              }, function (err) {
                self.cancel();
                if (callback) {
                  callback(err);
                } else {
                  self.emit('error', err);
                }
                self.removeAllListeners();
                if (callback) {
                  throw err;
                }
              });
              this.then = function (success, err) {
                return promise.then(success, err);
              };
              this["catch"] = function (err) {
                return promise["catch"](err);
              };
            }
            Sync.prototype.cancel = function () {
              if (!this.canceled) {
                this.canceled = true;
                this.push.cancel();
                this.pull.cancel();
              }
            };
            function replication(PouchDB) {
              PouchDB.replicate = replicateWrapper;
              PouchDB.sync = sync$1;
              Object.defineProperty(PouchDB.prototype, 'replicate', { get: function () {
                  var self = this;
                  return {
                    from: function (other, opts, callback) {
                      return self.constructor.replicate(other, self, opts, callback);
                    },
                    to: function (other, opts, callback) {
                      return self.constructor.replicate(self, other, opts, callback);
                    }
                  };
                } });
              PouchDB.prototype.sync = function (dbName, opts, callback) {
                return this.constructor.sync(this, dbName, opts, callback);
              };
            }
            PouchDB$5.plugin(IDBPouch).plugin(WebSqlPouch).plugin(HttpPouch$1).plugin(mapreduce).plugin(replication);
            module.exports = PouchDB$5;
          }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {
          "1": 1,
          "10": 10,
          "13": 13,
          "14": 14,
          "2": 2,
          "4": 4,
          "5": 5,
          "6": 6,
          "7": 7
        }]
      }, {}, [15])(15);
    });
  })($__require("16"));
});
$__System.registerDynamic("17", ["15"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("15");
});
$__System.register("f", ["17"], function (_export) {
    "use strict";

    var PouchDB, windowPort, portStr, url, db, eventChangeHandlers;

    _export("getPeople", getPeople);

    _export("getCategories", getCategories);

    _export("getDrafts", getDrafts);

    _export("getEvents", getEvents);

    _export("getExpendituresTotal", getExpendituresTotal);

    _export("getIousTotal", getIousTotal);

    _export("post", post);

    _export("put", put);

    _export("remove", remove);

    _export("onEventsChange", onEventsChange);

    //console.log("ERROR FROM CHANGES FEED",err);

    function getPeople() {
        return db.query('ajexpenditor/people', {
            include_docs: true
        }).then(function (data) {
            return data.rows.map(function (row) {
                return row.doc;
            });
        });
    }

    function getCategories() {
        return db.query('ajexpenditor/categories', {
            include_docs: true
        }).then(function (data) {
            return data.rows.map(function (row) {
                return row.doc;
            });
        });
    }

    function getDrafts() {
        return db.query('ajexpenditor/drafts', {
            include_docs: true
        }).then(function (data) {
            return data.rows.map(function (row) {
                return row.doc;
            });
        });
    }

    function getEvents(skip, limit) {
        return db.query('ajexpenditor/events', {
            include_docs: true,
            descending: true,
            limit: limit,
            skip: skip
        }).then(function (data) {
            return data.rows.map(function (row) {
                return row.doc;
            });
        });
    }

    function getExpendituresTotal(groupLevel) {
        groupLevel = groupLevel || 1;
        return db.query('ajexpenditor/expenditures_total', {
            reduce: true,
            group_level: groupLevel
        }).then(function (data) {
            return data.rows.map(function (row) {
                return {
                    person: row.key[0],
                    category: row.key[1],
                    year: row.key[2],
                    month: row.key[3],
                    day: row.key[4],
                    value: row.value
                };
            });
        });
    }

    function getIousTotal() {
        return db.query('ajexpenditor/ious_total', {
            reduce: true,
            group_level: 2
        }).then(function (data) {
            return data.rows.map(function (row) {
                return {
                    borrower: row.key[0],
                    creditor: row.key[1],
                    value: row.value
                };
            });
        });
    }

    function post(doc) {
        return db.post(doc);
    }

    function put(doc) {
        return db.put(doc);
    }

    function remove(id, rev) {
        return db.remove(id, rev);
    }

    function onEventsChange(handler) {
        eventChangeHandlers.push(handler);
    }

    return {
        setters: [function (_) {
            PouchDB = _["default"];
        }],
        execute: function () {
            windowPort = window.location.port === "5000" ? "5984" : window.location.port;
            portStr = windowPort ? ":" + windowPort : "";
            url = window.location.protocol + "//" + window.location.hostname + portStr + "/ajexpenditor";
            db = new PouchDB(url);
            eventChangeHandlers = [];

            db.changes({
                since: 'now',
                live: true,
                include_docs: true
            }).on('change', function (change) {
                //console.log("CHANGE",change);
                if (change.doc.type === "event" || change.deleted) {
                    eventChangeHandlers.forEach(function (handler) {
                        return handler();
                    });
                }
            }).on('error', function (err) {});
        }
    };
});
$__System.register("10", [], function (_export) {
    "use strict";

    _export("getAmountDisplay", getAmountDisplay);

    function getAmountDisplay(amount) {
        return (amount / 10000).toFixed(2) + " €";
    }

    return {
        setters: [],
        execute: function () {}
    };
});
$__System.register("18", ["10", "11", "12", "13", "19", "f"], function (_export) {
    var getAmountDisplay, obervable, computed, extendObservable, _createClass, _classCallCheck, TimeSeries, TimeRange, getExpendituresTotal, ChartViewModel;

    return {
        setters: [function (_5) {
            getAmountDisplay = _5.getAmountDisplay;
        }, function (_3) {
            obervable = _3.obervable;
            computed = _3.computed;
            extendObservable = _3.extendObservable;
        }, function (_) {
            _createClass = _["default"];
        }, function (_2) {
            _classCallCheck = _2["default"];
        }, function (_4) {
            TimeSeries = _4.TimeSeries;
            TimeRange = _4.TimeRange;
        }, function (_f) {
            getExpendituresTotal = _f.getExpendituresTotal;
        }],
        execute: function () {
            "use strict";

            ChartViewModel = (function () {
                function ChartViewModel(parent) {
                    var _this = this;

                    _classCallCheck(this, ChartViewModel);

                    extendObservable(this, {
                        data: null,
                        selectedRange: null,
                        selectedDate: null,
                        selectedCategories: [],
                        selectedPeople: [],
                        timeseries: computed(function () {
                            return _this.computeTimeseries();
                        }),
                        selectedDateValues: computed(function () {
                            return _this.extractSelectedDateValues();
                        })
                    });
                    this.parent = parent;
                    this.queryExpendituresTotal();
                }

                _createClass(ChartViewModel, [{
                    key: "toggleCategory",
                    value: function toggleCategory(name) {

                        if (this.selectedCategories.find(function (x) {
                            return x === name;
                        })) {
                            this.selectedCategories.remove(name);
                        } else {
                            this.selectedCategories.push(name);
                        }
                    }
                }, {
                    key: "togglePerson",
                    value: function togglePerson(name) {

                        if (this.selectedPeople.find(function (x) {
                            return x === name;
                        })) {
                            this.selectedPeople.remove(name);
                        } else {
                            this.selectedPeople.push(name);
                        }
                    }
                }, {
                    key: "extractSelectedDateValues",
                    value: function extractSelectedDateValues() {

                        var retVal = {};

                        if (!this.timeseries || !this.selectedDate) {
                            return retVal;
                        }

                        var timeEvent = this.timeseries.atTime(this.selectedDate);

                        this.categories.forEach(function (cat) {
                            var val = timeEvent.get(cat.name);
                            retVal[cat.name] = getAmountDisplay(val * 10000);
                        });

                        return retVal;
                    }
                }, {
                    key: "computeTimeseries",
                    value: function computeTimeseries() {
                        var _this2 = this;

                        if (!this.data) {
                            return null;
                        }

                        var baseData = {
                            name: 'expendituresTotal',
                            columns: ['time'].concat(this.categories.map(function (x) {
                                return x.name;
                            })).concat(['_total']),
                            points: []
                        };

                        var startYear = parseInt(this.data.minKey.split('-')[0]);
                        var startMonth = parseInt(this.data.minKey.split('-')[1]);
                        var endYear = parseInt(this.data.maxKey.split('-')[0]);
                        var endMonth = parseInt(this.data.maxKey.split('-')[1]);

                        var currentYear = startYear;
                        var currentMonth = startMonth;

                        var _loop = function () {

                            var currentKey = currentYear + '-' + (currentMonth < 10 ? '0' + currentMonth : currentMonth);

                            var row = [new Date(currentKey).getTime()];

                            var totalSum = 0;

                            _this2.categories.forEach(function (category, index) {

                                var sum = 0;

                                _this2.people.filter(function (person) {
                                    return _this2.selectedPeople.find(function (x) {
                                        return x === person.name;
                                    });
                                }).forEach(function (person) {
                                    // console.log(person,category,currentKey,this.data[person.name][category.name]);
                                    var value = (_this2.data[person.name][category.name][currentKey] || 0) / 10000;
                                    sum += value;
                                    totalSum += value;
                                });

                                row.push(sum);
                            });

                            row.push(totalSum);

                            baseData.points.push(row);

                            if (currentMonth === 12) {
                                currentMonth = 1;
                                currentYear++;
                            } else {
                                currentMonth++;
                            }
                        };

                        while (currentYear <= endYear && currentMonth <= endMonth) {
                            _loop();
                        }

                        // console.log(new TimeSeries(baseData));

                        return new TimeSeries(baseData);
                    }
                }, {
                    key: "queryExpendituresTotal",
                    value: function queryExpendituresTotal() {
                        var _this3 = this;

                        getExpendituresTotal(4).then(function (totals) {

                            var newData = {};

                            _this3.people.forEach(function (person) {
                                newData[person.name] = {};
                                _this3.categories.forEach(function (category) {
                                    newData[person.name][category.name] = {};
                                });
                            });

                            var maxKey = '0001-01';
                            var minKey = '9999-99';

                            totals.forEach(function (total) {

                                var key = total.year + '-' + (total.month < 10 ? '0' + total.month : total.month);

                                if (key < minKey) {
                                    minKey = key;
                                }

                                if (key > maxKey) {
                                    maxKey = key;
                                }

                                newData[total.person][total.category][key] = total.value;
                            });

                            newData.minKey = minKey;
                            newData.maxKey = maxKey;

                            _this3.data = newData;
                        });
                    }
                }, {
                    key: "people",
                    get: function get() {
                        return this.parent.people;
                    }
                }, {
                    key: "categories",
                    get: function get() {
                        return this.parent.categories;
                    }
                }]);

                return ChartViewModel;
            })();

            _export("ChartViewModel", ChartViewModel);
        }
    };
});
$__System.register("1a", ["11", "12", "13", "14", "18", "f"], function (_export) {
    var obervable, computed, extendObservable, _createClass, _classCallCheck, TableViewModel, ChartViewModel, getPeople, getCategories, MainViewModel;

    return {
        setters: [function (_3) {
            obervable = _3.obervable;
            computed = _3.computed;
            extendObservable = _3.extendObservable;
        }, function (_) {
            _createClass = _["default"];
        }, function (_2) {
            _classCallCheck = _2["default"];
        }, function (_4) {
            TableViewModel = _4.TableViewModel;
        }, function (_5) {
            ChartViewModel = _5.ChartViewModel;
        }, function (_f) {
            getPeople = _f.getPeople;
            getCategories = _f.getCategories;
        }],
        execute: function () {
            "use strict";

            MainViewModel = (function () {
                function MainViewModel() {
                    _classCallCheck(this, MainViewModel);

                    extendObservable(this, {
                        selectedTabKey: 'table',
                        categories: [],
                        people: []
                    });
                    this.queryPeople();
                    this.queryCategories();
                    this.tableViewModel = new TableViewModel(this);
                    this.chartViewModel = new ChartViewModel(this);
                }

                _createClass(MainViewModel, [{
                    key: "queryPeople",
                    value: function queryPeople() {
                        var _this = this;

                        getPeople().then(function (people) {
                            _this.people = people;
                        });
                    }
                }, {
                    key: "queryCategories",
                    value: function queryCategories() {
                        var _this2 = this;

                        getCategories().then(function (categories) {
                            _this2.categories = categories;
                        });
                    }
                }]);

                return MainViewModel;
            })();

            _export("MainViewModel", MainViewModel);
        }
    };
});
$__System.register("1b", ["12", "13", "20", "21", "1f", "1c", "1d", "1e"], function (_export) {
    var _createClass, _classCallCheck, _inherits, _slicedToArray, _get, React, observer, Button, Glyphicon, _class, TableRow;

    return {
        setters: [function (_2) {
            _createClass = _2["default"];
        }, function (_3) {
            _classCallCheck = _3["default"];
        }, function (_) {
            _inherits = _["default"];
        }, function (_4) {
            _slicedToArray = _4["default"];
        }, function (_f) {
            _get = _f["default"];
        }, function (_c) {
            React = _c;
        }, function (_d) {
            observer = _d.observer;
        }, function (_e) {
            Button = _e.Button;
            Glyphicon = _e.Glyphicon;
        }],
        execute: function () {
            "use strict";

            TableRow = observer(_class = (function (_React$Component) {
                _inherits(TableRow, _React$Component);

                function TableRow(props) {
                    _classCallCheck(this, TableRow);

                    _get(Object.getPrototypeOf(TableRow.prototype), "constructor", this).call(this, props);
                    this.handleShowEditModal = this.handleShowEditModal.bind(this);
                }

                _createClass(TableRow, [{
                    key: "handleShowEditModal",
                    value: function handleShowEditModal() {
                        this.props.showEditModal(this.props.event);
                    }
                }, {
                    key: "render",
                    value: function render() {
                        var _this = this;

                        return React.createElement("tr", null, React.createElement("td", { className: "text-center" }, React.createElement(Button, { onClick: this.handleShowEditModal }, "✎")), React.createElement("td", { className: "text-right" }, this.props.event.amountDisplay), React.createElement("td", null, this.props.event.description), React.createElement("td", { className: "text-right" }, this.props.event.date), React.createElement("td", null, this.props.event.categoryFullName), this.props.people.map(function (person) {
                            var expenditure = _this.props.event.expenditures.find(function (x) {
                                return x.person === person.name;
                            });
                            if (expenditure) {
                                return React.createElement("td", { key: person.name, className: "text-right" }, expenditure.portion + " %");
                            } else {
                                return React.createElement("td", { key: person.name, className: "text-right" }, "0 %");
                            }
                        }), this.props.iouPairs.map(function (pair) {
                            var _pair = _slicedToArray(pair, 2);

                            var borrower = _pair[0];
                            var creditor = _pair[1];

                            var iou = _this.props.event.ious.find(function (x) {
                                return x.borrower === borrower.name && x.creditor === creditor.name;
                            });
                            if (iou) {
                                return React.createElement("td", { key: creditor.name, className: "text-right" }, iou.portion + " %");
                            } else {
                                return React.createElement("td", { key: creditor.name, className: "text-right" }, "0 %");
                            }
                        }));
                    }
                }]);

                return TableRow;
            })(React.Component)) || _class;

            _export("TableRow", TableRow);
        }
    };
});
$__System.registerDynamic('22', ['23', '24', '25', 'b'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var classof = $__require('23'),
        ITERATOR = $__require('24')('iterator'),
        Iterators = $__require('25');
    module.exports = $__require('b').getIteratorMethod = function (it) {
        if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
    };
});
$__System.registerDynamic('26', ['27', '22', 'b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('27'),
      get = $__require('22');
  module.exports = $__require('b').getIterator = function (it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };
});
$__System.registerDynamic('28', ['29', '2a', '26'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('29');
  $__require('2a');
  module.exports = $__require('26');
});
$__System.registerDynamic("2b", ["28"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("28"), __esModule: true };
});
$__System.registerDynamic("2c", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function () {/* empty */};
});
$__System.registerDynamic("2d", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };
});
$__System.registerDynamic('2e', ['2c', '2d', '25', '2f', '30'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var addToUnscopables = $__require('2c'),
      step = $__require('2d'),
      Iterators = $__require('25'),
      toIObject = $__require('2f');
  module.exports = $__require('30')(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated);
    this._i = 0;
    this._k = kind;
  }, function () {
    var O = this._t,
        kind = this._k,
        index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');
  Iterators.Arguments = Iterators.Array;
  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
});
$__System.registerDynamic('29', ['2e', '25'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('2e');
  var Iterators = $__require('25');
  Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;
});
$__System.registerDynamic("31", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.1.4 ToInteger
  var ceil = Math.ceil,
      floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
});
$__System.registerDynamic('32', ['31', '3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('31'),
      defined = $__require('3');
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that)),
          i = toInteger(pos),
          l = s.length,
          a,
          b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
});
$__System.registerDynamic("33", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = true;
});
$__System.registerDynamic('34', ['35'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('35');
});
$__System.registerDynamic("36", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
});
$__System.registerDynamic('37', ['7'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = !$__require('7')(function () {
    return Object.defineProperty({}, 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
$__System.registerDynamic('35', ['5', '36', '37'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('5'),
      createDesc = $__require('36');
  module.exports = $__require('37') ? function (object, key, value) {
    return $.setDesc(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
});
$__System.registerDynamic('38', ['5', '36', '39', '35', '24'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $ = $__require('5'),
      descriptor = $__require('36'),
      setToStringTag = $__require('39'),
      IteratorPrototype = {};
  $__require('35')(IteratorPrototype, $__require('24')('iterator'), function () {
    return this;
  });
  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = $.create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
});
$__System.registerDynamic("3a", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
});
$__System.registerDynamic('39', ['5', '3a', '24'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var def = $__require('5').setDesc,
      has = $__require('3a'),
      TAG = $__require('24')('toStringTag');
  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
      configurable: true,
      value: tag
    });
  };
});
$__System.registerDynamic('30', ['33', '9', '34', '35', '3a', '25', '38', '39', '5', '24'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('33'),
      $export = $__require('9'),
      redefine = $__require('34'),
      hide = $__require('35'),
      has = $__require('3a'),
      Iterators = $__require('25'),
      $iterCreate = $__require('38'),
      setToStringTag = $__require('39'),
      getProto = $__require('5').getProto,
      ITERATOR = $__require('24')('iterator'),
      BUGGY = !([].keys && 'next' in [].keys()),
      FF_ITERATOR = '@@iterator',
      KEYS = 'keys',
      VALUES = 'values';
  var returnThis = function () {
    return this;
  };
  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function (kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }
      return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator',
        DEF_VALUES = DEFAULT == VALUES,
        VALUES_BUG = false,
        proto = Base.prototype,
        $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT],
        $default = $native || getMethod(DEFAULT),
        methods,
        key;
    if ($native) {
      var IteratorPrototype = getProto($default.call(new Base()));
      setToStringTag(IteratorPrototype, TAG, true);
      if (!LIBRARY && has(proto, FF_ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      if (DEF_VALUES && $native.name !== VALUES) {
        VALUES_BUG = true;
        $default = function values() {
          return $native.call(this);
        };
      }
    }
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: !DEF_VALUES ? $default : getMethod('entries')
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
});
$__System.registerDynamic('2a', ['32', '30'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $at = $__require('32')(true);
  $__require('30')(String, 'String', function (iterated) {
    this._t = String(iterated);
    this._i = 0;
  }, function () {
    var O = this._t,
        index = this._i,
        point;
    if (index >= O.length) return {
      value: undefined,
      done: true
    };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });
});
$__System.registerDynamic('23', ['3b', '24'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var cof = $__require('3b'),
        TAG = $__require('24')('toStringTag'),
        ARG = cof(function () {
        return arguments;
    }()) == 'Arguments';
    module.exports = function (it) {
        var O, T, B;
        return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = (O = Object(it))[TAG]) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
    };
});
$__System.registerDynamic('3c', ['3d'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var global = $__require('3d'),
        SHARED = '__core-js_shared__',
        store = global[SHARED] || (global[SHARED] = {});
    module.exports = function (key) {
        return store[key] || (store[key] = {});
    };
});
$__System.registerDynamic('3e', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var id = 0,
      px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
});
$__System.registerDynamic('24', ['3c', '3e', '3d'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var store = $__require('3c')('wks'),
        uid = $__require('3e'),
        Symbol = $__require('3d').Symbol;
    module.exports = function (name) {
        return store[name] || (store[name] = Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
    };
});
$__System.registerDynamic("25", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = {};
});
$__System.registerDynamic('3f', ['23', '24', '25', 'b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var classof = $__require('23'),
      ITERATOR = $__require('24')('iterator'),
      Iterators = $__require('25');
  module.exports = $__require('b').isIterable = function (it) {
    var O = Object(it);
    return O[ITERATOR] !== undefined || '@@iterator' in O || Iterators.hasOwnProperty(classof(O));
  };
});
$__System.registerDynamic('40', ['29', '2a', '3f'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('29');
  $__require('2a');
  module.exports = $__require('3f');
});
$__System.registerDynamic("41", ["40"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("40"), __esModule: true };
});
$__System.registerDynamic("21", ["2b", "41"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _getIterator = $__require("2b")["default"];
  var _isIterable = $__require("41")["default"];
  exports["default"] = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (_isIterable(Object(arr))) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
  exports.__esModule = true;
});
$__System.registerDynamic('42', ['1c', '43', 'e', '44'], true, function ($__require, exports, module) {
	/* */
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var React = $__require('1c'),
	    createClass = $__require('43'),
	    moment = $__require('e'),
	    onClickOutside = $__require('44');

	var DateTimePickerDays = onClickOutside(createClass({
		render: function () {
			var footer = this.renderFooter(),
			    date = this.props.viewDate,
			    locale = date.localeData(),
			    tableChildren;

			tableChildren = [React.createElement('thead', { key: 'th' }, [React.createElement('tr', { key: 'h' }, [React.createElement('th', { key: 'p', className: 'rdtPrev', onClick: this.props.subtractTime(1, 'months') }, React.createElement('span', {}, '‹')), React.createElement('th', { key: 's', className: 'rdtSwitch', onClick: this.props.showView('months'), colSpan: 5, 'data-value': this.props.viewDate.month() }, locale.months(date) + ' ' + date.year()), React.createElement('th', { key: 'n', className: 'rdtNext', onClick: this.props.addTime(1, 'months') }, React.createElement('span', {}, '›'))]), React.createElement('tr', { key: 'd' }, this.getDaysOfWeek(locale).map(function (day, index) {
				return React.createElement('th', { key: day + index, className: 'dow' }, day);
			}))]), React.createElement('tbody', { key: 'tb' }, this.renderDays())];

			if (footer) tableChildren.push(footer);

			return React.createElement('div', { className: 'rdtDays' }, React.createElement('table', {}, tableChildren));
		},

		/**
   * Get a list of the days of the week
   * depending on the current locale
   * @return {array} A list with the shortname of the days
   */
		getDaysOfWeek: function (locale) {
			var days = locale._weekdaysMin,
			    first = locale.firstDayOfWeek(),
			    dow = [],
			    i = 0;

			days.forEach(function (day) {
				dow[(7 + i++ - first) % 7] = day;
			});

			return dow;
		},

		renderDays: function () {
			var date = this.props.viewDate,
			    selected = this.props.selectedDate && this.props.selectedDate.clone(),
			    prevMonth = date.clone().subtract(1, 'months'),
			    currentYear = date.year(),
			    currentMonth = date.month(),
			    weeks = [],
			    days = [],
			    renderer = this.props.renderDay || this.renderDay,
			    isValid = this.props.isValidDate || this.alwaysValidDate,
			    classes,
			    isDisabled,
			    dayProps,
			    currentDate;

			// Go to the last week of the previous month
			prevMonth.date(prevMonth.daysInMonth()).startOf('week');
			var lastDay = prevMonth.clone().add(42, 'd');

			while (prevMonth.isBefore(lastDay)) {
				classes = 'rdtDay';
				currentDate = prevMonth.clone();

				if (prevMonth.year() === currentYear && prevMonth.month() < currentMonth || prevMonth.year() < currentYear) classes += ' rdtOld';else if (prevMonth.year() === currentYear && prevMonth.month() > currentMonth || prevMonth.year() > currentYear) classes += ' rdtNew';

				if (selected && prevMonth.isSame(selected, 'day')) classes += ' rdtActive';

				if (prevMonth.isSame(moment(), 'day')) classes += ' rdtToday';

				isDisabled = !isValid(currentDate, selected);
				if (isDisabled) classes += ' rdtDisabled';

				dayProps = {
					key: prevMonth.format('M_D'),
					'data-value': prevMonth.date(),
					className: classes
				};

				if (!isDisabled) dayProps.onClick = this.updateSelectedDate;

				days.push(renderer(dayProps, currentDate, selected));

				if (days.length === 7) {
					weeks.push(React.createElement('tr', { key: prevMonth.format('M_D') }, days));
					days = [];
				}

				prevMonth.add(1, 'd');
			}

			return weeks;
		},

		updateSelectedDate: function (event) {
			this.props.updateSelectedDate(event, true);
		},

		renderDay: function (props, currentDate) {
			return React.createElement('td', props, currentDate.date());
		},

		renderFooter: function () {
			if (!this.props.timeFormat) return '';

			var date = this.props.selectedDate || this.props.viewDate;

			return React.createElement('tfoot', { key: 'tf' }, React.createElement('tr', {}, React.createElement('td', { onClick: this.props.showView('time'), colSpan: 7, className: 'rdtTimeToggle' }, date.format(this.props.timeFormat))));
		},

		alwaysValidDate: function () {
			return 1;
		},

		handleClickOutside: function () {
			this.props.handleClickOutside();
		}
	}));

	module.exports = DateTimePickerDays;
});
$__System.registerDynamic('45', ['1c', '43', '44'], true, function ($__require, exports, module) {
	/* */
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var React = $__require('1c'),
	    createClass = $__require('43'),
	    onClickOutside = $__require('44');

	var DateTimePickerMonths = onClickOutside(createClass({
		render: function () {
			return React.createElement('div', { className: 'rdtMonths' }, [React.createElement('table', { key: 'a' }, React.createElement('thead', {}, React.createElement('tr', {}, [React.createElement('th', { key: 'prev', className: 'rdtPrev', onClick: this.props.subtractTime(1, 'years') }, React.createElement('span', {}, '‹')), React.createElement('th', { key: 'year', className: 'rdtSwitch', onClick: this.props.showView('years'), colSpan: 2, 'data-value': this.props.viewDate.year() }, this.props.viewDate.year()), React.createElement('th', { key: 'next', className: 'rdtNext', onClick: this.props.addTime(1, 'years') }, React.createElement('span', {}, '›'))]))), React.createElement('table', { key: 'months' }, React.createElement('tbody', { key: 'b' }, this.renderMonths()))]);
		},

		renderMonths: function () {
			var date = this.props.selectedDate,
			    month = this.props.viewDate.month(),
			    year = this.props.viewDate.year(),
			    rows = [],
			    i = 0,
			    months = [],
			    renderer = this.props.renderMonth || this.renderMonth,
			    isValid = this.props.isValidDate || this.alwaysValidDate,
			    classes,
			    props,
			    currentMonth,
			    isDisabled,
			    noOfDaysInMonth,
			    daysInMonth,
			    validDay,

			// Date is irrelevant because we're only interested in month
			irrelevantDate = 1;

			while (i < 12) {
				classes = 'rdtMonth';
				currentMonth = this.props.viewDate.clone().set({ year: year, month: i, date: irrelevantDate });

				noOfDaysInMonth = currentMonth.endOf('month').format('D');
				daysInMonth = Array.from({ length: noOfDaysInMonth }, function (e, i) {
					return i + 1;
				});

				validDay = daysInMonth.find(function (d) {
					var day = currentMonth.clone().set('date', d);
					return isValid(day);
				});

				isDisabled = validDay === undefined;

				if (isDisabled) classes += ' rdtDisabled';

				if (date && i === date.month() && year === date.year()) classes += ' rdtActive';

				props = {
					key: i,
					'data-value': i,
					className: classes
				};

				if (!isDisabled) props.onClick = this.props.updateOn === 'months' ? this.updateSelectedMonth : this.props.setDate('month');

				months.push(renderer(props, i, year, date && date.clone()));

				if (months.length === 4) {
					rows.push(React.createElement('tr', { key: month + '_' + rows.length }, months));
					months = [];
				}

				i++;
			}

			return rows;
		},

		updateSelectedMonth: function (event) {
			this.props.updateSelectedDate(event);
		},

		renderMonth: function (props, month) {
			var localMoment = this.props.viewDate;
			var monthStr = localMoment.localeData().monthsShort(localMoment.month(month));
			var strLength = 3;
			// Because some months are up to 5 characters long, we want to
			// use a fixed string length for consistency
			var monthStrFixedLength = monthStr.substring(0, strLength);
			return React.createElement('td', props, capitalize(monthStrFixedLength));
		},

		alwaysValidDate: function () {
			return 1;
		},

		handleClickOutside: function () {
			this.props.handleClickOutside();
		}
	}));

	function capitalize(str) {
		return str.charAt(0).toUpperCase() + str.slice(1);
	}

	module.exports = DateTimePickerMonths;
});
$__System.registerDynamic('46', ['1c', '43', '44'], true, function ($__require, exports, module) {
	/* */
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var React = $__require('1c'),
	    createClass = $__require('43'),
	    onClickOutside = $__require('44');

	var DateTimePickerYears = onClickOutside(createClass({
		render: function () {
			var year = parseInt(this.props.viewDate.year() / 10, 10) * 10;

			return React.createElement('div', { className: 'rdtYears' }, [React.createElement('table', { key: 'a' }, React.createElement('thead', {}, React.createElement('tr', {}, [React.createElement('th', { key: 'prev', className: 'rdtPrev', onClick: this.props.subtractTime(10, 'years') }, React.createElement('span', {}, '‹')), React.createElement('th', { key: 'year', className: 'rdtSwitch', onClick: this.props.showView('years'), colSpan: 2 }, year + '-' + (year + 9)), React.createElement('th', { key: 'next', className: 'rdtNext', onClick: this.props.addTime(10, 'years') }, React.createElement('span', {}, '›'))]))), React.createElement('table', { key: 'years' }, React.createElement('tbody', {}, this.renderYears(year)))]);
		},

		renderYears: function (year) {
			var years = [],
			    i = -1,
			    rows = [],
			    renderer = this.props.renderYear || this.renderYear,
			    selectedDate = this.props.selectedDate,
			    isValid = this.props.isValidDate || this.alwaysValidDate,
			    classes,
			    props,
			    currentYear,
			    isDisabled,
			    noOfDaysInYear,
			    daysInYear,
			    validDay,

			// Month and date are irrelevant here because
			// we're only interested in the year
			irrelevantMonth = 0,
			    irrelevantDate = 1;

			year--;
			while (i < 11) {
				classes = 'rdtYear';
				currentYear = this.props.viewDate.clone().set({ year: year, month: irrelevantMonth, date: irrelevantDate });

				// Not sure what 'rdtOld' is for, commenting out for now as it's not working properly
				// if ( i === -1 | i === 10 )
				// classes += ' rdtOld';

				noOfDaysInYear = currentYear.endOf('year').format('DDD');
				daysInYear = Array.from({ length: noOfDaysInYear }, function (e, i) {
					return i + 1;
				});

				validDay = daysInYear.find(function (d) {
					var day = currentYear.clone().dayOfYear(d);
					return isValid(day);
				});

				isDisabled = validDay === undefined;

				if (isDisabled) classes += ' rdtDisabled';

				if (selectedDate && selectedDate.year() === year) classes += ' rdtActive';

				props = {
					key: year,
					'data-value': year,
					className: classes
				};

				if (!isDisabled) props.onClick = this.props.updateOn === 'years' ? this.updateSelectedYear : this.props.setDate('year');

				years.push(renderer(props, year, selectedDate && selectedDate.clone()));

				if (years.length === 4) {
					rows.push(React.createElement('tr', { key: i }, years));
					years = [];
				}

				year++;
				i++;
			}

			return rows;
		},

		updateSelectedYear: function (event) {
			this.props.updateSelectedDate(event);
		},

		renderYear: function (props, year) {
			return React.createElement('td', props, year);
		},

		alwaysValidDate: function () {
			return 1;
		},

		handleClickOutside: function () {
			this.props.handleClickOutside();
		}
	}));

	module.exports = DateTimePickerYears;
});
$__System.registerDynamic('47', [], true, function ($__require, exports, module) {
	/* */
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function ToObject(val) {
		if (val == null) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function ownEnumerableKeys(obj) {
		var keys = Object.getOwnPropertyNames(obj);

		if (Object.getOwnPropertySymbols) {
			keys = keys.concat(Object.getOwnPropertySymbols(obj));
		}

		return keys.filter(function (key) {
			return propIsEnumerable.call(obj, key);
		});
	}

	module.exports = Object.assign || function (target, source) {
		var from;
		var keys;
		var to = ToObject(target);

		for (var s = 1; s < arguments.length; s++) {
			from = arguments[s];
			keys = ownEnumerableKeys(Object(from));

			for (var i = 0; i < keys.length; i++) {
				to[keys[i]] = from[keys[i]];
			}
		}

		return to;
	};
});
$__System.registerDynamic("48", ["47"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("47");
});
$__System.registerDynamic('49', ['1c', '4a'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var React = $__require('1c');
  var factory = $__require('4a');
  if (typeof React === 'undefined') {
    throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');
  }
  var ReactNoopUpdateQueue = new React.Component().updater;
  module.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);
});
$__System.registerDynamic("43", ["49"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("49");
});
$__System.registerDynamic('4b', ['1c', '4c', '43', '16'], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var global = this || self,
      GLOBAL = global;
  (function (process) {
    (function (root) {
      var registeredComponents = [];
      var handlers = [];
      var IGNORE_CLASS = 'ignore-react-onclickoutside';
      var DEFAULT_EVENTS = ['mousedown', 'touchstart'];
      var isNodeFound = function (current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        }
        if (current.correspondingElement) {
          return current.correspondingElement.classList.contains(ignoreClass);
        }
        return current.classList.contains(ignoreClass);
      };
      var findHighest = function (current, componentNode, ignoreClass) {
        if (current === componentNode) {
          return true;
        }
        while (current.parentNode) {
          if (isNodeFound(current, componentNode, ignoreClass)) {
            return true;
          }
          current = current.parentNode;
        }
        return current;
      };
      var clickedScrollbar = function (evt) {
        return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
      };
      var generateOutsideCheck = function (componentNode, componentInstance, eventHandler, ignoreClass, excludeScrollbar, preventDefault, stopPropagation) {
        return function (evt) {
          if (preventDefault) {
            evt.preventDefault();
          }
          if (stopPropagation) {
            evt.stopPropagation();
          }
          var current = evt.target;
          if (excludeScrollbar && clickedScrollbar(evt) || findHighest(current, componentNode, ignoreClass) !== document) {
            return;
          }
          eventHandler(evt);
        };
      };
      function setupHOC(root, React, ReactDOM, createReactClass) {
        return function onClickOutsideHOC(Component, config) {
          var wrapComponentWithOnClickOutsideHandling = createReactClass({
            statics: { getClass: function () {
                if (Component.getClass) {
                  return Component.getClass();
                }
                return Component;
              } },
            getInstance: function () {
              return Component.prototype.isReactComponent ? this.refs.instance : this;
            },
            __outsideClickHandler: function () {},
            getDefaultProps: function () {
              return { excludeScrollbar: config && config.excludeScrollbar };
            },
            componentDidMount: function () {
              if (typeof document === 'undefined' || !document.createElement) {
                return;
              }
              var instance = this.getInstance();
              var clickOutsideHandler;
              if (config && typeof config.handleClickOutside === 'function') {
                clickOutsideHandler = config.handleClickOutside(instance);
                if (typeof clickOutsideHandler !== 'function') {
                  throw new Error('Component lacks a function for processing outside click events specified by the handleClickOutside config option.');
                }
              } else if (typeof instance.handleClickOutside === 'function') {
                if (React.Component.prototype.isPrototypeOf(instance)) {
                  clickOutsideHandler = instance.handleClickOutside.bind(instance);
                } else {
                  clickOutsideHandler = instance.handleClickOutside;
                }
              } else if (typeof instance.props.handleClickOutside === 'function') {
                clickOutsideHandler = instance.props.handleClickOutside;
              } else {
                throw new Error('Component lacks a handleClickOutside(event) function for processing outside click events.');
              }
              var componentNode = ReactDOM.findDOMNode(instance);
              if (componentNode === null) {
                console.warn('Antipattern warning: there was no DOM node associated with the component that is being wrapped by outsideClick.');
                console.warn(['This is typically caused by having a component that starts life with a render function that', 'returns `null` (due to a state or props value), so that the component \'exist\' in the React', 'chain of components, but not in the DOM.\n\nInstead, you need to refactor your code so that the', 'decision of whether or not to show your component is handled by the parent, in their render()', 'function.\n\nIn code, rather than:\n\n  A{render(){return check? <.../> : null;}\n  B{render(){<A check=... />}\n\nmake sure that you', 'use:\n\n  A{render(){return <.../>}\n  B{render(){return <...>{ check ? <A/> : null }<...>}}\n\nThat is:', 'the parent is always responsible for deciding whether or not to render any of its children.', 'It is not the child\'s responsibility to decide whether a render instruction from above should', 'get ignored or not by returning `null`.\n\nWhen any component gets its render() function called,', 'that is the signal that it should be rendering its part of the UI. It may in turn decide not to', 'render all of *its* children, but it should never return `null` for itself. It is not responsible', 'for that decision.'].join(' '));
              }
              var fn = this.__outsideClickHandler = generateOutsideCheck(componentNode, instance, clickOutsideHandler, this.props.outsideClickIgnoreClass || IGNORE_CLASS, this.props.excludeScrollbar, this.props.preventDefault || false, this.props.stopPropagation || false);
              var pos = registeredComponents.length;
              registeredComponents.push(this);
              handlers[pos] = fn;
              if (!this.props.disableOnClickOutside) {
                this.enableOnClickOutside();
              }
            },
            componentWillReceiveProps: function (nextProps) {
              if (this.props.disableOnClickOutside && !nextProps.disableOnClickOutside) {
                this.enableOnClickOutside();
              } else if (!this.props.disableOnClickOutside && nextProps.disableOnClickOutside) {
                this.disableOnClickOutside();
              }
            },
            componentWillUnmount: function () {
              this.disableOnClickOutside();
              this.__outsideClickHandler = false;
              var pos = registeredComponents.indexOf(this);
              if (pos > -1) {
                if (handlers[pos]) {
                  handlers.splice(pos, 1);
                }
                registeredComponents.splice(pos, 1);
              }
            },
            enableOnClickOutside: function () {
              var fn = this.__outsideClickHandler;
              if (typeof document !== 'undefined') {
                var events = this.props.eventTypes || DEFAULT_EVENTS;
                if (!events.forEach) {
                  events = [events];
                }
                events.forEach(function (eventName) {
                  document.addEventListener(eventName, fn);
                });
              }
            },
            disableOnClickOutside: function () {
              var fn = this.__outsideClickHandler;
              if (typeof document !== 'undefined') {
                var events = this.props.eventTypes || DEFAULT_EVENTS;
                if (!events.forEach) {
                  events = [events];
                }
                events.forEach(function (eventName) {
                  document.removeEventListener(eventName, fn);
                });
              }
            },
            render: function () {
              var passedProps = this.props;
              var props = {};
              Object.keys(this.props).forEach(function (key) {
                if (key !== 'excludeScrollbar') {
                  props[key] = passedProps[key];
                }
              });
              if (Component.prototype.isReactComponent) {
                props.ref = 'instance';
              }
              props.disableOnClickOutside = this.disableOnClickOutside;
              props.enableOnClickOutside = this.enableOnClickOutside;
              return React.createElement(Component, props);
            }
          });
          (function bindWrappedComponentName(c, wrapper) {
            var componentName = c.displayName || c.name || 'Component';
            wrapper.displayName = 'OnClickOutside(' + componentName + ')';
          })(Component, wrapComponentWithOnClickOutsideHandling);
          return wrapComponentWithOnClickOutsideHandling;
        };
      }
      function setupBinding(root, factory) {
        if (typeof undefined === 'function' && define.amd) {
          define(['react', 'react-dom', 'create-react-class'], function (React, ReactDom, createReactClass) {
            if (!createReactClass) createReactClass = React.createClass;
            return factory(root, React, ReactDom, createReactClass);
          });
        } else if (typeof exports === 'object') {
          module.exports = factory(root, $__require('1c'), $__require('4c'), $__require('43'));
        } else {
          var createReactClass = React.createClass ? React.createClass : window.createReactClass;
          root.onClickOutside = factory(root, React, ReactDOM, createReactClass);
        }
      }
      setupBinding(root, setupHOC);
    })(this);
  })($__require('16'));
});
$__System.registerDynamic("44", ["4b"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("4b");
});
$__System.registerDynamic('4d', ['1c', '43', '48', '44'], true, function ($__require, exports, module) {
	/* */
	'use strict';

	var global = this || self,
	    GLOBAL = global;
	var React = $__require('1c'),
	    createClass = $__require('43'),
	    assign = $__require('48'),
	    onClickOutside = $__require('44');

	var DateTimePickerTime = onClickOutside(createClass({
		getInitialState: function () {
			return this.calculateState(this.props);
		},

		calculateState: function (props) {
			var date = props.selectedDate || props.viewDate,
			    format = props.timeFormat,
			    counters = [];

			if (format.toLowerCase().indexOf('h') !== -1) {
				counters.push('hours');
				if (format.indexOf('m') !== -1) {
					counters.push('minutes');
					if (format.indexOf('s') !== -1) {
						counters.push('seconds');
					}
				}
			}

			var daypart = false;
			if (this.state !== null && this.props.timeFormat.toLowerCase().indexOf(' a') !== -1) {
				if (this.props.timeFormat.indexOf(' A') !== -1) {
					daypart = this.state.hours >= 12 ? 'PM' : 'AM';
				} else {
					daypart = this.state.hours >= 12 ? 'pm' : 'am';
				}
			}

			return {
				hours: date.format('H'),
				minutes: date.format('mm'),
				seconds: date.format('ss'),
				milliseconds: date.format('SSS'),
				daypart: daypart,
				counters: counters
			};
		},

		renderCounter: function (type) {
			if (type !== 'daypart') {
				var value = this.state[type];
				if (type === 'hours' && this.props.timeFormat.toLowerCase().indexOf(' a') !== -1) {
					value = (value - 1) % 12 + 1;

					if (value === 0) {
						value = 12;
					}
				}
				return React.createElement('div', { key: type, className: 'rdtCounter' }, [React.createElement('span', { key: 'up', className: 'rdtBtn', onMouseDown: this.onStartClicking('increase', type) }, '▲'), React.createElement('div', { key: 'c', className: 'rdtCount' }, value), React.createElement('span', { key: 'do', className: 'rdtBtn', onMouseDown: this.onStartClicking('decrease', type) }, '▼')]);
			}
			return '';
		},

		renderDayPart: function () {
			return React.createElement('div', { key: 'dayPart', className: 'rdtCounter' }, [React.createElement('span', { key: 'up', className: 'rdtBtn', onMouseDown: this.onStartClicking('toggleDayPart', 'hours') }, '▲'), React.createElement('div', { key: this.state.daypart, className: 'rdtCount' }, this.state.daypart), React.createElement('span', { key: 'do', className: 'rdtBtn', onMouseDown: this.onStartClicking('toggleDayPart', 'hours') }, '▼')]);
		},

		render: function () {
			var me = this,
			    counters = [];

			this.state.counters.forEach(function (c) {
				if (counters.length) counters.push(React.createElement('div', { key: 'sep' + counters.length, className: 'rdtCounterSeparator' }, ':'));
				counters.push(me.renderCounter(c));
			});

			if (this.state.daypart !== false) {
				counters.push(me.renderDayPart());
			}

			if (this.state.counters.length === 3 && this.props.timeFormat.indexOf('S') !== -1) {
				counters.push(React.createElement('div', { className: 'rdtCounterSeparator', key: 'sep5' }, ':'));
				counters.push(React.createElement('div', { className: 'rdtCounter rdtMilli', key: 'm' }, React.createElement('input', { value: this.state.milliseconds, type: 'text', onChange: this.updateMilli })));
			}

			return React.createElement('div', { className: 'rdtTime' }, React.createElement('table', {}, [this.renderHeader(), React.createElement('tbody', { key: 'b' }, React.createElement('tr', {}, React.createElement('td', {}, React.createElement('div', { className: 'rdtCounters' }, counters))))]));
		},

		componentWillMount: function () {
			var me = this;
			me.timeConstraints = {
				hours: {
					min: 0,
					max: 23,
					step: 1
				},
				minutes: {
					min: 0,
					max: 59,
					step: 1
				},
				seconds: {
					min: 0,
					max: 59,
					step: 1
				},
				milliseconds: {
					min: 0,
					max: 999,
					step: 1
				}
			};
			['hours', 'minutes', 'seconds', 'milliseconds'].forEach(function (type) {
				assign(me.timeConstraints[type], me.props.timeConstraints[type]);
			});
			this.setState(this.calculateState(this.props));
		},

		componentWillReceiveProps: function (nextProps) {
			this.setState(this.calculateState(nextProps));
		},

		updateMilli: function (e) {
			var milli = parseInt(e.target.value, 10);
			if (milli === e.target.value && milli >= 0 && milli < 1000) {
				this.props.setTime('milliseconds', milli);
				this.setState({ milliseconds: milli });
			}
		},

		renderHeader: function () {
			if (!this.props.dateFormat) return null;

			var date = this.props.selectedDate || this.props.viewDate;
			return React.createElement('thead', { key: 'h' }, React.createElement('tr', {}, React.createElement('th', { className: 'rdtSwitch', colSpan: 4, onClick: this.props.showView('days') }, date.format(this.props.dateFormat))));
		},

		onStartClicking: function (action, type) {
			var me = this;

			return function () {
				var update = {};
				update[type] = me[action](type);
				me.setState(update);

				me.timer = setTimeout(function () {
					me.increaseTimer = setInterval(function () {
						update[type] = me[action](type);
						me.setState(update);
					}, 70);
				}, 500);

				me.mouseUpListener = function () {
					clearTimeout(me.timer);
					clearInterval(me.increaseTimer);
					me.props.setTime(type, me.state[type]);
					document.body.removeEventListener('mouseup', me.mouseUpListener);
				};

				document.body.addEventListener('mouseup', me.mouseUpListener);
			};
		},

		padValues: {
			hours: 1,
			minutes: 2,
			seconds: 2,
			milliseconds: 3
		},

		toggleDayPart: function (type) {
			// type is always 'hours'
			var value = parseInt(this.state[type], 10) + 12;
			if (value > this.timeConstraints[type].max) value = this.timeConstraints[type].min + (value - (this.timeConstraints[type].max + 1));
			return this.pad(type, value);
		},

		increase: function (type) {
			var value = parseInt(this.state[type], 10) + this.timeConstraints[type].step;
			if (value > this.timeConstraints[type].max) value = this.timeConstraints[type].min + (value - (this.timeConstraints[type].max + 1));
			return this.pad(type, value);
		},

		decrease: function (type) {
			var value = parseInt(this.state[type], 10) - this.timeConstraints[type].step;
			if (value < this.timeConstraints[type].min) value = this.timeConstraints[type].max + 1 - (this.timeConstraints[type].min - value);
			return this.pad(type, value);
		},

		pad: function (type, value) {
			var str = value + '';
			while (str.length < this.padValues[type]) str = '0' + str;
			return str;
		},

		handleClickOutside: function () {
			this.props.handleClickOutside();
		}
	}));

	module.exports = DateTimePickerTime;
});
$__System.registerDynamic('4e', ['1c', '43', '42', '45', '46', '4d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var React = $__require('1c'),
      createClass = $__require('43'),
      DaysView = $__require('42'),
      MonthsView = $__require('45'),
      YearsView = $__require('46'),
      TimeView = $__require('4d');
  ;
  var CalendarContainer = createClass({
    viewComponents: {
      days: DaysView,
      months: MonthsView,
      years: YearsView,
      time: TimeView
    },
    render: function () {
      return React.createElement(this.viewComponents[this.props.view], this.props.viewProps);
    }
  });
  module.exports = CalendarContainer;
});
$__System.registerDynamic('4f', ['48', '50', '43', 'e', '1c', '4e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var assign = $__require('48'),
      PropTypes = $__require('50'),
      createClass = $__require('43'),
      moment = $__require('e'),
      React = $__require('1c'),
      CalendarContainer = $__require('4e');
  ;
  var TYPES = PropTypes;
  var Datetime = createClass({
    propTypes: {
      onFocus: TYPES.func,
      onBlur: TYPES.func,
      onChange: TYPES.func,
      onViewModeChange: TYPES.func,
      locale: TYPES.string,
      utc: TYPES.bool,
      input: TYPES.bool,
      inputProps: TYPES.object,
      timeConstraints: TYPES.object,
      viewMode: TYPES.oneOf(['years', 'months', 'days', 'time']),
      isValidDate: TYPES.func,
      open: TYPES.bool,
      strictParsing: TYPES.bool,
      closeOnSelect: TYPES.bool,
      closeOnTab: TYPES.bool
    },
    getDefaultProps: function () {
      var nof = function () {};
      return {
        className: '',
        defaultValue: '',
        inputProps: {},
        input: true,
        onFocus: nof,
        onBlur: nof,
        onChange: nof,
        onViewModeChange: nof,
        timeFormat: true,
        timeConstraints: {},
        dateFormat: true,
        strictParsing: true,
        closeOnSelect: false,
        closeOnTab: true,
        utc: false
      };
    },
    getInitialState: function () {
      var state = this.getStateFromProps(this.props);
      if (state.open === undefined) state.open = !this.props.input;
      state.currentView = this.props.dateFormat ? this.props.viewMode || state.updateOn || 'days' : 'time';
      return state;
    },
    getStateFromProps: function (props) {
      var formats = this.getFormats(props),
          date = props.value || props.defaultValue,
          selectedDate,
          viewDate,
          updateOn,
          inputValue;
      ;
      if (date && typeof date === 'string') selectedDate = this.localMoment(date, formats.datetime);else if (date) selectedDate = this.localMoment(date);
      if (selectedDate && !selectedDate.isValid()) selectedDate = null;
      viewDate = selectedDate ? selectedDate.clone().startOf('month') : this.localMoment().startOf('month');
      ;
      updateOn = this.getUpdateOn(formats);
      if (selectedDate) inputValue = selectedDate.format(formats.datetime);else if (date.isValid && !date.isValid()) inputValue = '';else inputValue = date || '';
      return {
        updateOn: updateOn,
        inputFormat: formats.datetime,
        viewDate: viewDate,
        selectedDate: selectedDate,
        inputValue: inputValue,
        open: props.open
      };
    },
    getUpdateOn: function (formats) {
      if (formats.date.match(/[lLD]/)) {
        return 'days';
      } else if (formats.date.indexOf('M') !== -1) {
        return 'months';
      } else if (formats.date.indexOf('Y') !== -1) {
        return 'years';
      }
      return 'days';
    },
    getFormats: function (props) {
      var formats = {
        date: props.dateFormat || '',
        time: props.timeFormat || ''
      },
          locale = this.localMoment(props.date, null, props).localeData();
      ;
      if (formats.date === true) {
        formats.date = locale.longDateFormat('L');
      } else if (this.getUpdateOn(formats) !== 'days') {
        formats.time = '';
      }
      if (formats.time === true) {
        formats.time = locale.longDateFormat('LT');
      }
      formats.datetime = formats.date && formats.time ? formats.date + ' ' + formats.time : formats.date || formats.time;
      ;
      return formats;
    },
    componentWillReceiveProps: function (nextProps) {
      var formats = this.getFormats(nextProps),
          updatedState = {};
      ;
      if (nextProps.value !== this.props.value || formats.datetime !== this.getFormats(this.props).datetime) {
        updatedState = this.getStateFromProps(nextProps);
      }
      if (updatedState.open === undefined) {
        if (this.props.closeOnSelect && this.state.currentView !== 'time') {
          updatedState.open = false;
        } else {
          updatedState.open = this.state.open;
        }
      }
      if (nextProps.viewMode !== this.props.viewMode) {
        updatedState.currentView = nextProps.viewMode;
      }
      if (nextProps.locale !== this.props.locale) {
        if (this.state.viewDate) {
          var updatedViewDate = this.state.viewDate.clone().locale(nextProps.locale);
          updatedState.viewDate = updatedViewDate;
        }
        if (this.state.selectedDate) {
          var updatedSelectedDate = this.state.selectedDate.clone().locale(nextProps.locale);
          updatedState.selectedDate = updatedSelectedDate;
          updatedState.inputValue = updatedSelectedDate.format(formats.datetime);
        }
      }
      if (nextProps.utc !== this.props.utc) {
        if (nextProps.utc) {
          if (this.state.viewDate) updatedState.viewDate = this.state.viewDate.clone().utc();
          if (this.state.selectedDate) {
            updatedState.selectedDate = this.state.selectedDate.clone().utc();
            updatedState.inputValue = updatedState.selectedDate.format(formats.datetime);
          }
        } else {
          if (this.state.viewDate) updatedState.viewDate = this.state.viewDate.clone().local();
          if (this.state.selectedDate) {
            updatedState.selectedDate = this.state.selectedDate.clone().local();
            updatedState.inputValue = updatedState.selectedDate.format(formats.datetime);
          }
        }
      }
      this.setState(updatedState);
    },
    onInputChange: function (e) {
      var value = e.target === null ? e : e.target.value,
          localMoment = this.localMoment(value, this.state.inputFormat),
          update = { inputValue: value };
      ;
      if (localMoment.isValid() && !this.props.value) {
        update.selectedDate = localMoment;
        update.viewDate = localMoment.clone().startOf('month');
      } else {
        update.selectedDate = null;
      }
      return this.setState(update, function () {
        return this.props.onChange(localMoment.isValid() ? localMoment : this.state.inputValue);
      });
    },
    onInputKey: function (e) {
      if (e.which === 9 && this.props.closeOnTab) {
        this.closeCalendar();
      }
    },
    showView: function (view) {
      var me = this;
      return function () {
        me.state.currentView !== view && me.props.onViewModeChange(view);
        me.setState({ currentView: view });
      };
    },
    setDate: function (type) {
      var me = this,
          nextViews = {
        month: 'days',
        year: 'months'
      };
      ;
      return function (e) {
        me.setState({
          viewDate: me.state.viewDate.clone()[type](parseInt(e.target.getAttribute('data-value'), 10)).startOf(type),
          currentView: nextViews[type]
        });
        me.props.onViewModeChange(nextViews[type]);
      };
    },
    addTime: function (amount, type, toSelected) {
      return this.updateTime('add', amount, type, toSelected);
    },
    subtractTime: function (amount, type, toSelected) {
      return this.updateTime('subtract', amount, type, toSelected);
    },
    updateTime: function (op, amount, type, toSelected) {
      var me = this;
      return function () {
        var update = {},
            date = toSelected ? 'selectedDate' : 'viewDate';
        ;
        update[date] = me.state[date].clone()[op](amount, type);
        me.setState(update);
      };
    },
    allowedSetTime: ['hours', 'minutes', 'seconds', 'milliseconds'],
    setTime: function (type, value) {
      var index = this.allowedSetTime.indexOf(type) + 1,
          state = this.state,
          date = (state.selectedDate || state.viewDate).clone(),
          nextType;
      ;
      date[type](value);
      for (; index < this.allowedSetTime.length; index++) {
        nextType = this.allowedSetTime[index];
        date[nextType](date[nextType]());
      }
      if (!this.props.value) {
        this.setState({
          selectedDate: date,
          inputValue: date.format(state.inputFormat)
        });
      }
      this.props.onChange(date);
    },
    updateSelectedDate: function (e, close) {
      var target = e.target,
          modifier = 0,
          viewDate = this.state.viewDate,
          currentDate = this.state.selectedDate || viewDate,
          date;
      ;
      if (target.className.indexOf('rdtDay') !== -1) {
        if (target.className.indexOf('rdtNew') !== -1) modifier = 1;else if (target.className.indexOf('rdtOld') !== -1) modifier = -1;
        date = viewDate.clone().month(viewDate.month() + modifier).date(parseInt(target.getAttribute('data-value'), 10));
      } else if (target.className.indexOf('rdtMonth') !== -1) {
        date = viewDate.clone().month(parseInt(target.getAttribute('data-value'), 10)).date(currentDate.date());
      } else if (target.className.indexOf('rdtYear') !== -1) {
        date = viewDate.clone().month(currentDate.month()).date(currentDate.date()).year(parseInt(target.getAttribute('data-value'), 10));
      }
      date.hours(currentDate.hours()).minutes(currentDate.minutes()).seconds(currentDate.seconds()).milliseconds(currentDate.milliseconds());
      if (!this.props.value) {
        var open = !(this.props.closeOnSelect && close);
        if (!open) {
          this.props.onBlur(date);
        }
        this.setState({
          selectedDate: date,
          viewDate: date.clone().startOf('month'),
          inputValue: date.format(this.state.inputFormat),
          open: open
        });
      } else {
        if (this.props.closeOnSelect && close) {
          this.closeCalendar();
        }
      }
      this.props.onChange(date);
    },
    openCalendar: function () {
      if (!this.state.open) {
        this.setState({ open: true }, function () {
          this.props.onFocus();
        });
      }
    },
    closeCalendar: function () {
      this.setState({ open: false }, function () {
        this.props.onBlur(this.state.selectedDate || this.state.inputValue);
      });
    },
    handleClickOutside: function () {
      if (this.props.input && this.state.open && !this.props.open) {
        this.setState({ open: false }, function () {
          this.props.onBlur(this.state.selectedDate || this.state.inputValue);
        });
      }
    },
    localMoment: function (date, format, props) {
      props = props || this.props;
      var momentFn = props.utc ? moment.utc : moment;
      var m = momentFn(date, format, props.strictParsing);
      if (props.locale) m.locale(props.locale);
      return m;
    },
    componentProps: {
      fromProps: ['value', 'isValidDate', 'renderDay', 'renderMonth', 'renderYear', 'timeConstraints'],
      fromState: ['viewDate', 'selectedDate', 'updateOn'],
      fromThis: ['setDate', 'setTime', 'showView', 'addTime', 'subtractTime', 'updateSelectedDate', 'localMoment', 'handleClickOutside']
    },
    getComponentProps: function () {
      var me = this,
          formats = this.getFormats(this.props),
          props = {
        dateFormat: formats.date,
        timeFormat: formats.time
      };
      ;
      this.componentProps.fromProps.forEach(function (name) {
        props[name] = me.props[name];
      });
      this.componentProps.fromState.forEach(function (name) {
        props[name] = me.state[name];
      });
      this.componentProps.fromThis.forEach(function (name) {
        props[name] = me[name];
      });
      return props;
    },
    render: function () {
      var className = 'rdt' + (this.props.className ? Array.isArray(this.props.className) ? ' ' + this.props.className.join(' ') : ' ' + this.props.className : ''),
          children = [];
      ;
      if (this.props.input) {
        children = [React.createElement('input', assign({
          key: 'i',
          type: 'text',
          className: 'form-control',
          onFocus: this.openCalendar,
          onChange: this.onInputChange,
          onKeyDown: this.onInputKey,
          value: this.state.inputValue
        }, this.props.inputProps))];
      } else {
        className += ' rdtStatic';
      }
      if (this.state.open) className += ' rdtOpen';
      return React.createElement('div', { className: className }, children.concat(React.createElement('div', {
        key: 'dt',
        className: 'rdtPicker'
      }, React.createElement(CalendarContainer, {
        view: this.state.currentView,
        viewProps: this.getComponentProps(),
        onClickOutside: this.handleClickOutside
      }))));
    }
  });
  Datetime.moment = moment;
  module.exports = Datetime;
});
$__System.registerDynamic("51", ["4f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("4f");
});
$__System.register("52", ["12", "13", "20", "21", "51", "1f", "1c", "1d", "1e"], function (_export) {
    var _createClass, _classCallCheck, _inherits, _slicedToArray, Datetime, _get, React, observer, Modal, Button, Form, FormGroup, Col, Checkbox, ControlLabel, FormControl, Radio, Collapse, _class, InputDialog;

    return {
        setters: [function (_2) {
            _createClass = _2["default"];
        }, function (_3) {
            _classCallCheck = _3["default"];
        }, function (_) {
            _inherits = _["default"];
        }, function (_4) {
            _slicedToArray = _4["default"];
        }, function (_5) {
            Datetime = _5["default"];
        }, function (_f) {
            _get = _f["default"];
        }, function (_c) {
            React = _c;
        }, function (_d) {
            observer = _d.observer;
        }, function (_e) {
            Modal = _e.Modal;
            Button = _e.Button;
            Form = _e.Form;
            FormGroup = _e.FormGroup;
            Col = _e.Col;
            Checkbox = _e.Checkbox;
            ControlLabel = _e.ControlLabel;
            FormControl = _e.FormControl;
            Radio = _e.Radio;
            Collapse = _e.Collapse;
        }],
        execute: function () {
            "use strict";

            InputDialog = observer(_class = (function (_React$Component) {
                _inherits(InputDialog, _React$Component);

                function InputDialog() {
                    _classCallCheck(this, InputDialog);

                    _get(Object.getPrototypeOf(InputDialog.prototype), "constructor", this).call(this);
                    this.handleHide = this.handleHide.bind(this);
                    this.handleToggleDrafts = this.handleToggleDrafts.bind(this);
                    this.handleAmountChange = this.handleAmountChange.bind(this);
                    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);
                    this.handleDateChange = this.handleDateChange.bind(this);
                    this.handleCategoryChange = this.handleCategoryChange.bind(this);
                    this.handleDraftSelect = this.handleDraftSelect.bind(this);
                    this.handleSend = this.handleSend.bind(this);
                    this.handleRemove = this.handleRemove.bind(this);
                }

                _createClass(InputDialog, [{
                    key: "handleHide",
                    value: function handleHide() {
                        this.props.model.isShown = false;
                    }
                }, {
                    key: "handleToggleDrafts",
                    value: function handleToggleDrafts() {
                        this.props.model.draftsAreShown = !this.props.model.draftsAreShown;
                    }
                }, {
                    key: "handleAmountChange",
                    value: function handleAmountChange(event) {
                        this.props.model.amountRaw = event.target.value;
                    }
                }, {
                    key: "handleDescriptionChange",
                    value: function handleDescriptionChange(event) {
                        this.props.model.description = event.target.value;
                    }
                }, {
                    key: "handleDateChange",
                    value: function handleDateChange(newval) {
                        this.props.model.date = newval;
                    }
                }, {
                    key: "handleCategoryChange",
                    value: function handleCategoryChange(event) {
                        var category = this.props.model.parent.categories.find(function (x) {
                            return x.name === event.target.value;
                        });
                        this.props.model.category = category;
                    }
                }, {
                    key: "handleDraftSelect",
                    value: function handleDraftSelect(event) {
                        var draft = this.props.model.drafts.find(function (x) {
                            return x._id === event.target.value;
                        });
                        this.props.model.selectedDraft = draft;
                    }
                }, {
                    key: "handleSend",
                    value: function handleSend() {
                        this.props.model.send();
                    }
                }, {
                    key: "handleRemove",
                    value: function handleRemove() {
                        this.props.model.remove();
                    }
                }, {
                    key: "handlePortionChange",
                    value: function handlePortionChange(obj, event) {
                        obj.portion = parseInt(event.target.value);
                    }
                }, {
                    key: "render",
                    value: function render() {
                        var _this = this;

                        return React.createElement(Modal, { show: this.props.model.isShown, onHide: this.handleHide }, React.createElement(Modal.Header, { closeButton: true }, React.createElement(Modal.Title, null, this.props.model.mode === "add" ? "Ausgabe hinzufügen" : "Ausgabe bearbeiten")), React.createElement(Modal.Body, null, React.createElement(Form, { horizontal: true }, React.createElement("h5", null, "Allgemein"), React.createElement(FormGroup, null, React.createElement(Col, { componentClass: ControlLabel, sm: 3 }, "Betrag"), React.createElement(Col, { sm: 5 }, React.createElement(FormControl, { type: "text", value: this.props.model.amountRaw, onChange: this.handleAmountChange })), React.createElement(Col, { sm: 4 }, React.createElement(FormControl, { type: "text", value: this.props.model.amountDisplay, readOnly: true, tabIndex: -1 }))), React.createElement(FormGroup, null, React.createElement(Col, { componentClass: ControlLabel, sm: 3 }, "Beschreibung"), React.createElement(Col, { sm: 9 }, React.createElement(FormControl, { type: "text", value: this.props.model.description, onChange: this.handleDescriptionChange }))), React.createElement(FormGroup, null, React.createElement(Col, { componentClass: ControlLabel, sm: 3 }, "Datum"), React.createElement(Col, { sm: 9 }, React.createElement(Datetime, { timeFormat: false, closeOnSelect: true, dateFormat: "YYYY-MM-DD", value: this.props.model.date, onChange: this.handleDateChange }))), React.createElement(FormGroup, null, React.createElement(Col, { componentClass: ControlLabel, sm: 3 }, "Kategorie"), React.createElement(Col, { sm: 9 }, React.createElement(FormControl, { componentClass: "select", value: this.props.model.category ? this.props.model.category.name : "__none__", onChange: this.handleCategoryChange }, React.createElement("option", { key: "__none__", value: "__none__" }, "..."), this.props.model.parent.categories.map(function (category) {
                            return React.createElement("option", { key: category.name, value: category.name }, category.fullName);
                        })))), React.createElement(FormGroup, null, React.createElement(Col, { componentClass: ControlLabel, sm: 3 }, "Draft"), React.createElement(Col, { sm: 9 }, this.props.model.drafts.map(function (draft) {
                            return React.createElement(Radio, { name: "radioGroup", inline: true, key: draft._id, value: draft._id, onClick: _this.handleDraftSelect }, draft.draftDescription);
                        }))), React.createElement("h5", { onClick: this.handleToggleDrafts }, "Gewichtung"), React.createElement(Collapse, { "in": this.props.model.draftsAreShown }, React.createElement("div", null, this.props.model.parent.people.map(function (person) {
                            var expenditure = _this.props.model.expenditures.find(function (x) {
                                return x.person === person.name;
                            });
                            if (expenditure) {
                                return React.createElement(FormGroup, { key: person.name }, React.createElement(Col, { componentClass: ControlLabel, sm: 4 }, person.fullName + "s Ausgaben"), React.createElement(Col, { sm: 8 }, React.createElement(FormControl, { type: "text", value: expenditure.portion, onChange: function onChange(event) {
                                        return _this.handlePortionChange(expenditure, event);
                                    } })));
                            }
                        }), this.props.model.parent.iouPairs.map(function (pair) {
                            var _pair = _slicedToArray(pair, 2);

                            var borrower = _pair[0];
                            var creditor = _pair[1];

                            var iou = _this.props.model.ious.find(function (x) {
                                return x.borrower === borrower.name && x.creditor === creditor.name;
                            });
                            if (iou) {
                                return React.createElement(FormGroup, { key: creditor.name + "_" + borrower.name }, React.createElement(Col, { componentClass: ControlLabel, sm: 4 }, borrower.fullName + " schuldet " + creditor.fullName), React.createElement(Col, { sm: 8 }, React.createElement(FormControl, { type: "text", value: iou.portion, onChange: function onChange(event) {
                                        return _this.handlePortionChange(iou, event);
                                    } })));
                            }
                        })))), React.createElement("h5", null, "Log"), React.createElement("code", { style: {
                                height: "58px",
                                display: "block",
                                overflowY: "scroll"
                            }, className: "bg-success text-success" }, this.props.model.log.map(function (msg, i) {
                            return React.createElement("span", { key: i }, msg, React.createElement("br", null));
                        }))), React.createElement(Modal.Footer, null, React.createElement(Button, { onClick: this.handleSend, disabled: !this.props.model.isValid }, "Absenden"), this.props.model.mode === "edit" && React.createElement(Button, { className: "pull-left", onClick: this.handleRemove }, "🗑")));
                    }
                }]);

                return InputDialog;
            })(React.Component)) || _class;

            _export("InputDialog", InputDialog);
        }
    };
});
$__System.register("53", ["12", "13", "20", "21", "52", "1f", "1c", "1e", "1d", "1b"], function (_export) {
    var _createClass, _classCallCheck, _inherits, _slicedToArray, InputDialog, _get, React, Table, Button, observer, TableRow, _class, TableView;

    return {
        setters: [function (_2) {
            _createClass = _2["default"];
        }, function (_3) {
            _classCallCheck = _3["default"];
        }, function (_) {
            _inherits = _["default"];
        }, function (_4) {
            _slicedToArray = _4["default"];
        }, function (_5) {
            InputDialog = _5.InputDialog;
        }, function (_f) {
            _get = _f["default"];
        }, function (_c) {
            React = _c;
        }, function (_e) {
            Table = _e.Table;
            Button = _e.Button;
        }, function (_d) {
            observer = _d.observer;
        }, function (_b) {
            TableRow = _b.TableRow;
        }],
        execute: function () {
            "use strict";

            TableView = observer(_class = (function (_React$Component) {
                _inherits(TableView, _React$Component);

                function TableView(props) {
                    _classCallCheck(this, TableView);

                    _get(Object.getPrototypeOf(TableView.prototype), "constructor", this).call(this, props);
                    this.handleAddExpensesClick = this.handleAddExpensesClick.bind(this);
                    this.handleShowEditModal = this.handleShowEditModal.bind(this);
                }

                _createClass(TableView, [{
                    key: "componentWillMount",
                    value: function componentWillMount() {
                        this.handleScroll = this.handleScroll.bind(this);
                        window.addEventListener("scroll", this.handleScroll);
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function componentWillUnmount() {
                        window.removeEventListener("scroll", this.handleScroll);
                    }
                }, {
                    key: "handleScroll",
                    value: function handleScroll() {
                        var windowHeight = "innerHeight" in window ? window.innerHeight : document.documentElement.offsetHeight;
                        var body = document.body;
                        var html = document.documentElement;
                        var docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);
                        var windowBottom = windowHeight + window.pageYOffset;
                        if (windowBottom >= docHeight - 100) {
                            //console.log('bottom reached')
                            this.props.vm.queryMoreEvents();
                        }
                    }
                }, {
                    key: "handleAddExpensesClick",
                    value: function handleAddExpensesClick() {
                        this.props.vm.inputDialog.showAddModal();
                    }
                }, {
                    key: "handleShowEditModal",
                    value: function handleShowEditModal(event) {
                        this.props.vm.inputDialog.showEditModal(event);
                    }
                }, {
                    key: "render",
                    value: function render() {
                        var _this = this;

                        return React.createElement("div", null, React.createElement(InputDialog, { model: this.props.vm.inputDialog }), React.createElement(Table, { responsive: true, striped: true, bordered: true }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", { className: "text-center" }, React.createElement(Button, { onClick: this.handleAddExpensesClick }, "✍")), React.createElement("th", { className: "text-center" }, "Betrag", React.createElement("br", null), "\xA0"), React.createElement("th", { className: "text-center" }, "Beschreibung", React.createElement("br", null), "\xA0"), React.createElement("th", { className: "text-center" }, "Datum", React.createElement("br", null), "\xA0"), React.createElement("th", { className: "text-center" }, "Kategorie", React.createElement("br", null), "\xA0"), this.props.vm.people.map(function (person) {
                            var total = _this.props.vm.getExpendituresTotal(person.name);
                            return React.createElement("th", { key: person.name, className: "text-center" }, person.fullName, total && React.createElement("div", null, "∑", " ", total));
                        }), this.props.vm.iouPairs.map(function (pair) {
                            //console.log(pair);

                            var _pair = _slicedToArray(pair, 2);

                            var borrower = _pair[0];
                            var creditor = _pair[1];

                            var total = _this.props.vm.getIousTotal(borrower.name, creditor.name);
                            return React.createElement("th", { key: creditor.name, className: "text-center" }, borrower.fullName, " schuldet ", creditor.fullName, total && React.createElement("div", null, "∑", " ", total));
                        }))), React.createElement("tbody", null, this.props.vm.events.map(function (event) {
                            return React.createElement(TableRow, { key: event._id, event: event, iouPairs: _this.props.vm.iouPairs, people: _this.props.vm.people, showEditModal: _this.handleShowEditModal });
                        }))));
                    }
                }]);

                return TableView;
            })(React.Component)) || _class;

            _export("TableView", TableView);
        }
    };
});
$__System.registerDynamic("3b", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
});
$__System.registerDynamic('6', ['3b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('3b');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
});
$__System.registerDynamic("3", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
});
$__System.registerDynamic('2f', ['6', '3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var IObject = $__require('6'),
      defined = $__require('3');
  module.exports = function (it) {
    return IObject(defined(it));
  };
});
$__System.registerDynamic("7", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
});
$__System.registerDynamic('54', ['9', 'b', '7'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('9'),
        core = $__require('b'),
        fails = $__require('7');
    module.exports = function (KEY, exec) {
        var fn = (core.Object || {})[KEY] || Object[KEY],
            exp = {};
        exp[KEY] = exec(fn);
        $export($export.S + $export.F * fails(function () {
            fn(1);
        }), 'Object', exp);
    };
});
$__System.registerDynamic('55', ['2f', '54'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('2f');
  $__require('54')('getOwnPropertyDescriptor', function ($getOwnPropertyDescriptor) {
    return function getOwnPropertyDescriptor(it, key) {
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
});
$__System.registerDynamic('56', ['5', '55'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('5');
  $__require('55');
  module.exports = function getOwnPropertyDescriptor(it, key) {
    return $.getDesc(it, key);
  };
});
$__System.registerDynamic("57", ["56"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("56"), __esModule: true };
});
$__System.registerDynamic("1f", ["57"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _Object$getOwnPropertyDescriptor = $__require("57")["default"];
  exports["default"] = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      _again = false;
      if (object === null) object = Function.prototype;
      var desc = _Object$getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          desc = parent = undefined;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  exports.__esModule = true;
});
$__System.registerDynamic('58', ['5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('5');
  module.exports = function create(P, D) {
    return $.create(P, D);
  };
});
$__System.registerDynamic("59", ["58"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("58"), __esModule: true };
});
$__System.registerDynamic('3d', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});
$__System.registerDynamic('9', ['3d', 'b', '5a'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('3d'),
      core = $__require('b'),
      ctx = $__require('5a'),
      PROTOTYPE = 'prototype';
  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F,
        IS_GLOBAL = type & $export.G,
        IS_STATIC = type & $export.S,
        IS_PROTO = type & $export.P,
        IS_BIND = type & $export.B,
        IS_WRAP = type & $export.W,
        exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
        target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
        key,
        own,
        out;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      own = !IS_FORCED && target && key in target;
      if (own && key in exports) continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? function (C) {
        var F = function (param) {
          return this instanceof C ? new C(param) : C(param);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      if (IS_PROTO) (exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;
    }
  };
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  module.exports = $export;
});
$__System.registerDynamic('5b', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
});
$__System.registerDynamic('27', ['5b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('5b');
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
});
$__System.registerDynamic('5c', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
});
$__System.registerDynamic('5a', ['5c'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var aFunction = $__require('5c');
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () {
      return fn.apply(that, arguments);
    };
  };
});
$__System.registerDynamic('5d', ['5', '5b', '27', '5a'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var getDesc = $__require('5').getDesc,
      isObject = $__require('5b'),
      anObject = $__require('27');
  var check = function (O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {
      try {
        set = $__require('5a')(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
});
$__System.registerDynamic('5e', ['9', '5d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('9');
  $export($export.S, 'Object', { setPrototypeOf: $__require('5d').set });
});
$__System.registerDynamic('b', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var core = module.exports = { version: '1.2.6' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
$__System.registerDynamic('5f', ['5e', 'b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('5e');
  module.exports = $__require('b').Object.setPrototypeOf;
});
$__System.registerDynamic("60", ["5f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("5f"), __esModule: true };
});
$__System.registerDynamic("20", ["59", "60"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _Object$create = $__require("59")["default"];
  var _Object$setPrototypeOf = $__require("60")["default"];
  exports["default"] = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = _Object$create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) _Object$setPrototypeOf ? _Object$setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };
  exports.__esModule = true;
});
$__System.registerDynamic("5", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $Object = Object;
  module.exports = {
    create: $Object.create,
    getProto: $Object.getPrototypeOf,
    isEnum: {}.propertyIsEnumerable,
    getDesc: $Object.getOwnPropertyDescriptor,
    setDesc: $Object.defineProperty,
    setDescs: $Object.defineProperties,
    getKeys: $Object.keys,
    getNames: $Object.getOwnPropertyNames,
    getSymbols: $Object.getOwnPropertySymbols,
    each: [].forEach
  };
});
$__System.registerDynamic('61', ['5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $ = $__require('5');
  module.exports = function defineProperty(it, key, desc) {
    return $.setDesc(it, key, desc);
  };
});
$__System.registerDynamic("62", ["61"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("61"), __esModule: true };
});
$__System.registerDynamic("12", ["62"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  var _Object$defineProperty = $__require("62")["default"];
  exports["default"] = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        _Object$defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  exports.__esModule = true;
});
$__System.registerDynamic("13", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports["default"] = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  exports.__esModule = true;
});
$__System.registerDynamic('63', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    Object.defineProperty(exports, '__esModule', { value: true });
    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };
    function __extends(d, b) {
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var BaseAtom = function () {
      function BaseAtom(name) {
        if (name === void 0) {
          name = "Atom@" + getNextId();
        }
        this.name = name;
        this.isPendingUnobservation = true;
        this.observers = [];
        this.observersIndexes = {};
        this.diffValue = 0;
        this.lastAccessedBy = 0;
        this.lowestObserverState = exports.IDerivationState.NOT_TRACKING;
      }
      BaseAtom.prototype.onBecomeUnobserved = function () {};
      BaseAtom.prototype.reportObserved = function () {
        reportObserved(this);
      };
      BaseAtom.prototype.reportChanged = function () {
        startBatch();
        propagateChanged(this);
        endBatch();
      };
      BaseAtom.prototype.toString = function () {
        return this.name;
      };
      return BaseAtom;
    }();
    var Atom = function (_super) {
      __extends(Atom, _super);
      function Atom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
        if (name === void 0) {
          name = "Atom@" + getNextId();
        }
        if (onBecomeObservedHandler === void 0) {
          onBecomeObservedHandler = noop;
        }
        if (onBecomeUnobservedHandler === void 0) {
          onBecomeUnobservedHandler = noop;
        }
        var _this = _super.call(this, name) || this;
        _this.name = name;
        _this.onBecomeObservedHandler = onBecomeObservedHandler;
        _this.onBecomeUnobservedHandler = onBecomeUnobservedHandler;
        _this.isPendingUnobservation = false;
        _this.isBeingTracked = false;
        return _this;
      }
      Atom.prototype.reportObserved = function () {
        startBatch();
        _super.prototype.reportObserved.call(this);
        if (!this.isBeingTracked) {
          this.isBeingTracked = true;
          this.onBecomeObservedHandler();
        }
        endBatch();
        return !!globalState.trackingDerivation;
      };
      Atom.prototype.onBecomeUnobserved = function () {
        this.isBeingTracked = false;
        this.onBecomeUnobservedHandler();
      };
      return Atom;
    }(BaseAtom);
    var isAtom = createInstanceofPredicate("Atom", BaseAtom);
    function hasInterceptors(interceptable) {
      return interceptable.interceptors && interceptable.interceptors.length > 0;
    }
    function registerInterceptor(interceptable, handler) {
      var interceptors = interceptable.interceptors || (interceptable.interceptors = []);
      interceptors.push(handler);
      return once(function () {
        var idx = interceptors.indexOf(handler);
        if (idx !== -1) interceptors.splice(idx, 1);
      });
    }
    function interceptChange(interceptable, change) {
      var prevU = untrackedStart();
      try {
        var interceptors = interceptable.interceptors;
        if (interceptors) for (var i = 0, l = interceptors.length; i < l; i++) {
          change = interceptors[i](change);
          invariant(!change || change.type, "Intercept handlers should return nothing or a change object");
          if (!change) break;
        }
        return change;
      } finally {
        untrackedEnd(prevU);
      }
    }
    function hasListeners(listenable) {
      return listenable.changeListeners && listenable.changeListeners.length > 0;
    }
    function registerListener(listenable, handler) {
      var listeners = listenable.changeListeners || (listenable.changeListeners = []);
      listeners.push(handler);
      return once(function () {
        var idx = listeners.indexOf(handler);
        if (idx !== -1) listeners.splice(idx, 1);
      });
    }
    function notifyListeners(listenable, change) {
      var prevU = untrackedStart();
      var listeners = listenable.changeListeners;
      if (!listeners) return;
      listeners = listeners.slice();
      for (var i = 0, l = listeners.length; i < l; i++) {
        listeners[i](change);
      }
      untrackedEnd(prevU);
    }
    function isSpyEnabled() {
      return !!globalState.spyListeners.length;
    }
    function spyReport(event) {
      if (!globalState.spyListeners.length) return;
      var listeners = globalState.spyListeners;
      for (var i = 0, l = listeners.length; i < l; i++) listeners[i](event);
    }
    function spyReportStart(event) {
      var change = objectAssign({}, event, { spyReportStart: true });
      spyReport(change);
    }
    var END_EVENT = { spyReportEnd: true };
    function spyReportEnd(change) {
      if (change) spyReport(objectAssign({}, change, END_EVENT));else spyReport(END_EVENT);
    }
    function spy(listener) {
      globalState.spyListeners.push(listener);
      return once(function () {
        var idx = globalState.spyListeners.indexOf(listener);
        if (idx !== -1) globalState.spyListeners.splice(idx, 1);
      });
    }
    function iteratorSymbol() {
      return typeof Symbol === "function" && Symbol.iterator || "@@iterator";
    }
    var IS_ITERATING_MARKER = "__$$iterating";
    function arrayAsIterator(array) {
      invariant(array[IS_ITERATING_MARKER] !== true, "Illegal state: cannot recycle array as iterator");
      addHiddenFinalProp(array, IS_ITERATING_MARKER, true);
      var idx = -1;
      addHiddenFinalProp(array, "next", function next() {
        idx++;
        return {
          done: idx >= this.length,
          value: idx < this.length ? this[idx] : undefined
        };
      });
      return array;
    }
    function declareIterator(prototType, iteratorFactory) {
      addHiddenFinalProp(prototType, iteratorSymbol(), iteratorFactory);
    }
    var MAX_SPLICE_SIZE = 10000;
    var safariPrototypeSetterInheritanceBug = function () {
      var v = false;
      var p = {};
      Object.defineProperty(p, "0", { set: function () {
          v = true;
        } });
      Object.create(p)["0"] = 1;
      return v === false;
    }();
    var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;
    var StubArray = function () {
      function StubArray() {}
      return StubArray;
    }();
    function inherit(ctor, proto) {
      if (typeof Object["setPrototypeOf"] !== "undefined") {
        Object["setPrototypeOf"](ctor.prototype, proto);
      } else if (typeof ctor.prototype.__proto__ !== "undefined") {
        ctor.prototype.__proto__ = proto;
      } else {
        ctor["prototype"] = proto;
      }
    }
    inherit(StubArray, Array.prototype);
    var ObservableArrayAdministration = function () {
      function ObservableArrayAdministration(name, enhancer, array, owned) {
        this.array = array;
        this.owned = owned;
        this.values = [];
        this.lastKnownLength = 0;
        this.interceptors = null;
        this.changeListeners = null;
        this.atom = new BaseAtom(name || "ObservableArray@" + getNextId());
        this.enhancer = function (newV, oldV) {
          return enhancer(newV, oldV, name + "[..]");
        };
      }
      ObservableArrayAdministration.prototype.dehanceValue = function (value) {
        if (this.dehancer !== undefined) return this.dehancer(value);
        return value;
      };
      ObservableArrayAdministration.prototype.dehanceValues = function (values) {
        if (this.dehancer !== undefined) return values.map(this.dehancer);
        return values;
      };
      ObservableArrayAdministration.prototype.intercept = function (handler) {
        return registerInterceptor(this, handler);
      };
      ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {
        if (fireImmediately === void 0) {
          fireImmediately = false;
        }
        if (fireImmediately) {
          listener({
            object: this.array,
            type: "splice",
            index: 0,
            added: this.values.slice(),
            addedCount: this.values.length,
            removed: [],
            removedCount: 0
          });
        }
        return registerListener(this, listener);
      };
      ObservableArrayAdministration.prototype.getArrayLength = function () {
        this.atom.reportObserved();
        return this.values.length;
      };
      ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {
        if (typeof newLength !== "number" || newLength < 0) throw new Error("[mobx.array] Out of range: " + newLength);
        var currentLength = this.values.length;
        if (newLength === currentLength) return;else if (newLength > currentLength) {
          var newItems = new Array(newLength - currentLength);
          for (var i = 0; i < newLength - currentLength; i++) newItems[i] = undefined;
          this.spliceWithArray(currentLength, 0, newItems);
        } else this.spliceWithArray(newLength, currentLength - newLength);
      };
      ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {
        if (oldLength !== this.lastKnownLength) throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");
        this.lastKnownLength += delta;
        if (delta > 0 && oldLength + delta + 1 > OBSERVABLE_ARRAY_BUFFER_SIZE) reserveArrayBuffer(oldLength + delta + 1);
      };
      ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {
        var _this = this;
        checkIfStateModificationsAreAllowed(this.atom);
        var length = this.values.length;
        if (index === undefined) index = 0;else if (index > length) index = length;else if (index < 0) index = Math.max(0, length + index);
        if (arguments.length === 1) deleteCount = length - index;else if (deleteCount === undefined || deleteCount === null) deleteCount = 0;else deleteCount = Math.max(0, Math.min(deleteCount, length - index));
        if (newItems === undefined) newItems = [];
        if (hasInterceptors(this)) {
          var change = interceptChange(this, {
            object: this.array,
            type: "splice",
            index: index,
            removedCount: deleteCount,
            added: newItems
          });
          if (!change) return EMPTY_ARRAY;
          deleteCount = change.removedCount;
          newItems = change.added;
        }
        newItems = newItems.map(function (v) {
          return _this.enhancer(v, undefined);
        });
        var lengthDelta = newItems.length - deleteCount;
        this.updateArrayLength(length, lengthDelta);
        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);
        if (deleteCount !== 0 || newItems.length !== 0) this.notifyArraySplice(index, newItems, res);
        return this.dehanceValues(res);
      };
      ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {
        if (newItems.length < MAX_SPLICE_SIZE) {
          return (_a = this.values).splice.apply(_a, [index, deleteCount].concat(newItems));
        } else {
          var res = this.values.slice(index, index + deleteCount);
          this.values = this.values.slice(0, index).concat(newItems, this.values.slice(index + deleteCount));
          return res;
        }
        var _a;
      };
      ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {
        var notifySpy = !this.owned && isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          object: this.array,
          type: "update",
          index: index,
          newValue: newValue,
          oldValue: oldValue
        } : null;
        if (notifySpy) spyReportStart(change);
        this.atom.reportChanged();
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      };
      ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {
        var notifySpy = !this.owned && isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          object: this.array,
          type: "splice",
          index: index,
          removed: removed,
          added: added,
          removedCount: removed.length,
          addedCount: added.length
        } : null;
        if (notifySpy) spyReportStart(change);
        this.atom.reportChanged();
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      };
      return ObservableArrayAdministration;
    }();
    var ObservableArray = function (_super) {
      __extends(ObservableArray, _super);
      function ObservableArray(initialValues, enhancer, name, owned) {
        if (name === void 0) {
          name = "ObservableArray@" + getNextId();
        }
        if (owned === void 0) {
          owned = false;
        }
        var _this = _super.call(this) || this;
        var adm = new ObservableArrayAdministration(name, enhancer, _this, owned);
        addHiddenFinalProp(_this, "$mobx", adm);
        if (initialValues && initialValues.length) {
          _this.spliceWithArray(0, 0, initialValues);
        }
        if (safariPrototypeSetterInheritanceBug) {
          Object.defineProperty(adm.array, "0", ENTRY_0);
        }
        return _this;
      }
      ObservableArray.prototype.intercept = function (handler) {
        return this.$mobx.intercept(handler);
      };
      ObservableArray.prototype.observe = function (listener, fireImmediately) {
        if (fireImmediately === void 0) {
          fireImmediately = false;
        }
        return this.$mobx.observe(listener, fireImmediately);
      };
      ObservableArray.prototype.clear = function () {
        return this.splice(0);
      };
      ObservableArray.prototype.concat = function () {
        var arrays = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          arrays[_i] = arguments[_i];
        }
        this.$mobx.atom.reportObserved();
        return Array.prototype.concat.apply(this.peek(), arrays.map(function (a) {
          return isObservableArray(a) ? a.peek() : a;
        }));
      };
      ObservableArray.prototype.replace = function (newItems) {
        return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);
      };
      ObservableArray.prototype.toJS = function () {
        return this.slice();
      };
      ObservableArray.prototype.toJSON = function () {
        return this.toJS();
      };
      ObservableArray.prototype.peek = function () {
        this.$mobx.atom.reportObserved();
        return this.$mobx.dehanceValues(this.$mobx.values);
      };
      ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {
        if (fromIndex === void 0) {
          fromIndex = 0;
        }
        var idx = this.findIndex.apply(this, arguments);
        return idx === -1 ? undefined : this.get(idx);
      };
      ObservableArray.prototype.findIndex = function (predicate, thisArg, fromIndex) {
        if (fromIndex === void 0) {
          fromIndex = 0;
        }
        var items = this.peek(),
            l = items.length;
        for (var i = fromIndex; i < l; i++) if (predicate.call(thisArg, items[i], i, this)) return i;
        return -1;
      };
      ObservableArray.prototype.splice = function (index, deleteCount) {
        var newItems = [];
        for (var _i = 2; _i < arguments.length; _i++) {
          newItems[_i - 2] = arguments[_i];
        }
        switch (arguments.length) {
          case 0:
            return [];
          case 1:
            return this.$mobx.spliceWithArray(index);
          case 2:
            return this.$mobx.spliceWithArray(index, deleteCount);
        }
        return this.$mobx.spliceWithArray(index, deleteCount, newItems);
      };
      ObservableArray.prototype.spliceWithArray = function (index, deleteCount, newItems) {
        return this.$mobx.spliceWithArray(index, deleteCount, newItems);
      };
      ObservableArray.prototype.push = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          items[_i] = arguments[_i];
        }
        var adm = this.$mobx;
        adm.spliceWithArray(adm.values.length, 0, items);
        return adm.values.length;
      };
      ObservableArray.prototype.pop = function () {
        return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];
      };
      ObservableArray.prototype.shift = function () {
        return this.splice(0, 1)[0];
      };
      ObservableArray.prototype.unshift = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          items[_i] = arguments[_i];
        }
        var adm = this.$mobx;
        adm.spliceWithArray(0, 0, items);
        return adm.values.length;
      };
      ObservableArray.prototype.reverse = function () {
        var clone = this.slice();
        return clone.reverse.apply(clone, arguments);
      };
      ObservableArray.prototype.sort = function (compareFn) {
        var clone = this.slice();
        return clone.sort.apply(clone, arguments);
      };
      ObservableArray.prototype.remove = function (value) {
        var idx = this.$mobx.dehanceValues(this.$mobx.values).indexOf(value);
        if (idx > -1) {
          this.splice(idx, 1);
          return true;
        }
        return false;
      };
      ObservableArray.prototype.move = function (fromIndex, toIndex) {
        function checkIndex(index) {
          if (index < 0) {
            throw new Error("[mobx.array] Index out of bounds: " + index + " is negative");
          }
          var length = this.$mobx.values.length;
          if (index >= length) {
            throw new Error("[mobx.array] Index out of bounds: " + index + " is not smaller than " + length);
          }
        }
        checkIndex.call(this, fromIndex);
        checkIndex.call(this, toIndex);
        if (fromIndex === toIndex) {
          return;
        }
        var oldItems = this.$mobx.values;
        var newItems;
        if (fromIndex < toIndex) {
          newItems = oldItems.slice(0, fromIndex).concat(oldItems.slice(fromIndex + 1, toIndex + 1), [oldItems[fromIndex]], oldItems.slice(toIndex + 1));
        } else {
          newItems = oldItems.slice(0, toIndex).concat([oldItems[fromIndex]], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));
        }
        this.replace(newItems);
      };
      ObservableArray.prototype.get = function (index) {
        var impl = this.$mobx;
        if (impl) {
          if (index < impl.values.length) {
            impl.atom.reportObserved();
            return impl.dehanceValue(impl.values[index]);
          }
          console.warn("[mobx.array] Attempt to read an array index (" + index + ") that is out of bounds (" + impl.values.length + "). Please check length first. Out of bound indices will not be tracked by MobX");
        }
        return undefined;
      };
      ObservableArray.prototype.set = function (index, newValue) {
        var adm = this.$mobx;
        var values = adm.values;
        if (index < values.length) {
          checkIfStateModificationsAreAllowed(adm.atom);
          var oldValue = values[index];
          if (hasInterceptors(adm)) {
            var change = interceptChange(adm, {
              type: "update",
              object: this,
              index: index,
              newValue: newValue
            });
            if (!change) return;
            newValue = change.newValue;
          }
          newValue = adm.enhancer(newValue, oldValue);
          var changed = newValue !== oldValue;
          if (changed) {
            values[index] = newValue;
            adm.notifyArrayChildUpdate(index, newValue, oldValue);
          }
        } else if (index === values.length) {
          adm.spliceWithArray(index, 0, [newValue]);
        } else {
          throw new Error("[mobx.array] Index out of bounds, " + index + " is larger than " + values.length);
        }
      };
      return ObservableArray;
    }(StubArray);
    declareIterator(ObservableArray.prototype, function () {
      return arrayAsIterator(this.slice());
    });
    Object.defineProperty(ObservableArray.prototype, "length", {
      enumerable: false,
      configurable: true,
      get: function () {
        return this.$mobx.getArrayLength();
      },
      set: function (newLength) {
        this.$mobx.setArrayLength(newLength);
      }
    });
    ["every", "filter", "forEach", "indexOf", "join", "lastIndexOf", "map", "reduce", "reduceRight", "slice", "some", "toString", "toLocaleString"].forEach(function (funcName) {
      var baseFunc = Array.prototype[funcName];
      invariant(typeof baseFunc === "function", "Base function not defined on Array prototype: '" + funcName + "'");
      addHiddenProp(ObservableArray.prototype, funcName, function () {
        return baseFunc.apply(this.peek(), arguments);
      });
    });
    makeNonEnumerable(ObservableArray.prototype, ["constructor", "intercept", "observe", "clear", "concat", "get", "replace", "toJS", "toJSON", "peek", "find", "findIndex", "splice", "spliceWithArray", "push", "pop", "set", "shift", "unshift", "reverse", "sort", "remove", "move", "toString", "toLocaleString"]);
    var ENTRY_0 = createArrayEntryDescriptor(0);
    function createArrayEntryDescriptor(index) {
      return {
        enumerable: false,
        configurable: false,
        get: function () {
          return this.get(index);
        },
        set: function (value) {
          this.set(index, value);
        }
      };
    }
    function createArrayBufferItem(index) {
      Object.defineProperty(ObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
    }
    function reserveArrayBuffer(max) {
      for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++) createArrayBufferItem(index);
      OBSERVABLE_ARRAY_BUFFER_SIZE = max;
    }
    reserveArrayBuffer(1000);
    var isObservableArrayAdministration = createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);
    function isObservableArray(thing) {
      return isObject(thing) && isObservableArrayAdministration(thing.$mobx);
    }
    var UNCHANGED = {};
    var ObservableValue = function (_super) {
      __extends(ObservableValue, _super);
      function ObservableValue(value, enhancer, name, notifySpy) {
        if (name === void 0) {
          name = "ObservableValue@" + getNextId();
        }
        if (notifySpy === void 0) {
          notifySpy = true;
        }
        var _this = _super.call(this, name) || this;
        _this.enhancer = enhancer;
        _this.hasUnreportedChange = false;
        _this.dehancer = undefined;
        _this.value = enhancer(value, undefined, name);
        if (notifySpy && isSpyEnabled()) {
          spyReport({
            type: "create",
            object: _this,
            newValue: _this.value
          });
        }
        return _this;
      }
      ObservableValue.prototype.dehanceValue = function (value) {
        if (this.dehancer !== undefined) return this.dehancer(value);
        return value;
      };
      ObservableValue.prototype.set = function (newValue) {
        var oldValue = this.value;
        newValue = this.prepareNewValue(newValue);
        if (newValue !== UNCHANGED) {
          var notifySpy = isSpyEnabled();
          if (notifySpy) {
            spyReportStart({
              type: "update",
              object: this,
              newValue: newValue,
              oldValue: oldValue
            });
          }
          this.setNewValue(newValue);
          if (notifySpy) spyReportEnd();
        }
      };
      ObservableValue.prototype.prepareNewValue = function (newValue) {
        checkIfStateModificationsAreAllowed(this);
        if (hasInterceptors(this)) {
          var change = interceptChange(this, {
            object: this,
            type: "update",
            newValue: newValue
          });
          if (!change) return UNCHANGED;
          newValue = change.newValue;
        }
        newValue = this.enhancer(newValue, this.value, this.name);
        return this.value !== newValue ? newValue : UNCHANGED;
      };
      ObservableValue.prototype.setNewValue = function (newValue) {
        var oldValue = this.value;
        this.value = newValue;
        this.reportChanged();
        if (hasListeners(this)) {
          notifyListeners(this, {
            type: "update",
            object: this,
            newValue: newValue,
            oldValue: oldValue
          });
        }
      };
      ObservableValue.prototype.get = function () {
        this.reportObserved();
        return this.dehanceValue(this.value);
      };
      ObservableValue.prototype.intercept = function (handler) {
        return registerInterceptor(this, handler);
      };
      ObservableValue.prototype.observe = function (listener, fireImmediately) {
        if (fireImmediately) listener({
          object: this,
          type: "update",
          newValue: this.value,
          oldValue: undefined
        });
        return registerListener(this, listener);
      };
      ObservableValue.prototype.toJSON = function () {
        return this.get();
      };
      ObservableValue.prototype.toString = function () {
        return this.name + "[" + this.value + "]";
      };
      ObservableValue.prototype.valueOf = function () {
        return toPrimitive(this.get());
      };
      return ObservableValue;
    }(BaseAtom);
    ObservableValue.prototype[primitiveSymbol()] = ObservableValue.prototype.valueOf;
    var isObservableValue = createInstanceofPredicate("ObservableValue", ObservableValue);
    var messages = {
      "m001": "It is not allowed to assign new values to @action fields",
      "m002": "`runInAction` expects a function",
      "m003": "`runInAction` expects a function without arguments",
      "m004": "autorun expects a function",
      "m005": "Warning: attempted to pass an action to autorun. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
      "m006": "Warning: attempted to pass an action to autorunAsync. Actions are untracked and will not trigger on state changes. Use `reaction` or wrap only your state modification code in an action.",
      "m007": "reaction only accepts 2 or 3 arguments. If migrating from MobX 2, please provide an options object",
      "m008": "wrapping reaction expression in `asReference` is no longer supported, use options object instead",
      "m009": "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'. It looks like it was used on a property.",
      "m010": "@computed can only be used on getter functions, like: '@computed get myProps() { return ...; }'",
      "m011": "First argument to `computed` should be an expression. If using computed as decorator, don't pass it arguments",
      "m012": "computed takes one or two arguments if used as function",
      "m013": "[mobx.expr] 'expr' should only be used inside other reactive functions.",
      "m014": "extendObservable expected 2 or more arguments",
      "m015": "extendObservable expects an object as first argument",
      "m016": "extendObservable should not be used on maps, use map.merge instead",
      "m017": "all arguments of extendObservable should be objects",
      "m018": "extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540",
      "m019": "[mobx.isObservable] isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.",
      "m020": "modifiers can only be used for individual object properties",
      "m021": "observable expects zero or one arguments",
      "m022": "@observable can not be used on getters, use @computed instead",
      "m023": "Using `transaction` is deprecated, use `runInAction` or `(@)action` instead.",
      "m024": "whyRun() can only be used if a derivation is active, or by passing an computed value / reaction explicitly. If you invoked whyRun from inside a computation; the computation is currently suspended but re-evaluating because somebody requested its value.",
      "m025": "whyRun can only be used on reactions and computed values",
      "m026": "`action` can only be invoked on functions",
      "m028": "It is not allowed to set `useStrict` when a derivation is running",
      "m029": "INTERNAL ERROR only onBecomeUnobserved shouldn't be called twice in a row",
      "m030a": "Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: ",
      "m030b": "Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: ",
      "m031": "Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: ",
      "m032": "* This computation is suspended (not in use by any reaction) and won't run automatically.\n	Didn't expect this computation to be suspended at this point?\n	  1. Make sure this computation is used by a reaction (reaction, autorun, observer).\n	  2. Check whether you are using this computation synchronously (in the same stack as they reaction that needs it).",
      "m033": "`observe` doesn't support the fire immediately property for observable maps.",
      "m034": "`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead",
      "m035": "Cannot make the designated object observable; it is not extensible",
      "m036": "It is not possible to get index atoms from arrays",
      "m037": "Hi there! I'm sorry you have just run into an exception.\nIf your debugger ends up here, know that some reaction (like the render() of an observer component, autorun or reaction)\nthrew an exception and that mobx caught it, to avoid that it brings the rest of your application down.\nThe original cause of the exception (the code that caused this reaction to run (again)), is still in the stack.\n\nHowever, more interesting is the actual stack trace of the error itself.\nHopefully the error is an instanceof Error, because in that case you can inspect the original stack of the error from where it was thrown.\nSee `error.stack` property, or press the very subtle \"(...)\" link you see near the console.error message that probably brought you here.\nThat stack is more interesting than the stack of this console.error itself.\n\nIf the exception you see is an exception you created yourself, make sure to use `throw new Error(\"Oops\")` instead of `throw \"Oops\"`,\nbecause the javascript environment will only preserve the original stack trace in the first form.\n\nYou can also make sure the debugger pauses the next time this very same exception is thrown by enabling \"Pause on caught exception\".\n(Note that it might pause on many other, unrelated exception as well).\n\nIf that all doesn't help you out, feel free to open an issue https://github.com/mobxjs/mobx/issues!\n",
      "m038": "Missing items in this list?\n    1. Check whether all used values are properly marked as observable (use isObservable to verify)\n    2. Make sure you didn't dereference values too early. MobX observes props, not primitives. E.g: use 'person.name' instead of 'name' in your computation.\n"
    };
    function getMessage(id) {
      return messages[id];
    }
    function createAction(actionName, fn) {
      invariant(typeof fn === "function", getMessage("m026"));
      invariant(typeof actionName === "string" && actionName.length > 0, "actions should have valid names, got: '" + actionName + "'");
      var res = function () {
        return executeAction(actionName, fn, this, arguments);
      };
      res.originalFn = fn;
      res.isMobxAction = true;
      return res;
    }
    function executeAction(actionName, fn, scope, args) {
      var runInfo = startAction(actionName, fn, scope, args);
      try {
        return fn.apply(scope, args);
      } finally {
        endAction(runInfo);
      }
    }
    function startAction(actionName, fn, scope, args) {
      var notifySpy = isSpyEnabled() && !!actionName;
      var startTime = 0;
      if (notifySpy) {
        startTime = Date.now();
        var l = args && args.length || 0;
        var flattendArgs = new Array(l);
        if (l > 0) for (var i = 0; i < l; i++) flattendArgs[i] = args[i];
        spyReportStart({
          type: "action",
          name: actionName,
          fn: fn,
          object: scope,
          arguments: flattendArgs
        });
      }
      var prevDerivation = untrackedStart();
      startBatch();
      var prevAllowStateChanges = allowStateChangesStart(true);
      return {
        prevDerivation: prevDerivation,
        prevAllowStateChanges: prevAllowStateChanges,
        notifySpy: notifySpy,
        startTime: startTime
      };
    }
    function endAction(runInfo) {
      allowStateChangesEnd(runInfo.prevAllowStateChanges);
      endBatch();
      untrackedEnd(runInfo.prevDerivation);
      if (runInfo.notifySpy) spyReportEnd({ time: Date.now() - runInfo.startTime });
    }
    function useStrict(strict) {
      invariant(globalState.trackingDerivation === null, getMessage("m028"));
      globalState.strictMode = strict;
      globalState.allowStateChanges = !strict;
    }
    function isStrictModeEnabled() {
      return globalState.strictMode;
    }
    function allowStateChanges(allowStateChanges, func) {
      var prev = allowStateChangesStart(allowStateChanges);
      var res;
      try {
        res = func();
      } finally {
        allowStateChangesEnd(prev);
      }
      return res;
    }
    function allowStateChangesStart(allowStateChanges) {
      var prev = globalState.allowStateChanges;
      globalState.allowStateChanges = allowStateChanges;
      return prev;
    }
    function allowStateChangesEnd(prev) {
      globalState.allowStateChanges = prev;
    }
    function createClassPropertyDecorator(onInitialize, get, set, enumerable, allowCustomArguments) {
      function classPropertyDecorator(target, key, descriptor, customArgs, argLen) {
        if (argLen === void 0) {
          argLen = 0;
        }
        invariant(allowCustomArguments || quacksLikeADecorator(arguments), "This function is a decorator, but it wasn't invoked like a decorator");
        if (!descriptor) {
          var newDescriptor = {
            enumerable: enumerable,
            configurable: true,
            get: function () {
              if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) typescriptInitializeProperty(this, key, undefined, onInitialize, customArgs, descriptor);
              return get.call(this, key);
            },
            set: function (v) {
              if (!this.__mobxInitializedProps || this.__mobxInitializedProps[key] !== true) {
                typescriptInitializeProperty(this, key, v, onInitialize, customArgs, descriptor);
              } else {
                set.call(this, key, v);
              }
            }
          };
          if (arguments.length < 3 || arguments.length === 5 && argLen < 3) {
            Object.defineProperty(target, key, newDescriptor);
          }
          return newDescriptor;
        } else {
          if (!hasOwnProperty(target, "__mobxLazyInitializers")) {
            addHiddenProp(target, "__mobxLazyInitializers", target.__mobxLazyInitializers && target.__mobxLazyInitializers.slice() || []);
          }
          var value_1 = descriptor.value,
              initializer_1 = descriptor.initializer;
          target.__mobxLazyInitializers.push(function (instance) {
            onInitialize(instance, key, initializer_1 ? initializer_1.call(instance) : value_1, customArgs, descriptor);
          });
          return {
            enumerable: enumerable,
            configurable: true,
            get: function () {
              if (this.__mobxDidRunLazyInitializers !== true) runLazyInitializers(this);
              return get.call(this, key);
            },
            set: function (v) {
              if (this.__mobxDidRunLazyInitializers !== true) runLazyInitializers(this);
              set.call(this, key, v);
            }
          };
        }
      }
      if (allowCustomArguments) {
        return function () {
          if (quacksLikeADecorator(arguments)) return classPropertyDecorator.apply(null, arguments);
          var outerArgs = arguments;
          var argLen = arguments.length;
          return function (target, key, descriptor) {
            return classPropertyDecorator(target, key, descriptor, outerArgs, argLen);
          };
        };
      }
      return classPropertyDecorator;
    }
    function typescriptInitializeProperty(instance, key, v, onInitialize, customArgs, baseDescriptor) {
      if (!hasOwnProperty(instance, "__mobxInitializedProps")) addHiddenProp(instance, "__mobxInitializedProps", {});
      instance.__mobxInitializedProps[key] = true;
      onInitialize(instance, key, v, customArgs, baseDescriptor);
    }
    function runLazyInitializers(instance) {
      if (instance.__mobxDidRunLazyInitializers === true) return;
      if (instance.__mobxLazyInitializers) {
        addHiddenProp(instance, "__mobxDidRunLazyInitializers", true);
        instance.__mobxDidRunLazyInitializers && instance.__mobxLazyInitializers.forEach(function (initializer) {
          return initializer(instance);
        });
      }
    }
    function quacksLikeADecorator(args) {
      return (args.length === 2 || args.length === 3) && typeof args[1] === "string";
    }
    var actionFieldDecorator = createClassPropertyDecorator(function (target, key, value, args, originalDescriptor) {
      var actionName = args && args.length === 1 ? args[0] : value.name || key || "<unnamed action>";
      var wrappedAction = action(actionName, value);
      addHiddenProp(target, key, wrappedAction);
    }, function (key) {
      return this[key];
    }, function () {
      invariant(false, getMessage("m001"));
    }, false, true);
    var boundActionDecorator = createClassPropertyDecorator(function (target, key, value) {
      defineBoundAction(target, key, value);
    }, function (key) {
      return this[key];
    }, function () {
      invariant(false, getMessage("m001"));
    }, false, false);
    var action = function action(arg1, arg2, arg3, arg4) {
      if (arguments.length === 1 && typeof arg1 === "function") return createAction(arg1.name || "<unnamed action>", arg1);
      if (arguments.length === 2 && typeof arg2 === "function") return createAction(arg1, arg2);
      if (arguments.length === 1 && typeof arg1 === "string") return namedActionDecorator(arg1);
      return namedActionDecorator(arg2).apply(null, arguments);
    };
    action.bound = function boundAction(arg1, arg2, arg3) {
      if (typeof arg1 === "function") {
        var action_1 = createAction("<not yet bound action>", arg1);
        action_1.autoBind = true;
        return action_1;
      }
      return boundActionDecorator.apply(null, arguments);
    };
    function namedActionDecorator(name) {
      return function (target, prop, descriptor) {
        if (descriptor && typeof descriptor.value === "function") {
          descriptor.value = createAction(name, descriptor.value);
          descriptor.enumerable = false;
          descriptor.configurable = true;
          return descriptor;
        }
        return actionFieldDecorator(name).apply(this, arguments);
      };
    }
    function runInAction(arg1, arg2, arg3) {
      var actionName = typeof arg1 === "string" ? arg1 : arg1.name || "<unnamed action>";
      var fn = typeof arg1 === "function" ? arg1 : arg2;
      var scope = typeof arg1 === "function" ? arg2 : arg3;
      invariant(typeof fn === "function", getMessage("m002"));
      invariant(fn.length === 0, getMessage("m003"));
      invariant(typeof actionName === "string" && actionName.length > 0, "actions should have valid names, got: '" + actionName + "'");
      return executeAction(actionName, fn, scope, undefined);
    }
    function isAction(thing) {
      return typeof thing === "function" && thing.isMobxAction === true;
    }
    function defineBoundAction(target, propertyName, fn) {
      var res = function () {
        return executeAction(propertyName, fn, target, arguments);
      };
      res.isMobxAction = true;
      addHiddenProp(target, propertyName, res);
    }
    function identityComparer(a, b) {
      return a === b;
    }
    function structuralComparer(a, b) {
      if (typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b)) {
        return true;
      }
      return deepEqual(a, b);
    }
    function defaultComparer(a, b) {
      if (typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b)) {
        return true;
      }
      return identityComparer(a, b);
    }
    var comparer = {
      identity: identityComparer,
      structural: structuralComparer,
      default: defaultComparer
    };
    function autorun(arg1, arg2, arg3) {
      var name, view, scope;
      if (typeof arg1 === "string") {
        name = arg1;
        view = arg2;
        scope = arg3;
      } else {
        name = arg1.name || "Autorun@" + getNextId();
        view = arg1;
        scope = arg2;
      }
      invariant(typeof view === "function", getMessage("m004"));
      invariant(isAction(view) === false, getMessage("m005"));
      if (scope) view = view.bind(scope);
      var reaction = new Reaction(name, function () {
        this.track(reactionRunner);
      });
      function reactionRunner() {
        view(reaction);
      }
      reaction.schedule();
      return reaction.getDisposer();
    }
    function when(arg1, arg2, arg3, arg4) {
      var name, predicate, effect, scope;
      if (typeof arg1 === "string") {
        name = arg1;
        predicate = arg2;
        effect = arg3;
        scope = arg4;
      } else {
        name = "When@" + getNextId();
        predicate = arg1;
        effect = arg2;
        scope = arg3;
      }
      var disposer = autorun(name, function (r) {
        if (predicate.call(scope)) {
          r.dispose();
          var prevUntracked = untrackedStart();
          effect.call(scope);
          untrackedEnd(prevUntracked);
        }
      });
      return disposer;
    }
    function autorunAsync(arg1, arg2, arg3, arg4) {
      var name, func, delay, scope;
      if (typeof arg1 === "string") {
        name = arg1;
        func = arg2;
        delay = arg3;
        scope = arg4;
      } else {
        name = arg1.name || "AutorunAsync@" + getNextId();
        func = arg1;
        delay = arg2;
        scope = arg3;
      }
      invariant(isAction(func) === false, getMessage("m006"));
      if (delay === void 0) delay = 1;
      if (scope) func = func.bind(scope);
      var isScheduled = false;
      var r = new Reaction(name, function () {
        if (!isScheduled) {
          isScheduled = true;
          setTimeout(function () {
            isScheduled = false;
            if (!r.isDisposed) r.track(reactionRunner);
          }, delay);
        }
      });
      function reactionRunner() {
        func(r);
      }
      r.schedule();
      return r.getDisposer();
    }
    function reaction(expression, effect, arg3) {
      if (arguments.length > 3) {
        fail(getMessage("m007"));
      }
      if (isModifierDescriptor(expression)) {
        fail(getMessage("m008"));
      }
      var opts;
      if (typeof arg3 === "object") {
        opts = arg3;
      } else {
        opts = {};
      }
      opts.name = opts.name || expression.name || effect.name || "Reaction@" + getNextId();
      opts.fireImmediately = arg3 === true || opts.fireImmediately === true;
      opts.delay = opts.delay || 0;
      opts.compareStructural = opts.compareStructural || opts.struct || false;
      effect = action(opts.name, opts.context ? effect.bind(opts.context) : effect);
      if (opts.context) {
        expression = expression.bind(opts.context);
      }
      var firstTime = true;
      var isScheduled = false;
      var value;
      var equals = opts.equals ? opts.equals : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;
      var r = new Reaction(opts.name, function () {
        if (firstTime || opts.delay < 1) {
          reactionRunner();
        } else if (!isScheduled) {
          isScheduled = true;
          setTimeout(function () {
            isScheduled = false;
            reactionRunner();
          }, opts.delay);
        }
      });
      function reactionRunner() {
        if (r.isDisposed) return;
        var changed = false;
        r.track(function () {
          var nextValue = expression(r);
          changed = firstTime || !equals(value, nextValue);
          value = nextValue;
        });
        if (firstTime && opts.fireImmediately) effect(value, r);
        if (!firstTime && changed === true) effect(value, r);
        if (firstTime) firstTime = false;
      }
      r.schedule();
      return r.getDisposer();
    }
    var ComputedValue = function () {
      function ComputedValue(derivation, scope, equals, name, setter) {
        this.derivation = derivation;
        this.scope = scope;
        this.equals = equals;
        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;
        this.observing = [];
        this.newObserving = null;
        this.isPendingUnobservation = false;
        this.observers = [];
        this.observersIndexes = {};
        this.diffValue = 0;
        this.runId = 0;
        this.lastAccessedBy = 0;
        this.lowestObserverState = exports.IDerivationState.UP_TO_DATE;
        this.unboundDepsCount = 0;
        this.__mapid = "#" + getNextId();
        this.value = new CaughtException(null);
        this.isComputing = false;
        this.isRunningSetter = false;
        this.name = name || "ComputedValue@" + getNextId();
        if (setter) this.setter = createAction(name + "-setter", setter);
      }
      ComputedValue.prototype.onBecomeStale = function () {
        propagateMaybeChanged(this);
      };
      ComputedValue.prototype.onBecomeUnobserved = function () {
        clearObserving(this);
        this.value = undefined;
      };
      ComputedValue.prototype.get = function () {
        invariant(!this.isComputing, "Cycle detected in computation " + this.name, this.derivation);
        if (globalState.inBatch === 0) {
          startBatch();
          if (shouldCompute(this)) this.value = this.computeValue(false);
          endBatch();
        } else {
          reportObserved(this);
          if (shouldCompute(this)) if (this.trackAndCompute()) propagateChangeConfirmed(this);
        }
        var result = this.value;
        if (isCaughtException(result)) throw result.cause;
        return result;
      };
      ComputedValue.prototype.peek = function () {
        var res = this.computeValue(false);
        if (isCaughtException(res)) throw res.cause;
        return res;
      };
      ComputedValue.prototype.set = function (value) {
        if (this.setter) {
          invariant(!this.isRunningSetter, "The setter of computed value '" + this.name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?");
          this.isRunningSetter = true;
          try {
            this.setter.call(this.scope, value);
          } finally {
            this.isRunningSetter = false;
          }
        } else invariant(false, "[ComputedValue '" + this.name + "'] It is not possible to assign a new value to a computed value.");
      };
      ComputedValue.prototype.trackAndCompute = function () {
        if (isSpyEnabled()) {
          spyReport({
            object: this.scope,
            type: "compute",
            fn: this.derivation
          });
        }
        var oldValue = this.value;
        var newValue = this.value = this.computeValue(true);
        return isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals(oldValue, newValue);
      };
      ComputedValue.prototype.computeValue = function (track) {
        this.isComputing = true;
        globalState.computationDepth++;
        var res;
        if (track) {
          res = trackDerivedFunction(this, this.derivation, this.scope);
        } else {
          try {
            res = this.derivation.call(this.scope);
          } catch (e) {
            res = new CaughtException(e);
          }
        }
        globalState.computationDepth--;
        this.isComputing = false;
        return res;
      };
      ComputedValue.prototype.observe = function (listener, fireImmediately) {
        var _this = this;
        var firstTime = true;
        var prevValue = undefined;
        return autorun(function () {
          var newValue = _this.get();
          if (!firstTime || fireImmediately) {
            var prevU = untrackedStart();
            listener({
              type: "update",
              object: _this,
              newValue: newValue,
              oldValue: prevValue
            });
            untrackedEnd(prevU);
          }
          firstTime = false;
          prevValue = newValue;
        });
      };
      ComputedValue.prototype.toJSON = function () {
        return this.get();
      };
      ComputedValue.prototype.toString = function () {
        return this.name + "[" + this.derivation.toString() + "]";
      };
      ComputedValue.prototype.valueOf = function () {
        return toPrimitive(this.get());
      };
      ComputedValue.prototype.whyRun = function () {
        var isTracking = Boolean(globalState.trackingDerivation);
        var observing = unique(this.isComputing ? this.newObserving : this.observing).map(function (dep) {
          return dep.name;
        });
        var observers = unique(getObservers(this).map(function (dep) {
          return dep.name;
        }));
        return "\nWhyRun? computation '" + this.name + "':\n * Running because: " + (isTracking ? "[active] the value of this computation is needed by a reaction" : this.isComputing ? "[get] The value of this computed was requested outside a reaction" : "[idle] not running at the moment") + "\n" + (this.dependenciesState === exports.IDerivationState.NOT_TRACKING ? getMessage("m032") : " * This computation will re-run if any of the following observables changes:\n    " + joinStrings(observing) + "\n    " + (this.isComputing && isTracking ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + getMessage("m038") + "\n\n  * If the outcome of this computation changes, the following observers will be re-run:\n    " + joinStrings(observers) + "\n");
      };
      return ComputedValue;
    }();
    ComputedValue.prototype[primitiveSymbol()] = ComputedValue.prototype.valueOf;
    var isComputedValue = createInstanceofPredicate("ComputedValue", ComputedValue);
    var ObservableObjectAdministration = function () {
      function ObservableObjectAdministration(target, name) {
        this.target = target;
        this.name = name;
        this.values = {};
        this.changeListeners = null;
        this.interceptors = null;
      }
      ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {
        invariant(fireImmediately !== true, "`observe` doesn't support the fire immediately property for observable objects.");
        return registerListener(this, callback);
      };
      ObservableObjectAdministration.prototype.intercept = function (handler) {
        return registerInterceptor(this, handler);
      };
      return ObservableObjectAdministration;
    }();
    function asObservableObject(target, name) {
      if (isObservableObject(target)) return target.$mobx;
      invariant(Object.isExtensible(target), getMessage("m035"));
      if (!isPlainObject(target)) name = (target.constructor.name || "ObservableObject") + "@" + getNextId();
      if (!name) name = "ObservableObject@" + getNextId();
      var adm = new ObservableObjectAdministration(target, name);
      addHiddenFinalProp(target, "$mobx", adm);
      return adm;
    }
    function defineObservablePropertyFromDescriptor(adm, propName, descriptor, defaultEnhancer) {
      if (adm.values[propName]) {
        invariant("value" in descriptor, "The property " + propName + " in " + adm.name + " is already observable, cannot redefine it as computed property");
        adm.target[propName] = descriptor.value;
        return;
      }
      if ("value" in descriptor) {
        if (isModifierDescriptor(descriptor.value)) {
          var modifierDescriptor = descriptor.value;
          defineObservableProperty(adm, propName, modifierDescriptor.initialValue, modifierDescriptor.enhancer);
        } else if (isAction(descriptor.value) && descriptor.value.autoBind === true) {
          defineBoundAction(adm.target, propName, descriptor.value.originalFn);
        } else if (isComputedValue(descriptor.value)) {
          defineComputedPropertyFromComputedValue(adm, propName, descriptor.value);
        } else {
          defineObservableProperty(adm, propName, descriptor.value, defaultEnhancer);
        }
      } else {
        defineComputedProperty(adm, propName, descriptor.get, descriptor.set, comparer.default, true);
      }
    }
    function defineObservableProperty(adm, propName, newValue, enhancer) {
      assertPropertyConfigurable(adm.target, propName);
      if (hasInterceptors(adm)) {
        var change = interceptChange(adm, {
          object: adm.target,
          name: propName,
          type: "add",
          newValue: newValue
        });
        if (!change) return;
        newValue = change.newValue;
      }
      var observable = adm.values[propName] = new ObservableValue(newValue, enhancer, adm.name + "." + propName, false);
      newValue = observable.value;
      Object.defineProperty(adm.target, propName, generateObservablePropConfig(propName));
      notifyPropertyAddition(adm, adm.target, propName, newValue);
    }
    function defineComputedProperty(adm, propName, getter, setter, equals, asInstanceProperty) {
      if (asInstanceProperty) assertPropertyConfigurable(adm.target, propName);
      adm.values[propName] = new ComputedValue(getter, adm.target, equals, adm.name + "." + propName, setter);
      if (asInstanceProperty) {
        Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));
      }
    }
    function defineComputedPropertyFromComputedValue(adm, propName, computedValue) {
      var name = adm.name + "." + propName;
      computedValue.name = name;
      if (!computedValue.scope) computedValue.scope = adm.target;
      adm.values[propName] = computedValue;
      Object.defineProperty(adm.target, propName, generateComputedPropConfig(propName));
    }
    var observablePropertyConfigs = {};
    var computedPropertyConfigs = {};
    function generateObservablePropConfig(propName) {
      return observablePropertyConfigs[propName] || (observablePropertyConfigs[propName] = {
        configurable: true,
        enumerable: true,
        get: function () {
          return this.$mobx.values[propName].get();
        },
        set: function (v) {
          setPropertyValue(this, propName, v);
        }
      });
    }
    function generateComputedPropConfig(propName) {
      return computedPropertyConfigs[propName] || (computedPropertyConfigs[propName] = {
        configurable: true,
        enumerable: false,
        get: function () {
          return this.$mobx.values[propName].get();
        },
        set: function (v) {
          return this.$mobx.values[propName].set(v);
        }
      });
    }
    function setPropertyValue(instance, name, newValue) {
      var adm = instance.$mobx;
      var observable = adm.values[name];
      if (hasInterceptors(adm)) {
        var change = interceptChange(adm, {
          type: "update",
          object: instance,
          name: name,
          newValue: newValue
        });
        if (!change) return;
        newValue = change.newValue;
      }
      newValue = observable.prepareNewValue(newValue);
      if (newValue !== UNCHANGED) {
        var notify = hasListeners(adm);
        var notifySpy = isSpyEnabled();
        var change = notify || notifySpy ? {
          type: "update",
          object: instance,
          oldValue: observable.value,
          name: name,
          newValue: newValue
        } : null;
        if (notifySpy) spyReportStart(change);
        observable.setNewValue(newValue);
        if (notify) notifyListeners(adm, change);
        if (notifySpy) spyReportEnd();
      }
    }
    function notifyPropertyAddition(adm, object, name, newValue) {
      var notify = hasListeners(adm);
      var notifySpy = isSpyEnabled();
      var change = notify || notifySpy ? {
        type: "add",
        object: object,
        name: name,
        newValue: newValue
      } : null;
      if (notifySpy) spyReportStart(change);
      if (notify) notifyListeners(adm, change);
      if (notifySpy) spyReportEnd();
    }
    var isObservableObjectAdministration = createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);
    function isObservableObject(thing) {
      if (isObject(thing)) {
        runLazyInitializers(thing);
        return isObservableObjectAdministration(thing.$mobx);
      }
      return false;
    }
    function isObservable(value, property) {
      if (value === null || value === undefined) return false;
      if (property !== undefined) {
        if (isObservableArray(value) || isObservableMap(value)) throw new Error(getMessage("m019"));else if (isObservableObject(value)) {
          var o = value.$mobx;
          return o.values && !!o.values[property];
        }
        return false;
      }
      return isObservableObject(value) || !!value.$mobx || isAtom(value) || isReaction(value) || isComputedValue(value);
    }
    function createDecoratorForEnhancer(enhancer) {
      invariant(!!enhancer, ":(");
      return createClassPropertyDecorator(function (target, name, baseValue, _, baseDescriptor) {
        assertPropertyConfigurable(target, name);
        invariant(!baseDescriptor || !baseDescriptor.get, getMessage("m022"));
        var adm = asObservableObject(target, undefined);
        defineObservableProperty(adm, name, baseValue, enhancer);
      }, function (name) {
        var observable = this.$mobx.values[name];
        if (observable === undefined) return undefined;
        return observable.get();
      }, function (name, value) {
        setPropertyValue(this, name, value);
      }, true, false);
    }
    function extendObservable(target) {
      var properties = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        properties[_i - 1] = arguments[_i];
      }
      return extendObservableHelper(target, deepEnhancer, properties);
    }
    function extendShallowObservable(target) {
      var properties = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        properties[_i - 1] = arguments[_i];
      }
      return extendObservableHelper(target, referenceEnhancer, properties);
    }
    function extendObservableHelper(target, defaultEnhancer, properties) {
      invariant(arguments.length >= 2, getMessage("m014"));
      invariant(typeof target === "object", getMessage("m015"));
      invariant(!isObservableMap(target), getMessage("m016"));
      properties.forEach(function (propSet) {
        invariant(typeof propSet === "object", getMessage("m017"));
        invariant(!isObservable(propSet), getMessage("m018"));
      });
      var adm = asObservableObject(target);
      var definedProps = {};
      for (var i = properties.length - 1; i >= 0; i--) {
        var propSet = properties[i];
        for (var key in propSet) if (definedProps[key] !== true && hasOwnProperty(propSet, key)) {
          definedProps[key] = true;
          if (target === propSet && !isPropertyConfigurable(target, key)) continue;
          var descriptor = Object.getOwnPropertyDescriptor(propSet, key);
          defineObservablePropertyFromDescriptor(adm, key, descriptor, defaultEnhancer);
        }
      }
      return target;
    }
    var deepDecorator = createDecoratorForEnhancer(deepEnhancer);
    var shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);
    var refDecorator = createDecoratorForEnhancer(referenceEnhancer);
    var deepStructDecorator = createDecoratorForEnhancer(deepStructEnhancer);
    var refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);
    function createObservable(v) {
      if (v === void 0) {
        v = undefined;
      }
      if (typeof arguments[1] === "string") return deepDecorator.apply(null, arguments);
      invariant(arguments.length <= 1, getMessage("m021"));
      invariant(!isModifierDescriptor(v), getMessage("m020"));
      if (isObservable(v)) return v;
      var res = deepEnhancer(v, undefined, undefined);
      if (res !== v) return res;
      return observable.box(v);
    }
    var IObservableFactories = function () {
      function IObservableFactories() {}
      IObservableFactories.prototype.box = function (value, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("box");
        return new ObservableValue(value, deepEnhancer, name);
      };
      IObservableFactories.prototype.shallowBox = function (value, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowBox");
        return new ObservableValue(value, referenceEnhancer, name);
      };
      IObservableFactories.prototype.array = function (initialValues, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("array");
        return new ObservableArray(initialValues, deepEnhancer, name);
      };
      IObservableFactories.prototype.shallowArray = function (initialValues, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowArray");
        return new ObservableArray(initialValues, referenceEnhancer, name);
      };
      IObservableFactories.prototype.map = function (initialValues, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("map");
        return new ObservableMap(initialValues, deepEnhancer, name);
      };
      IObservableFactories.prototype.shallowMap = function (initialValues, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowMap");
        return new ObservableMap(initialValues, referenceEnhancer, name);
      };
      IObservableFactories.prototype.object = function (props, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("object");
        var res = {};
        asObservableObject(res, name);
        extendObservable(res, props);
        return res;
      };
      IObservableFactories.prototype.shallowObject = function (props, name) {
        if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowObject");
        var res = {};
        asObservableObject(res, name);
        extendShallowObservable(res, props);
        return res;
      };
      IObservableFactories.prototype.ref = function () {
        if (arguments.length < 2) {
          return createModifierDescriptor(referenceEnhancer, arguments[0]);
        } else {
          return refDecorator.apply(null, arguments);
        }
      };
      IObservableFactories.prototype.shallow = function () {
        if (arguments.length < 2) {
          return createModifierDescriptor(shallowEnhancer, arguments[0]);
        } else {
          return shallowDecorator.apply(null, arguments);
        }
      };
      IObservableFactories.prototype.deep = function () {
        if (arguments.length < 2) {
          return createModifierDescriptor(deepEnhancer, arguments[0]);
        } else {
          return deepDecorator.apply(null, arguments);
        }
      };
      IObservableFactories.prototype.struct = function () {
        if (arguments.length < 2) {
          return createModifierDescriptor(deepStructEnhancer, arguments[0]);
        } else {
          return deepStructDecorator.apply(null, arguments);
        }
      };
      return IObservableFactories;
    }();
    var observable = createObservable;
    Object.getOwnPropertyNames(IObservableFactories.prototype).filter(function (name) {
      return name !== "constructor";
    }).forEach(function (name) {
      return observable[name] = IObservableFactories.prototype[name];
    });
    observable.deep.struct = observable.struct;
    observable.ref.struct = function () {
      if (arguments.length < 2) {
        return createModifierDescriptor(refStructEnhancer, arguments[0]);
      } else {
        return refStructDecorator.apply(null, arguments);
      }
    };
    function incorrectlyUsedAsDecorator(methodName) {
      fail("Expected one or two arguments to observable." + methodName + ". Did you accidentally try to use observable." + methodName + " as decorator?");
    }
    function isModifierDescriptor(thing) {
      return typeof thing === "object" && thing !== null && thing.isMobxModifierDescriptor === true;
    }
    function createModifierDescriptor(enhancer, initialValue) {
      invariant(!isModifierDescriptor(initialValue), "Modifiers cannot be nested");
      return {
        isMobxModifierDescriptor: true,
        initialValue: initialValue,
        enhancer: enhancer
      };
    }
    function deepEnhancer(v, _, name) {
      if (isModifierDescriptor(v)) fail("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it");
      if (isObservable(v)) return v;
      if (Array.isArray(v)) return observable.array(v, name);
      if (isPlainObject(v)) return observable.object(v, name);
      if (isES6Map(v)) return observable.map(v, name);
      return v;
    }
    function shallowEnhancer(v, _, name) {
      if (isModifierDescriptor(v)) fail("You tried to assign a modifier wrapped value to a collection, please define modifiers when creating the collection, not when modifying it");
      if (v === undefined || v === null) return v;
      if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v)) return v;
      if (Array.isArray(v)) return observable.shallowArray(v, name);
      if (isPlainObject(v)) return observable.shallowObject(v, name);
      if (isES6Map(v)) return observable.shallowMap(v, name);
      return fail("The shallow modifier / decorator can only used in combination with arrays, objects and maps");
    }
    function referenceEnhancer(newValue) {
      return newValue;
    }
    function deepStructEnhancer(v, oldValue, name) {
      if (deepEqual(v, oldValue)) return oldValue;
      if (isObservable(v)) return v;
      if (Array.isArray(v)) return new ObservableArray(v, deepStructEnhancer, name);
      if (isES6Map(v)) return new ObservableMap(v, deepStructEnhancer, name);
      if (isPlainObject(v)) {
        var res = {};
        asObservableObject(res, name);
        extendObservableHelper(res, deepStructEnhancer, [v]);
        return res;
      }
      return v;
    }
    function refStructEnhancer(v, oldValue, name) {
      if (deepEqual(v, oldValue)) return oldValue;
      return v;
    }
    function transaction(action, thisArg) {
      if (thisArg === void 0) {
        thisArg = undefined;
      }
      deprecated(getMessage("m023"));
      return runInTransaction.apply(undefined, arguments);
    }
    function runInTransaction(action, thisArg) {
      if (thisArg === void 0) {
        thisArg = undefined;
      }
      return executeAction("", action);
    }
    var ObservableMapMarker = {};
    var ObservableMap = function () {
      function ObservableMap(initialData, enhancer, name) {
        if (enhancer === void 0) {
          enhancer = deepEnhancer;
        }
        if (name === void 0) {
          name = "ObservableMap@" + getNextId();
        }
        this.enhancer = enhancer;
        this.name = name;
        this.$mobx = ObservableMapMarker;
        this._data = Object.create(null);
        this._hasMap = Object.create(null);
        this._keys = new ObservableArray(undefined, referenceEnhancer, this.name + ".keys()", true);
        this.interceptors = null;
        this.changeListeners = null;
        this.dehancer = undefined;
        this.merge(initialData);
      }
      ObservableMap.prototype._has = function (key) {
        return typeof this._data[key] !== "undefined";
      };
      ObservableMap.prototype.has = function (key) {
        if (!this.isValidKey(key)) return false;
        key = "" + key;
        if (this._hasMap[key]) return this._hasMap[key].get();
        return this._updateHasMapEntry(key, false).get();
      };
      ObservableMap.prototype.set = function (key, value) {
        this.assertValidKey(key);
        key = "" + key;
        var hasKey = this._has(key);
        if (hasInterceptors(this)) {
          var change = interceptChange(this, {
            type: hasKey ? "update" : "add",
            object: this,
            newValue: value,
            name: key
          });
          if (!change) return this;
          value = change.newValue;
        }
        if (hasKey) {
          this._updateValue(key, value);
        } else {
          this._addValue(key, value);
        }
        return this;
      };
      ObservableMap.prototype.delete = function (key) {
        var _this = this;
        this.assertValidKey(key);
        key = "" + key;
        if (hasInterceptors(this)) {
          var change = interceptChange(this, {
            type: "delete",
            object: this,
            name: key
          });
          if (!change) return false;
        }
        if (this._has(key)) {
          var notifySpy = isSpyEnabled();
          var notify = hasListeners(this);
          var change = notify || notifySpy ? {
            type: "delete",
            object: this,
            oldValue: this._data[key].value,
            name: key
          } : null;
          if (notifySpy) spyReportStart(change);
          runInTransaction(function () {
            _this._keys.remove(key);
            _this._updateHasMapEntry(key, false);
            var observable$$1 = _this._data[key];
            observable$$1.setNewValue(undefined);
            _this._data[key] = undefined;
          });
          if (notify) notifyListeners(this, change);
          if (notifySpy) spyReportEnd();
          return true;
        }
        return false;
      };
      ObservableMap.prototype._updateHasMapEntry = function (key, value) {
        var entry = this._hasMap[key];
        if (entry) {
          entry.setNewValue(value);
        } else {
          entry = this._hasMap[key] = new ObservableValue(value, referenceEnhancer, this.name + "." + key + "?", false);
        }
        return entry;
      };
      ObservableMap.prototype._updateValue = function (name, newValue) {
        var observable$$1 = this._data[name];
        newValue = observable$$1.prepareNewValue(newValue);
        if (newValue !== UNCHANGED) {
          var notifySpy = isSpyEnabled();
          var notify = hasListeners(this);
          var change = notify || notifySpy ? {
            type: "update",
            object: this,
            oldValue: observable$$1.value,
            name: name,
            newValue: newValue
          } : null;
          if (notifySpy) spyReportStart(change);
          observable$$1.setNewValue(newValue);
          if (notify) notifyListeners(this, change);
          if (notifySpy) spyReportEnd();
        }
      };
      ObservableMap.prototype._addValue = function (name, newValue) {
        var _this = this;
        runInTransaction(function () {
          var observable$$1 = _this._data[name] = new ObservableValue(newValue, _this.enhancer, _this.name + "." + name, false);
          newValue = observable$$1.value;
          _this._updateHasMapEntry(name, true);
          _this._keys.push(name);
        });
        var notifySpy = isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          type: "add",
          object: this,
          name: name,
          newValue: newValue
        } : null;
        if (notifySpy) spyReportStart(change);
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      };
      ObservableMap.prototype.get = function (key) {
        key = "" + key;
        if (this.has(key)) return this.dehanceValue(this._data[key].get());
        return this.dehanceValue(undefined);
      };
      ObservableMap.prototype.dehanceValue = function (value) {
        if (this.dehancer !== undefined) {
          return this.dehancer(value);
        }
        return value;
      };
      ObservableMap.prototype.keys = function () {
        return arrayAsIterator(this._keys.slice());
      };
      ObservableMap.prototype.values = function () {
        return arrayAsIterator(this._keys.map(this.get, this));
      };
      ObservableMap.prototype.entries = function () {
        var _this = this;
        return arrayAsIterator(this._keys.map(function (key) {
          return [key, _this.get(key)];
        }));
      };
      ObservableMap.prototype.forEach = function (callback, thisArg) {
        var _this = this;
        this.keys().forEach(function (key) {
          return callback.call(thisArg, _this.get(key), key, _this);
        });
      };
      ObservableMap.prototype.merge = function (other) {
        var _this = this;
        if (isObservableMap(other)) {
          other = other.toJS();
        }
        runInTransaction(function () {
          if (isPlainObject(other)) Object.keys(other).forEach(function (key) {
            return _this.set(key, other[key]);
          });else if (Array.isArray(other)) other.forEach(function (_a) {
            var key = _a[0],
                value = _a[1];
            return _this.set(key, value);
          });else if (isES6Map(other)) other.forEach(function (value, key) {
            return _this.set(key, value);
          });else if (other !== null && other !== undefined) fail("Cannot initialize map from " + other);
        });
        return this;
      };
      ObservableMap.prototype.clear = function () {
        var _this = this;
        runInTransaction(function () {
          untracked(function () {
            _this.keys().forEach(_this.delete, _this);
          });
        });
      };
      ObservableMap.prototype.replace = function (values) {
        var _this = this;
        runInTransaction(function () {
          _this.clear();
          _this.merge(values);
        });
        return this;
      };
      Object.defineProperty(ObservableMap.prototype, "size", {
        get: function () {
          return this._keys.length;
        },
        enumerable: true,
        configurable: true
      });
      ObservableMap.prototype.toJS = function () {
        var _this = this;
        var res = {};
        this.keys().forEach(function (key) {
          return res[key] = _this.get(key);
        });
        return res;
      };
      ObservableMap.prototype.toJSON = function () {
        return this.toJS();
      };
      ObservableMap.prototype.isValidKey = function (key) {
        if (key === null || key === undefined) return false;
        if (typeof key === "string" || typeof key === "number" || typeof key === "boolean") return true;
        return false;
      };
      ObservableMap.prototype.assertValidKey = function (key) {
        if (!this.isValidKey(key)) throw new Error("[mobx.map] Invalid key: '" + key + "', only strings, numbers and booleans are accepted as key in observable maps.");
      };
      ObservableMap.prototype.toString = function () {
        var _this = this;
        return this.name + "[{ " + this.keys().map(function (key) {
          return key + ": " + ("" + _this.get(key));
        }).join(", ") + " }]";
      };
      ObservableMap.prototype.observe = function (listener, fireImmediately) {
        invariant(fireImmediately !== true, getMessage("m033"));
        return registerListener(this, listener);
      };
      ObservableMap.prototype.intercept = function (handler) {
        return registerInterceptor(this, handler);
      };
      return ObservableMap;
    }();
    declareIterator(ObservableMap.prototype, function () {
      return this.entries();
    });
    function map(initialValues) {
      deprecated("`mobx.map` is deprecated, use `new ObservableMap` or `mobx.observable.map` instead");
      return observable.map(initialValues);
    }
    var isObservableMap = createInstanceofPredicate("ObservableMap", ObservableMap);
    var EMPTY_ARRAY = [];
    Object.freeze(EMPTY_ARRAY);
    function getGlobal() {
      return global;
    }
    function getNextId() {
      return ++globalState.mobxGuid;
    }
    function fail(message, thing) {
      invariant(false, message, thing);
      throw "X";
    }
    function invariant(check, message, thing) {
      if (!check) throw new Error("[mobx] Invariant failed: " + message + (thing ? " in '" + thing + "'" : ""));
    }
    var deprecatedMessages = [];
    function deprecated(msg) {
      if (deprecatedMessages.indexOf(msg) !== -1) return false;
      deprecatedMessages.push(msg);
      console.error("[mobx] Deprecated: " + msg);
      return true;
    }
    function once(func) {
      var invoked = false;
      return function () {
        if (invoked) return;
        invoked = true;
        return func.apply(this, arguments);
      };
    }
    var noop = function () {};
    function unique(list) {
      var res = [];
      list.forEach(function (item) {
        if (res.indexOf(item) === -1) res.push(item);
      });
      return res;
    }
    function joinStrings(things, limit, separator) {
      if (limit === void 0) {
        limit = 100;
      }
      if (separator === void 0) {
        separator = " - ";
      }
      if (!things) return "";
      var sliced = things.slice(0, limit);
      return "" + sliced.join(separator) + (things.length > limit ? " (... and " + (things.length - limit) + "more)" : "");
    }
    function isObject(value) {
      return value !== null && typeof value === "object";
    }
    function isPlainObject(value) {
      if (value === null || typeof value !== "object") return false;
      var proto = Object.getPrototypeOf(value);
      return proto === Object.prototype || proto === null;
    }
    function objectAssign() {
      var res = arguments[0];
      for (var i = 1, l = arguments.length; i < l; i++) {
        var source = arguments[i];
        for (var key in source) if (hasOwnProperty(source, key)) {
          res[key] = source[key];
        }
      }
      return res;
    }
    var prototypeHasOwnProperty = Object.prototype.hasOwnProperty;
    function hasOwnProperty(object, propName) {
      return prototypeHasOwnProperty.call(object, propName);
    }
    function makeNonEnumerable(object, propNames) {
      for (var i = 0; i < propNames.length; i++) {
        addHiddenProp(object, propNames[i], object[propNames[i]]);
      }
    }
    function addHiddenProp(object, propName, value) {
      Object.defineProperty(object, propName, {
        enumerable: false,
        writable: true,
        configurable: true,
        value: value
      });
    }
    function addHiddenFinalProp(object, propName, value) {
      Object.defineProperty(object, propName, {
        enumerable: false,
        writable: false,
        configurable: true,
        value: value
      });
    }
    function isPropertyConfigurable(object, prop) {
      var descriptor = Object.getOwnPropertyDescriptor(object, prop);
      return !descriptor || descriptor.configurable !== false && descriptor.writable !== false;
    }
    function assertPropertyConfigurable(object, prop) {
      invariant(isPropertyConfigurable(object, prop), "Cannot make property '" + prop + "' observable, it is not configurable and writable in the target object");
    }
    function getEnumerableKeys(obj) {
      var res = [];
      for (var key in obj) res.push(key);
      return res;
    }
    function deepEqual(a, b) {
      if (a === null && b === null) return true;
      if (a === undefined && b === undefined) return true;
      if (typeof a !== "object") return a === b;
      var aIsArray = isArrayLike(a);
      var aIsMap = isMapLike(a);
      if (aIsArray !== isArrayLike(b)) {
        return false;
      } else if (aIsMap !== isMapLike(b)) {
        return false;
      } else if (aIsArray) {
        if (a.length !== b.length) return false;
        for (var i = a.length - 1; i >= 0; i--) if (!deepEqual(a[i], b[i])) return false;
        return true;
      } else if (aIsMap) {
        if (a.size !== b.size) return false;
        var equals_1 = true;
        a.forEach(function (value, key) {
          equals_1 = equals_1 && deepEqual(b.get(key), value);
        });
        return equals_1;
      } else if (typeof a === "object" && typeof b === "object") {
        if (a === null || b === null) return false;
        if (isMapLike(a) && isMapLike(b)) {
          if (a.size !== b.size) return false;
          return deepEqual(observable.shallowMap(a).entries(), observable.shallowMap(b).entries());
        }
        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length) return false;
        for (var prop in a) {
          if (!(prop in b)) return false;
          if (!deepEqual(a[prop], b[prop])) return false;
        }
        return true;
      }
      return false;
    }
    function createInstanceofPredicate(name, clazz) {
      var propName = "isMobX" + name;
      clazz.prototype[propName] = true;
      return function (x) {
        return isObject(x) && x[propName] === true;
      };
    }
    function isArrayLike(x) {
      return Array.isArray(x) || isObservableArray(x);
    }
    function isMapLike(x) {
      return isES6Map(x) || isObservableMap(x);
    }
    function isES6Map(thing) {
      if (getGlobal().Map !== undefined && thing instanceof getGlobal().Map) return true;
      return false;
    }
    function primitiveSymbol() {
      return typeof Symbol === "function" && Symbol.toPrimitive || "@@toPrimitive";
    }
    function toPrimitive(value) {
      return value === null ? null : typeof value === "object" ? "" + value : value;
    }
    var persistentKeys = ["mobxGuid", "resetId", "spyListeners", "strictMode", "runId"];
    var MobXGlobals = function () {
      function MobXGlobals() {
        this.version = 5;
        this.trackingDerivation = null;
        this.computationDepth = 0;
        this.runId = 0;
        this.mobxGuid = 0;
        this.inBatch = 0;
        this.pendingUnobservations = [];
        this.pendingReactions = [];
        this.isRunningReactions = false;
        this.allowStateChanges = true;
        this.strictMode = false;
        this.resetId = 0;
        this.spyListeners = [];
        this.globalReactionErrorHandlers = [];
      }
      return MobXGlobals;
    }();
    var globalState = new MobXGlobals();
    var shareGlobalStateCalled = false;
    var runInIsolationCalled = false;
    var warnedAboutMultipleInstances = false;
    {
      var global_1 = getGlobal();
      if (!global_1.__mobxInstanceCount) {
        global_1.__mobxInstanceCount = 1;
      } else {
        global_1.__mobxInstanceCount++;
        setTimeout(function () {
          if (!shareGlobalStateCalled && !runInIsolationCalled && !warnedAboutMultipleInstances) {
            warnedAboutMultipleInstances = true;
            console.warn("[mobx] Warning: there are multiple mobx instances active. This might lead to unexpected results. See https://github.com/mobxjs/mobx/issues/1082 for details.");
          }
        });
      }
    }
    function isolateGlobalState() {
      runInIsolationCalled = true;
      getGlobal().__mobxInstanceCount--;
    }
    function shareGlobalState() {
      deprecated("Using `shareGlobalState` is not recommended, use peer dependencies instead. See https://github.com/mobxjs/mobx/issues/1082 for details.");
      shareGlobalStateCalled = true;
      var global = getGlobal();
      var ownState = globalState;
      if (global.__mobservableTrackingStack || global.__mobservableViewStack) throw new Error("[mobx] An incompatible version of mobservable is already loaded.");
      if (global.__mobxGlobal && global.__mobxGlobal.version !== ownState.version) throw new Error("[mobx] An incompatible version of mobx is already loaded.");
      if (global.__mobxGlobal) globalState = global.__mobxGlobal;else global.__mobxGlobal = ownState;
    }
    function getGlobalState() {
      return globalState;
    }
    function resetGlobalState() {
      globalState.resetId++;
      var defaultGlobals = new MobXGlobals();
      for (var key in defaultGlobals) if (persistentKeys.indexOf(key) === -1) globalState[key] = defaultGlobals[key];
      globalState.allowStateChanges = !globalState.strictMode;
    }
    function hasObservers(observable) {
      return observable.observers && observable.observers.length > 0;
    }
    function getObservers(observable) {
      return observable.observers;
    }
    function addObserver(observable, node) {
      var l = observable.observers.length;
      if (l) {
        observable.observersIndexes[node.__mapid] = l;
      }
      observable.observers[l] = node;
      if (observable.lowestObserverState > node.dependenciesState) observable.lowestObserverState = node.dependenciesState;
    }
    function removeObserver(observable, node) {
      if (observable.observers.length === 1) {
        observable.observers.length = 0;
        queueForUnobservation(observable);
      } else {
        var list = observable.observers;
        var map = observable.observersIndexes;
        var filler = list.pop();
        if (filler !== node) {
          var index = map[node.__mapid] || 0;
          if (index) {
            map[filler.__mapid] = index;
          } else {
            delete map[filler.__mapid];
          }
          list[index] = filler;
        }
        delete map[node.__mapid];
      }
    }
    function queueForUnobservation(observable) {
      if (!observable.isPendingUnobservation) {
        observable.isPendingUnobservation = true;
        globalState.pendingUnobservations.push(observable);
      }
    }
    function startBatch() {
      globalState.inBatch++;
    }
    function endBatch() {
      if (--globalState.inBatch === 0) {
        runReactions();
        var list = globalState.pendingUnobservations;
        for (var i = 0; i < list.length; i++) {
          var observable = list[i];
          observable.isPendingUnobservation = false;
          if (observable.observers.length === 0) {
            observable.onBecomeUnobserved();
          }
        }
        globalState.pendingUnobservations = [];
      }
    }
    function reportObserved(observable) {
      var derivation = globalState.trackingDerivation;
      if (derivation !== null) {
        if (derivation.runId !== observable.lastAccessedBy) {
          observable.lastAccessedBy = derivation.runId;
          derivation.newObserving[derivation.unboundDepsCount++] = observable;
        }
      } else if (observable.observers.length === 0) {
        queueForUnobservation(observable);
      }
    }
    function propagateChanged(observable) {
      if (observable.lowestObserverState === exports.IDerivationState.STALE) return;
      observable.lowestObserverState = exports.IDerivationState.STALE;
      var observers = observable.observers;
      var i = observers.length;
      while (i--) {
        var d = observers[i];
        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) d.onBecomeStale();
        d.dependenciesState = exports.IDerivationState.STALE;
      }
    }
    function propagateChangeConfirmed(observable) {
      if (observable.lowestObserverState === exports.IDerivationState.STALE) return;
      observable.lowestObserverState = exports.IDerivationState.STALE;
      var observers = observable.observers;
      var i = observers.length;
      while (i--) {
        var d = observers[i];
        if (d.dependenciesState === exports.IDerivationState.POSSIBLY_STALE) d.dependenciesState = exports.IDerivationState.STALE;else if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) observable.lowestObserverState = exports.IDerivationState.UP_TO_DATE;
      }
    }
    function propagateMaybeChanged(observable) {
      if (observable.lowestObserverState !== exports.IDerivationState.UP_TO_DATE) return;
      observable.lowestObserverState = exports.IDerivationState.POSSIBLY_STALE;
      var observers = observable.observers;
      var i = observers.length;
      while (i--) {
        var d = observers[i];
        if (d.dependenciesState === exports.IDerivationState.UP_TO_DATE) {
          d.dependenciesState = exports.IDerivationState.POSSIBLY_STALE;
          d.onBecomeStale();
        }
      }
    }
    (function (IDerivationState) {
      IDerivationState[IDerivationState["NOT_TRACKING"] = -1] = "NOT_TRACKING";
      IDerivationState[IDerivationState["UP_TO_DATE"] = 0] = "UP_TO_DATE";
      IDerivationState[IDerivationState["POSSIBLY_STALE"] = 1] = "POSSIBLY_STALE";
      IDerivationState[IDerivationState["STALE"] = 2] = "STALE";
    })(exports.IDerivationState || (exports.IDerivationState = {}));
    var CaughtException = function () {
      function CaughtException(cause) {
        this.cause = cause;
      }
      return CaughtException;
    }();
    function isCaughtException(e) {
      return e instanceof CaughtException;
    }
    function shouldCompute(derivation) {
      switch (derivation.dependenciesState) {
        case exports.IDerivationState.UP_TO_DATE:
          return false;
        case exports.IDerivationState.NOT_TRACKING:
        case exports.IDerivationState.STALE:
          return true;
        case exports.IDerivationState.POSSIBLY_STALE:
          {
            var prevUntracked = untrackedStart();
            var obs = derivation.observing,
                l = obs.length;
            for (var i = 0; i < l; i++) {
              var obj = obs[i];
              if (isComputedValue(obj)) {
                try {
                  obj.get();
                } catch (e) {
                  untrackedEnd(prevUntracked);
                  return true;
                }
                if (derivation.dependenciesState === exports.IDerivationState.STALE) {
                  untrackedEnd(prevUntracked);
                  return true;
                }
              }
            }
            changeDependenciesStateTo0(derivation);
            untrackedEnd(prevUntracked);
            return false;
          }
      }
    }
    function isComputingDerivation() {
      return globalState.trackingDerivation !== null;
    }
    function checkIfStateModificationsAreAllowed(atom) {
      var hasObservers$$1 = atom.observers.length > 0;
      if (globalState.computationDepth > 0 && hasObservers$$1) fail(getMessage("m031") + atom.name);
      if (!globalState.allowStateChanges && hasObservers$$1) fail(getMessage(globalState.strictMode ? "m030a" : "m030b") + atom.name);
    }
    function trackDerivedFunction(derivation, f, context) {
      changeDependenciesStateTo0(derivation);
      derivation.newObserving = new Array(derivation.observing.length + 100);
      derivation.unboundDepsCount = 0;
      derivation.runId = ++globalState.runId;
      var prevTracking = globalState.trackingDerivation;
      globalState.trackingDerivation = derivation;
      var result;
      try {
        result = f.call(context);
      } catch (e) {
        result = new CaughtException(e);
      }
      globalState.trackingDerivation = prevTracking;
      bindDependencies(derivation);
      return result;
    }
    function bindDependencies(derivation) {
      var prevObserving = derivation.observing;
      var observing = derivation.observing = derivation.newObserving;
      var lowestNewObservingDerivationState = exports.IDerivationState.UP_TO_DATE;
      derivation.newObserving = null;
      var i0 = 0,
          l = derivation.unboundDepsCount;
      for (var i = 0; i < l; i++) {
        var dep = observing[i];
        if (dep.diffValue === 0) {
          dep.diffValue = 1;
          if (i0 !== i) observing[i0] = dep;
          i0++;
        }
        if (dep.dependenciesState > lowestNewObservingDerivationState) {
          lowestNewObservingDerivationState = dep.dependenciesState;
        }
      }
      observing.length = i0;
      l = prevObserving.length;
      while (l--) {
        var dep = prevObserving[l];
        if (dep.diffValue === 0) {
          removeObserver(dep, derivation);
        }
        dep.diffValue = 0;
      }
      while (i0--) {
        var dep = observing[i0];
        if (dep.diffValue === 1) {
          dep.diffValue = 0;
          addObserver(dep, derivation);
        }
      }
      if (lowestNewObservingDerivationState !== exports.IDerivationState.UP_TO_DATE) {
        derivation.dependenciesState = lowestNewObservingDerivationState;
        derivation.onBecomeStale();
      }
    }
    function clearObserving(derivation) {
      var obs = derivation.observing;
      derivation.observing = [];
      var i = obs.length;
      while (i--) removeObserver(obs[i], derivation);
      derivation.dependenciesState = exports.IDerivationState.NOT_TRACKING;
    }
    function untracked(action) {
      var prev = untrackedStart();
      var res = action();
      untrackedEnd(prev);
      return res;
    }
    function untrackedStart() {
      var prev = globalState.trackingDerivation;
      globalState.trackingDerivation = null;
      return prev;
    }
    function untrackedEnd(prev) {
      globalState.trackingDerivation = prev;
    }
    function changeDependenciesStateTo0(derivation) {
      if (derivation.dependenciesState === exports.IDerivationState.UP_TO_DATE) return;
      derivation.dependenciesState = exports.IDerivationState.UP_TO_DATE;
      var obs = derivation.observing;
      var i = obs.length;
      while (i--) obs[i].lowestObserverState = exports.IDerivationState.UP_TO_DATE;
    }
    var Reaction = function () {
      function Reaction(name, onInvalidate) {
        if (name === void 0) {
          name = "Reaction@" + getNextId();
        }
        this.name = name;
        this.onInvalidate = onInvalidate;
        this.observing = [];
        this.newObserving = [];
        this.dependenciesState = exports.IDerivationState.NOT_TRACKING;
        this.diffValue = 0;
        this.runId = 0;
        this.unboundDepsCount = 0;
        this.__mapid = "#" + getNextId();
        this.isDisposed = false;
        this._isScheduled = false;
        this._isTrackPending = false;
        this._isRunning = false;
      }
      Reaction.prototype.onBecomeStale = function () {
        this.schedule();
      };
      Reaction.prototype.schedule = function () {
        if (!this._isScheduled) {
          this._isScheduled = true;
          globalState.pendingReactions.push(this);
          runReactions();
        }
      };
      Reaction.prototype.isScheduled = function () {
        return this._isScheduled;
      };
      Reaction.prototype.runReaction = function () {
        if (!this.isDisposed) {
          startBatch();
          this._isScheduled = false;
          if (shouldCompute(this)) {
            this._isTrackPending = true;
            this.onInvalidate();
            if (this._isTrackPending && isSpyEnabled()) {
              spyReport({
                object: this,
                type: "scheduled-reaction"
              });
            }
          }
          endBatch();
        }
      };
      Reaction.prototype.track = function (fn) {
        startBatch();
        var notify = isSpyEnabled();
        var startTime;
        if (notify) {
          startTime = Date.now();
          spyReportStart({
            object: this,
            type: "reaction",
            fn: fn
          });
        }
        this._isRunning = true;
        var result = trackDerivedFunction(this, fn, undefined);
        this._isRunning = false;
        this._isTrackPending = false;
        if (this.isDisposed) {
          clearObserving(this);
        }
        if (isCaughtException(result)) this.reportExceptionInDerivation(result.cause);
        if (notify) {
          spyReportEnd({ time: Date.now() - startTime });
        }
        endBatch();
      };
      Reaction.prototype.reportExceptionInDerivation = function (error) {
        var _this = this;
        if (this.errorHandler) {
          this.errorHandler(error, this);
          return;
        }
        var message = "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this;
        var messageToUser = getMessage("m037");
        console.error(message || messageToUser, error);
        if (isSpyEnabled()) {
          spyReport({
            type: "error",
            message: message,
            error: error,
            object: this
          });
        }
        globalState.globalReactionErrorHandlers.forEach(function (f) {
          return f(error, _this);
        });
      };
      Reaction.prototype.dispose = function () {
        if (!this.isDisposed) {
          this.isDisposed = true;
          if (!this._isRunning) {
            startBatch();
            clearObserving(this);
            endBatch();
          }
        }
      };
      Reaction.prototype.getDisposer = function () {
        var r = this.dispose.bind(this);
        r.$mobx = this;
        r.onError = registerErrorHandler;
        return r;
      };
      Reaction.prototype.toString = function () {
        return "Reaction[" + this.name + "]";
      };
      Reaction.prototype.whyRun = function () {
        var observing = unique(this._isRunning ? this.newObserving : this.observing).map(function (dep) {
          return dep.name;
        });
        return "\nWhyRun? reaction '" + this.name + "':\n * Status: [" + (this.isDisposed ? "stopped" : this._isRunning ? "running" : this.isScheduled() ? "scheduled" : "idle") + "]\n * This reaction will re-run if any of the following observables changes:\n    " + joinStrings(observing) + "\n    " + (this._isRunning ? " (... or any observable accessed during the remainder of the current run)" : "") + "\n\t" + getMessage("m038") + "\n";
      };
      return Reaction;
    }();
    function registerErrorHandler(handler) {
      invariant(this && this.$mobx && isReaction(this.$mobx), "Invalid `this`");
      invariant(!this.$mobx.errorHandler, "Only one onErrorHandler can be registered");
      this.$mobx.errorHandler = handler;
    }
    function onReactionError(handler) {
      globalState.globalReactionErrorHandlers.push(handler);
      return function () {
        var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
        if (idx >= 0) globalState.globalReactionErrorHandlers.splice(idx, 1);
      };
    }
    var MAX_REACTION_ITERATIONS = 100;
    var reactionScheduler = function (f) {
      return f();
    };
    function runReactions() {
      if (globalState.inBatch > 0 || globalState.isRunningReactions) return;
      reactionScheduler(runReactionsHelper);
    }
    function runReactionsHelper() {
      globalState.isRunningReactions = true;
      var allReactions = globalState.pendingReactions;
      var iterations = 0;
      while (allReactions.length > 0) {
        if (++iterations === MAX_REACTION_ITERATIONS) {
          console.error("Reaction doesn't converge to a stable state after " + MAX_REACTION_ITERATIONS + " iterations." + (" Probably there is a cycle in the reactive function: " + allReactions[0]));
          allReactions.splice(0);
        }
        var remainingReactions = allReactions.splice(0);
        for (var i = 0, l = remainingReactions.length; i < l; i++) remainingReactions[i].runReaction();
      }
      globalState.isRunningReactions = false;
    }
    var isReaction = createInstanceofPredicate("Reaction", Reaction);
    function setReactionScheduler(fn) {
      var baseScheduler = reactionScheduler;
      reactionScheduler = function (f) {
        return fn(function () {
          return baseScheduler(f);
        });
      };
    }
    function asReference(value) {
      deprecated("asReference is deprecated, use observable.ref instead");
      return observable.ref(value);
    }
    function asStructure(value) {
      deprecated("asStructure is deprecated. Use observable.struct, computed.struct or reaction options instead.");
      return observable.struct(value);
    }
    function asFlat(value) {
      deprecated("asFlat is deprecated, use observable.shallow instead");
      return observable.shallow(value);
    }
    function asMap(data) {
      deprecated("asMap is deprecated, use observable.map or observable.shallowMap instead");
      return observable.map(data || {});
    }
    function createComputedDecorator(equals) {
      return createClassPropertyDecorator(function (target, name, _, __, originalDescriptor) {
        invariant(typeof originalDescriptor !== "undefined", getMessage("m009"));
        invariant(typeof originalDescriptor.get === "function", getMessage("m010"));
        var adm = asObservableObject(target, "");
        defineComputedProperty(adm, name, originalDescriptor.get, originalDescriptor.set, equals, false);
      }, function (name) {
        var observable = this.$mobx.values[name];
        if (observable === undefined) return undefined;
        return observable.get();
      }, function (name, value) {
        this.$mobx.values[name].set(value);
      }, false, false);
    }
    var computedDecorator = createComputedDecorator(comparer.default);
    var computedStructDecorator = createComputedDecorator(comparer.structural);
    var computed = function computed(arg1, arg2, arg3) {
      if (typeof arg2 === "string") {
        return computedDecorator.apply(null, arguments);
      }
      invariant(typeof arg1 === "function", getMessage("m011"));
      invariant(arguments.length < 3, getMessage("m012"));
      var opts = typeof arg2 === "object" ? arg2 : {};
      opts.setter = typeof arg2 === "function" ? arg2 : opts.setter;
      var equals = opts.equals ? opts.equals : opts.compareStructural || opts.struct ? comparer.structural : comparer.default;
      return new ComputedValue(arg1, opts.context, equals, opts.name || arg1.name || "", opts.setter);
    };
    computed.struct = computedStructDecorator;
    computed.equals = createComputedDecorator;
    function getAtom(thing, property) {
      if (typeof thing === "object" && thing !== null) {
        if (isObservableArray(thing)) {
          invariant(property === undefined, getMessage("m036"));
          return thing.$mobx.atom;
        }
        if (isObservableMap(thing)) {
          var anyThing = thing;
          if (property === undefined) return getAtom(anyThing._keys);
          var observable = anyThing._data[property] || anyThing._hasMap[property];
          invariant(!!observable, "the entry '" + property + "' does not exist in the observable map '" + getDebugName(thing) + "'");
          return observable;
        }
        runLazyInitializers(thing);
        if (property && !thing.$mobx) thing[property];
        if (isObservableObject(thing)) {
          if (!property) return fail("please specify a property");
          var observable = thing.$mobx.values[property];
          invariant(!!observable, "no observable property '" + property + "' found on the observable object '" + getDebugName(thing) + "'");
          return observable;
        }
        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
          return thing;
        }
      } else if (typeof thing === "function") {
        if (isReaction(thing.$mobx)) {
          return thing.$mobx;
        }
      }
      return fail("Cannot obtain atom from " + thing);
    }
    function getAdministration(thing, property) {
      invariant(thing, "Expecting some object");
      if (property !== undefined) return getAdministration(getAtom(thing, property));
      if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) return thing;
      if (isObservableMap(thing)) return thing;
      runLazyInitializers(thing);
      if (thing.$mobx) return thing.$mobx;
      invariant(false, "Cannot obtain administration from " + thing);
    }
    function getDebugName(thing, property) {
      var named;
      if (property !== undefined) named = getAtom(thing, property);else if (isObservableObject(thing) || isObservableMap(thing)) named = getAdministration(thing);else named = getAtom(thing);
      return named.name;
    }
    function isComputed(value, property) {
      if (value === null || value === undefined) return false;
      if (property !== undefined) {
        if (isObservableObject(value) === false) return false;
        var atom = getAtom(value, property);
        return isComputedValue(atom);
      }
      return isComputedValue(value);
    }
    function observe(thing, propOrCb, cbOrFire, fireImmediately) {
      if (typeof cbOrFire === "function") return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);else return observeObservable(thing, propOrCb, cbOrFire);
    }
    function observeObservable(thing, listener, fireImmediately) {
      return getAdministration(thing).observe(listener, fireImmediately);
    }
    function observeObservableProperty(thing, property, listener, fireImmediately) {
      return getAdministration(thing, property).observe(listener, fireImmediately);
    }
    function intercept(thing, propOrHandler, handler) {
      if (typeof handler === "function") return interceptProperty(thing, propOrHandler, handler);else return interceptInterceptable(thing, propOrHandler);
    }
    function interceptInterceptable(thing, handler) {
      return getAdministration(thing).intercept(handler);
    }
    function interceptProperty(thing, property, handler) {
      return getAdministration(thing, property).intercept(handler);
    }
    function expr(expr, scope) {
      if (!isComputingDerivation()) console.warn(getMessage("m013"));
      return computed(expr, { context: scope }).get();
    }
    function toJS(source, detectCycles, __alreadySeen) {
      if (detectCycles === void 0) {
        detectCycles = true;
      }
      if (__alreadySeen === void 0) {
        __alreadySeen = [];
      }
      function cache(value) {
        if (detectCycles) __alreadySeen.push([source, value]);
        return value;
      }
      if (isObservable(source)) {
        if (detectCycles && __alreadySeen === null) __alreadySeen = [];
        if (detectCycles && source !== null && typeof source === "object") {
          for (var i = 0, l = __alreadySeen.length; i < l; i++) if (__alreadySeen[i][0] === source) return __alreadySeen[i][1];
        }
        if (isObservableArray(source)) {
          var res = cache([]);
          var toAdd = source.map(function (value) {
            return toJS(value, detectCycles, __alreadySeen);
          });
          res.length = toAdd.length;
          for (var i = 0, l = toAdd.length; i < l; i++) res[i] = toAdd[i];
          return res;
        }
        if (isObservableObject(source)) {
          var res = cache({});
          for (var key in source) res[key] = toJS(source[key], detectCycles, __alreadySeen);
          return res;
        }
        if (isObservableMap(source)) {
          var res_1 = cache({});
          source.forEach(function (value, key) {
            return res_1[key] = toJS(value, detectCycles, __alreadySeen);
          });
          return res_1;
        }
        if (isObservableValue(source)) return toJS(source.get(), detectCycles, __alreadySeen);
      }
      return source;
    }
    function createTransformer(transformer, onCleanup) {
      invariant(typeof transformer === "function" && transformer.length < 2, "createTransformer expects a function that accepts one argument");
      var objectCache = {};
      var resetId = globalState.resetId;
      var Transformer = function (_super) {
        __extends(Transformer, _super);
        function Transformer(sourceIdentifier, sourceObject) {
          var _this = _super.call(this, function () {
            return transformer(sourceObject);
          }, undefined, comparer.default, "Transformer-" + transformer.name + "-" + sourceIdentifier, undefined) || this;
          _this.sourceIdentifier = sourceIdentifier;
          _this.sourceObject = sourceObject;
          return _this;
        }
        Transformer.prototype.onBecomeUnobserved = function () {
          var lastValue = this.value;
          _super.prototype.onBecomeUnobserved.call(this);
          delete objectCache[this.sourceIdentifier];
          if (onCleanup) onCleanup(lastValue, this.sourceObject);
        };
        return Transformer;
      }(ComputedValue);
      return function (object) {
        if (resetId !== globalState.resetId) {
          objectCache = {};
          resetId = globalState.resetId;
        }
        var identifier = getMemoizationId(object);
        var reactiveTransformer = objectCache[identifier];
        if (reactiveTransformer) return reactiveTransformer.get();
        reactiveTransformer = objectCache[identifier] = new Transformer(identifier, object);
        return reactiveTransformer.get();
      };
    }
    function getMemoizationId(object) {
      if (typeof object === 'string' || typeof object === 'number') return object;
      if (object === null || typeof object !== "object") throw new Error("[mobx] transform expected some kind of object or primitive value, got: " + object);
      var tid = object.$transformId;
      if (tid === undefined) {
        tid = getNextId();
        addHiddenProp(object, "$transformId", tid);
      }
      return tid;
    }
    function log(msg) {
      console.log(msg);
      return msg;
    }
    function whyRun(thing, prop) {
      switch (arguments.length) {
        case 0:
          thing = globalState.trackingDerivation;
          if (!thing) return log(getMessage("m024"));
          break;
        case 2:
          thing = getAtom(thing, prop);
          break;
      }
      thing = getAtom(thing);
      if (isComputedValue(thing)) return log(thing.whyRun());else if (isReaction(thing)) return log(thing.whyRun());
      return fail(getMessage("m025"));
    }
    function getDependencyTree(thing, property) {
      return nodeToDependencyTree(getAtom(thing, property));
    }
    function nodeToDependencyTree(node) {
      var result = { name: node.name };
      if (node.observing && node.observing.length > 0) result.dependencies = unique(node.observing).map(nodeToDependencyTree);
      return result;
    }
    function getObserverTree(thing, property) {
      return nodeToObserverTree(getAtom(thing, property));
    }
    function nodeToObserverTree(node) {
      var result = { name: node.name };
      if (hasObservers(node)) result.observers = getObservers(node).map(nodeToObserverTree);
      return result;
    }
    function interceptReads(thing, propOrHandler, handler) {
      var target;
      if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
        target = getAdministration(thing);
      } else if (isObservableObject(thing)) {
        if (typeof propOrHandler !== "string") return fail("InterceptReads can only be used with a specific property, not with an object in general");
        target = getAdministration(thing, propOrHandler);
      } else {
        return fail("Expected observable map, object or array as first array");
      }
      if (target.dehancer !== undefined) return fail("An intercept reader was already established");
      target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
      return function () {
        target.dehancer = undefined;
      };
    }
    var extras = {
      allowStateChanges: allowStateChanges,
      deepEqual: deepEqual,
      getAtom: getAtom,
      getDebugName: getDebugName,
      getDependencyTree: getDependencyTree,
      getAdministration: getAdministration,
      getGlobalState: getGlobalState,
      getObserverTree: getObserverTree,
      interceptReads: interceptReads,
      isComputingDerivation: isComputingDerivation,
      isSpyEnabled: isSpyEnabled,
      onReactionError: onReactionError,
      reserveArrayBuffer: reserveArrayBuffer,
      resetGlobalState: resetGlobalState,
      isolateGlobalState: isolateGlobalState,
      shareGlobalState: shareGlobalState,
      spyReport: spyReport,
      spyReportEnd: spyReportEnd,
      spyReportStart: spyReportStart,
      setReactionScheduler: setReactionScheduler
    };
    var everything = {
      Reaction: Reaction,
      untracked: untracked,
      Atom: Atom,
      BaseAtom: BaseAtom,
      useStrict: useStrict,
      isStrictModeEnabled: isStrictModeEnabled,
      spy: spy,
      comparer: comparer,
      asReference: asReference,
      asFlat: asFlat,
      asStructure: asStructure,
      asMap: asMap,
      isModifierDescriptor: isModifierDescriptor,
      isObservableObject: isObservableObject,
      isBoxedObservable: isObservableValue,
      isObservableArray: isObservableArray,
      ObservableMap: ObservableMap,
      isObservableMap: isObservableMap,
      map: map,
      transaction: transaction,
      observable: observable,
      computed: computed,
      isObservable: isObservable,
      isComputed: isComputed,
      extendObservable: extendObservable,
      extendShallowObservable: extendShallowObservable,
      observe: observe,
      intercept: intercept,
      autorun: autorun,
      autorunAsync: autorunAsync,
      when: when,
      reaction: reaction,
      action: action,
      isAction: isAction,
      runInAction: runInAction,
      expr: expr,
      toJS: toJS,
      createTransformer: createTransformer,
      whyRun: whyRun,
      isArrayLike: isArrayLike,
      extras: extras
    };
    var warnedAboutDefaultExport = false;
    var _loop_1 = function (p) {
      var val = everything[p];
      Object.defineProperty(everything, p, { get: function () {
          if (!warnedAboutDefaultExport) {
            warnedAboutDefaultExport = true;
            console.warn('Using default export (`import mobx from \'mobx\'`) is deprecated ' + 'and won’t work in mobx@4.0.0\n' + 'Use `import * as mobx from \'mobx\'` instead');
          }
          return val;
        } });
    };
    for (var p in everything) {
      _loop_1(p);
    }
    if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
      __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
        spy: spy,
        extras: extras
      });
    }
    exports.extras = extras;
    exports['default'] = everything;
    exports.Reaction = Reaction;
    exports.untracked = untracked;
    exports.Atom = Atom;
    exports.BaseAtom = BaseAtom;
    exports.useStrict = useStrict;
    exports.isStrictModeEnabled = isStrictModeEnabled;
    exports.spy = spy;
    exports.comparer = comparer;
    exports.asReference = asReference;
    exports.asFlat = asFlat;
    exports.asStructure = asStructure;
    exports.asMap = asMap;
    exports.isModifierDescriptor = isModifierDescriptor;
    exports.isObservableObject = isObservableObject;
    exports.isBoxedObservable = isObservableValue;
    exports.isObservableArray = isObservableArray;
    exports.ObservableMap = ObservableMap;
    exports.isObservableMap = isObservableMap;
    exports.map = map;
    exports.transaction = transaction;
    exports.observable = observable;
    exports.IObservableFactories = IObservableFactories;
    exports.computed = computed;
    exports.isObservable = isObservable;
    exports.isComputed = isComputed;
    exports.extendObservable = extendObservable;
    exports.extendShallowObservable = extendShallowObservable;
    exports.observe = observe;
    exports.intercept = intercept;
    exports.autorun = autorun;
    exports.autorunAsync = autorunAsync;
    exports.when = when;
    exports.reaction = reaction;
    exports.action = action;
    exports.isAction = isAction;
    exports.runInAction = runInAction;
    exports.expr = expr;
    exports.toJS = toJS;
    exports.createTransformer = createTransformer;
    exports.whyRun = whyRun;
    exports.isArrayLike = isArrayLike;
  })($__require('16'));
});
$__System.registerDynamic("11", ["63"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("63");
});
$__System.registerDynamic('64', ['11', '1c', '4c'], true, function ($__require, exports, module) {
	/* */
	"format cjs";

	var global = this || self,
	    GLOBAL = global;
	(function webpackUniversalModuleDefinition(root, factory) {
		if (typeof exports === 'object' && typeof module === 'object') module.exports = factory($__require('11'), $__require('1c'), $__require('4c'));else if (typeof undefined === 'function' && define.amd) define(["mobx", "react", "react-dom"], factory);else if (typeof exports === 'object') exports["mobxReact"] = factory($__require('11'), $__require('1c'), $__require('4c'));else root["mobxReact"] = factory(root["mobx"], root["React"], root["ReactDOM"]);
	})(this, function (__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {
		return (/******/function (modules) {
				// webpackBootstrap
				/******/ // The module cache
				/******/var installedModules = {};

				/******/ // The require function
				/******/function __webpack_require__(moduleId) {

					/******/ // Check if module is in cache
					/******/if (installedModules[moduleId])
						/******/return installedModules[moduleId].exports;

					/******/ // Create a new module (and put it into the cache)
					/******/var module = installedModules[moduleId] = {
						/******/exports: {},
						/******/id: moduleId,
						/******/loaded: false
						/******/ };

					/******/ // Execute the module function
					/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

					/******/ // Flag the module as loaded
					/******/module.loaded = true;

					/******/ // Return the exports of the module
					/******/return module.exports;
					/******/
				}

				/******/ // expose the modules object (__webpack_modules__)
				/******/__webpack_require__.m = modules;

				/******/ // expose the module cache
				/******/__webpack_require__.c = installedModules;

				/******/ // __webpack_public_path__
				/******/__webpack_require__.p = "";

				/******/ // Load entry module and return exports
				/******/return __webpack_require__(0);
				/******/
			}(
			/************************************************************************/
			/******/[
			/* 0 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				exports.PropTypes = exports.propTypes = exports.inject = exports.Provider = exports.useStaticRendering = exports.trackComponents = exports.componentByNodeRegistery = exports.renderReporter = exports.Observer = exports.observer = undefined;

				var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
					return typeof obj;
				} : function (obj) {
					return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
				};

				var _observer = __webpack_require__(1);

				Object.defineProperty(exports, 'observer', {
					enumerable: true,
					get: function get() {
						return _observer.observer;
					}
				});
				Object.defineProperty(exports, 'Observer', {
					enumerable: true,
					get: function get() {
						return _observer.Observer;
					}
				});
				Object.defineProperty(exports, 'renderReporter', {
					enumerable: true,
					get: function get() {
						return _observer.renderReporter;
					}
				});
				Object.defineProperty(exports, 'componentByNodeRegistery', {
					enumerable: true,
					get: function get() {
						return _observer.componentByNodeRegistery;
					}
				});
				Object.defineProperty(exports, 'trackComponents', {
					enumerable: true,
					get: function get() {
						return _observer.trackComponents;
					}
				});
				Object.defineProperty(exports, 'useStaticRendering', {
					enumerable: true,
					get: function get() {
						return _observer.useStaticRendering;
					}
				});

				var _Provider = __webpack_require__(8);

				Object.defineProperty(exports, 'Provider', {
					enumerable: true,
					get: function get() {
						return _interopRequireDefault(_Provider).default;
					}
				});

				var _inject = __webpack_require__(6);

				Object.defineProperty(exports, 'inject', {
					enumerable: true,
					get: function get() {
						return _interopRequireDefault(_inject).default;
					}
				});

				var _mobx = __webpack_require__(2);

				var mobx = _interopRequireWildcard(_mobx);

				var _react = __webpack_require__(3);

				var _react2 = _interopRequireDefault(_react);

				var _reactDom = __webpack_require__(4);

				var _reactNative = __webpack_require__(9);

				var _propTypes = __webpack_require__(10);

				var propTypes = _interopRequireWildcard(_propTypes);

				function _interopRequireWildcard(obj) {
					if (obj && obj.__esModule) {
						return obj;
					} else {
						var newObj = {};if (obj != null) {
							for (var key in obj) {
								if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
							}
						}newObj.default = obj;return newObj;
					}
				}

				function _interopRequireDefault(obj) {
					return obj && obj.__esModule ? obj : { default: obj };
				}

				var TARGET_LIB_NAME = void 0;
				if (true) TARGET_LIB_NAME = 'mobx-react';
				if (false) TARGET_LIB_NAME = 'mobx-react/native';
				if (false) TARGET_LIB_NAME = 'mobx-react/custom';

				if (!mobx) throw new Error(TARGET_LIB_NAME + ' requires the MobX package');
				if (!_react2.default) throw new Error(TARGET_LIB_NAME + ' requires React to be available');

				if ("browser" === 'browser' && typeof _reactDom.unstable_batchedUpdates === "function") mobx.extras.setReactionScheduler(_reactDom.unstable_batchedUpdates);
				if (false) mobx.extras.setReactionScheduler(_reactNative.unstable_batchedUpdates);

				exports.propTypes = propTypes;
				exports.PropTypes = propTypes;
				exports.default = module.exports;

				/* DevTool support */

				if ((typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ? 'undefined' : _typeof(__MOBX_DEVTOOLS_GLOBAL_HOOK__)) === 'object') {
					__MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobxReact(module.exports, mobx);
				}

				/***/
			},
			/* 1 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				exports.Observer = exports.renderReporter = exports.componentByNodeRegistery = undefined;

				var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
					return typeof obj;
				} : function (obj) {
					return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
				};

				exports.trackComponents = trackComponents;
				exports.useStaticRendering = useStaticRendering;
				exports.observer = observer;

				var _mobx = __webpack_require__(2);

				var _mobx2 = _interopRequireDefault(_mobx);

				var _react = __webpack_require__(3);

				var _react2 = _interopRequireDefault(_react);

				var _reactDom = __webpack_require__(4);

				var _reactDom2 = _interopRequireDefault(_reactDom);

				var _EventEmitter = __webpack_require__(5);

				var _EventEmitter2 = _interopRequireDefault(_EventEmitter);

				var _inject = __webpack_require__(6);

				var _inject2 = _interopRequireDefault(_inject);

				function _interopRequireDefault(obj) {
					return obj && obj.__esModule ? obj : { default: obj };
				}

				/**
     * dev tool support
     */
				var isDevtoolsEnabled = false;

				var isUsingStaticRendering = false;

				var warnedAboutObserverInjectDeprecation = false;

				// WeakMap<Node, Object>;
				var componentByNodeRegistery = exports.componentByNodeRegistery = typeof WeakMap !== "undefined" ? new WeakMap() : undefined;
				var renderReporter = exports.renderReporter = new _EventEmitter2.default();

				function findDOMNode(component) {
					if (_reactDom2.default) return _reactDom2.default.findDOMNode(component);
					return null;
				}

				function reportRendering(component) {
					var node = findDOMNode(component);
					if (node && componentByNodeRegistery) componentByNodeRegistery.set(node, component);

					renderReporter.emit({
						event: 'render',
						renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,
						totalTime: Date.now() - component.__$mobRenderStart,
						component: component,
						node: node
					});
				}

				function trackComponents() {
					if (typeof WeakMap === "undefined") throw new Error("[mobx-react] tracking components is not supported in this browser.");
					if (!isDevtoolsEnabled) isDevtoolsEnabled = true;
				}

				function useStaticRendering(useStaticRendering) {
					isUsingStaticRendering = useStaticRendering;
				}

				/**
     * Utilities
     */

				function patch(target, funcName) {
					var runMixinFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

					var base = target[funcName];
					var mixinFunc = reactiveMixin[funcName];
					if (!base) {
						target[funcName] = mixinFunc;
					} else {
						target[funcName] = runMixinFirst === true ? function () {
							mixinFunc.apply(this, arguments);
							base.apply(this, arguments);
						} : function () {
							base.apply(this, arguments);
							mixinFunc.apply(this, arguments);
						};
					}
				}

				function isObjectShallowModified(prev, next) {
					if (null == prev || null == next || (typeof prev === 'undefined' ? 'undefined' : _typeof(prev)) !== "object" || (typeof next === 'undefined' ? 'undefined' : _typeof(next)) !== "object") {
						return prev !== next;
					}
					var keys = Object.keys(prev);
					if (keys.length !== Object.keys(next).length) {
						return true;
					}
					var key = void 0;
					for (var i = keys.length - 1; i >= 0, key = keys[i]; i--) {
						if (next[key] !== prev[key]) {
							return true;
						}
					}
					return false;
				}

				/**
     * ReactiveMixin
     */
				var reactiveMixin = {
					componentWillMount: function componentWillMount() {
						var _this = this;

						if (isUsingStaticRendering === true) return;
						// Generate friendly name for debugging
						var initialName = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || "<component>";
						var rootNodeID = this._reactInternalInstance && this._reactInternalInstance._rootNodeID;

						/**
       * If props are shallowly modified, react will render anyway,
       * so atom.reportChanged() should not result in yet another re-render
       */
						var skipRender = false;
						/**
       * forceUpdate will re-assign this.props. We don't want that to cause a loop,
       * so detect these changes
       */
						var isForcingUpdate = false;

						function makePropertyObservableReference(propName) {
							var valueHolder = this[propName];
							var atom = new _mobx2.default.Atom("reactive " + propName);
							Object.defineProperty(this, propName, {
								configurable: true, enumerable: true,
								get: function get() {
									atom.reportObserved();
									return valueHolder;
								},
								set: function set(v) {
									if (!isForcingUpdate && isObjectShallowModified(valueHolder, v)) {
										valueHolder = v;
										skipRender = true;
										atom.reportChanged();
										skipRender = false;
									} else {
										valueHolder = v;
									}
								}
							});
						}

						// make this.props an observable reference, see #124
						makePropertyObservableReference.call(this, "props");
						// make state an observable reference
						makePropertyObservableReference.call(this, "state");

						// wire up reactive render
						var baseRender = this.render.bind(this);
						var reaction = null;
						var isRenderingPending = false;

						var initialRender = function initialRender() {
							reaction = new _mobx2.default.Reaction(initialName + '#' + rootNodeID + '.render()', function () {
								if (!isRenderingPending) {
									// N.B. Getting here *before mounting* means that a component constructor has side effects (see the relevant test in misc.js)
									// This unidiomatic React usage but React will correctly warn about this so we continue as usual
									// See #85 / Pull #44
									isRenderingPending = true;
									if (typeof _this.componentWillReact === "function") _this.componentWillReact(); // TODO: wrap in action?
									if (_this.__$mobxIsUnmounted !== true) {
										// If we are unmounted at this point, componentWillReact() had a side effect causing the component to unmounted
										// TODO: remove this check? Then react will properly warn about the fact that this should not happen? See #73
										// However, people also claim this migth happen during unit tests..
										var hasError = true;
										try {
											isForcingUpdate = true;
											if (!skipRender) _react2.default.Component.prototype.forceUpdate.call(_this);
											hasError = false;
										} finally {
											isForcingUpdate = false;
											if (hasError) reaction.dispose();
										}
									}
								}
							});
							reactiveRender.$mobx = reaction;
							_this.render = reactiveRender;
							return reactiveRender();
						};

						var reactiveRender = function reactiveRender() {
							isRenderingPending = false;
							var rendering = undefined;
							reaction.track(function () {
								if (isDevtoolsEnabled) {
									_this.__$mobRenderStart = Date.now();
								}
								rendering = _mobx2.default.extras.allowStateChanges(false, baseRender);
								if (isDevtoolsEnabled) {
									_this.__$mobRenderEnd = Date.now();
								}
							});
							return rendering;
						};

						this.render = initialRender;
					},

					componentWillUnmount: function componentWillUnmount() {
						if (isUsingStaticRendering === true) return;
						this.render.$mobx && this.render.$mobx.dispose();
						this.__$mobxIsUnmounted = true;
						if (isDevtoolsEnabled) {
							var node = findDOMNode(this);
							if (node && componentByNodeRegistery) {
								componentByNodeRegistery.delete(node);
							}
							renderReporter.emit({
								event: 'destroy',
								component: this,
								node: node
							});
						}
					},

					componentDidMount: function componentDidMount() {
						if (isDevtoolsEnabled) {
							reportRendering(this);
						}
					},

					componentDidUpdate: function componentDidUpdate() {
						if (isDevtoolsEnabled) {
							reportRendering(this);
						}
					},

					shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
						if (isUsingStaticRendering) {
							console.warn("[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.");
						}
						// update on any state changes (as is the default)
						if (this.state !== nextState) {
							return true;
						}
						// update if props are shallowly not equal, inspired by PureRenderMixin
						// we could return just 'false' here, and avoid the `skipRender` checks etc
						// however, it is nicer if lifecycle events are triggered like usually,
						// so we return true here if props are shallowly modified.
						return isObjectShallowModified(this.props, nextProps);
					}
				};

				/**
     * Observer function / decorator
     */
				function observer(arg1, arg2) {
					if (typeof arg1 === "string") {
						throw new Error("Store names should be provided as array");
					}
					if (Array.isArray(arg1)) {
						// component needs stores
						if (!warnedAboutObserverInjectDeprecation) {
							warnedAboutObserverInjectDeprecation = true;
							console.warn('Mobx observer: Using observer to inject stores is deprecated since 4.0. Use `@inject("store1", "store2") @observer ComponentClass` or `inject("store1", "store2")(observer(componentClass))` instead of `@observer(["store1", "store2"]) ComponentClass`');
						}
						if (!arg2) {
							// invoked as decorator
							return function (componentClass) {
								return observer(arg1, componentClass);
							};
						} else {
							return _inject2.default.apply(null, arg1)(observer(arg2));
						}
					}
					var componentClass = arg1;

					if (componentClass.isMobxInjector === true) {
						console.warn('Mobx observer: You are trying to use \'observer\' on a component that already has \'inject\'. Please apply \'observer\' before applying \'inject\'');
					}

					// Stateless function component:
					// If it is function but doesn't seem to be a react class constructor,
					// wrap it to a react class automatically
					if (typeof componentClass === "function" && (!componentClass.prototype || !componentClass.prototype.render) && !componentClass.isReactClass && !_react2.default.Component.isPrototypeOf(componentClass)) {

						return observer(_react2.default.createClass({
							displayName: componentClass.displayName || componentClass.name,
							propTypes: componentClass.propTypes,
							contextTypes: componentClass.contextTypes,
							getDefaultProps: function getDefaultProps() {
								return componentClass.defaultProps;
							},
							render: function render() {
								return componentClass.call(this, this.props, this.context);
							}
						}));
					}

					if (!componentClass) {
						throw new Error("Please pass a valid component to 'observer'");
					}

					var target = componentClass.prototype || componentClass;
					mixinLifecycleEvents(target);
					componentClass.isMobXReactObserver = true;
					return componentClass;
				}

				function mixinLifecycleEvents(target) {
					patch(target, "componentWillMount", true);
					["componentDidMount", "componentWillUnmount", "componentDidUpdate"].forEach(function (funcName) {
						patch(target, funcName);
					});
					if (!target.shouldComponentUpdate) {
						target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;
					}
				}

				// TODO: support injection somehow as well?
				var Observer = exports.Observer = observer(function (_ref) {
					var children = _ref.children;
					return children();
				});

				Observer.propTypes = {
					children: _react2.default.PropTypes.func.isRequired
				};

				/***/
			},
			/* 2 */
			/***/function (module, exports) {

				module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

				/***/
			},
			/* 3 */
			/***/function (module, exports) {

				module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

				/***/
			},
			/* 4 */
			/***/function (module, exports) {

				module.exports = __WEBPACK_EXTERNAL_MODULE_4__;

				/***/
			},
			/* 5 */
			/***/function (module, exports) {

				"use strict";

				Object.defineProperty(exports, "__esModule", {
					value: true
				});

				var _createClass = function () {
					function defineProperties(target, props) {
						for (var i = 0; i < props.length; i++) {
							var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
						}
					}return function (Constructor, protoProps, staticProps) {
						if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
					};
				}();

				function _classCallCheck(instance, Constructor) {
					if (!(instance instanceof Constructor)) {
						throw new TypeError("Cannot call a class as a function");
					}
				}

				var EventEmitter = function () {
					function EventEmitter() {
						_classCallCheck(this, EventEmitter);

						this.listeners = [];
					}

					_createClass(EventEmitter, [{
						key: "on",
						value: function on(cb) {
							var _this = this;

							this.listeners.push(cb);
							return function () {
								var index = _this.listeners.indexOf(cb);
								if (index !== -1) _this.listeners.splice(index, 1);
							};
						}
					}, {
						key: "emit",
						value: function emit(data) {
							this.listeners.forEach(function (fn) {
								return fn(data);
							});
						}
					}]);

					return EventEmitter;
				}();

				exports.default = EventEmitter;

				/***/
			},
			/* 6 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				Object.defineProperty(exports, "__esModule", {
					value: true
				});

				var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
					return typeof obj;
				} : function (obj) {
					return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
				};

				exports.default = inject;

				var _react = __webpack_require__(3);

				var _react2 = _interopRequireDefault(_react);

				var _hoistNonReactStatics = __webpack_require__(7);

				var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

				var _observer = __webpack_require__(1);

				function _interopRequireDefault(obj) {
					return obj && obj.__esModule ? obj : { default: obj };
				}

				var injectorContextTypes = {
					mobxStores: _react.PropTypes.object
				};
				Object.seal(injectorContextTypes);

				var proxiedInjectorProps = {
					contextTypes: {
						get: function get() {
							return injectorContextTypes;
						},
						set: function set(_) {
							console.warn("Mobx Injector: you are trying to attach `contextTypes` on an component decorated with `inject` (or `observer`) HOC. Please specify the contextTypes on the wrapped component instead. It is accessible through the `wrappedComponent`");
						},
						configurable: true,
						enumerable: false
					},
					isMobxInjector: {
						value: true,
						writable: true,
						configurable: true,
						enumerable: true
					}
				};

				/**
     * Store Injection
     */
				function createStoreInjector(grabStoresFn, component, injectNames) {
					var displayName = "inject-" + (component.displayName || component.name || component.constructor && component.constructor.name || "Unknown");
					if (injectNames) displayName += "-with-" + injectNames;

					var Injector = _react2.default.createClass({
						displayName: displayName,
						storeRef: function storeRef(instance) {
							this.wrappedInstance = instance;
						},
						render: function render() {
							// Optimization: it might be more efficient to apply the mapper function *outside* the render method
							// (if the mapper is a function), that could avoid expensive(?) re-rendering of the injector component
							// See this test: 'using a custom injector is not too reactive' in inject.js
							var newProps = {};
							for (var key in this.props) {
								if (this.props.hasOwnProperty(key)) {
									newProps[key] = this.props[key];
								}
							}var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};
							for (var _key in additionalProps) {
								newProps[_key] = additionalProps[_key];
							}
							newProps.ref = this.storeRef;

							return _react2.default.createElement(component, newProps);
						}
					});

					// Static fields from component should be visible on the generated Injector
					(0, _hoistNonReactStatics2.default)(Injector, component);

					Injector.wrappedComponent = component;
					Object.defineProperties(Injector, proxiedInjectorProps);

					return Injector;
				}

				function grabStoresByName(storeNames) {
					return function (baseStores, nextProps) {
						storeNames.forEach(function (storeName) {
							if (storeName in nextProps) // prefer props over stores
								return;
							if (!(storeName in baseStores)) throw new Error("MobX observer: Store '" + storeName + "' is not available! Make sure it is provided by some Provider");
							nextProps[storeName] = baseStores[storeName];
						});
						return nextProps;
					};
				}

				/**
     * higher order component that injects stores to a child.
     * takes either a varargs list of strings, which are stores read from the context,
     * or a function that manually maps the available stores from the context to props:
     * storesToProps(mobxStores, props, context) => newProps
     */
				function inject() /* fn(stores, nextProps) or ...storeNames */{
					var _arguments = arguments;

					var grabStoresFn = void 0;
					if (typeof arguments[0] === "function") {
						grabStoresFn = arguments[0];
						return function (componentClass) {
							var injected = createStoreInjector(grabStoresFn, componentClass);
							injected.isMobxInjector = false; // supress warning
							// mark the Injector as observer, to make it react to expressions in `grabStoresFn`,
							// see #111
							injected = (0, _observer.observer)(injected);
							injected.isMobxInjector = true; // restore warning
							return injected;
						};
					} else {
						var _ret = function () {
							var storeNames = [];
							for (var i = 0; i < _arguments.length; i++) {
								storeNames[i] = _arguments[i];
							}grabStoresFn = grabStoresByName(storeNames);
							return {
								v: function v(componentClass) {
									return createStoreInjector(grabStoresFn, componentClass, storeNames.join("-"));
								}
							};
						}();

						if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
					}
				}

				/***/
			},
			/* 7 */
			/***/function (module, exports) {

				/**
     * Copyright 2015, Yahoo! Inc.
     * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
     */
				'use strict';

				var REACT_STATICS = {
					childContextTypes: true,
					contextTypes: true,
					defaultProps: true,
					displayName: true,
					getDefaultProps: true,
					mixins: true,
					propTypes: true,
					type: true
				};

				var KNOWN_STATICS = {
					name: true,
					length: true,
					prototype: true,
					caller: true,
					arguments: true,
					arity: true
				};

				var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

				module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
					if (typeof sourceComponent !== 'string') {
						// don't hoist over string (html) components
						var keys = Object.getOwnPropertyNames(sourceComponent);

						/* istanbul ignore else */
						if (isGetOwnPropertySymbolsAvailable) {
							keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
						}

						for (var i = 0; i < keys.length; ++i) {
							if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
								try {
									targetComponent[keys[i]] = sourceComponent[keys[i]];
								} catch (error) {}
							}
						}
					}

					return targetComponent;
				};

				/***/
			},
			/* 8 */
			/***/function (module, exports, __webpack_require__) {

				"use strict";

				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				exports.default = undefined;

				var _createClass = function () {
					function defineProperties(target, props) {
						for (var i = 0; i < props.length; i++) {
							var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
						}
					}return function (Constructor, protoProps, staticProps) {
						if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
					};
				}();

				var _class, _temp;

				var _react = __webpack_require__(3);

				var _react2 = _interopRequireDefault(_react);

				function _interopRequireDefault(obj) {
					return obj && obj.__esModule ? obj : { default: obj };
				}

				function _classCallCheck(instance, Constructor) {
					if (!(instance instanceof Constructor)) {
						throw new TypeError("Cannot call a class as a function");
					}
				}

				function _possibleConstructorReturn(self, call) {
					if (!self) {
						throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
					}return call && (typeof call === "object" || typeof call === "function") ? call : self;
				}

				function _inherits(subClass, superClass) {
					if (typeof superClass !== "function" && superClass !== null) {
						throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
					}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
				}

				var specialReactKeys = { children: true, key: true, ref: true };

				var Provider = (_temp = _class = function (_Component) {
					_inherits(Provider, _Component);

					function Provider() {
						_classCallCheck(this, Provider);

						return _possibleConstructorReturn(this, (Provider.__proto__ || Object.getPrototypeOf(Provider)).apply(this, arguments));
					}

					_createClass(Provider, [{
						key: "render",
						value: function render() {
							return _react2.default.Children.only(this.props.children);
						}
					}, {
						key: "getChildContext",
						value: function getChildContext() {
							var stores = {};
							// inherit stores
							var baseStores = this.context.mobxStores;
							if (baseStores) for (var key in baseStores) {
								stores[key] = baseStores[key];
							}
							// add own stores
							for (var _key in this.props) {
								if (!specialReactKeys[_key] && _key !== "suppressChangedStoreWarning") stores[_key] = this.props[_key];
							}return {
								mobxStores: stores
							};
						}
					}, {
						key: "componentWillReceiveProps",
						value: function componentWillReceiveProps(nextProps) {
							// Maybe this warning is too aggressive?
							if (Object.keys(nextProps).length !== Object.keys(this.props).length) console.warn("MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children");
							if (!nextProps.suppressChangedStoreWarning) for (var key in nextProps) {
								if (!specialReactKeys[key] && this.props[key] !== nextProps[key]) console.warn("MobX Provider: Provided store '" + key + "' has changed. Please avoid replacing stores as the change might not propagate to all children");
							}
						}
					}]);

					return Provider;
				}(_react.Component), _class.contextTypes = {
					mobxStores: _react.PropTypes.object
				}, _class.childContextTypes = {
					mobxStores: _react.PropTypes.object.isRequired
				}, _temp);
				exports.default = Provider;

				/***/
			},
			/* 9 */
			/***/function (module, exports) {

				module.exports = null;

				/***/
			},
			/* 10 */
			/***/function (module, exports, __webpack_require__) {

				'use strict';

				Object.defineProperty(exports, "__esModule", {
					value: true
				});
				exports.objectOrObservableObject = exports.arrayOrObservableArrayOf = exports.arrayOrObservableArray = exports.observableObject = exports.observableMap = exports.observableArrayOf = exports.observableArray = undefined;

				var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
					return typeof obj;
				} : function (obj) {
					return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
				};

				var _mobx = __webpack_require__(2);

				// Copied from React.PropTypes
				function createChainableTypeChecker(validate) {
					function checkType(isRequired, props, propName, componentName, location, propFullName) {
						for (var _len = arguments.length, rest = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
							rest[_key - 6] = arguments[_key];
						}

						return (0, _mobx.untracked)(function () {
							componentName = componentName || '<<anonymous>>';
							propFullName = propFullName || propName;
							if (props[propName] == null) {
								if (isRequired) {
									var actual = props[propName] === null ? 'null' : 'undefined';
									return new Error('The ' + location + ' `' + propFullName + '` is marked as required ' + 'in `' + componentName + '`, but its value is `' + actual + '`.');
								}
								return null;
							} else {
								return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));
							}
						});
					}

					var chainedCheckType = checkType.bind(null, false);
					chainedCheckType.isRequired = checkType.bind(null, true);
					return chainedCheckType;
				}

				// Copied from React.PropTypes
				function isSymbol(propType, propValue) {
					// Native Symbol.
					if (propType === 'symbol') {
						return true;
					}

					// 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
					if (propValue['@@toStringTag'] === 'Symbol') {
						return true;
					}

					// Fallback for non-spec compliant Symbols which are polyfilled.
					if (typeof Symbol === 'function' && propValue instanceof Symbol) {
						return true;
					}

					return false;
				}

				// Copied from React.PropTypes
				function getPropType(propValue) {
					var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
					if (Array.isArray(propValue)) {
						return 'array';
					}
					if (propValue instanceof RegExp) {
						// Old webkits (at least until Android 4.0) return 'function' rather than
						// 'object' for typeof a RegExp. We'll normalize this here so that /bla/
						// passes PropTypes.object.
						return 'object';
					}
					if (isSymbol(propType, propValue)) {
						return 'symbol';
					}
					return propType;
				}

				// This handles more types than `getPropType`. Only used for error messages.
				// Copied from React.PropTypes
				function getPreciseType(propValue) {
					var propType = getPropType(propValue);
					if (propType === 'object') {
						if (propValue instanceof Date) {
							return 'date';
						} else if (propValue instanceof RegExp) {
							return 'regexp';
						}
					}
					return propType;
				}

				function createObservableTypeCheckerCreator(allowNativeType, mobxType) {
					return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
						return (0, _mobx.untracked)(function () {
							if (allowNativeType) {
								if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;
							}
							var mobxChecker = void 0;
							switch (mobxType) {
								case 'Array':
									mobxChecker = _mobx.isObservableArray;break;
								case 'Object':
									mobxChecker = _mobx.isObservableObject;break;
								case 'Map':
									mobxChecker = _mobx.isObservableMap;break;
								default:
									throw new Error('Unexpected mobxType: ' + mobxType);
							}
							var propValue = props[propName];
							if (!mobxChecker(propValue)) {
								var preciseType = getPreciseType(propValue);
								var nativeTypeExpectationMessage = allowNativeType ? ' or javascript `' + mobxType.toLowerCase() + '`' : '';
								return new Error('Invalid prop `' + propFullName + '` of type `' + preciseType + '` supplied to' + ' `' + componentName + '`, expected `mobx.Observable' + mobxType + '`' + nativeTypeExpectationMessage + '.');
							}
							return null;
						});
					});
				}

				function createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {
					return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
						for (var _len2 = arguments.length, rest = Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {
							rest[_key2 - 5] = arguments[_key2];
						}

						return (0, _mobx.untracked)(function () {
							if (typeof typeChecker !== 'function') {
								return new Error('Property `' + propFullName + '` of component `' + componentName + '` has ' + 'invalid PropType notation.');
							}
							var error = createObservableTypeCheckerCreator(allowNativeType, 'Array')(props, propName, componentName);
							if (error instanceof Error) return error;
							var propValue = props[propName];
							for (var i = 0; i < propValue.length; i++) {
								error = typeChecker.apply(undefined, [propValue, i, componentName, location, propFullName + '[' + i + ']'].concat(rest));
								if (error instanceof Error) return error;
							}
							return null;
						});
					});
				}

				var observableArray = exports.observableArray = createObservableTypeCheckerCreator(false, 'Array');
				var observableArrayOf = exports.observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false);
				var observableMap = exports.observableMap = createObservableTypeCheckerCreator(false, 'Map');
				var observableObject = exports.observableObject = createObservableTypeCheckerCreator(false, 'Object');
				var arrayOrObservableArray = exports.arrayOrObservableArray = createObservableTypeCheckerCreator(true, 'Array');
				var arrayOrObservableArrayOf = exports.arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true);
				var objectOrObservableObject = exports.objectOrObservableObject = createObservableTypeCheckerCreator(true, 'Object');

				/***/
			}
			/******/])
		);
	});
	;
});
$__System.registerDynamic("1d", ["64"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("64");
});
$__System.registerDynamic('65', ['67', '68', '69', '6a', '1c', '66'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _PanelGroup = $__require('66');
  var _PanelGroup2 = _interopRequireDefault(_PanelGroup);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var Accordion = function (_React$Component) {
    (0, _inherits3['default'])(Accordion, _React$Component);
    function Accordion() {
      (0, _classCallCheck3['default'])(this, Accordion);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Accordion.prototype.render = function render() {
      return _react2['default'].createElement(_PanelGroup2['default'], (0, _extends3['default'])({}, this.props, { accordion: true }), this.props.children);
    };
    return Accordion;
  }(_react2['default'].Component);
  exports['default'] = Accordion;
  module.exports = exports['default'];
});
$__System.registerDynamic('6b', ['70', '67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '6d', '6e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  var _CloseButton = $__require('6e');
  var _CloseButton2 = _interopRequireDefault(_CloseButton);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    onDismiss: _propTypes2['default'].func,
    closeLabel: _propTypes2['default'].string
  };
  var defaultProps = { closeLabel: 'Close alert' };
  var Alert = function (_React$Component) {
    (0, _inherits3['default'])(Alert, _React$Component);
    function Alert() {
      (0, _classCallCheck3['default'])(this, Alert);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Alert.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          onDismiss = _props.onDismiss,
          closeLabel = _props.closeLabel,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['onDismiss', 'closeLabel', 'className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var dismissable = !!onDismiss;
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'dismissable')] = dismissable, _extends2));
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
        role: 'alert',
        className: (0, _classnames2['default'])(className, classes)
      }), dismissable && _react2['default'].createElement(_CloseButton2['default'], {
        onClick: onDismiss,
        label: closeLabel
      }), children);
    };
    return Alert;
  }(_react2['default'].Component);
  Alert.propTypes = propTypes;
  Alert.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsStyles)((0, _values2['default'])(_StyleConfig.State), _StyleConfig.State.INFO, (0, _bootstrapUtils.bsClass)('alert', Alert));
  module.exports = exports['default'];
});
$__System.registerDynamic('72', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { pullRight: _propTypes2['default'].bool };
  var defaultProps = { pullRight: false };
  var Badge = function (_React$Component) {
    (0, _inherits3['default'])(Badge, _React$Component);
    function Badge() {
      (0, _classCallCheck3['default'])(this, Badge);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Badge.prototype.hasContent = function hasContent(children) {
      var result = false;
      _react2['default'].Children.forEach(children, function (child) {
        if (result) {
          return;
        }
        if (child || child === 0) {
          result = true;
        }
      });
      return result;
    };
    Badge.prototype.render = function render() {
      var _props = this.props,
          pullRight = _props.pullRight,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['pullRight', 'className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), {
        'pull-right': pullRight,
        hidden: !this.hasContent(children)
      });
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), children);
    };
    return Badge;
  }(_react2['default'].Component);
  Badge.propTypes = propTypes;
  Badge.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('badge', Badge);
  module.exports = exports['default'];
});
$__System.registerDynamic('73', ['67', '71', '68', '69', '6a', '6f', '1c', '74', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _BreadcrumbItem = $__require('74');
  var _BreadcrumbItem2 = _interopRequireDefault(_BreadcrumbItem);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var Breadcrumb = function (_React$Component) {
    (0, _inherits3['default'])(Breadcrumb, _React$Component);
    function Breadcrumb() {
      (0, _classCallCheck3['default'])(this, Breadcrumb);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Breadcrumb.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('ol', (0, _extends3['default'])({}, elementProps, {
        role: 'navigation',
        'aria-label': 'breadcrumbs',
        className: (0, _classnames2['default'])(className, classes)
      }));
    };
    return Breadcrumb;
  }(_react2['default'].Component);
  Breadcrumb.Item = _BreadcrumbItem2['default'];
  exports['default'] = (0, _bootstrapUtils.bsClass)('breadcrumb', Breadcrumb);
  module.exports = exports['default'];
});
$__System.registerDynamic('74', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '75'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    active: _propTypes2['default'].bool,
    href: _propTypes2['default'].string,
    title: _propTypes2['default'].node,
    target: _propTypes2['default'].string
  };
  var defaultProps = { active: false };
  var BreadcrumbItem = function (_React$Component) {
    (0, _inherits3['default'])(BreadcrumbItem, _React$Component);
    function BreadcrumbItem() {
      (0, _classCallCheck3['default'])(this, BreadcrumbItem);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    BreadcrumbItem.prototype.render = function render() {
      var _props = this.props,
          active = _props.active,
          href = _props.href,
          title = _props.title,
          target = _props.target,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'href', 'title', 'target', 'className']);
      var linkProps = {
        href: href,
        title: title,
        target: target
      };
      return _react2['default'].createElement('li', { className: (0, _classnames2['default'])(className, { active: active }) }, active ? _react2['default'].createElement('span', props) : _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, props, linkProps)));
    };
    return BreadcrumbItem;
  }(_react2['default'].Component);
  BreadcrumbItem.propTypes = propTypes;
  BreadcrumbItem.defaultProps = defaultProps;
  exports['default'] = BreadcrumbItem;
  module.exports = exports['default'];
});
$__System.registerDynamic('76', ['67', '71', '68', '69', '6a', '6f', '1c', '77', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _Button = $__require('77');
  var _Button2 = _interopRequireDefault(_Button);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var ButtonToolbar = function (_React$Component) {
    (0, _inherits3['default'])(ButtonToolbar, _React$Component);
    function ButtonToolbar() {
      (0, _classCallCheck3['default'])(this, ButtonToolbar);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ButtonToolbar.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, {
        role: 'toolbar',
        className: (0, _classnames2['default'])(className, classes)
      }));
    };
    return ButtonToolbar;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('btn-toolbar', (0, _bootstrapUtils.bsSizes)(_Button2['default'].SIZES, ButtonToolbar));
  module.exports = exports['default'];
});
$__System.registerDynamic('78', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var CarouselCaption = function (_React$Component) {
    (0, _inherits3['default'])(CarouselCaption, _React$Component);
    function CarouselCaption() {
      (0, _classCallCheck3['default'])(this, CarouselCaption);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    CarouselCaption.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return CarouselCaption;
  }(_react2['default'].Component);
  CarouselCaption.propTypes = propTypes;
  CarouselCaption.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('carousel-caption', CarouselCaption);
  module.exports = exports['default'];
});
$__System.registerDynamic('7a', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '78', '7b', '7c', '75', '6c', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _CarouselCaption = $__require('78');
  var _CarouselCaption2 = _interopRequireDefault(_CarouselCaption);
  var _CarouselItem = $__require('7b');
  var _CarouselItem2 = _interopRequireDefault(_CarouselItem);
  var _Glyphicon = $__require('7c');
  var _Glyphicon2 = _interopRequireDefault(_Glyphicon);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _bootstrapUtils = $__require('6c');
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    slide: _propTypes2['default'].bool,
    indicators: _propTypes2['default'].bool,
    interval: _propTypes2['default'].number,
    controls: _propTypes2['default'].bool,
    pauseOnHover: _propTypes2['default'].bool,
    wrap: _propTypes2['default'].bool,
    onSelect: _propTypes2['default'].func,
    onSlideEnd: _propTypes2['default'].func,
    activeIndex: _propTypes2['default'].number,
    defaultActiveIndex: _propTypes2['default'].number,
    direction: _propTypes2['default'].oneOf(['prev', 'next']),
    prevIcon: _propTypes2['default'].node,
    prevLabel: _propTypes2['default'].string,
    nextIcon: _propTypes2['default'].node,
    nextLabel: _propTypes2['default'].string
  };
  var defaultProps = {
    slide: true,
    interval: 5000,
    pauseOnHover: true,
    wrap: true,
    indicators: true,
    controls: true,
    prevIcon: _react2['default'].createElement(_Glyphicon2['default'], { glyph: 'chevron-left' }),
    prevLabel: 'Previous',
    nextIcon: _react2['default'].createElement(_Glyphicon2['default'], { glyph: 'chevron-right' }),
    nextLabel: 'Next'
  };
  var Carousel = function (_React$Component) {
    (0, _inherits3['default'])(Carousel, _React$Component);
    function Carousel(props, context) {
      (0, _classCallCheck3['default'])(this, Carousel);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleMouseOver = _this.handleMouseOver.bind(_this);
      _this.handleMouseOut = _this.handleMouseOut.bind(_this);
      _this.handlePrev = _this.handlePrev.bind(_this);
      _this.handleNext = _this.handleNext.bind(_this);
      _this.handleItemAnimateOutEnd = _this.handleItemAnimateOutEnd.bind(_this);
      var defaultActiveIndex = props.defaultActiveIndex;
      _this.state = {
        activeIndex: defaultActiveIndex != null ? defaultActiveIndex : 0,
        previousActiveIndex: null,
        direction: null
      };
      _this.isUnmounted = false;
      return _this;
    }
    Carousel.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var activeIndex = this.getActiveIndex();
      if (nextProps.activeIndex != null && nextProps.activeIndex !== activeIndex) {
        clearTimeout(this.timeout);
        this.setState({
          previousActiveIndex: activeIndex,
          direction: nextProps.direction != null ? nextProps.direction : this.getDirection(activeIndex, nextProps.activeIndex)
        });
      }
    };
    Carousel.prototype.componentDidMount = function componentDidMount() {
      this.waitForNext();
    };
    Carousel.prototype.componentWillUnmount = function componentWillUnmount() {
      clearTimeout(this.timeout);
      this.isUnmounted = true;
    };
    Carousel.prototype.handleMouseOver = function handleMouseOver() {
      if (this.props.pauseOnHover) {
        this.pause();
      }
    };
    Carousel.prototype.handleMouseOut = function handleMouseOut() {
      if (this.isPaused) {
        this.play();
      }
    };
    Carousel.prototype.handlePrev = function handlePrev(e) {
      var index = this.getActiveIndex() - 1;
      if (index < 0) {
        if (!this.props.wrap) {
          return;
        }
        index = _ValidComponentChildren2['default'].count(this.props.children) - 1;
      }
      this.select(index, e, 'prev');
    };
    Carousel.prototype.handleNext = function handleNext(e) {
      var index = this.getActiveIndex() + 1;
      var count = _ValidComponentChildren2['default'].count(this.props.children);
      if (index > count - 1) {
        if (!this.props.wrap) {
          return;
        }
        index = 0;
      }
      this.select(index, e, 'next');
    };
    Carousel.prototype.handleItemAnimateOutEnd = function handleItemAnimateOutEnd() {
      var _this2 = this;
      this.setState({
        previousActiveIndex: null,
        direction: null
      }, function () {
        _this2.waitForNext();
        if (_this2.props.onSlideEnd) {
          _this2.props.onSlideEnd();
        }
      });
    };
    Carousel.prototype.getActiveIndex = function getActiveIndex() {
      var activeIndexProp = this.props.activeIndex;
      return activeIndexProp != null ? activeIndexProp : this.state.activeIndex;
    };
    Carousel.prototype.getDirection = function getDirection(prevIndex, index) {
      if (prevIndex === index) {
        return null;
      }
      return prevIndex > index ? 'prev' : 'next';
    };
    Carousel.prototype.select = function select(index, e, direction) {
      clearTimeout(this.timeout);
      if (this.isUnmounted) {
        return;
      }
      var previousActiveIndex = this.props.slide ? this.getActiveIndex() : null;
      direction = direction || this.getDirection(previousActiveIndex, index);
      var onSelect = this.props.onSelect;
      if (onSelect) {
        if (onSelect.length > 1) {
          if (e) {
            e.persist();
            e.direction = direction;
          } else {
            e = { direction: direction };
          }
          onSelect(index, e);
        } else {
          onSelect(index);
        }
      }
      if (this.props.activeIndex == null && index !== previousActiveIndex) {
        if (this.state.previousActiveIndex != null) {
          return;
        }
        this.setState({
          activeIndex: index,
          previousActiveIndex: previousActiveIndex,
          direction: direction
        });
      }
    };
    Carousel.prototype.waitForNext = function waitForNext() {
      var _props = this.props,
          slide = _props.slide,
          interval = _props.interval,
          activeIndexProp = _props.activeIndex;
      if (!this.isPaused && slide && interval && activeIndexProp == null) {
        this.timeout = setTimeout(this.handleNext, interval);
      }
    };
    Carousel.prototype.pause = function pause() {
      this.isPaused = true;
      clearTimeout(this.timeout);
    };
    Carousel.prototype.play = function play() {
      this.isPaused = false;
      this.waitForNext();
    };
    Carousel.prototype.renderIndicators = function renderIndicators(children, activeIndex, bsProps) {
      var _this3 = this;
      var indicators = [];
      _ValidComponentChildren2['default'].forEach(children, function (child, index) {
        indicators.push(_react2['default'].createElement('li', {
          key: index,
          className: index === activeIndex ? 'active' : null,
          onClick: function onClick(e) {
            return _this3.select(index, e);
          }
        }), ' ');
      });
      return _react2['default'].createElement('ol', { className: (0, _bootstrapUtils.prefix)(bsProps, 'indicators') }, indicators);
    };
    Carousel.prototype.renderControls = function renderControls(properties) {
      var wrap = properties.wrap,
          children = properties.children,
          activeIndex = properties.activeIndex,
          prevIcon = properties.prevIcon,
          nextIcon = properties.nextIcon,
          bsProps = properties.bsProps,
          prevLabel = properties.prevLabel,
          nextLabel = properties.nextLabel;
      var controlClassName = (0, _bootstrapUtils.prefix)(bsProps, 'control');
      var count = _ValidComponentChildren2['default'].count(children);
      return [(wrap || activeIndex !== 0) && _react2['default'].createElement(_SafeAnchor2['default'], {
        key: 'prev',
        className: (0, _classnames2['default'])(controlClassName, 'left'),
        onClick: this.handlePrev
      }, prevIcon, prevLabel && _react2['default'].createElement('span', { className: 'sr-only' }, prevLabel)), (wrap || activeIndex !== count - 1) && _react2['default'].createElement(_SafeAnchor2['default'], {
        key: 'next',
        className: (0, _classnames2['default'])(controlClassName, 'right'),
        onClick: this.handleNext
      }, nextIcon, nextLabel && _react2['default'].createElement('span', { className: 'sr-only' }, nextLabel))];
    };
    Carousel.prototype.render = function render() {
      var _this4 = this;
      var _props2 = this.props,
          slide = _props2.slide,
          indicators = _props2.indicators,
          controls = _props2.controls,
          wrap = _props2.wrap,
          prevIcon = _props2.prevIcon,
          prevLabel = _props2.prevLabel,
          nextIcon = _props2.nextIcon,
          nextLabel = _props2.nextLabel,
          className = _props2.className,
          children = _props2.children,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['slide', 'indicators', 'controls', 'wrap', 'prevIcon', 'prevLabel', 'nextIcon', 'nextLabel', 'className', 'children']);
      var _state = this.state,
          previousActiveIndex = _state.previousActiveIndex,
          direction = _state.direction;
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['interval', 'pauseOnHover', 'onSelect', 'onSlideEnd', 'activeIndex', 'defaultActiveIndex', 'direction']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      var activeIndex = this.getActiveIndex();
      var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { slide: slide });
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, {
        className: (0, _classnames2['default'])(className, classes),
        onMouseOver: this.handleMouseOver,
        onMouseOut: this.handleMouseOut
      }), indicators && this.renderIndicators(children, activeIndex, bsProps), _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'inner') }, _ValidComponentChildren2['default'].map(children, function (child, index) {
        var active = index === activeIndex;
        var previousActive = slide && index === previousActiveIndex;
        return (0, _react.cloneElement)(child, {
          active: active,
          index: index,
          animateOut: previousActive,
          animateIn: active && previousActiveIndex != null && slide,
          direction: direction,
          onAnimateOutEnd: previousActive ? _this4.handleItemAnimateOutEnd : null
        });
      })), controls && this.renderControls({
        wrap: wrap,
        children: children,
        activeIndex: activeIndex,
        prevIcon: prevIcon,
        prevLabel: prevLabel,
        nextIcon: nextIcon,
        nextLabel: nextLabel,
        bsProps: bsProps
      }));
    };
    return Carousel;
  }(_react2['default'].Component);
  Carousel.propTypes = propTypes;
  Carousel.defaultProps = defaultProps;
  Carousel.Caption = _CarouselCaption2['default'];
  Carousel.Item = _CarouselItem2['default'];
  exports['default'] = (0, _bootstrapUtils.bsClass)('carousel', Carousel);
  module.exports = exports['default'];
});
$__System.registerDynamic('7e', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  /**
   * Copyright 2013-2014, Facebook, Inc.
   * All rights reserved.
   *
   * This file contains a modified version of:
   * https://github.com/facebook/react/blob/v0.12.0/src/addons/transitions/ReactTransitionEvents.js
   *
   * This source code is licensed under the BSD-style license found here:
   * https://github.com/facebook/react/blob/v0.12.0/LICENSE
   * An additional grant of patent rights can be found here:
   * https://github.com/facebook/react/blob/v0.12.0/PATENTS
   */

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * EVENT_NAME_MAP is used to determine which event fired when a
   * transition/animation ends, based on the style property used to
   * define that event.
   */
  var EVENT_NAME_MAP = {
    transitionend: {
      'transition': 'transitionend',
      'WebkitTransition': 'webkitTransitionEnd',
      'MozTransition': 'mozTransitionEnd',
      'OTransition': 'oTransitionEnd',
      'msTransition': 'MSTransitionEnd'
    },

    animationend: {
      'animation': 'animationend',
      'WebkitAnimation': 'webkitAnimationEnd',
      'MozAnimation': 'mozAnimationEnd',
      'OAnimation': 'oAnimationEnd',
      'msAnimation': 'MSAnimationEnd'
    }
  };

  var endEvents = [];

  function detectEvents() {
    var testEl = document.createElement('div');
    var style = testEl.style;

    // On some platforms, in particular some releases of Android 4.x,
    // the un-prefixed "animation" and "transition" properties are defined on the
    // style object but the events that fire will still be prefixed, so we need
    // to check if the un-prefixed events are useable, and if not remove them
    // from the map
    if (!('AnimationEvent' in window)) {
      delete EVENT_NAME_MAP.animationend.animation;
    }

    if (!('TransitionEvent' in window)) {
      delete EVENT_NAME_MAP.transitionend.transition;
    }

    for (var baseEventName in EVENT_NAME_MAP) {
      // eslint-disable-line guard-for-in
      var baseEvents = EVENT_NAME_MAP[baseEventName];
      for (var styleName in baseEvents) {
        if (styleName in style) {
          endEvents.push(baseEvents[styleName]);
          break;
        }
      }
    }
  }

  if (canUseDOM) {
    detectEvents();
  }

  // We use the raw {add|remove}EventListener() call because EventListener
  // does not know how to remove event listeners and we really should
  // clean up. Also, these events are not triggered in older browsers
  // so we should be A-OK here.

  function addEventListener(node, eventName, eventListener) {
    node.addEventListener(eventName, eventListener, false);
  }

  function removeEventListener(node, eventName, eventListener) {
    node.removeEventListener(eventName, eventListener, false);
  }

  var ReactTransitionEvents = {
    addEndEventListener: function addEndEventListener(node, eventListener) {
      if (endEvents.length === 0) {
        // If CSS transitions are not supported, trigger an "end animation"
        // event immediately.
        window.setTimeout(eventListener, 0);
        return;
      }
      endEvents.forEach(function (endEvent) {
        addEventListener(node, endEvent, eventListener);
      });
    },
    removeEndEventListener: function removeEndEventListener(node, eventListener) {
      if (endEvents.length === 0) {
        return;
      }
      endEvents.forEach(function (endEvent) {
        removeEventListener(node, endEvent, eventListener);
      });
    }
  };

  exports['default'] = ReactTransitionEvents;
  module.exports = exports['default'];
});
$__System.registerDynamic('7b', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '4c', '7e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require('4c');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _TransitionEvents = $__require('7e');
  var _TransitionEvents2 = _interopRequireDefault(_TransitionEvents);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    direction: _propTypes2['default'].oneOf(['prev', 'next']),
    onAnimateOutEnd: _propTypes2['default'].func,
    active: _propTypes2['default'].bool,
    animateIn: _propTypes2['default'].bool,
    animateOut: _propTypes2['default'].bool,
    index: _propTypes2['default'].number
  };
  var defaultProps = {
    active: false,
    animateIn: false,
    animateOut: false
  };
  var CarouselItem = function (_React$Component) {
    (0, _inherits3['default'])(CarouselItem, _React$Component);
    function CarouselItem(props, context) {
      (0, _classCallCheck3['default'])(this, CarouselItem);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleAnimateOutEnd = _this.handleAnimateOutEnd.bind(_this);
      _this.state = { direction: null };
      _this.isUnmounted = false;
      return _this;
    }
    CarouselItem.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.active !== nextProps.active) {
        this.setState({ direction: null });
      }
    };
    CarouselItem.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
      var _this2 = this;
      var active = this.props.active;
      var prevActive = prevProps.active;
      if (!active && prevActive) {
        _TransitionEvents2['default'].addEndEventListener(_reactDom2['default'].findDOMNode(this), this.handleAnimateOutEnd);
      }
      if (active !== prevActive) {
        setTimeout(function () {
          return _this2.startAnimation();
        }, 20);
      }
    };
    CarouselItem.prototype.componentWillUnmount = function componentWillUnmount() {
      this.isUnmounted = true;
    };
    CarouselItem.prototype.handleAnimateOutEnd = function handleAnimateOutEnd() {
      if (this.isUnmounted) {
        return;
      }
      if (this.props.onAnimateOutEnd) {
        this.props.onAnimateOutEnd(this.props.index);
      }
    };
    CarouselItem.prototype.startAnimation = function startAnimation() {
      if (this.isUnmounted) {
        return;
      }
      this.setState({ direction: this.props.direction === 'prev' ? 'right' : 'left' });
    };
    CarouselItem.prototype.render = function render() {
      var _props = this.props,
          direction = _props.direction,
          active = _props.active,
          animateIn = _props.animateIn,
          animateOut = _props.animateOut,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['direction', 'active', 'animateIn', 'animateOut', 'className']);
      delete props.onAnimateOutEnd;
      delete props.index;
      var classes = {
        item: true,
        active: active && !animateIn || animateOut
      };
      if (direction && active && animateIn) {
        classes[direction] = true;
      }
      if (this.state.direction && (animateIn || animateOut)) {
        classes[this.state.direction] = true;
      }
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return CarouselItem;
  }(_react2['default'].Component);
  CarouselItem.propTypes = propTypes;
  CarouselItem.defaultProps = defaultProps;
  exports['default'] = CarouselItem;
  module.exports = exports['default'];
});
$__System.registerDynamic('7f', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '80', '6c', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      inline: _propTypes2['default'].bool,
      disabled: _propTypes2['default'].bool,
      title: _propTypes2['default'].string,
      validationState: _propTypes2['default'].oneOf(['success', 'warning', 'error', null]),
      inputRef: _propTypes2['default'].func
    };
    var defaultProps = {
      inline: false,
      disabled: false,
      title: ''
    };
    var Checkbox = function (_React$Component) {
      (0, _inherits3['default'])(Checkbox, _React$Component);
      function Checkbox() {
        (0, _classCallCheck3['default'])(this, Checkbox);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      Checkbox.prototype.render = function render() {
        var _props = this.props,
            inline = _props.inline,
            disabled = _props.disabled,
            validationState = _props.validationState,
            inputRef = _props.inputRef,
            className = _props.className,
            style = _props.style,
            title = _props.title,
            children = _props.children,
            props = (0, _objectWithoutProperties3['default'])(_props, ['inline', 'disabled', 'validationState', 'inputRef', 'className', 'style', 'title', 'children']);
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        var input = _react2['default'].createElement('input', (0, _extends3['default'])({}, elementProps, {
          ref: inputRef,
          type: 'checkbox',
          disabled: disabled
        }));
        if (inline) {
          var _classes2;
          var _classes = (_classes2 = {}, _classes2[(0, _bootstrapUtils.prefix)(bsProps, 'inline')] = true, _classes2.disabled = disabled, _classes2);
          'production' !== 'production' ? (0, _warning2['default'])(!validationState, '`validationState` is ignored on `<Checkbox inline>`. To display ' + 'validation state on an inline checkbox, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : void 0;
          return _react2['default'].createElement('label', {
            className: (0, _classnames2['default'])(className, _classes),
            style: style,
            title: title
          }, input, children);
        }
        var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { disabled: disabled });
        if (validationState) {
          classes['has-' + validationState] = true;
        }
        return _react2['default'].createElement('div', {
          className: (0, _classnames2['default'])(className, classes),
          style: style
        }, _react2['default'].createElement('label', { title: title }, input, children));
      };
      return Checkbox;
    }(_react2['default'].Component);
    Checkbox.propTypes = propTypes;
    Checkbox.defaultProps = defaultProps;
    exports['default'] = (0, _bootstrapUtils.bsClass)('checkbox', Checkbox);
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('81', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '6c', '82', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  var _capitalize = $__require('82');
  var _capitalize2 = _interopRequireDefault(_capitalize);
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    componentClass: _elementType2['default'],
    visibleXsBlock: _propTypes2['default'].bool,
    visibleSmBlock: _propTypes2['default'].bool,
    visibleMdBlock: _propTypes2['default'].bool,
    visibleLgBlock: _propTypes2['default'].bool
  };
  var defaultProps = { componentClass: 'div' };
  var Clearfix = function (_React$Component) {
    (0, _inherits3['default'])(Clearfix, _React$Component);
    function Clearfix() {
      (0, _classCallCheck3['default'])(this, Clearfix);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Clearfix.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      _StyleConfig.DEVICE_SIZES.forEach(function (size) {
        var propName = 'visible' + (0, _capitalize2['default'])(size) + 'Block';
        if (elementProps[propName]) {
          classes['visible-' + size + '-block'] = true;
        }
        delete elementProps[propName];
      });
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Clearfix;
  }(_react2['default'].Component);
  Clearfix.propTypes = propTypes;
  Clearfix.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('clearfix', Clearfix);
  module.exports = exports['default'];
});
$__System.registerDynamic('83', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '80', '6c', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      htmlFor: _propTypes2['default'].string,
      srOnly: _propTypes2['default'].bool
    };
    var defaultProps = { srOnly: false };
    var contextTypes = { $bs_formGroup: _propTypes2['default'].object };
    var ControlLabel = function (_React$Component) {
      (0, _inherits3['default'])(ControlLabel, _React$Component);
      function ControlLabel() {
        (0, _classCallCheck3['default'])(this, ControlLabel);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      ControlLabel.prototype.render = function render() {
        var formGroup = this.context.$bs_formGroup;
        var controlId = formGroup && formGroup.controlId;
        var _props = this.props,
            _props$htmlFor = _props.htmlFor,
            htmlFor = _props$htmlFor === undefined ? controlId : _props$htmlFor,
            srOnly = _props.srOnly,
            className = _props.className,
            props = (0, _objectWithoutProperties3['default'])(_props, ['htmlFor', 'srOnly', 'className']);
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        'production' !== 'production' ? (0, _warning2['default'])(controlId == null || htmlFor === controlId, '`controlId` is ignored on `<ControlLabel>` when `htmlFor` is specified.') : void 0;
        var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { 'sr-only': srOnly });
        return _react2['default'].createElement('label', (0, _extends3['default'])({}, elementProps, {
          htmlFor: htmlFor,
          className: (0, _classnames2['default'])(className, classes)
        }));
      };
      return ControlLabel;
    }(_react2['default'].Component);
    ControlLabel.propTypes = propTypes;
    ControlLabel.defaultProps = defaultProps;
    ControlLabel.contextTypes = contextTypes;
    exports['default'] = (0, _bootstrapUtils.bsClass)('control-label', ControlLabel);
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('84', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    componentClass: _elementType2['default'],
    xs: _propTypes2['default'].number,
    sm: _propTypes2['default'].number,
    md: _propTypes2['default'].number,
    lg: _propTypes2['default'].number,
    xsHidden: _propTypes2['default'].bool,
    smHidden: _propTypes2['default'].bool,
    mdHidden: _propTypes2['default'].bool,
    lgHidden: _propTypes2['default'].bool,
    xsOffset: _propTypes2['default'].number,
    smOffset: _propTypes2['default'].number,
    mdOffset: _propTypes2['default'].number,
    lgOffset: _propTypes2['default'].number,
    xsPush: _propTypes2['default'].number,
    smPush: _propTypes2['default'].number,
    mdPush: _propTypes2['default'].number,
    lgPush: _propTypes2['default'].number,
    xsPull: _propTypes2['default'].number,
    smPull: _propTypes2['default'].number,
    mdPull: _propTypes2['default'].number,
    lgPull: _propTypes2['default'].number
  };
  var defaultProps = { componentClass: 'div' };
  var Col = function (_React$Component) {
    (0, _inherits3['default'])(Col, _React$Component);
    function Col() {
      (0, _classCallCheck3['default'])(this, Col);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Col.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = [];
      _StyleConfig.DEVICE_SIZES.forEach(function (size) {
        function popProp(propSuffix, modifier) {
          var propName = '' + size + propSuffix;
          var propValue = elementProps[propName];
          if (propValue != null) {
            classes.push((0, _bootstrapUtils.prefix)(bsProps, '' + size + modifier + '-' + propValue));
          }
          delete elementProps[propName];
        }
        popProp('', '');
        popProp('Offset', '-offset');
        popProp('Push', '-push');
        popProp('Pull', '-pull');
        var hiddenPropName = size + 'Hidden';
        if (elementProps[hiddenPropName]) {
          classes.push('hidden-' + size);
        }
        delete elementProps[hiddenPropName];
      });
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Col;
  }(_react2['default'].Component);
  Col.propTypes = propTypes;
  Col.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('col', Col);
  module.exports = exports['default'];
});
$__System.registerDynamic('85', ['71', '68', '69', '6a', '67', '1c', '50', '86', '87'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Dropdown = $__require('86');
  var _Dropdown2 = _interopRequireDefault(_Dropdown);
  var _splitComponentProps2 = $__require('87');
  var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _Dropdown2['default'].propTypes, {
    bsStyle: _propTypes2['default'].string,
    bsSize: _propTypes2['default'].string,
    title: _propTypes2['default'].node.isRequired,
    noCaret: _propTypes2['default'].bool,
    children: _propTypes2['default'].node
  });
  var DropdownButton = function (_React$Component) {
    (0, _inherits3['default'])(DropdownButton, _React$Component);
    function DropdownButton() {
      (0, _classCallCheck3['default'])(this, DropdownButton);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    DropdownButton.prototype.render = function render() {
      var _props = this.props,
          bsSize = _props.bsSize,
          bsStyle = _props.bsStyle,
          title = _props.title,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['bsSize', 'bsStyle', 'title', 'children']);
      var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Dropdown2['default'].ControlledComponent),
          dropdownProps = _splitComponentProps[0],
          toggleProps = _splitComponentProps[1];
      return _react2['default'].createElement(_Dropdown2['default'], (0, _extends3['default'])({}, dropdownProps, {
        bsSize: bsSize,
        bsStyle: bsStyle
      }), _react2['default'].createElement(_Dropdown2['default'].Toggle, (0, _extends3['default'])({}, toggleProps, {
        bsSize: bsSize,
        bsStyle: bsStyle
      }), title), _react2['default'].createElement(_Dropdown2['default'].Menu, null, children));
    };
    return DropdownButton;
  }(_react2['default'].Component);
  DropdownButton.propTypes = propTypes;
  exports['default'] = DropdownButton;
  module.exports = exports['default'];
});
$__System.registerDynamic('88', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    horizontal: _propTypes2['default'].bool,
    inline: _propTypes2['default'].bool,
    componentClass: _elementType2['default']
  };
  var defaultProps = {
    horizontal: false,
    inline: false,
    componentClass: 'form'
  };
  var Form = function (_React$Component) {
    (0, _inherits3['default'])(Form, _React$Component);
    function Form() {
      (0, _classCallCheck3['default'])(this, Form);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Form.prototype.render = function render() {
      var _props = this.props,
          horizontal = _props.horizontal,
          inline = _props.inline,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['horizontal', 'inline', 'componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = [];
      if (horizontal) {
        classes.push((0, _bootstrapUtils.prefix)(bsProps, 'horizontal'));
      }
      if (inline) {
        classes.push((0, _bootstrapUtils.prefix)(bsProps, 'inline'));
      }
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Form;
  }(_react2['default'].Component);
  Form.propTypes = propTypes;
  Form.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('form', Form);
  module.exports = exports['default'];
});
$__System.registerDynamic('89', ['71', '67', '68', '69', '6a', '6f', '1c', '50', '7c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Glyphicon = $__require('7c');
  var _Glyphicon2 = _interopRequireDefault(_Glyphicon);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var defaultProps = { bsRole: 'feedback' };
  var contextTypes = { $bs_formGroup: _propTypes2['default'].object };
  var FormControlFeedback = function (_React$Component) {
    (0, _inherits3['default'])(FormControlFeedback, _React$Component);
    function FormControlFeedback() {
      (0, _classCallCheck3['default'])(this, FormControlFeedback);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    FormControlFeedback.prototype.getGlyph = function getGlyph(validationState) {
      switch (validationState) {
        case 'success':
          return 'ok';
        case 'warning':
          return 'warning-sign';
        case 'error':
          return 'remove';
        default:
          return null;
      }
    };
    FormControlFeedback.prototype.renderDefaultFeedback = function renderDefaultFeedback(formGroup, className, classes, elementProps) {
      var glyph = this.getGlyph(formGroup && formGroup.validationState);
      if (!glyph) {
        return null;
      }
      return _react2['default'].createElement(_Glyphicon2['default'], (0, _extends3['default'])({}, elementProps, {
        glyph: glyph,
        className: (0, _classnames2['default'])(className, classes)
      }));
    };
    FormControlFeedback.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      if (!children) {
        return this.renderDefaultFeedback(this.context.$bs_formGroup, className, classes, elementProps);
      }
      var child = _react2['default'].Children.only(children);
      return _react2['default'].cloneElement(child, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(child.props.className, className, classes) }));
    };
    return FormControlFeedback;
  }(_react2['default'].Component);
  FormControlFeedback.defaultProps = defaultProps;
  FormControlFeedback.contextTypes = contextTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('form-control-feedback', FormControlFeedback);
  module.exports = exports['default'];
});
$__System.registerDynamic('8a', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'p' };
  var FormControlStatic = function (_React$Component) {
    (0, _inherits3['default'])(FormControlStatic, _React$Component);
    function FormControlStatic() {
      (0, _classCallCheck3['default'])(this, FormControlStatic);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    FormControlStatic.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return FormControlStatic;
  }(_react2['default'].Component);
  FormControlStatic.propTypes = propTypes;
  FormControlStatic.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('form-control-static', FormControlStatic);
  module.exports = exports['default'];
});
$__System.registerDynamic('8b', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '80', '89', '8a', '6c', '6d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _elementType = $__require('79');
    var _elementType2 = _interopRequireDefault(_elementType);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _FormControlFeedback = $__require('89');
    var _FormControlFeedback2 = _interopRequireDefault(_FormControlFeedback);
    var _FormControlStatic = $__require('8a');
    var _FormControlStatic2 = _interopRequireDefault(_FormControlStatic);
    var _bootstrapUtils = $__require('6c');
    var _StyleConfig = $__require('6d');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      componentClass: _elementType2['default'],
      type: _propTypes2['default'].string,
      id: _propTypes2['default'].string,
      inputRef: _propTypes2['default'].func
    };
    var defaultProps = { componentClass: 'input' };
    var contextTypes = { $bs_formGroup: _propTypes2['default'].object };
    var FormControl = function (_React$Component) {
      (0, _inherits3['default'])(FormControl, _React$Component);
      function FormControl() {
        (0, _classCallCheck3['default'])(this, FormControl);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      FormControl.prototype.render = function render() {
        var formGroup = this.context.$bs_formGroup;
        var controlId = formGroup && formGroup.controlId;
        var _props = this.props,
            Component = _props.componentClass,
            type = _props.type,
            _props$id = _props.id,
            id = _props$id === undefined ? controlId : _props$id,
            inputRef = _props.inputRef,
            className = _props.className,
            bsSize = _props.bsSize,
            props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'type', 'id', 'inputRef', 'className', 'bsSize']);
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        'production' !== 'production' ? (0, _warning2['default'])(controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;
        var classes = void 0;
        if (type !== 'file') {
          classes = (0, _bootstrapUtils.getClassSet)(bsProps);
        }
        if (bsSize) {
          var size = _StyleConfig.SIZE_MAP[bsSize] || bsSize;
          classes[(0, _bootstrapUtils.prefix)({ bsClass: 'input' }, size)] = true;
        }
        return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, {
          type: type,
          id: id,
          ref: inputRef,
          className: (0, _classnames2['default'])(className, classes)
        }));
      };
      return FormControl;
    }(_react2['default'].Component);
    FormControl.propTypes = propTypes;
    FormControl.defaultProps = defaultProps;
    FormControl.contextTypes = contextTypes;
    FormControl.Feedback = _FormControlFeedback2['default'];
    FormControl.Static = _FormControlStatic2['default'];
    exports['default'] = (0, _bootstrapUtils.bsClass)('form-control', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.SMALL, _StyleConfig.Size.LARGE], FormControl));
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('8c', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '6d', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    controlId: _propTypes2['default'].string,
    validationState: _propTypes2['default'].oneOf(['success', 'warning', 'error', null])
  };
  var childContextTypes = { $bs_formGroup: _propTypes2['default'].object.isRequired };
  var FormGroup = function (_React$Component) {
    (0, _inherits3['default'])(FormGroup, _React$Component);
    function FormGroup() {
      (0, _classCallCheck3['default'])(this, FormGroup);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    FormGroup.prototype.getChildContext = function getChildContext() {
      var _props = this.props,
          controlId = _props.controlId,
          validationState = _props.validationState;
      return { $bs_formGroup: {
          controlId: controlId,
          validationState: validationState
        } };
    };
    FormGroup.prototype.hasFeedback = function hasFeedback(children) {
      var _this2 = this;
      return _ValidComponentChildren2['default'].some(children, function (child) {
        return child.props.bsRole === 'feedback' || child.props.children && _this2.hasFeedback(child.props.children);
      });
    };
    FormGroup.prototype.render = function render() {
      var _props2 = this.props,
          validationState = _props2.validationState,
          className = _props2.className,
          children = _props2.children,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['validationState', 'className', 'children']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['controlId']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { 'has-feedback': this.hasFeedback(children) });
      if (validationState) {
        classes['has-' + validationState] = true;
      }
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), children);
    };
    return FormGroup;
  }(_react2['default'].Component);
  FormGroup.propTypes = propTypes;
  FormGroup.childContextTypes = childContextTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('form-group', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], FormGroup));
  module.exports = exports['default'];
});
$__System.registerDynamic('7c', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { glyph: _propTypes2['default'].string.isRequired };
  var Glyphicon = function (_React$Component) {
    (0, _inherits3['default'])(Glyphicon, _React$Component);
    function Glyphicon() {
      (0, _classCallCheck3['default'])(this, Glyphicon);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Glyphicon.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          glyph = _props.glyph,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['glyph', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, glyph)] = true, _extends2));
      return _react2['default'].createElement('span', (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Glyphicon;
  }(_react2['default'].Component);
  Glyphicon.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('glyphicon', Glyphicon);
  module.exports = exports['default'];
});
$__System.registerDynamic('8d', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var HelpBlock = function (_React$Component) {
    (0, _inherits3['default'])(HelpBlock, _React$Component);
    function HelpBlock() {
      (0, _classCallCheck3['default'])(this, HelpBlock);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    HelpBlock.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return HelpBlock;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('help-block', HelpBlock);
  module.exports = exports['default'];
});
$__System.registerDynamic('8e', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    responsive: _propTypes2['default'].bool,
    rounded: _propTypes2['default'].bool,
    circle: _propTypes2['default'].bool,
    thumbnail: _propTypes2['default'].bool
  };
  var defaultProps = {
    responsive: false,
    rounded: false,
    circle: false,
    thumbnail: false
  };
  var Image = function (_React$Component) {
    (0, _inherits3['default'])(Image, _React$Component);
    function Image() {
      (0, _classCallCheck3['default'])(this, Image);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Image.prototype.render = function render() {
      var _classes;
      var _props = this.props,
          responsive = _props.responsive,
          rounded = _props.rounded,
          circle = _props.circle,
          thumbnail = _props.thumbnail,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['responsive', 'rounded', 'circle', 'thumbnail', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (_classes = {}, _classes[(0, _bootstrapUtils.prefix)(bsProps, 'responsive')] = responsive, _classes[(0, _bootstrapUtils.prefix)(bsProps, 'rounded')] = rounded, _classes[(0, _bootstrapUtils.prefix)(bsProps, 'circle')] = circle, _classes[(0, _bootstrapUtils.prefix)(bsProps, 'thumbnail')] = thumbnail, _classes);
      return _react2['default'].createElement('img', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Image;
  }(_react2['default'].Component);
  Image.propTypes = propTypes;
  Image.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('img', Image);
  module.exports = exports['default'];
});
$__System.registerDynamic('8f', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var InputGroupAddon = function (_React$Component) {
    (0, _inherits3['default'])(InputGroupAddon, _React$Component);
    function InputGroupAddon() {
      (0, _classCallCheck3['default'])(this, InputGroupAddon);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    InputGroupAddon.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return InputGroupAddon;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('input-group-addon', InputGroupAddon);
  module.exports = exports['default'];
});
$__System.registerDynamic('90', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var InputGroupButton = function (_React$Component) {
    (0, _inherits3['default'])(InputGroupButton, _React$Component);
    function InputGroupButton() {
      (0, _classCallCheck3['default'])(this, InputGroupButton);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    InputGroupButton.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return InputGroupButton;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('input-group-btn', InputGroupButton);
  module.exports = exports['default'];
});
$__System.registerDynamic('91', ['67', '71', '68', '69', '6a', '6f', '1c', '8f', '90', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _InputGroupAddon = $__require('8f');
  var _InputGroupAddon2 = _interopRequireDefault(_InputGroupAddon);
  var _InputGroupButton = $__require('90');
  var _InputGroupButton2 = _interopRequireDefault(_InputGroupButton);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var InputGroup = function (_React$Component) {
    (0, _inherits3['default'])(InputGroup, _React$Component);
    function InputGroup() {
      (0, _classCallCheck3['default'])(this, InputGroup);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    InputGroup.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return InputGroup;
  }(_react2['default'].Component);
  InputGroup.Addon = _InputGroupAddon2['default'];
  InputGroup.Button = _InputGroupButton2['default'];
  exports['default'] = (0, _bootstrapUtils.bsClass)('input-group', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], InputGroup));
  module.exports = exports['default'];
});
$__System.registerDynamic('92', ['67', '71', '68', '69', '6a', '1c', '6f', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var Jumbotron = function (_React$Component) {
    (0, _inherits3['default'])(Jumbotron, _React$Component);
    function Jumbotron() {
      (0, _classCallCheck3['default'])(this, Jumbotron);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Jumbotron.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Jumbotron;
  }(_react2['default'].Component);
  Jumbotron.propTypes = propTypes;
  Jumbotron.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('jumbotron', Jumbotron);
  module.exports = exports['default'];
});
$__System.registerDynamic('93', ['70', '67', '71', '68', '69', '6a', '6f', '1c', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var Label = function (_React$Component) {
    (0, _inherits3['default'])(Label, _React$Component);
    function Label() {
      (0, _classCallCheck3['default'])(this, Label);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Label.prototype.hasContent = function hasContent(children) {
      var result = false;
      _react2['default'].Children.forEach(children, function (child) {
        if (result) {
          return;
        }
        if (child || child === 0) {
          result = true;
        }
      });
      return result;
    };
    Label.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { hidden: !this.hasContent(children) });
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), children);
    };
    return Label;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('label', (0, _bootstrapUtils.bsStyles)([].concat((0, _values2['default'])(_StyleConfig.State), [_StyleConfig.Style.DEFAULT, _StyleConfig.Style.PRIMARY]), _StyleConfig.Style.DEFAULT, Label));
  module.exports = exports['default'];
});
$__System.registerDynamic('94', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '95', '6c', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _ListGroupItem = $__require('95');
  var _ListGroupItem2 = _interopRequireDefault(_ListGroupItem);
  var _bootstrapUtils = $__require('6c');
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  function getDefaultComponent(children) {
    if (!children) {
      return 'div';
    }
    if (_ValidComponentChildren2['default'].some(children, function (child) {
      return child.type !== _ListGroupItem2['default'] || child.props.href || child.props.onClick;
    })) {
      return 'div';
    }
    return 'ul';
  }
  var ListGroup = function (_React$Component) {
    (0, _inherits3['default'])(ListGroup, _React$Component);
    function ListGroup() {
      (0, _classCallCheck3['default'])(this, ListGroup);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ListGroup.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          _props$componentClass = _props.componentClass,
          Component = _props$componentClass === undefined ? getDefaultComponent(children) : _props$componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['children', 'componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      var useListItem = Component === 'ul' && _ValidComponentChildren2['default'].every(children, function (child) {
        return child.type === _ListGroupItem2['default'];
      });
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), useListItem ? _ValidComponentChildren2['default'].map(children, function (child) {
        return (0, _react.cloneElement)(child, { listItem: true });
      }) : children);
    };
    return ListGroup;
  }(_react2['default'].Component);
  ListGroup.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('list-group', ListGroup);
  module.exports = exports['default'];
});
$__System.registerDynamic('95', ['70', '67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    active: _propTypes2['default'].any,
    disabled: _propTypes2['default'].any,
    header: _propTypes2['default'].node,
    listItem: _propTypes2['default'].bool,
    onClick: _propTypes2['default'].func,
    href: _propTypes2['default'].string,
    type: _propTypes2['default'].string
  };
  var defaultProps = { listItem: false };
  var ListGroupItem = function (_React$Component) {
    (0, _inherits3['default'])(ListGroupItem, _React$Component);
    function ListGroupItem() {
      (0, _classCallCheck3['default'])(this, ListGroupItem);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ListGroupItem.prototype.renderHeader = function renderHeader(header, headingClassName) {
      if (_react2['default'].isValidElement(header)) {
        return (0, _react.cloneElement)(header, { className: (0, _classnames2['default'])(header.props.className, headingClassName) });
      }
      return _react2['default'].createElement('h4', { className: headingClassName }, header);
    };
    ListGroupItem.prototype.render = function render() {
      var _props = this.props,
          active = _props.active,
          disabled = _props.disabled,
          className = _props.className,
          header = _props.header,
          listItem = _props.listItem,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'disabled', 'className', 'header', 'listItem', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), {
        active: active,
        disabled: disabled
      });
      var Component = void 0;
      if (elementProps.href) {
        Component = 'a';
      } else if (elementProps.onClick) {
        Component = 'button';
        elementProps.type = elementProps.type || 'button';
      } else if (listItem) {
        Component = 'li';
      } else {
        Component = 'span';
      }
      elementProps.className = (0, _classnames2['default'])(className, classes);
      if (header) {
        return _react2['default'].createElement(Component, elementProps, this.renderHeader(header, (0, _bootstrapUtils.prefix)(bsProps, 'heading')), _react2['default'].createElement('p', { className: (0, _bootstrapUtils.prefix)(bsProps, 'text') }, children));
      }
      return _react2['default'].createElement(Component, elementProps, children);
    };
    return ListGroupItem;
  }(_react2['default'].Component);
  ListGroupItem.propTypes = propTypes;
  ListGroupItem.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('list-group-item', (0, _bootstrapUtils.bsStyles)((0, _values2['default'])(_StyleConfig.State), ListGroupItem));
  module.exports = exports['default'];
});
$__System.registerDynamic('96', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var MediaBody = function (_React$Component) {
    (0, _inherits3['default'])(MediaBody, _React$Component);
    function MediaBody() {
      (0, _classCallCheck3['default'])(this, MediaBody);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaBody.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaBody;
  }(_react2['default'].Component);
  MediaBody.propTypes = propTypes;
  MediaBody.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('media-body', MediaBody);
  module.exports = exports['default'];
});
$__System.registerDynamic('97', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'h4' };
  var MediaHeading = function (_React$Component) {
    (0, _inherits3['default'])(MediaHeading, _React$Component);
    function MediaHeading() {
      (0, _classCallCheck3['default'])(this, MediaHeading);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaHeading.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaHeading;
  }(_react2['default'].Component);
  MediaHeading.propTypes = propTypes;
  MediaHeading.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('media-heading', MediaHeading);
  module.exports = exports['default'];
});
$__System.registerDynamic('98', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '99', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Media = $__require('99');
  var _Media2 = _interopRequireDefault(_Media);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { align: _propTypes2['default'].oneOf(['top', 'middle', 'bottom']) };
  var MediaLeft = function (_React$Component) {
    (0, _inherits3['default'])(MediaLeft, _React$Component);
    function MediaLeft() {
      (0, _classCallCheck3['default'])(this, MediaLeft);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaLeft.prototype.render = function render() {
      var _props = this.props,
          align = _props.align,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['align', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      if (align) {
        classes[(0, _bootstrapUtils.prefix)(_Media2['default'].defaultProps, align)] = true;
      }
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaLeft;
  }(_react2['default'].Component);
  MediaLeft.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('media-left', MediaLeft);
  module.exports = exports['default'];
});
$__System.registerDynamic('9a', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var MediaList = function (_React$Component) {
    (0, _inherits3['default'])(MediaList, _React$Component);
    function MediaList() {
      (0, _classCallCheck3['default'])(this, MediaList);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaList.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('ul', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaList;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('media-list', MediaList);
  module.exports = exports['default'];
});
$__System.registerDynamic('9b', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var MediaListItem = function (_React$Component) {
    (0, _inherits3['default'])(MediaListItem, _React$Component);
    function MediaListItem() {
      (0, _classCallCheck3['default'])(this, MediaListItem);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaListItem.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('li', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaListItem;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('media', MediaListItem);
  module.exports = exports['default'];
});
$__System.registerDynamic('9c', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '99', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Media = $__require('99');
  var _Media2 = _interopRequireDefault(_Media);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { align: _propTypes2['default'].oneOf(['top', 'middle', 'bottom']) };
  var MediaRight = function (_React$Component) {
    (0, _inherits3['default'])(MediaRight, _React$Component);
    function MediaRight() {
      (0, _classCallCheck3['default'])(this, MediaRight);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    MediaRight.prototype.render = function render() {
      var _props = this.props,
          align = _props.align,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['align', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      if (align) {
        classes[(0, _bootstrapUtils.prefix)(_Media2['default'].defaultProps, align)] = true;
      }
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return MediaRight;
  }(_react2['default'].Component);
  MediaRight.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('media-right', MediaRight);
  module.exports = exports['default'];
});
$__System.registerDynamic('99', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '96', '97', '98', '9a', '9b', '9c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _MediaBody = $__require('96');
  var _MediaBody2 = _interopRequireDefault(_MediaBody);
  var _MediaHeading = $__require('97');
  var _MediaHeading2 = _interopRequireDefault(_MediaHeading);
  var _MediaLeft = $__require('98');
  var _MediaLeft2 = _interopRequireDefault(_MediaLeft);
  var _MediaList = $__require('9a');
  var _MediaList2 = _interopRequireDefault(_MediaList);
  var _MediaListItem = $__require('9b');
  var _MediaListItem2 = _interopRequireDefault(_MediaListItem);
  var _MediaRight = $__require('9c');
  var _MediaRight2 = _interopRequireDefault(_MediaRight);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var Media = function (_React$Component) {
    (0, _inherits3['default'])(Media, _React$Component);
    function Media() {
      (0, _classCallCheck3['default'])(this, Media);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Media.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Media;
  }(_react2['default'].Component);
  Media.propTypes = propTypes;
  Media.defaultProps = defaultProps;
  Media.Heading = _MediaHeading2['default'];
  Media.Body = _MediaBody2['default'];
  Media.Left = _MediaLeft2['default'];
  Media.Right = _MediaRight2['default'];
  Media.List = _MediaList2['default'];
  Media.ListItem = _MediaListItem2['default'];
  exports['default'] = (0, _bootstrapUtils.bsClass)('media', Media);
  module.exports = exports['default'];
});
$__System.registerDynamic('9d', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '9f', '75', '6c', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _all = $__require('9f');
  var _all2 = _interopRequireDefault(_all);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    active: _propTypes2['default'].bool,
    disabled: _propTypes2['default'].bool,
    divider: (0, _all2['default'])(_propTypes2['default'].bool, function (_ref) {
      var divider = _ref.divider,
          children = _ref.children;
      return divider && children ? new Error('Children will not be rendered for dividers') : null;
    }),
    eventKey: _propTypes2['default'].any,
    header: _propTypes2['default'].bool,
    href: _propTypes2['default'].string,
    onClick: _propTypes2['default'].func,
    onSelect: _propTypes2['default'].func
  };
  var defaultProps = {
    divider: false,
    disabled: false,
    header: false
  };
  var MenuItem = function (_React$Component) {
    (0, _inherits3['default'])(MenuItem, _React$Component);
    function MenuItem(props, context) {
      (0, _classCallCheck3['default'])(this, MenuItem);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleClick = _this.handleClick.bind(_this);
      return _this;
    }
    MenuItem.prototype.handleClick = function handleClick(event) {
      var _props = this.props,
          href = _props.href,
          disabled = _props.disabled,
          onSelect = _props.onSelect,
          eventKey = _props.eventKey;
      if (!href || disabled) {
        event.preventDefault();
      }
      if (disabled) {
        return;
      }
      if (onSelect) {
        onSelect(eventKey, event);
      }
    };
    MenuItem.prototype.render = function render() {
      var _props2 = this.props,
          active = _props2.active,
          disabled = _props2.disabled,
          divider = _props2.divider,
          header = _props2.header,
          onClick = _props2.onClick,
          className = _props2.className,
          style = _props2.style,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['active', 'disabled', 'divider', 'header', 'onClick', 'className', 'style']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['eventKey', 'onSelect']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      if (divider) {
        elementProps.children = undefined;
        return _react2['default'].createElement('li', (0, _extends3['default'])({}, elementProps, {
          role: 'separator',
          className: (0, _classnames2['default'])(className, 'divider'),
          style: style
        }));
      }
      if (header) {
        return _react2['default'].createElement('li', (0, _extends3['default'])({}, elementProps, {
          role: 'heading',
          className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(bsProps, 'header')),
          style: style
        }));
      }
      return _react2['default'].createElement('li', {
        role: 'presentation',
        className: (0, _classnames2['default'])(className, {
          active: active,
          disabled: disabled
        }),
        style: style
      }, _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, elementProps, {
        role: 'menuitem',
        tabIndex: '-1',
        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleClick)
      })));
    };
    return MenuItem;
  }(_react2['default'].Component);
  MenuItem.propTypes = propTypes;
  MenuItem.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown', MenuItem);
  module.exports = exports['default'];
});
$__System.registerDynamic('a0', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = qsa;
  // Zepto.js
  // (c) 2010-2015 Thomas Fuchs
  // Zepto.js may be freely distributed under the MIT license.
  var simpleSelectorRE = /^[\w-]*$/;
  var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);

  function qsa(element, selector) {
    var maybeID = selector[0] === '#',
        maybeClass = selector[0] === '.',
        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,
        isSimple = simpleSelectorRE.test(nameOnly),
        found;

    if (isSimple) {
      if (maybeID) {
        element = element.getElementById ? element : document;
        return (found = element.getElementById(nameOnly)) ? [found] : [];
      }

      if (element.getElementsByClassName && maybeClass) return toArray(element.getElementsByClassName(nameOnly));

      return toArray(element.getElementsByTagName(selector));
    }

    return toArray(element.querySelectorAll(selector));
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('a1', ['a2', 'a0'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = filterEvents;
  var _contains = $__require('a2');
  var _contains2 = _interopRequireDefault(_contains);
  var _querySelectorAll = $__require('a0');
  var _querySelectorAll2 = _interopRequireDefault(_querySelectorAll);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function filterEvents(selector, handler) {
    return function filterHandler(e) {
      var top = e.currentTarget,
          target = e.target,
          matches = (0, _querySelectorAll2.default)(top, selector);
      if (matches.some(function (match) {
        return (0, _contains2.default)(match, target);
      })) handler.call(this, e);
    };
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('a3', ['a4', 'a5', 'a6'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  var _on = $__require('a5');
  var _on2 = _interopRequireDefault(_on);
  var _off = $__require('a6');
  var _off2 = _interopRequireDefault(_off);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var listen = function listen() {};
  if (_inDOM2.default) {
    listen = function listen(node, eventName, handler, capture) {
      (0, _on2.default)(node, eventName, handler, capture);
      return function () {
        (0, _off2.default)(node, eventName, handler, capture);
      };
    };
  }
  exports.default = listen;
  module.exports = exports['default'];
});
$__System.registerDynamic('a7', ['a5', 'a6', 'a1', 'a3'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.listen = exports.filter = exports.off = exports.on = undefined;
  var _on = $__require('a5');
  var _on2 = _interopRequireDefault(_on);
  var _off = $__require('a6');
  var _off2 = _interopRequireDefault(_off);
  var _filter = $__require('a1');
  var _filter2 = _interopRequireDefault(_filter);
  var _listen = $__require('a3');
  var _listen2 = _interopRequireDefault(_listen);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.on = _on2.default;
  exports.off = _off2.default;
  exports.filter = _filter2.default;
  exports.listen = _listen2.default;
  exports.default = {
    on: _on2.default,
    off: _off2.default,
    filter: _filter2.default,
    listen: _listen2.default
  };
});
$__System.registerDynamic('a8', ['a7'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('a7');
});
$__System.registerDynamic('a9', ['aa'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = addClass;
  var _hasClass = $__require('aa');
  var _hasClass2 = _interopRequireDefault(_hasClass);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function addClass(element, className) {
    if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('ab', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = function removeClass(element, className) {
    if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
  };
});
$__System.registerDynamic("aa", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = hasClass;
  function hasClass(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);else return (" " + element.className + " ").indexOf(" " + className + " ") !== -1;
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('ac', ['a9', 'ab', 'aa'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.hasClass = exports.removeClass = exports.addClass = undefined;
  var _addClass = $__require('a9');
  var _addClass2 = _interopRequireDefault(_addClass);
  var _removeClass = $__require('ab');
  var _removeClass2 = _interopRequireDefault(_removeClass);
  var _hasClass = $__require('aa');
  var _hasClass2 = _interopRequireDefault(_hasClass);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.addClass = _addClass2.default;
  exports.removeClass = _removeClass2.default;
  exports.hasClass = _hasClass2.default;
  exports.default = {
    addClass: _addClass2.default,
    removeClass: _removeClass2.default,
    hasClass: _hasClass2.default
  };
});
$__System.registerDynamic('ad', ['ac'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('ac');
});
$__System.registerDynamic('ae', ['a4'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = function (recalc) {
    if (!size || recalc) {
      if (_inDOM2.default) {
        var scrollDiv = document.createElement('div');
        scrollDiv.style.position = 'absolute';
        scrollDiv.style.top = '-9999px';
        scrollDiv.style.width = '50px';
        scrollDiv.style.height = '50px';
        scrollDiv.style.overflow = 'scroll';
        document.body.appendChild(scrollDiv);
        size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        document.body.removeChild(scrollDiv);
      }
    }
    return size;
  };
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var size = void 0;
  module.exports = exports['default'];
});
$__System.registerDynamic('af', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ariaHidden = ariaHidden;
  exports.hideSiblings = hideSiblings;
  exports.showSiblings = showSiblings;

  var BLACKLIST = ['template', 'script', 'style'];

  var isHidable = function isHidable(_ref) {
    var nodeType = _ref.nodeType;
    var tagName = _ref.tagName;
    return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
  };

  var siblings = function siblings(container, mount, cb) {
    mount = [].concat(mount);

    [].forEach.call(container.children, function (node) {
      if (mount.indexOf(node) === -1 && isHidable(node)) {
        cb(node);
      }
    });
  };

  function ariaHidden(show, node) {
    if (!node) {
      return;
    }
    if (show) {
      node.setAttribute('aria-hidden', 'true');
    } else {
      node.removeAttribute('aria-hidden');
    }
  }

  function hideSiblings(container, mountNode) {
    siblings(container, mountNode, function (node) {
      return ariaHidden(true, node);
    });
  }

  function showSiblings(container, mountNode) {
    siblings(container, mountNode, function (node) {
      return ariaHidden(false, node);
    });
  }
});
$__System.registerDynamic('b0', ['b2', 'ad', 'ae', 'b1', 'af'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _style = $__require('b2');
  var _style2 = _interopRequireDefault(_style);
  var _class = $__require('ad');
  var _class2 = _interopRequireDefault(_class);
  var _scrollbarSize = $__require('ae');
  var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);
  var _isOverflowing = $__require('b1');
  var _isOverflowing2 = _interopRequireDefault(_isOverflowing);
  var _manageAriaHidden = $__require('af');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function findIndexOf(arr, cb) {
    var idx = -1;
    arr.some(function (d, i) {
      if (cb(d, i)) {
        idx = i;
        return true;
      }
    });
    return idx;
  }
  function findContainer(data, modal) {
    return findIndexOf(data, function (d) {
      return d.modals.indexOf(modal) !== -1;
    });
  }
  function setContainerStyle(state, container) {
    var style = { overflow: 'hidden' };
    state.style = {
      overflow: container.style.overflow,
      paddingRight: container.style.paddingRight
    };
    if (state.overflowing) {
      style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';
    }
    (0, _style2.default)(container, style);
  }
  function removeContainerStyle(_ref, container) {
    var style = _ref.style;
    Object.keys(style).forEach(function (key) {
      return container.style[key] = style[key];
    });
  }
  var ModalManager = function ModalManager() {
    var _this = this;
    var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var _ref2$hideSiblingNode = _ref2.hideSiblingNodes;
    var hideSiblingNodes = _ref2$hideSiblingNode === undefined ? true : _ref2$hideSiblingNode;
    var _ref2$handleContainer = _ref2.handleContainerOverflow;
    var handleContainerOverflow = _ref2$handleContainer === undefined ? true : _ref2$handleContainer;
    _classCallCheck(this, ModalManager);
    this.add = function (modal, container, className) {
      var modalIdx = _this.modals.indexOf(modal);
      var containerIdx = _this.containers.indexOf(container);
      if (modalIdx !== -1) {
        return modalIdx;
      }
      modalIdx = _this.modals.length;
      _this.modals.push(modal);
      if (_this.hideSiblingNodes) {
        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
      }
      if (containerIdx !== -1) {
        _this.data[containerIdx].modals.push(modal);
        return modalIdx;
      }
      var data = {
        modals: [modal],
        classes: className ? className.split(/\s+/) : [],
        overflowing: (0, _isOverflowing2.default)(container)
      };
      if (_this.handleContainerOverflow) {
        setContainerStyle(data, container);
      }
      data.classes.forEach(_class2.default.addClass.bind(null, container));
      _this.containers.push(container);
      _this.data.push(data);
      return modalIdx;
    };
    this.remove = function (modal) {
      var modalIdx = _this.modals.indexOf(modal);
      if (modalIdx === -1) {
        return;
      }
      var containerIdx = findContainer(_this.data, modal);
      var data = _this.data[containerIdx];
      var container = _this.containers[containerIdx];
      data.modals.splice(data.modals.indexOf(modal), 1);
      _this.modals.splice(modalIdx, 1);
      if (data.modals.length === 0) {
        data.classes.forEach(_class2.default.removeClass.bind(null, container));
        if (_this.handleContainerOverflow) {
          removeContainerStyle(data, container);
        }
        if (_this.hideSiblingNodes) {
          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
        }
        _this.containers.splice(containerIdx, 1);
        _this.data.splice(containerIdx, 1);
      } else if (_this.hideSiblingNodes) {
        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);
      }
    };
    this.isTopModal = function (modal) {
      return !!_this.modals.length && _this.modals[_this.modals.length - 1] === modal;
    };
    this.hideSiblingNodes = hideSiblingNodes;
    this.handleContainerOverflow = handleContainerOverflow;
    this.modals = [];
    this.containers = [];
    this.data = [];
  };
  exports.default = ModalManager;
  module.exports = exports['default'];
});
$__System.registerDynamic('b3', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = addFocusListener;
  /**
   * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling
   * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8
   *
   * We only allow one Listener at a time to avoid stack overflows
   */
  function addFocusListener(handler) {
    var useFocusin = !document.addEventListener;
    var remove = void 0;

    if (useFocusin) {
      document.attachEvent('onfocusin', handler);
      remove = function remove() {
        return document.detachEvent('onfocusin', handler);
      };
    } else {
      document.addEventListener('focus', handler, true);
      remove = function remove() {
        return document.removeEventListener('focus', handler, true);
      };
    }

    return { remove: remove };
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("b4", ["1c", "50", "80", "ba", "bb", "b5", "b0", "b6", "b7", "b3", "a4", "b9", "a2", "b8"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _warning = $__require("80");
  var _warning2 = _interopRequireDefault(_warning);
  var _componentOrElement = $__require("ba");
  var _componentOrElement2 = _interopRequireDefault(_componentOrElement);
  var _elementType = $__require("bb");
  var _elementType2 = _interopRequireDefault(_elementType);
  var _Portal = $__require("b5");
  var _Portal2 = _interopRequireDefault(_Portal);
  var _ModalManager = $__require("b0");
  var _ModalManager2 = _interopRequireDefault(_ModalManager);
  var _ownerDocument = $__require("b6");
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  var _addEventListener = $__require("b7");
  var _addEventListener2 = _interopRequireDefault(_addEventListener);
  var _addFocusListener = $__require("b3");
  var _addFocusListener2 = _interopRequireDefault(_addFocusListener);
  var _inDOM = $__require("a4");
  var _inDOM2 = _interopRequireDefault(_inDOM);
  var _activeElement = $__require("b9");
  var _activeElement2 = _interopRequireDefault(_activeElement);
  var _contains = $__require("a2");
  var _contains2 = _interopRequireDefault(_contains);
  var _getContainer = $__require("b8");
  var _getContainer2 = _interopRequireDefault(_getContainer);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var modalManager = new _ModalManager2.default();
  var Modal = function (_React$Component) {
    _inherits(Modal, _React$Component);
    function Modal() {
      var _ref;
      var _temp, _this, _ret;
      _classCallCheck(this, Modal);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(Modal, [{
      key: 'omitProps',
      value: function omitProps(props, propTypes) {
        var keys = Object.keys(props);
        var newProps = {};
        keys.map(function (prop) {
          if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {
            newProps[prop] = props[prop];
          }
        });
        return newProps;
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var show = _props.show;
        var container = _props.container;
        var children = _props.children;
        var Transition = _props.transition;
        var backdrop = _props.backdrop;
        var dialogTransitionTimeout = _props.dialogTransitionTimeout;
        var className = _props.className;
        var style = _props.style;
        var onExit = _props.onExit;
        var onExiting = _props.onExiting;
        var onEnter = _props.onEnter;
        var onEntering = _props.onEntering;
        var onEntered = _props.onEntered;
        var dialog = _react2.default.Children.only(children);
        var filteredProps = this.omitProps(this.props, Modal.propTypes);
        var mountModal = show || Transition && !this.state.exited;
        if (!mountModal) {
          return null;
        }
        var _dialog$props = dialog.props;
        var role = _dialog$props.role;
        var tabIndex = _dialog$props.tabIndex;
        if (role === undefined || tabIndex === undefined) {
          dialog = (0, _react.cloneElement)(dialog, {
            role: role === undefined ? 'document' : role,
            tabIndex: tabIndex == null ? '-1' : tabIndex
          });
        }
        if (Transition) {
          dialog = _react2.default.createElement(Transition, {
            transitionAppear: true,
            unmountOnExit: true,
            'in': show,
            timeout: dialogTransitionTimeout,
            onExit: onExit,
            onExiting: onExiting,
            onExited: this.handleHidden,
            onEnter: onEnter,
            onEntering: onEntering,
            onEntered: onEntered
          }, dialog);
        }
        return _react2.default.createElement(_Portal2.default, {
          ref: this.setMountNode,
          container: container
        }, _react2.default.createElement('div', _extends({
          ref: this.setModalNode,
          role: role || 'dialog'
        }, filteredProps, {
          style: style,
          className: className
        }), backdrop && this.renderBackdrop(), dialog));
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.show) {
          this.setState({ exited: false });
        } else if (!nextProps.transition) {
          this.setState({ exited: true });
        }
      }
    }, {
      key: 'componentWillUpdate',
      value: function componentWillUpdate(nextProps) {
        if (!this.props.show && nextProps.show) {
          this.checkForFocus();
        }
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._isMounted = true;
        if (this.props.show) {
          this.onShow();
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        var transition = this.props.transition;
        if (prevProps.show && !this.props.show && !transition) {
          this.onHide();
        } else if (!prevProps.show && this.props.show) {
          this.onShow();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        var _props2 = this.props;
        var show = _props2.show;
        var transition = _props2.transition;
        this._isMounted = false;
        if (show || transition && !this.state.exited) {
          this.onHide();
        }
      }
    }]);
    return Modal;
  }(_react2.default.Component);
  Modal.propTypes = _extends({}, _Portal2.default.propTypes, {
    show: _propTypes2.default.bool,
    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),
    onShow: _propTypes2.default.func,
    onHide: _propTypes2.default.func,
    backdrop: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['static'])]),
    renderBackdrop: _propTypes2.default.func,
    onEscapeKeyUp: _propTypes2.default.func,
    onBackdropClick: _propTypes2.default.func,
    backdropStyle: _propTypes2.default.object,
    backdropClassName: _propTypes2.default.string,
    containerClassName: _propTypes2.default.string,
    keyboard: _propTypes2.default.bool,
    transition: _elementType2.default,
    dialogTransitionTimeout: _propTypes2.default.number,
    backdropTransitionTimeout: _propTypes2.default.number,
    autoFocus: _propTypes2.default.bool,
    enforceFocus: _propTypes2.default.bool,
    restoreFocus: _propTypes2.default.bool,
    onEnter: _propTypes2.default.func,
    onEntering: _propTypes2.default.func,
    onEntered: _propTypes2.default.func,
    onExit: _propTypes2.default.func,
    onExiting: _propTypes2.default.func,
    onExited: _propTypes2.default.func,
    manager: _propTypes2.default.object.isRequired
  });
  Modal.defaultProps = {
    show: false,
    backdrop: true,
    keyboard: true,
    autoFocus: true,
    enforceFocus: true,
    restoreFocus: true,
    onHide: function onHide() {},
    manager: modalManager,
    renderBackdrop: function renderBackdrop(props) {
      return _react2.default.createElement('div', props);
    }
  };
  var _initialiseProps = function _initialiseProps() {
    var _this2 = this;
    this.state = { exited: !this.props.show };
    this.renderBackdrop = function () {
      var _props3 = _this2.props;
      var backdropStyle = _props3.backdropStyle;
      var backdropClassName = _props3.backdropClassName;
      var renderBackdrop = _props3.renderBackdrop;
      var Transition = _props3.transition;
      var backdropTransitionTimeout = _props3.backdropTransitionTimeout;
      var backdropRef = function backdropRef(ref) {
        return _this2.backdrop = ref;
      };
      var backdrop = renderBackdrop({
        ref: backdropRef,
        style: backdropStyle,
        className: backdropClassName,
        onClick: _this2.handleBackdropClick
      });
      if (Transition) {
        backdrop = _react2.default.createElement(Transition, {
          transitionAppear: true,
          'in': _this2.props.show,
          timeout: backdropTransitionTimeout
        }, backdrop);
      }
      return backdrop;
    };
    this.onShow = function () {
      var doc = (0, _ownerDocument2.default)(_this2);
      var container = (0, _getContainer2.default)(_this2.props.container, doc.body);
      _this2.props.manager.add(_this2, container, _this2.props.containerClassName);
      _this2._onDocumentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', _this2.handleDocumentKeyUp);
      _this2._onFocusinListener = (0, _addFocusListener2.default)(_this2.enforceFocus);
      _this2.focus();
      if (_this2.props.onShow) {
        _this2.props.onShow();
      }
    };
    this.onHide = function () {
      _this2.props.manager.remove(_this2);
      _this2._onDocumentKeyupListener.remove();
      _this2._onFocusinListener.remove();
      if (_this2.props.restoreFocus) {
        _this2.restoreLastFocus();
      }
    };
    this.setMountNode = function (ref) {
      _this2.mountNode = ref ? ref.getMountNode() : ref;
    };
    this.setModalNode = function (ref) {
      _this2.modalNode = ref;
    };
    this.handleHidden = function () {
      _this2.setState({ exited: true });
      _this2.onHide();
      if (_this2.props.onExited) {
        var _props4;
        (_props4 = _this2.props).onExited.apply(_props4, arguments);
      }
    };
    this.handleBackdropClick = function (e) {
      if (e.target !== e.currentTarget) {
        return;
      }
      if (_this2.props.onBackdropClick) {
        _this2.props.onBackdropClick(e);
      }
      if (_this2.props.backdrop === true) {
        _this2.props.onHide();
      }
    };
    this.handleDocumentKeyUp = function (e) {
      if (_this2.props.keyboard && e.keyCode === 27 && _this2.isTopModal()) {
        if (_this2.props.onEscapeKeyUp) {
          _this2.props.onEscapeKeyUp(e);
        }
        _this2.props.onHide();
      }
    };
    this.checkForFocus = function () {
      if (_inDOM2.default) {
        _this2.lastFocus = (0, _activeElement2.default)();
      }
    };
    this.focus = function () {
      var autoFocus = _this2.props.autoFocus;
      var modalContent = _this2.getDialogElement();
      var current = (0, _activeElement2.default)((0, _ownerDocument2.default)(_this2));
      var focusInModal = current && (0, _contains2.default)(modalContent, current);
      if (modalContent && autoFocus && !focusInModal) {
        _this2.lastFocus = current;
        if (!modalContent.hasAttribute('tabIndex')) {
          modalContent.setAttribute('tabIndex', -1);
          (0, _warning2.default)(false, 'The modal content node does not accept focus. ' + 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".');
        }
        modalContent.focus();
      }
    };
    this.restoreLastFocus = function () {
      if (_this2.lastFocus && _this2.lastFocus.focus) {
        _this2.lastFocus.focus();
        _this2.lastFocus = null;
      }
    };
    this.enforceFocus = function () {
      var enforceFocus = _this2.props.enforceFocus;
      if (!enforceFocus || !_this2._isMounted || !_this2.isTopModal()) {
        return;
      }
      var active = (0, _activeElement2.default)((0, _ownerDocument2.default)(_this2));
      var modal = _this2.getDialogElement();
      if (modal && modal !== active && !(0, _contains2.default)(modal, active)) {
        modal.focus();
      }
    };
    this.getDialogElement = function () {
      var node = _this2.modalNode;
      return node && node.lastChild;
    };
    this.isTopModal = function () {
      return _this2.props.manager.isTopModal(_this2);
    };
  };
  Modal.Manager = _ModalManager2.default;
  exports.default = Modal;
  module.exports = exports['default'];
});
$__System.registerDynamic('b1', ['bc', 'bd'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isOverflowing;

  var _isWindow = $__require('bc');

  var _isWindow2 = _interopRequireDefault(_isWindow);

  var _ownerDocument = $__require('bd');

  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function isBody(node) {
    return node && node.tagName.toLowerCase() === 'body';
  }

  function bodyIsOverflowing(node) {
    var doc = (0, _ownerDocument2.default)(node);
    var win = (0, _isWindow2.default)(doc);
    var fullWidth = win.innerWidth;

    // Support: ie8, no innerWidth
    if (!fullWidth) {
      var documentElementRect = doc.documentElement.getBoundingClientRect();
      fullWidth = documentElementRect.right - Math.abs(documentElementRect.left);
    }

    return doc.body.clientWidth < fullWidth;
  }

  function isOverflowing(container) {
    var win = (0, _isWindow2.default)(container);

    return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('be', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { dialogClassName: _propTypes2['default'].string };
  var ModalDialog = function (_React$Component) {
    (0, _inherits3['default'])(ModalDialog, _React$Component);
    function ModalDialog() {
      (0, _classCallCheck3['default'])(this, ModalDialog);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ModalDialog.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          dialogClassName = _props.dialogClassName,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['dialogClassName', 'className', 'style', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var bsClassName = (0, _bootstrapUtils.prefix)(bsProps);
      var modalStyle = (0, _extends4['default'])({ display: 'block' }, style);
      var dialogClasses = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[bsClassName] = false, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'dialog')] = true, _extends2));
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
        tabIndex: '-1',
        role: 'dialog',
        style: modalStyle,
        className: (0, _classnames2['default'])(className, bsClassName)
      }), _react2['default'].createElement('div', { className: (0, _classnames2['default'])(dialogClassName, dialogClasses) }, _react2['default'].createElement('div', {
        className: (0, _bootstrapUtils.prefix)(bsProps, 'content'),
        role: 'document'
      }, children)));
    };
    return ModalDialog;
  }(_react2['default'].Component);
  ModalDialog.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], ModalDialog));
  module.exports = exports['default'];
});
$__System.registerDynamic('bf', ['71', '68', '69', '6a', '67', '6f', 'a8', 'bd', 'a4', 'ae', '1c', '50', '4c', 'b4', 'b1', '79', 'c0', 'c1', 'be', 'c2', 'c3', 'c4', '6c', '9e', '87', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _events = $__require('a8');
  var _events2 = _interopRequireDefault(_events);
  var _ownerDocument = $__require('bd');
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  var _scrollbarSize = $__require('ae');
  var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require('4c');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _Modal = $__require('b4');
  var _Modal2 = _interopRequireDefault(_Modal);
  var _isOverflowing = $__require('b1');
  var _isOverflowing2 = _interopRequireDefault(_isOverflowing);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _Fade = $__require('c0');
  var _Fade2 = _interopRequireDefault(_Fade);
  var _ModalBody = $__require('c1');
  var _ModalBody2 = _interopRequireDefault(_ModalBody);
  var _ModalDialog = $__require('be');
  var _ModalDialog2 = _interopRequireDefault(_ModalDialog);
  var _ModalFooter = $__require('c2');
  var _ModalFooter2 = _interopRequireDefault(_ModalFooter);
  var _ModalHeader = $__require('c3');
  var _ModalHeader2 = _interopRequireDefault(_ModalHeader);
  var _ModalTitle = $__require('c4');
  var _ModalTitle2 = _interopRequireDefault(_ModalTitle);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  var _splitComponentProps2 = $__require('87');
  var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _Modal2['default'].propTypes, _ModalDialog2['default'].propTypes, {
    backdrop: _propTypes2['default'].oneOf(['static', true, false]),
    keyboard: _propTypes2['default'].bool,
    animation: _propTypes2['default'].bool,
    dialogComponentClass: _elementType2['default'],
    autoFocus: _propTypes2['default'].bool,
    enforceFocus: _propTypes2['default'].bool,
    restoreFocus: _propTypes2['default'].bool,
    show: _propTypes2['default'].bool,
    onHide: _propTypes2['default'].func,
    onEnter: _propTypes2['default'].func,
    onEntering: _propTypes2['default'].func,
    onEntered: _propTypes2['default'].func,
    onExit: _propTypes2['default'].func,
    onExiting: _propTypes2['default'].func,
    onExited: _propTypes2['default'].func,
    container: _Modal2['default'].propTypes.container
  });
  var defaultProps = (0, _extends3['default'])({}, _Modal2['default'].defaultProps, {
    animation: true,
    dialogComponentClass: _ModalDialog2['default']
  });
  var childContextTypes = { $bs_modal: _propTypes2['default'].shape({ onHide: _propTypes2['default'].func }) };
  var Modal = function (_React$Component) {
    (0, _inherits3['default'])(Modal, _React$Component);
    function Modal(props, context) {
      (0, _classCallCheck3['default'])(this, Modal);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleEntering = _this.handleEntering.bind(_this);
      _this.handleExited = _this.handleExited.bind(_this);
      _this.handleWindowResize = _this.handleWindowResize.bind(_this);
      _this.handleDialogClick = _this.handleDialogClick.bind(_this);
      _this.state = { style: {} };
      return _this;
    }
    Modal.prototype.getChildContext = function getChildContext() {
      return { $bs_modal: { onHide: this.props.onHide } };
    };
    Modal.prototype.componentWillUnmount = function componentWillUnmount() {
      this.handleExited();
    };
    Modal.prototype.handleEntering = function handleEntering() {
      _events2['default'].on(window, 'resize', this.handleWindowResize);
      this.updateStyle();
    };
    Modal.prototype.handleExited = function handleExited() {
      _events2['default'].off(window, 'resize', this.handleWindowResize);
    };
    Modal.prototype.handleWindowResize = function handleWindowResize() {
      this.updateStyle();
    };
    Modal.prototype.handleDialogClick = function handleDialogClick(e) {
      if (e.target !== e.currentTarget) {
        return;
      }
      this.props.onHide();
    };
    Modal.prototype.updateStyle = function updateStyle() {
      if (!_inDOM2['default']) {
        return;
      }
      var dialogNode = this._modal.getDialogElement();
      var dialogHeight = dialogNode.scrollHeight;
      var document = (0, _ownerDocument2['default'])(dialogNode);
      var bodyIsOverflowing = (0, _isOverflowing2['default'])(_reactDom2['default'].findDOMNode(this.props.container || document.body));
      var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;
      this.setState({ style: {
          paddingRight: bodyIsOverflowing && !modalIsOverflowing ? (0, _scrollbarSize2['default'])() : undefined,
          paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? (0, _scrollbarSize2['default'])() : undefined
        } });
    };
    Modal.prototype.render = function render() {
      var _this2 = this;
      var _props = this.props,
          backdrop = _props.backdrop,
          animation = _props.animation,
          show = _props.show,
          Dialog = _props.dialogComponentClass,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          onEntering = _props.onEntering,
          onExited = _props.onExited,
          props = (0, _objectWithoutProperties3['default'])(_props, ['backdrop', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);
      var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Modal2['default']),
          baseModalProps = _splitComponentProps[0],
          dialogProps = _splitComponentProps[1];
      var inClassName = show && !animation && 'in';
      return _react2['default'].createElement(_Modal2['default'], (0, _extends3['default'])({}, baseModalProps, {
        ref: function ref(c) {
          _this2._modal = c;
        },
        show: show,
        onEntering: (0, _createChainedFunction2['default'])(onEntering, this.handleEntering),
        onExited: (0, _createChainedFunction2['default'])(onExited, this.handleExited),
        backdrop: backdrop,
        backdropClassName: (0, _classnames2['default'])((0, _bootstrapUtils.prefix)(props, 'backdrop'), inClassName),
        containerClassName: (0, _bootstrapUtils.prefix)(props, 'open'),
        transition: animation ? _Fade2['default'] : undefined,
        dialogTransitionTimeout: Modal.TRANSITION_DURATION,
        backdropTransitionTimeout: Modal.BACKDROP_TRANSITION_DURATION
      }), _react2['default'].createElement(Dialog, (0, _extends3['default'])({}, dialogProps, {
        style: (0, _extends3['default'])({}, this.state.style, style),
        className: (0, _classnames2['default'])(className, inClassName),
        onClick: backdrop === true ? this.handleDialogClick : null
      }), children));
    };
    return Modal;
  }(_react2['default'].Component);
  Modal.propTypes = propTypes;
  Modal.defaultProps = defaultProps;
  Modal.childContextTypes = childContextTypes;
  Modal.Body = _ModalBody2['default'];
  Modal.Header = _ModalHeader2['default'];
  Modal.Title = _ModalTitle2['default'];
  Modal.Footer = _ModalFooter2['default'];
  Modal.Dialog = _ModalDialog2['default'];
  Modal.TRANSITION_DURATION = 300;
  Modal.BACKDROP_TRANSITION_DURATION = 150;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], Modal));
  module.exports = exports['default'];
});
$__System.registerDynamic('c1', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var ModalBody = function (_React$Component) {
    (0, _inherits3['default'])(ModalBody, _React$Component);
    function ModalBody() {
      (0, _classCallCheck3['default'])(this, ModalBody);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ModalBody.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return ModalBody;
  }(_react2['default'].Component);
  ModalBody.propTypes = propTypes;
  ModalBody.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal-body', ModalBody);
  module.exports = exports['default'];
});
$__System.registerDynamic('c2', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var ModalFooter = function (_React$Component) {
    (0, _inherits3['default'])(ModalFooter, _React$Component);
    function ModalFooter() {
      (0, _classCallCheck3['default'])(this, ModalFooter);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ModalFooter.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return ModalFooter;
  }(_react2['default'].Component);
  ModalFooter.propTypes = propTypes;
  ModalFooter.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal-footer', ModalFooter);
  module.exports = exports['default'];
});
$__System.registerDynamic('6e', ['68', '69', '6a', '50', '1c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _classCallCheck2 = $__require('68');

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = $__require('69');

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = $__require('6a');

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _propTypes = $__require('50');

  var PropTypes = _interopRequireWildcard(_propTypes);

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj['default'] = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var propTypes = {
    label: PropTypes.string.isRequired,
    onClick: PropTypes.func
  };

  var defaultProps = {
    label: 'Close'
  };

  var CloseButton = function (_React$Component) {
    (0, _inherits3['default'])(CloseButton, _React$Component);

    function CloseButton() {
      (0, _classCallCheck3['default'])(this, CloseButton);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }

    CloseButton.prototype.render = function render() {
      var _props = this.props,
          label = _props.label,
          onClick = _props.onClick;

      return _react2['default'].createElement('button', {
        type: 'button',
        className: 'close',
        onClick: onClick
      }, _react2['default'].createElement('span', { 'aria-hidden': 'true' }, '\xD7'), _react2['default'].createElement('span', { className: 'sr-only' }, label));
    };

    return CloseButton;
  }(_react2['default'].Component);

  CloseButton.propTypes = propTypes;
  CloseButton.defaultProps = defaultProps;

  exports['default'] = CloseButton;
  module.exports = exports['default'];
});
$__System.registerDynamic('c3', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '9e', '6e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  var _CloseButton = $__require('6e');
  var _CloseButton2 = _interopRequireDefault(_CloseButton);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    closeLabel: _propTypes2['default'].string,
    closeButton: _propTypes2['default'].bool,
    onHide: _propTypes2['default'].func
  };
  var defaultProps = {
    closeLabel: 'Close',
    closeButton: false
  };
  var contextTypes = { $bs_modal: _propTypes2['default'].shape({ onHide: _propTypes2['default'].func }) };
  var ModalHeader = function (_React$Component) {
    (0, _inherits3['default'])(ModalHeader, _React$Component);
    function ModalHeader() {
      (0, _classCallCheck3['default'])(this, ModalHeader);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ModalHeader.prototype.render = function render() {
      var _props = this.props,
          closeLabel = _props.closeLabel,
          closeButton = _props.closeButton,
          onHide = _props.onHide,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['closeLabel', 'closeButton', 'onHide', 'className', 'children']);
      var modal = this.context.$bs_modal;
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), closeButton && _react2['default'].createElement(_CloseButton2['default'], {
        label: closeLabel,
        onClick: (0, _createChainedFunction2['default'])(modal && modal.onHide, onHide)
      }), children);
    };
    return ModalHeader;
  }(_react2['default'].Component);
  ModalHeader.propTypes = propTypes;
  ModalHeader.defaultProps = defaultProps;
  ModalHeader.contextTypes = contextTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal-header', ModalHeader);
  module.exports = exports['default'];
});
$__System.registerDynamic('c4', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'h4' };
  var ModalTitle = function (_React$Component) {
    (0, _inherits3['default'])(ModalTitle, _React$Component);
    function ModalTitle() {
      (0, _classCallCheck3['default'])(this, ModalTitle);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ModalTitle.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return ModalTitle;
  }(_react2['default'].Component);
  ModalTitle.propTypes = propTypes;
  ModalTitle.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('modal-title', ModalTitle);
  module.exports = exports['default'];
});
$__System.registerDynamic('c5', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    fluid: _propTypes2['default'].bool,
    componentClass: _elementType2['default']
  };
  var defaultProps = {
    componentClass: 'div',
    fluid: false
  };
  var Grid = function (_React$Component) {
    (0, _inherits3['default'])(Grid, _React$Component);
    function Grid() {
      (0, _classCallCheck3['default'])(this, Grid);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Grid.prototype.render = function render() {
      var _props = this.props,
          fluid = _props.fluid,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['fluid', 'componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.prefix)(bsProps, fluid && 'fluid');
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Grid;
  }(_react2['default'].Component);
  Grid.propTypes = propTypes;
  Grid.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('container', Grid);
  module.exports = exports['default'];
});
$__System.registerDynamic('c6', ['67', '71', '68', '69', '6a', '1c', '50', 'c7', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Collapse = $__require('c7');
  var _Collapse2 = _interopRequireDefault(_Collapse);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var contextTypes = { $bs_navbar: _propTypes2['default'].shape({
      bsClass: _propTypes2['default'].string,
      expanded: _propTypes2['default'].bool
    }) };
  var NavbarCollapse = function (_React$Component) {
    (0, _inherits3['default'])(NavbarCollapse, _React$Component);
    function NavbarCollapse() {
      (0, _classCallCheck3['default'])(this, NavbarCollapse);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    NavbarCollapse.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['children']);
      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };
      var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'collapse');
      return _react2['default'].createElement(_Collapse2['default'], (0, _extends3['default'])({ 'in': navbarProps.expanded }, props), _react2['default'].createElement('div', { className: bsClassName }, children));
    };
    return NavbarCollapse;
  }(_react2['default'].Component);
  NavbarCollapse.contextTypes = contextTypes;
  exports['default'] = NavbarCollapse;
  module.exports = exports['default'];
});
$__System.registerDynamic('c8', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var contextTypes = { $bs_navbar: _propTypes2['default'].shape({ bsClass: _propTypes2['default'].string }) };
  var NavbarHeader = function (_React$Component) {
    (0, _inherits3['default'])(NavbarHeader, _React$Component);
    function NavbarHeader() {
      (0, _classCallCheck3['default'])(this, NavbarHeader);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    NavbarHeader.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };
      var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'header');
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, bsClassName) }));
    };
    return NavbarHeader;
  }(_react2['default'].Component);
  NavbarHeader.contextTypes = contextTypes;
  exports['default'] = NavbarHeader;
  module.exports = exports['default'];
});
$__System.registerDynamic('c9', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    onClick: _propTypes2['default'].func,
    children: _propTypes2['default'].node
  };
  var contextTypes = { $bs_navbar: _propTypes2['default'].shape({
      bsClass: _propTypes2['default'].string,
      expanded: _propTypes2['default'].bool,
      onToggle: _propTypes2['default'].func.isRequired
    }) };
  var NavbarToggle = function (_React$Component) {
    (0, _inherits3['default'])(NavbarToggle, _React$Component);
    function NavbarToggle() {
      (0, _classCallCheck3['default'])(this, NavbarToggle);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    NavbarToggle.prototype.render = function render() {
      var _props = this.props,
          onClick = _props.onClick,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['onClick', 'className', 'children']);
      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };
      var buttonProps = (0, _extends3['default'])({ type: 'button' }, props, {
        onClick: (0, _createChainedFunction2['default'])(onClick, navbarProps.onToggle),
        className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')
      });
      if (children) {
        return _react2['default'].createElement('button', buttonProps, children);
      }
      return _react2['default'].createElement('button', buttonProps, _react2['default'].createElement('span', { className: 'sr-only' }, 'Toggle navigation'), _react2['default'].createElement('span', { className: 'icon-bar' }), _react2['default'].createElement('span', { className: 'icon-bar' }), _react2['default'].createElement('span', { className: 'icon-bar' }));
    };
    return NavbarToggle;
  }(_react2['default'].Component);
  NavbarToggle.propTypes = propTypes;
  NavbarToggle.contextTypes = contextTypes;
  exports['default'] = NavbarToggle;
  module.exports = exports['default'];
});
$__System.registerDynamic('ca', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', 'cc', 'c5', 'cb', 'c6', 'c8', 'c9', '6c', '6d', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _uncontrollable = $__require('cc');
  var _uncontrollable2 = _interopRequireDefault(_uncontrollable);
  var _Grid = $__require('c5');
  var _Grid2 = _interopRequireDefault(_Grid);
  var _NavbarBrand = $__require('cb');
  var _NavbarBrand2 = _interopRequireDefault(_NavbarBrand);
  var _NavbarCollapse = $__require('c6');
  var _NavbarCollapse2 = _interopRequireDefault(_NavbarCollapse);
  var _NavbarHeader = $__require('c8');
  var _NavbarHeader2 = _interopRequireDefault(_NavbarHeader);
  var _NavbarToggle = $__require('c9');
  var _NavbarToggle2 = _interopRequireDefault(_NavbarToggle);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    fixedTop: _propTypes2['default'].bool,
    fixedBottom: _propTypes2['default'].bool,
    staticTop: _propTypes2['default'].bool,
    inverse: _propTypes2['default'].bool,
    fluid: _propTypes2['default'].bool,
    componentClass: _elementType2['default'],
    onToggle: _propTypes2['default'].func,
    onSelect: _propTypes2['default'].func,
    collapseOnSelect: _propTypes2['default'].bool,
    expanded: _propTypes2['default'].bool,
    role: _propTypes2['default'].string
  };
  var defaultProps = {
    componentClass: 'nav',
    fixedTop: false,
    fixedBottom: false,
    staticTop: false,
    inverse: false,
    fluid: false,
    collapseOnSelect: false
  };
  var childContextTypes = { $bs_navbar: _propTypes2['default'].shape({
      bsClass: _propTypes2['default'].string,
      expanded: _propTypes2['default'].bool,
      onToggle: _propTypes2['default'].func.isRequired,
      onSelect: _propTypes2['default'].func
    }) };
  var Navbar = function (_React$Component) {
    (0, _inherits3['default'])(Navbar, _React$Component);
    function Navbar(props, context) {
      (0, _classCallCheck3['default'])(this, Navbar);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleToggle = _this.handleToggle.bind(_this);
      _this.handleCollapse = _this.handleCollapse.bind(_this);
      return _this;
    }
    Navbar.prototype.getChildContext = function getChildContext() {
      var _props = this.props,
          bsClass = _props.bsClass,
          expanded = _props.expanded,
          onSelect = _props.onSelect,
          collapseOnSelect = _props.collapseOnSelect;
      return { $bs_navbar: {
          bsClass: bsClass,
          expanded: expanded,
          onToggle: this.handleToggle,
          onSelect: (0, _createChainedFunction2['default'])(onSelect, collapseOnSelect ? this.handleCollapse : null)
        } };
    };
    Navbar.prototype.handleCollapse = function handleCollapse() {
      var _props2 = this.props,
          onToggle = _props2.onToggle,
          expanded = _props2.expanded;
      if (expanded) {
        onToggle(false);
      }
    };
    Navbar.prototype.handleToggle = function handleToggle() {
      var _props3 = this.props,
          onToggle = _props3.onToggle,
          expanded = _props3.expanded;
      onToggle(!expanded);
    };
    Navbar.prototype.render = function render() {
      var _extends2;
      var _props4 = this.props,
          Component = _props4.componentClass,
          fixedTop = _props4.fixedTop,
          fixedBottom = _props4.fixedBottom,
          staticTop = _props4.staticTop,
          inverse = _props4.inverse,
          fluid = _props4.fluid,
          className = _props4.className,
          children = _props4.children,
          props = (0, _objectWithoutProperties3['default'])(_props4, ['componentClass', 'fixedTop', 'fixedBottom', 'staticTop', 'inverse', 'fluid', 'className', 'children']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['expanded', 'onToggle', 'onSelect', 'collapseOnSelect']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      if (elementProps.role === undefined && Component !== 'nav') {
        elementProps.role = 'navigation';
      }
      if (inverse) {
        bsProps.bsStyle = _StyleConfig.Style.INVERSE;
      }
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-top')] = fixedTop, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'fixed-bottom')] = fixedBottom, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'static-top')] = staticTop, _extends2));
      return _react2['default'].createElement(Component, (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), _react2['default'].createElement(_Grid2['default'], { fluid: fluid }, children));
    };
    return Navbar;
  }(_react2['default'].Component);
  Navbar.propTypes = propTypes;
  Navbar.defaultProps = defaultProps;
  Navbar.childContextTypes = childContextTypes;
  (0, _bootstrapUtils.bsClass)('navbar', Navbar);
  var UncontrollableNavbar = (0, _uncontrollable2['default'])(Navbar, { expanded: 'onToggle' });
  function createSimpleWrapper(tag, suffix, displayName) {
    var Wrapper = function Wrapper(_ref, _ref2) {
      var _ref2$$bs_navbar = _ref2.$bs_navbar,
          navbarProps = _ref2$$bs_navbar === undefined ? { bsClass: 'navbar' } : _ref2$$bs_navbar;
      var Component = _ref.componentClass,
          className = _ref.className,
          pullRight = _ref.pullRight,
          pullLeft = _ref.pullLeft,
          props = (0, _objectWithoutProperties3['default'])(_ref, ['componentClass', 'className', 'pullRight', 'pullLeft']);
      return _react2['default'].createElement(Component, (0, _extends4['default'])({}, props, { className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(navbarProps, suffix), pullRight && (0, _bootstrapUtils.prefix)(navbarProps, 'right'), pullLeft && (0, _bootstrapUtils.prefix)(navbarProps, 'left')) }));
    };
    Wrapper.displayName = displayName;
    Wrapper.propTypes = {
      componentClass: _elementType2['default'],
      pullRight: _propTypes2['default'].bool,
      pullLeft: _propTypes2['default'].bool
    };
    Wrapper.defaultProps = {
      componentClass: tag,
      pullRight: false,
      pullLeft: false
    };
    Wrapper.contextTypes = { $bs_navbar: _propTypes2['default'].shape({ bsClass: _propTypes2['default'].string }) };
    return Wrapper;
  }
  UncontrollableNavbar.Brand = _NavbarBrand2['default'];
  UncontrollableNavbar.Header = _NavbarHeader2['default'];
  UncontrollableNavbar.Toggle = _NavbarToggle2['default'];
  UncontrollableNavbar.Collapse = _NavbarCollapse2['default'];
  UncontrollableNavbar.Form = createSimpleWrapper('div', 'form', 'NavbarForm');
  UncontrollableNavbar.Text = createSimpleWrapper('p', 'text', 'NavbarText');
  UncontrollableNavbar.Link = createSimpleWrapper('a', 'link', 'NavbarLink');
  exports['default'] = (0, _bootstrapUtils.bsStyles)([_StyleConfig.Style.DEFAULT, _StyleConfig.Style.INVERSE], _StyleConfig.Style.DEFAULT, UncontrollableNavbar);
  module.exports = exports['default'];
});
$__System.registerDynamic('cb', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var contextTypes = { $bs_navbar: _propTypes2['default'].shape({ bsClass: _propTypes2['default'].string }) };
  var NavbarBrand = function (_React$Component) {
    (0, _inherits3['default'])(NavbarBrand, _React$Component);
    function NavbarBrand() {
      (0, _classCallCheck3['default'])(this, NavbarBrand);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    NavbarBrand.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className', 'children']);
      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };
      var bsClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'brand');
      if (_react2['default'].isValidElement(children)) {
        return _react2['default'].cloneElement(children, { className: (0, _classnames2['default'])(children.props.className, className, bsClassName) });
      }
      return _react2['default'].createElement('span', (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, bsClassName) }), children);
    };
    return NavbarBrand;
  }(_react2['default'].Component);
  NavbarBrand.contextTypes = contextTypes;
  exports['default'] = NavbarBrand;
  module.exports = exports['default'];
});
$__System.registerDynamic('cd', ['71', '68', '69', '6a', '67', '6f', '1c', '50', '86', '87', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Dropdown = $__require('86');
  var _Dropdown2 = _interopRequireDefault(_Dropdown);
  var _splitComponentProps2 = $__require('87');
  var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _Dropdown2['default'].propTypes, {
    title: _propTypes2['default'].node.isRequired,
    noCaret: _propTypes2['default'].bool,
    active: _propTypes2['default'].bool,
    children: _propTypes2['default'].node
  });
  var NavDropdown = function (_React$Component) {
    (0, _inherits3['default'])(NavDropdown, _React$Component);
    function NavDropdown() {
      (0, _classCallCheck3['default'])(this, NavDropdown);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    NavDropdown.prototype.isActive = function isActive(_ref, activeKey, activeHref) {
      var props = _ref.props;
      var _this2 = this;
      if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {
        return true;
      }
      if (_ValidComponentChildren2['default'].some(props.children, function (child) {
        return _this2.isActive(child, activeKey, activeHref);
      })) {
        return true;
      }
      return props.active;
    };
    NavDropdown.prototype.render = function render() {
      var _this3 = this;
      var _props = this.props,
          title = _props.title,
          activeKey = _props.activeKey,
          activeHref = _props.activeHref,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['title', 'activeKey', 'activeHref', 'className', 'style', 'children']);
      var active = this.isActive(this, activeKey, activeHref);
      delete props.active;
      delete props.eventKey;
      var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Dropdown2['default'].ControlledComponent),
          dropdownProps = _splitComponentProps[0],
          toggleProps = _splitComponentProps[1];
      return _react2['default'].createElement(_Dropdown2['default'], (0, _extends3['default'])({}, dropdownProps, {
        componentClass: 'li',
        className: (0, _classnames2['default'])(className, { active: active }),
        style: style
      }), _react2['default'].createElement(_Dropdown2['default'].Toggle, (0, _extends3['default'])({}, toggleProps, { useAnchor: true }), title), _react2['default'].createElement(_Dropdown2['default'].Menu, null, _ValidComponentChildren2['default'].map(children, function (child) {
        return _react2['default'].cloneElement(child, { active: _this3.isActive(child, activeKey, activeHref) });
      })));
    };
    return NavDropdown;
  }(_react2['default'].Component);
  NavDropdown.propTypes = propTypes;
  exports['default'] = NavDropdown;
  module.exports = exports['default'];
});
$__System.registerDynamic("b5", ["1c", "50", "4c", "ba", "b6", "b8"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _componentOrElement = $__require("ba");
  var _componentOrElement2 = _interopRequireDefault(_componentOrElement);
  var _ownerDocument = $__require("b6");
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  var _getContainer = $__require("b8");
  var _getContainer2 = _interopRequireDefault(_getContainer);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Portal = function (_React$Component) {
    _inherits(Portal, _React$Component);
    function Portal() {
      var _ref;
      var _temp, _this, _ret;
      _classCallCheck(this, Portal);
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this._mountOverlayTarget = function () {
        if (!_this._overlayTarget) {
          _this._overlayTarget = document.createElement('div');
          _this._portalContainerNode = (0, _getContainer2.default)(_this.props.container, (0, _ownerDocument2.default)(_this).body);
          _this._portalContainerNode.appendChild(_this._overlayTarget);
        }
      }, _this._unmountOverlayTarget = function () {
        if (_this._overlayTarget) {
          _this._portalContainerNode.removeChild(_this._overlayTarget);
          _this._overlayTarget = null;
        }
        _this._portalContainerNode = null;
      }, _this._renderOverlay = function () {
        var overlay = !_this.props.children ? null : _react2.default.Children.only(_this.props.children);
        if (overlay !== null) {
          _this._mountOverlayTarget();
          _this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(_this, overlay, _this._overlayTarget);
        } else {
          _this._unrenderOverlay();
          _this._unmountOverlayTarget();
        }
      }, _this._unrenderOverlay = function () {
        if (_this._overlayTarget) {
          _reactDom2.default.unmountComponentAtNode(_this._overlayTarget);
          _this._overlayInstance = null;
        }
      }, _this.getMountNode = function () {
        return _this._overlayTarget;
      }, _this.getOverlayDOMNode = function () {
        if (!_this._isMounted) {
          throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
        }
        if (_this._overlayInstance) {
          return _reactDom2.default.findDOMNode(_this._overlayInstance);
        }
        return null;
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(Portal, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this._isMounted = true;
        this._renderOverlay();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this._renderOverlay();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (this._overlayTarget && nextProps.container !== this.props.container) {
          this._portalContainerNode.removeChild(this._overlayTarget);
          this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);
          this._portalContainerNode.appendChild(this._overlayTarget);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this._isMounted = false;
        this._unrenderOverlay();
        this._unmountOverlayTarget();
      }
    }, {
      key: 'render',
      value: function render() {
        return null;
      }
    }]);
    return Portal;
  }(_react2.default.Component);
  Portal.displayName = 'Portal';
  Portal.propTypes = { container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]) };
  exports.default = Portal;
  module.exports = exports['default'];
});
$__System.registerDynamic("ba", ["1c", "ce"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
  };
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _createChainableTypeChecker = $__require("ce");
  var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
    if (_react2.default.isValidElement(propValue)) {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement. You can usually obtain a ReactComponent or DOMElement ' + 'from a ReactElement by attaching a ref to it.');
    }
    if ((propType !== 'object' || typeof propValue.render !== 'function') && propValue.nodeType !== 1) {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected a ReactComponent or a ') + 'DOMElement.');
    }
    return null;
  }
  exports.default = (0, _createChainableTypeChecker2.default)(validate);
});
$__System.registerDynamic('cf', ['a2', 'bc', 'bd'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = offset;
  var _contains = $__require('a2');
  var _contains2 = _interopRequireDefault(_contains);
  var _isWindow = $__require('bc');
  var _isWindow2 = _interopRequireDefault(_isWindow);
  var _ownerDocument = $__require('bd');
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function offset(node) {
    var doc = (0, _ownerDocument2.default)(node),
        win = (0, _isWindow2.default)(doc),
        docElem = doc && doc.documentElement,
        box = {
      top: 0,
      left: 0,
      height: 0,
      width: 0
    };
    if (!doc) return;
    if (!(0, _contains2.default)(docElem, node)) return box;
    if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect();
    box = {
      top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
      left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),
      width: (box.width == null ? node.offsetWidth : box.width) || 0,
      height: (box.height == null ? node.offsetHeight : box.height) || 0
    };
    return box;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('d0', ['bd', 'd1'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = offsetParent;
  var _ownerDocument = $__require('bd');
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  var _style = $__require('d1');
  var _style2 = _interopRequireDefault(_style);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function nodeName(node) {
    return node.nodeName && node.nodeName.toLowerCase();
  }
  function offsetParent(node) {
    var doc = (0, _ownerDocument2.default)(node),
        offsetParent = node && node.offsetParent;
    while (offsetParent && nodeName(node) !== 'html' && (0, _style2.default)(offsetParent, 'position') === 'static') {
      offsetParent = offsetParent.offsetParent;
    }
    return offsetParent || doc.documentElement;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('d2', ['bc'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = scrollTop;
  var _isWindow = $__require('bc');
  var _isWindow2 = _interopRequireDefault(_isWindow);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function scrollTop(node, val) {
    var win = (0, _isWindow2.default)(node);
    if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;
    if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('d3', ['cf', 'd0', 'd4', 'd2', 'd1'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.default = position;
  var _offset = $__require('cf');
  var _offset2 = _interopRequireDefault(_offset);
  var _offsetParent = $__require('d0');
  var _offsetParent2 = _interopRequireDefault(_offsetParent);
  var _scrollTop = $__require('d4');
  var _scrollTop2 = _interopRequireDefault(_scrollTop);
  var _scrollLeft = $__require('d2');
  var _scrollLeft2 = _interopRequireDefault(_scrollLeft);
  var _style = $__require('d1');
  var _style2 = _interopRequireDefault(_style);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function nodeName(node) {
    return node.nodeName && node.nodeName.toLowerCase();
  }
  function position(node, offsetParent) {
    var parentOffset = {
      top: 0,
      left: 0
    },
        offset;
    if ((0, _style2.default)(node, 'position') === 'fixed') {
      offset = node.getBoundingClientRect();
    } else {
      offsetParent = offsetParent || (0, _offsetParent2.default)(node);
      offset = (0, _offset2.default)(node);
      if (nodeName(offsetParent) !== 'html') parentOffset = (0, _offset2.default)(offsetParent);
      parentOffset.top += parseInt((0, _style2.default)(offsetParent, 'borderTopWidth'), 10) - (0, _scrollTop2.default)(offsetParent) || 0;
      parentOffset.left += parseInt((0, _style2.default)(offsetParent, 'borderLeftWidth'), 10) - (0, _scrollLeft2.default)(offsetParent) || 0;
    }
    return _extends({}, offset, {
      top: offset.top - parentOffset.top - (parseInt((0, _style2.default)(node, 'marginTop'), 10) || 0),
      left: offset.left - parentOffset.left - (parseInt((0, _style2.default)(node, 'marginLeft'), 10) || 0)
    });
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("bc", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getWindow;
  function getWindow(node) {
    return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('d4', ['bc'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = scrollTop;
  var _isWindow = $__require('bc');
  var _isWindow2 = _interopRequireDefault(_isWindow);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function scrollTop(node, val) {
    var win = (0, _isWindow2.default)(node);
    if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;
    if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('d5', ['cf', 'd3', 'd4', 'b6'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = calculatePosition;
  var _offset = $__require('cf');
  var _offset2 = _interopRequireDefault(_offset);
  var _position = $__require('d3');
  var _position2 = _interopRequireDefault(_position);
  var _scrollTop = $__require('d4');
  var _scrollTop2 = _interopRequireDefault(_scrollTop);
  var _ownerDocument = $__require('b6');
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function getContainerDimensions(containerNode) {
    var width = void 0,
        height = void 0,
        scroll = void 0;
    if (containerNode.tagName === 'BODY') {
      width = window.innerWidth;
      height = window.innerHeight;
      scroll = (0, _scrollTop2.default)((0, _ownerDocument2.default)(containerNode).documentElement) || (0, _scrollTop2.default)(containerNode);
    } else {
      var _getOffset = (0, _offset2.default)(containerNode);
      width = _getOffset.width;
      height = _getOffset.height;
      scroll = (0, _scrollTop2.default)(containerNode);
    }
    return {
      width: width,
      height: height,
      scroll: scroll
    };
  }
  function getTopDelta(top, overlayHeight, container, padding) {
    var containerDimensions = getContainerDimensions(container);
    var containerScroll = containerDimensions.scroll;
    var containerHeight = containerDimensions.height;
    var topEdgeOffset = top - padding - containerScroll;
    var bottomEdgeOffset = top + padding - containerScroll + overlayHeight;
    if (topEdgeOffset < 0) {
      return -topEdgeOffset;
    } else if (bottomEdgeOffset > containerHeight) {
      return containerHeight - bottomEdgeOffset;
    } else {
      return 0;
    }
  }
  function getLeftDelta(left, overlayWidth, container, padding) {
    var containerDimensions = getContainerDimensions(container);
    var containerWidth = containerDimensions.width;
    var leftEdgeOffset = left - padding;
    var rightEdgeOffset = left + padding + overlayWidth;
    if (leftEdgeOffset < 0) {
      return -leftEdgeOffset;
    } else if (rightEdgeOffset > containerWidth) {
      return containerWidth - rightEdgeOffset;
    }
    return 0;
  }
  function calculatePosition(placement, overlayNode, target, container, padding) {
    var childOffset = container.tagName === 'BODY' ? (0, _offset2.default)(target) : (0, _position2.default)(target, container);
    var _getOffset2 = (0, _offset2.default)(overlayNode);
    var overlayHeight = _getOffset2.height;
    var overlayWidth = _getOffset2.width;
    var positionLeft = void 0,
        positionTop = void 0,
        arrowOffsetLeft = void 0,
        arrowOffsetTop = void 0;
    if (placement === 'left' || placement === 'right') {
      positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;
      if (placement === 'left') {
        positionLeft = childOffset.left - overlayWidth;
      } else {
        positionLeft = childOffset.left + childOffset.width;
      }
      var topDelta = getTopDelta(positionTop, overlayHeight, container, padding);
      positionTop += topDelta;
      arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + '%';
      arrowOffsetLeft = void 0;
    } else if (placement === 'top' || placement === 'bottom') {
      positionLeft = childOffset.left + (childOffset.width - overlayWidth) / 2;
      if (placement === 'top') {
        positionTop = childOffset.top - overlayHeight;
      } else {
        positionTop = childOffset.top + childOffset.height;
      }
      var leftDelta = getLeftDelta(positionLeft, overlayWidth, container, padding);
      positionLeft += leftDelta;
      arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + '%';
      arrowOffsetTop = void 0;
    } else {
      throw new Error('calcOverlayPosition(): No such placement of "' + placement + '" found.');
    }
    return {
      positionLeft: positionLeft,
      positionTop: positionTop,
      arrowOffsetLeft: arrowOffsetLeft,
      arrowOffsetTop: arrowOffsetTop
    };
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('b8', ['4c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = getContainer;

  var _reactDom = $__require('4c');

  var _reactDom2 = _interopRequireDefault(_reactDom);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function getContainer(container, defaultContainer) {
    container = typeof container === 'function' ? container() : container;
    return _reactDom2.default.findDOMNode(container) || defaultContainer;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("d6", ["6f", "1c", "50", "4c", "ba", "d5", "b8", "b6"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _classnames = $__require("6f");
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _componentOrElement = $__require("ba");
  var _componentOrElement2 = _interopRequireDefault(_componentOrElement);
  var _calculatePosition = $__require("d5");
  var _calculatePosition2 = _interopRequireDefault(_calculatePosition);
  var _getContainer = $__require("b8");
  var _getContainer2 = _interopRequireDefault(_getContainer);
  var _ownerDocument = $__require("b6");
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }
    return target;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Position = function (_React$Component) {
    _inherits(Position, _React$Component);
    function Position(props, context) {
      _classCallCheck(this, Position);
      var _this = _possibleConstructorReturn(this, (Position.__proto__ || Object.getPrototypeOf(Position)).call(this, props, context));
      _this.getTarget = function () {
        var target = _this.props.target;
        var targetElement = typeof target === 'function' ? target() : target;
        return targetElement && _reactDom2.default.findDOMNode(targetElement) || null;
      };
      _this.maybeUpdatePosition = function (placementChanged) {
        var target = _this.getTarget();
        if (!_this.props.shouldUpdatePosition && target === _this._lastTarget && !placementChanged) {
          return;
        }
        _this.updatePosition(target);
      };
      _this.state = {
        positionLeft: 0,
        positionTop: 0,
        arrowOffsetLeft: null,
        arrowOffsetTop: null
      };
      _this._needsFlush = false;
      _this._lastTarget = null;
      return _this;
    }
    _createClass(Position, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.updatePosition(this.getTarget());
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps() {
        this._needsFlush = true;
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this._needsFlush) {
          this._needsFlush = false;
          this.maybeUpdatePosition(this.props.placement !== prevProps.placement);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var children = _props.children;
        var className = _props.className;
        var props = _objectWithoutProperties(_props, ['children', 'className']);
        var _state = this.state;
        var positionLeft = _state.positionLeft;
        var positionTop = _state.positionTop;
        var arrowPosition = _objectWithoutProperties(_state, ['positionLeft', 'positionTop']);
        delete props.target;
        delete props.container;
        delete props.containerPadding;
        delete props.shouldUpdatePosition;
        var child = _react2.default.Children.only(children);
        return (0, _react.cloneElement)(child, _extends({}, props, arrowPosition, {
          positionLeft: positionLeft,
          positionTop: positionTop,
          className: (0, _classnames2.default)(className, child.props.className),
          style: _extends({}, child.props.style, {
            left: positionLeft,
            top: positionTop
          })
        }));
      }
    }, {
      key: 'updatePosition',
      value: function updatePosition(target) {
        this._lastTarget = target;
        if (!target) {
          this.setState({
            positionLeft: 0,
            positionTop: 0,
            arrowOffsetLeft: null,
            arrowOffsetTop: null
          });
          return;
        }
        var overlay = _reactDom2.default.findDOMNode(this);
        var container = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);
        this.setState((0, _calculatePosition2.default)(this.props.placement, overlay, target, container, this.props.containerPadding));
      }
    }]);
    return Position;
  }(_react2.default.Component);
  Position.propTypes = {
    target: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),
    container: _propTypes2.default.oneOfType([_componentOrElement2.default, _propTypes2.default.func]),
    containerPadding: _propTypes2.default.number,
    placement: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),
    shouldUpdatePosition: _propTypes2.default.bool
  };
  Position.displayName = 'Position';
  Position.defaultProps = {
    containerPadding: 0,
    placement: 'right',
    shouldUpdatePosition: false
  };
  exports.default = Position;
  module.exports = exports['default'];
});
$__System.registerDynamic('ce', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = createChainableTypeChecker;
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  // Mostly taken from ReactPropTypes.

  function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location, propFullName) {
      var componentNameSafe = componentName || '<<anonymous>>';
      var propFullNameSafe = propFullName || propName;

      if (props[propName] == null) {
        if (isRequired) {
          return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));
        }

        return null;
      }

      for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
        args[_key - 6] = arguments[_key];
      }

      return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }
});
$__System.registerDynamic("bb", ["1c", "ce"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
  };
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _createChainableTypeChecker = $__require("ce");
  var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function elementType(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
    if (_react2.default.isValidElement(propValue)) {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
    }
    if (propType !== 'function' && propType !== 'string') {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
    }
    return null;
  }
  exports.default = (0, _createChainableTypeChecker2.default)(elementType);
});
$__System.registerDynamic("d7", ["1c", "50", "b5", "d6", "d8", "bb"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Portal = $__require("b5");
  var _Portal2 = _interopRequireDefault(_Portal);
  var _Position = $__require("d6");
  var _Position2 = _interopRequireDefault(_Position);
  var _RootCloseWrapper = $__require("d8");
  var _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);
  var _elementType = $__require("bb");
  var _elementType2 = _interopRequireDefault(_elementType);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }
    return target;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Overlay = function (_React$Component) {
    _inherits(Overlay, _React$Component);
    function Overlay(props, context) {
      _classCallCheck(this, Overlay);
      var _this = _possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this, props, context));
      _this.handleHidden = function () {
        _this.setState({ exited: true });
        if (_this.props.onExited) {
          var _this$props;
          (_this$props = _this.props).onExited.apply(_this$props, arguments);
        }
      };
      _this.state = { exited: !props.show };
      _this.onHiddenListener = _this.handleHidden.bind(_this);
      return _this;
    }
    _createClass(Overlay, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.show) {
          this.setState({ exited: false });
        } else if (!nextProps.transition) {
          this.setState({ exited: true });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var container = _props.container;
        var containerPadding = _props.containerPadding;
        var target = _props.target;
        var placement = _props.placement;
        var shouldUpdatePosition = _props.shouldUpdatePosition;
        var rootClose = _props.rootClose;
        var children = _props.children;
        var Transition = _props.transition;
        var props = _objectWithoutProperties(_props, ['container', 'containerPadding', 'target', 'placement', 'shouldUpdatePosition', 'rootClose', 'children', 'transition']);
        var mountOverlay = props.show || Transition && !this.state.exited;
        if (!mountOverlay) {
          return null;
        }
        var child = children;
        child = _react2.default.createElement(_Position2.default, {
          container: container,
          containerPadding: containerPadding,
          target: target,
          placement: placement,
          shouldUpdatePosition: shouldUpdatePosition
        }, child);
        if (Transition) {
          var onExit = props.onExit;
          var onExiting = props.onExiting;
          var onEnter = props.onEnter;
          var onEntering = props.onEntering;
          var onEntered = props.onEntered;
          child = _react2.default.createElement(Transition, {
            'in': props.show,
            transitionAppear: true,
            onExit: onExit,
            onExiting: onExiting,
            onExited: this.onHiddenListener,
            onEnter: onEnter,
            onEntering: onEntering,
            onEntered: onEntered
          }, child);
        }
        if (rootClose) {
          child = _react2.default.createElement(_RootCloseWrapper2.default, { onRootClose: props.onHide }, child);
        }
        return _react2.default.createElement(_Portal2.default, { container: container }, child);
      }
    }]);
    return Overlay;
  }(_react2.default.Component);
  Overlay.propTypes = _extends({}, _Portal2.default.propTypes, _Position2.default.propTypes, {
    show: _propTypes2.default.bool,
    rootClose: _propTypes2.default.bool,
    onHide: function onHide(props) {
      var propType = _propTypes2.default.func;
      if (props.rootClose) {
        propType = propType.isRequired;
      }
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return propType.apply(undefined, [props].concat(args));
    },
    transition: _elementType2.default,
    onEnter: _propTypes2.default.func,
    onEntering: _propTypes2.default.func,
    onEntered: _propTypes2.default.func,
    onExit: _propTypes2.default.func,
    onExiting: _propTypes2.default.func,
    onExited: _propTypes2.default.func
  });
  exports.default = Overlay;
  module.exports = exports['default'];
});
$__System.registerDynamic('d9', ['71', '68', '69', '6a', '67', '6f', '1c', '50', 'd7', '79', 'c0'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Overlay = $__require('d7');
  var _Overlay2 = _interopRequireDefault(_Overlay);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _Fade = $__require('c0');
  var _Fade2 = _interopRequireDefault(_Fade);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _Overlay2['default'].propTypes, {
    show: _propTypes2['default'].bool,
    rootClose: _propTypes2['default'].bool,
    onHide: _propTypes2['default'].func,
    animation: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _elementType2['default']]),
    onEnter: _propTypes2['default'].func,
    onEntering: _propTypes2['default'].func,
    onEntered: _propTypes2['default'].func,
    onExit: _propTypes2['default'].func,
    onExiting: _propTypes2['default'].func,
    onExited: _propTypes2['default'].func,
    placement: _propTypes2['default'].oneOf(['top', 'right', 'bottom', 'left'])
  });
  var defaultProps = {
    animation: _Fade2['default'],
    rootClose: false,
    show: false,
    placement: 'right'
  };
  var Overlay = function (_React$Component) {
    (0, _inherits3['default'])(Overlay, _React$Component);
    function Overlay() {
      (0, _classCallCheck3['default'])(this, Overlay);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Overlay.prototype.render = function render() {
      var _props = this.props,
          animation = _props.animation,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['animation', 'children']);
      var transition = animation === true ? _Fade2['default'] : animation || null;
      var child = void 0;
      if (!transition) {
        child = (0, _react.cloneElement)(children, { className: (0, _classnames2['default'])(children.props.className, 'in') });
      } else {
        child = children;
      }
      return _react2['default'].createElement(_Overlay2['default'], (0, _extends3['default'])({}, props, { transition: transition }), child);
    };
    return Overlay;
  }(_react2['default'].Component);
  Overlay.propTypes = propTypes;
  Overlay.defaultProps = defaultProps;
  exports['default'] = Overlay;
  module.exports = exports['default'];
});
$__System.registerDynamic('da', ['71', '68', '69', '6a', '67', 'a2', '1c', '50', '4c', '80', 'd9', '9e', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _contains = $__require('a2');
    var _contains2 = _interopRequireDefault(_contains);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = $__require('4c');
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _Overlay = $__require('d9');
    var _Overlay2 = _interopRequireDefault(_Overlay);
    var _createChainedFunction = $__require('9e');
    var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    function isOneOf(one, of) {
      if (Array.isArray(of)) {
        return of.indexOf(one) >= 0;
      }
      return one === of;
    }
    var triggerType = _propTypes2['default'].oneOf(['click', 'hover', 'focus']);
    var propTypes = (0, _extends3['default'])({}, _Overlay2['default'].propTypes, {
      trigger: _propTypes2['default'].oneOfType([triggerType, _propTypes2['default'].arrayOf(triggerType)]),
      delay: _propTypes2['default'].number,
      delayShow: _propTypes2['default'].number,
      delayHide: _propTypes2['default'].number,
      defaultOverlayShown: _propTypes2['default'].bool,
      overlay: _propTypes2['default'].node.isRequired,
      onBlur: _propTypes2['default'].func,
      onClick: _propTypes2['default'].func,
      onFocus: _propTypes2['default'].func,
      onMouseOut: _propTypes2['default'].func,
      onMouseOver: _propTypes2['default'].func,
      target: _propTypes2['default'].oneOf([null]),
      onHide: _propTypes2['default'].oneOf([null]),
      show: _propTypes2['default'].oneOf([null])
    });
    var defaultProps = {
      defaultOverlayShown: false,
      trigger: ['hover', 'focus']
    };
    var OverlayTrigger = function (_React$Component) {
      (0, _inherits3['default'])(OverlayTrigger, _React$Component);
      function OverlayTrigger(props, context) {
        (0, _classCallCheck3['default'])(this, OverlayTrigger);
        var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
        _this.handleToggle = _this.handleToggle.bind(_this);
        _this.handleDelayedShow = _this.handleDelayedShow.bind(_this);
        _this.handleDelayedHide = _this.handleDelayedHide.bind(_this);
        _this.handleHide = _this.handleHide.bind(_this);
        _this.handleMouseOver = function (e) {
          return _this.handleMouseOverOut(_this.handleDelayedShow, e);
        };
        _this.handleMouseOut = function (e) {
          return _this.handleMouseOverOut(_this.handleDelayedHide, e);
        };
        _this._mountNode = null;
        _this.state = { show: props.defaultOverlayShown };
        return _this;
      }
      OverlayTrigger.prototype.componentDidMount = function componentDidMount() {
        this._mountNode = document.createElement('div');
        this.renderOverlay();
      };
      OverlayTrigger.prototype.componentDidUpdate = function componentDidUpdate() {
        this.renderOverlay();
      };
      OverlayTrigger.prototype.componentWillUnmount = function componentWillUnmount() {
        _reactDom2['default'].unmountComponentAtNode(this._mountNode);
        this._mountNode = null;
        clearTimeout(this._hoverShowDelay);
        clearTimeout(this._hoverHideDelay);
      };
      OverlayTrigger.prototype.handleToggle = function handleToggle() {
        if (this.state.show) {
          this.hide();
        } else {
          this.show();
        }
      };
      OverlayTrigger.prototype.handleDelayedShow = function handleDelayedShow() {
        var _this2 = this;
        if (this._hoverHideDelay != null) {
          clearTimeout(this._hoverHideDelay);
          this._hoverHideDelay = null;
          return;
        }
        if (this.state.show || this._hoverShowDelay != null) {
          return;
        }
        var delay = this.props.delayShow != null ? this.props.delayShow : this.props.delay;
        if (!delay) {
          this.show();
          return;
        }
        this._hoverShowDelay = setTimeout(function () {
          _this2._hoverShowDelay = null;
          _this2.show();
        }, delay);
      };
      OverlayTrigger.prototype.handleDelayedHide = function handleDelayedHide() {
        var _this3 = this;
        if (this._hoverShowDelay != null) {
          clearTimeout(this._hoverShowDelay);
          this._hoverShowDelay = null;
          return;
        }
        if (!this.state.show || this._hoverHideDelay != null) {
          return;
        }
        var delay = this.props.delayHide != null ? this.props.delayHide : this.props.delay;
        if (!delay) {
          this.hide();
          return;
        }
        this._hoverHideDelay = setTimeout(function () {
          _this3._hoverHideDelay = null;
          _this3.hide();
        }, delay);
      };
      OverlayTrigger.prototype.handleMouseOverOut = function handleMouseOverOut(handler, e) {
        var target = e.currentTarget;
        var related = e.relatedTarget || e.nativeEvent.toElement;
        if (!related || related !== target && !(0, _contains2['default'])(target, related)) {
          handler(e);
        }
      };
      OverlayTrigger.prototype.handleHide = function handleHide() {
        this.hide();
      };
      OverlayTrigger.prototype.show = function show() {
        this.setState({ show: true });
      };
      OverlayTrigger.prototype.hide = function hide() {
        this.setState({ show: false });
      };
      OverlayTrigger.prototype.makeOverlay = function makeOverlay(overlay, props) {
        return _react2['default'].createElement(_Overlay2['default'], (0, _extends3['default'])({}, props, {
          show: this.state.show,
          onHide: this.handleHide,
          target: this
        }), overlay);
      };
      OverlayTrigger.prototype.renderOverlay = function renderOverlay() {
        _reactDom2['default'].unstable_renderSubtreeIntoContainer(this, this._overlay, this._mountNode);
      };
      OverlayTrigger.prototype.render = function render() {
        var _props = this.props,
            trigger = _props.trigger,
            overlay = _props.overlay,
            children = _props.children,
            onBlur = _props.onBlur,
            onClick = _props.onClick,
            onFocus = _props.onFocus,
            onMouseOut = _props.onMouseOut,
            onMouseOver = _props.onMouseOver,
            props = (0, _objectWithoutProperties3['default'])(_props, ['trigger', 'overlay', 'children', 'onBlur', 'onClick', 'onFocus', 'onMouseOut', 'onMouseOver']);
        delete props.delay;
        delete props.delayShow;
        delete props.delayHide;
        delete props.defaultOverlayShown;
        var child = _react2['default'].Children.only(children);
        var childProps = child.props;
        var triggerProps = {};
        if (this.state.show) {
          triggerProps['aria-describedby'] = overlay.props.id;
        }
        triggerProps.onClick = (0, _createChainedFunction2['default'])(childProps.onClick, onClick);
        if (isOneOf('click', trigger)) {
          triggerProps.onClick = (0, _createChainedFunction2['default'])(triggerProps.onClick, this.handleToggle);
        }
        if (isOneOf('hover', trigger)) {
          'production' !== 'production' ? (0, _warning2['default'])(!(trigger === 'hover'), '[react-bootstrap] Specifying only the `"hover"` trigger limits the ' + 'visibility of the overlay to just mouse users. Consider also ' + 'including the `"focus"` trigger so that touch and keyboard only ' + 'users can see the overlay as well.') : void 0;
          triggerProps.onMouseOver = (0, _createChainedFunction2['default'])(childProps.onMouseOver, onMouseOver, this.handleMouseOver);
          triggerProps.onMouseOut = (0, _createChainedFunction2['default'])(childProps.onMouseOut, onMouseOut, this.handleMouseOut);
        }
        if (isOneOf('focus', trigger)) {
          triggerProps.onFocus = (0, _createChainedFunction2['default'])(childProps.onFocus, onFocus, this.handleDelayedShow);
          triggerProps.onBlur = (0, _createChainedFunction2['default'])(childProps.onBlur, onBlur, this.handleDelayedHide);
        }
        this._overlay = this.makeOverlay(overlay, props);
        return (0, _react.cloneElement)(child, triggerProps);
      };
      return OverlayTrigger;
    }(_react2['default'].Component);
    OverlayTrigger.propTypes = propTypes;
    OverlayTrigger.defaultProps = defaultProps;
    exports['default'] = OverlayTrigger;
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('db', ['67', '71', '68', '69', '6a', '6f', '1c', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var PageHeader = function (_React$Component) {
    (0, _inherits3['default'])(PageHeader, _React$Component);
    function PageHeader() {
      (0, _classCallCheck3['default'])(this, PageHeader);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    PageHeader.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), _react2['default'].createElement('h1', null, children));
    };
    return PageHeader;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('page-header', PageHeader);
  module.exports = exports['default'];
});
$__System.registerDynamic('dc', ['68', '69', '6a', 'dd', '80', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _typeof2 = $__require('dd');
    var _typeof3 = _interopRequireDefault(_typeof2);
    exports._resetWarned = _resetWarned;
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var warned = {};
    function deprecationWarning(oldname, newname, link) {
      var message = void 0;
      if ((typeof oldname === 'undefined' ? 'undefined' : (0, _typeof3['default'])(oldname)) === 'object') {
        message = oldname.message;
      } else {
        message = oldname + ' is deprecated. Use ' + newname + ' instead.';
        if (link) {
          message += '\nYou can read more about it at ' + link;
        }
      }
      if (warned[message]) {
        return;
      }
      'production' !== 'production' ? (0, _warning2['default'])(false, message) : void 0;
      warned[message] = true;
    }
    deprecationWarning.wrapper = function (Component) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return function (_Component) {
        (0, _inherits3['default'])(DeprecatedComponent, _Component);
        function DeprecatedComponent() {
          (0, _classCallCheck3['default'])(this, DeprecatedComponent);
          return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));
        }
        DeprecatedComponent.prototype.componentWillMount = function componentWillMount() {
          deprecationWarning.apply(undefined, args);
          if (_Component.prototype.componentWillMount) {
            var _Component$prototype$;
            for (var _len2 = arguments.length, methodArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              methodArgs[_key2] = arguments[_key2];
            }
            (_Component$prototype$ = _Component.prototype.componentWillMount).call.apply(_Component$prototype$, [this].concat(methodArgs));
          }
        };
        return DeprecatedComponent;
      }(Component);
    };
    exports['default'] = deprecationWarning;
    function _resetWarned() {
      warned = {};
    }
  })($__require('16'));
});
$__System.registerDynamic('de', ['df', 'dc'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _PagerItem = $__require('df');
  var _PagerItem2 = _interopRequireDefault(_PagerItem);
  var _deprecationWarning = $__require('dc');
  var _deprecationWarning2 = _interopRequireDefault(_deprecationWarning);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  exports['default'] = _deprecationWarning2['default'].wrapper(_PagerItem2['default'], '`<PageItem>`', '`<Pager.Item>`');
  module.exports = exports['default'];
});
$__System.registerDynamic('df', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '75', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    disabled: _propTypes2['default'].bool,
    previous: _propTypes2['default'].bool,
    next: _propTypes2['default'].bool,
    onClick: _propTypes2['default'].func,
    onSelect: _propTypes2['default'].func,
    eventKey: _propTypes2['default'].any
  };
  var defaultProps = {
    disabled: false,
    previous: false,
    next: false
  };
  var PagerItem = function (_React$Component) {
    (0, _inherits3['default'])(PagerItem, _React$Component);
    function PagerItem(props, context) {
      (0, _classCallCheck3['default'])(this, PagerItem);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleSelect = _this.handleSelect.bind(_this);
      return _this;
    }
    PagerItem.prototype.handleSelect = function handleSelect(e) {
      var _props = this.props,
          disabled = _props.disabled,
          onSelect = _props.onSelect,
          eventKey = _props.eventKey;
      if (onSelect || disabled) {
        e.preventDefault();
      }
      if (disabled) {
        return;
      }
      if (onSelect) {
        onSelect(eventKey, e);
      }
    };
    PagerItem.prototype.render = function render() {
      var _props2 = this.props,
          disabled = _props2.disabled,
          previous = _props2.previous,
          next = _props2.next,
          onClick = _props2.onClick,
          className = _props2.className,
          style = _props2.style,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['disabled', 'previous', 'next', 'onClick', 'className', 'style']);
      delete props.onSelect;
      delete props.eventKey;
      return _react2['default'].createElement('li', {
        className: (0, _classnames2['default'])(className, {
          disabled: disabled,
          previous: previous,
          next: next
        }),
        style: style
      }, _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, props, {
        disabled: disabled,
        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleSelect)
      })));
    };
    return PagerItem;
  }(_react2['default'].Component);
  PagerItem.propTypes = propTypes;
  PagerItem.defaultProps = defaultProps;
  exports['default'] = PagerItem;
  module.exports = exports['default'];
});
$__System.registerDynamic('e0', ['67', '71', '68', '69', '6a', '6f', '1c', '50', 'df', '6c', '9e', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _PagerItem = $__require('df');
  var _PagerItem2 = _interopRequireDefault(_PagerItem);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { onSelect: _propTypes2['default'].func };
  var Pager = function (_React$Component) {
    (0, _inherits3['default'])(Pager, _React$Component);
    function Pager() {
      (0, _classCallCheck3['default'])(this, Pager);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Pager.prototype.render = function render() {
      var _props = this.props,
          onSelect = _props.onSelect,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['onSelect', 'className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('ul', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), _ValidComponentChildren2['default'].map(children, function (child) {
        return (0, _react.cloneElement)(child, { onSelect: (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect) });
      }));
    };
    return Pager;
  }(_react2['default'].Component);
  Pager.propTypes = propTypes;
  Pager.Item = _PagerItem2['default'];
  exports['default'] = (0, _bootstrapUtils.bsClass)('pager', Pager);
  module.exports = exports['default'];
});
$__System.registerDynamic('e1', ['71', '67', '68', '69', '6a', '6f', '1c', '50', '79', 'e2', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _PaginationButton = $__require('e2');
  var _PaginationButton2 = _interopRequireDefault(_PaginationButton);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    activePage: _propTypes2['default'].number,
    items: _propTypes2['default'].number,
    maxButtons: _propTypes2['default'].number,
    boundaryLinks: _propTypes2['default'].bool,
    ellipsis: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),
    first: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),
    last: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),
    prev: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),
    next: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),
    onSelect: _propTypes2['default'].func,
    buttonComponentClass: _elementType2['default']
  };
  var defaultProps = {
    activePage: 1,
    items: 1,
    maxButtons: 0,
    first: false,
    last: false,
    prev: false,
    next: false,
    ellipsis: true,
    boundaryLinks: false
  };
  var Pagination = function (_React$Component) {
    (0, _inherits3['default'])(Pagination, _React$Component);
    function Pagination() {
      (0, _classCallCheck3['default'])(this, Pagination);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Pagination.prototype.renderPageButtons = function renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps) {
      var pageButtons = [];
      var startPage = void 0;
      var endPage = void 0;
      if (maxButtons && maxButtons < items) {
        startPage = Math.max(Math.min(activePage - Math.floor(maxButtons / 2, 10), items - maxButtons + 1), 1);
        endPage = startPage + maxButtons - 1;
      } else {
        startPage = 1;
        endPage = items;
      }
      for (var page = startPage; page <= endPage; ++page) {
        pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
          key: page,
          eventKey: page,
          active: page === activePage
        }), page));
      }
      if (ellipsis && boundaryLinks && startPage > 1) {
        if (startPage > 2) {
          pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], {
            key: 'ellipsisFirst',
            disabled: true,
            componentClass: buttonProps.componentClass
          }, _react2['default'].createElement('span', { 'aria-label': 'More' }, ellipsis === true ? '\u2026' : ellipsis)));
        }
        pageButtons.unshift(_react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
          key: 1,
          eventKey: 1,
          active: false
        }), '1'));
      }
      if (ellipsis && endPage < items) {
        if (!boundaryLinks || endPage < items - 1) {
          pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], {
            key: 'ellipsis',
            disabled: true,
            componentClass: buttonProps.componentClass
          }, _react2['default'].createElement('span', { 'aria-label': 'More' }, ellipsis === true ? '\u2026' : ellipsis)));
        }
        if (boundaryLinks) {
          pageButtons.push(_react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
            key: items,
            eventKey: items,
            active: false
          }), items));
        }
      }
      return pageButtons;
    };
    Pagination.prototype.render = function render() {
      var _props = this.props,
          activePage = _props.activePage,
          items = _props.items,
          maxButtons = _props.maxButtons,
          boundaryLinks = _props.boundaryLinks,
          ellipsis = _props.ellipsis,
          first = _props.first,
          last = _props.last,
          prev = _props.prev,
          next = _props.next,
          onSelect = _props.onSelect,
          buttonComponentClass = _props.buttonComponentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['activePage', 'items', 'maxButtons', 'boundaryLinks', 'ellipsis', 'first', 'last', 'prev', 'next', 'onSelect', 'buttonComponentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      var buttonProps = {
        onSelect: onSelect,
        componentClass: buttonComponentClass
      };
      return _react2['default'].createElement('ul', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), first && _react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
        eventKey: 1,
        disabled: activePage === 1
      }), _react2['default'].createElement('span', { 'aria-label': 'First' }, first === true ? '\xAB' : first)), prev && _react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
        eventKey: activePage - 1,
        disabled: activePage === 1
      }), _react2['default'].createElement('span', { 'aria-label': 'Previous' }, prev === true ? '\u2039' : prev)), this.renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps), next && _react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
        eventKey: activePage + 1,
        disabled: activePage >= items
      }), _react2['default'].createElement('span', { 'aria-label': 'Next' }, next === true ? '\u203A' : next)), last && _react2['default'].createElement(_PaginationButton2['default'], (0, _extends3['default'])({}, buttonProps, {
        eventKey: items,
        disabled: activePage >= items
      }), _react2['default'].createElement('span', { 'aria-label': 'Last' }, last === true ? '\xBB' : last)));
    };
    return Pagination;
  }(_react2['default'].Component);
  Pagination.propTypes = propTypes;
  Pagination.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('pagination', Pagination);
  module.exports = exports['default'];
});
$__System.registerDynamic('e2', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '75', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    componentClass: _elementType2['default'],
    className: _propTypes2['default'].string,
    eventKey: _propTypes2['default'].any,
    onSelect: _propTypes2['default'].func,
    disabled: _propTypes2['default'].bool,
    active: _propTypes2['default'].bool,
    onClick: _propTypes2['default'].func
  };
  var defaultProps = {
    componentClass: _SafeAnchor2['default'],
    active: false,
    disabled: false
  };
  var PaginationButton = function (_React$Component) {
    (0, _inherits3['default'])(PaginationButton, _React$Component);
    function PaginationButton(props, context) {
      (0, _classCallCheck3['default'])(this, PaginationButton);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleClick = _this.handleClick.bind(_this);
      return _this;
    }
    PaginationButton.prototype.handleClick = function handleClick(event) {
      var _props = this.props,
          disabled = _props.disabled,
          onSelect = _props.onSelect,
          eventKey = _props.eventKey;
      if (disabled) {
        return;
      }
      if (onSelect) {
        onSelect(eventKey, event);
      }
    };
    PaginationButton.prototype.render = function render() {
      var _props2 = this.props,
          Component = _props2.componentClass,
          active = _props2.active,
          disabled = _props2.disabled,
          onClick = _props2.onClick,
          className = _props2.className,
          style = _props2.style,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['componentClass', 'active', 'disabled', 'onClick', 'className', 'style']);
      if (Component === _SafeAnchor2['default']) {
        delete props.eventKey;
      }
      delete props.onSelect;
      return _react2['default'].createElement('li', {
        className: (0, _classnames2['default'])(className, {
          active: active,
          disabled: disabled
        }),
        style: style
      }, _react2['default'].createElement(Component, (0, _extends3['default'])({}, props, {
        disabled: disabled,
        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleClick)
      })));
    };
    return PaginationButton;
  }(_react2['default'].Component);
  PaginationButton.propTypes = propTypes;
  PaginationButton.defaultProps = defaultProps;
  exports['default'] = PaginationButton;
  module.exports = exports['default'];
});
$__System.registerDynamic('e3', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = hyphenate;

  var rUpper = /([A-Z])/g;

  function hyphenate(string) {
    return string.replace(rUpper, '-$1').toLowerCase();
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('e4', ['e3'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = hyphenateStyleName;
  var _hyphenate = $__require('e3');
  var _hyphenate2 = _interopRequireDefault(_hyphenate);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return (0, _hyphenate2.default)(string).replace(msPattern, '-ms-');
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("e5", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = camelize;
  var rHyphen = /-(.)/g;

  function camelize(string) {
    return string.replace(rHyphen, function (_, chr) {
      return chr.toUpperCase();
    });
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('e6', ['e5'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = camelizeStyleName;
  var _camelize = $__require('e5');
  var _camelize2 = _interopRequireDefault(_camelize);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return (0, _camelize2.default)(string.replace(msPattern, 'ms-'));
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('e7', ['e6'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = _getComputedStyle;
  var _camelizeStyle = $__require('e6');
  var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var rposition = /^(top|right|bottom|left)$/;
  var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;
  function _getComputedStyle(node) {
    if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
    var doc = node.ownerDocument;
    return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : { getPropertyValue: function getPropertyValue(prop) {
        var style = node.style;
        prop = (0, _camelizeStyle2.default)(prop);
        if (prop == 'float') prop = 'styleFloat';
        var current = node.currentStyle[prop] || null;
        if (current == null && style && style[prop]) current = style[prop];
        if (rnumnonpx.test(current) && !rposition.test(prop)) {
          var left = style.left;
          var runStyle = node.runtimeStyle;
          var rsLeft = runStyle && runStyle.left;
          if (rsLeft) runStyle.left = node.currentStyle.left;
          style.left = prop === 'fontSize' ? '1em' : current;
          current = style.pixelLeft + 'px';
          style.left = left;
          if (rsLeft) runStyle.left = rsLeft;
        }
        return current;
      } };
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('e8', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = removeStyle;
  function removeStyle(node, key) {
    return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("e9", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isTransform;
  var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;

  function isTransform(property) {
    return !!(property && supportedTransforms.test(property));
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('d1', ['e6', 'e4', 'e7', 'e8', 'ea', 'e9'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = style;
  var _camelizeStyle = $__require('e6');
  var _camelizeStyle2 = _interopRequireDefault(_camelizeStyle);
  var _hyphenateStyle = $__require('e4');
  var _hyphenateStyle2 = _interopRequireDefault(_hyphenateStyle);
  var _getComputedStyle2 = $__require('e7');
  var _getComputedStyle3 = _interopRequireDefault(_getComputedStyle2);
  var _removeStyle = $__require('e8');
  var _removeStyle2 = _interopRequireDefault(_removeStyle);
  var _properties = $__require('ea');
  var _isTransform = $__require('e9');
  var _isTransform2 = _interopRequireDefault(_isTransform);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function style(node, property, value) {
    var css = '';
    var transforms = '';
    var props = property;
    if (typeof property === 'string') {
      if (value === undefined) {
        return node.style[(0, _camelizeStyle2.default)(property)] || (0, _getComputedStyle3.default)(node).getPropertyValue((0, _hyphenateStyle2.default)(property));
      } else {
        (props = {})[property] = value;
      }
    }
    Object.keys(props).forEach(function (key) {
      var value = props[key];
      if (!value && value !== 0) {
        (0, _removeStyle2.default)(node, (0, _hyphenateStyle2.default)(key));
      } else if ((0, _isTransform2.default)(key)) {
        transforms += key + '(' + value + ') ';
      } else {
        css += (0, _hyphenateStyle2.default)(key) + ': ' + value + ';';
      }
    });
    if (transforms) {
      css += _properties.transform + ': ' + transforms + ';';
    }
    node.style.cssText += ';' + css;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('b2', ['d1'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('d1');
});
$__System.registerDynamic("82", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports["default"] = capitalize;
  function capitalize(string) {
    return "" + string.charAt(0).toUpperCase() + string.slice(1);
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('c7', ['67', '71', '68', '69', '6a', '6f', 'b2', '1c', '50', 'eb', '82', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _style = $__require('b2');
  var _style2 = _interopRequireDefault(_style);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Transition = $__require('eb');
  var _Transition2 = _interopRequireDefault(_Transition);
  var _capitalize = $__require('82');
  var _capitalize2 = _interopRequireDefault(_capitalize);
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var MARGINS = {
    height: ['marginTop', 'marginBottom'],
    width: ['marginLeft', 'marginRight']
  };
  function triggerBrowserReflow(node) {
    node.offsetHeight;
  }
  function getDimensionValue(dimension, elem) {
    var value = elem['offset' + (0, _capitalize2['default'])(dimension)];
    var margins = MARGINS[dimension];
    return value + parseInt((0, _style2['default'])(elem, margins[0]), 10) + parseInt((0, _style2['default'])(elem, margins[1]), 10);
  }
  var propTypes = {
    'in': _propTypes2['default'].bool,
    mountOnEnter: _propTypes2['default'].bool,
    unmountOnExit: _propTypes2['default'].bool,
    transitionAppear: _propTypes2['default'].bool,
    timeout: _propTypes2['default'].number,
    onEnter: _propTypes2['default'].func,
    onEntering: _propTypes2['default'].func,
    onEntered: _propTypes2['default'].func,
    onExit: _propTypes2['default'].func,
    onExiting: _propTypes2['default'].func,
    onExited: _propTypes2['default'].func,
    dimension: _propTypes2['default'].oneOfType([_propTypes2['default'].oneOf(['height', 'width']), _propTypes2['default'].func]),
    getDimensionValue: _propTypes2['default'].func,
    role: _propTypes2['default'].string
  };
  var defaultProps = {
    'in': false,
    timeout: 300,
    mountOnEnter: false,
    unmountOnExit: false,
    transitionAppear: false,
    dimension: 'height',
    getDimensionValue: getDimensionValue
  };
  var Collapse = function (_React$Component) {
    (0, _inherits3['default'])(Collapse, _React$Component);
    function Collapse(props, context) {
      (0, _classCallCheck3['default'])(this, Collapse);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleEnter = _this.handleEnter.bind(_this);
      _this.handleEntering = _this.handleEntering.bind(_this);
      _this.handleEntered = _this.handleEntered.bind(_this);
      _this.handleExit = _this.handleExit.bind(_this);
      _this.handleExiting = _this.handleExiting.bind(_this);
      return _this;
    }
    Collapse.prototype.handleEnter = function handleEnter(elem) {
      var dimension = this._dimension();
      elem.style[dimension] = '0';
    };
    Collapse.prototype.handleEntering = function handleEntering(elem) {
      var dimension = this._dimension();
      elem.style[dimension] = this._getScrollDimensionValue(elem, dimension);
    };
    Collapse.prototype.handleEntered = function handleEntered(elem) {
      var dimension = this._dimension();
      elem.style[dimension] = null;
    };
    Collapse.prototype.handleExit = function handleExit(elem) {
      var dimension = this._dimension();
      elem.style[dimension] = this.props.getDimensionValue(dimension, elem) + 'px';
      triggerBrowserReflow(elem);
    };
    Collapse.prototype.handleExiting = function handleExiting(elem) {
      var dimension = this._dimension();
      elem.style[dimension] = '0';
    };
    Collapse.prototype._dimension = function _dimension() {
      return typeof this.props.dimension === 'function' ? this.props.dimension() : this.props.dimension;
    };
    Collapse.prototype._getScrollDimensionValue = function _getScrollDimensionValue(elem, dimension) {
      return elem['scroll' + (0, _capitalize2['default'])(dimension)] + 'px';
    };
    Collapse.prototype.render = function render() {
      var _props = this.props,
          onEnter = _props.onEnter,
          onEntering = _props.onEntering,
          onEntered = _props.onEntered,
          onExit = _props.onExit,
          onExiting = _props.onExiting,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'className']);
      delete props.dimension;
      delete props.getDimensionValue;
      var handleEnter = (0, _createChainedFunction2['default'])(this.handleEnter, onEnter);
      var handleEntering = (0, _createChainedFunction2['default'])(this.handleEntering, onEntering);
      var handleEntered = (0, _createChainedFunction2['default'])(this.handleEntered, onEntered);
      var handleExit = (0, _createChainedFunction2['default'])(this.handleExit, onExit);
      var handleExiting = (0, _createChainedFunction2['default'])(this.handleExiting, onExiting);
      var classes = { width: this._dimension() === 'width' };
      return _react2['default'].createElement(_Transition2['default'], (0, _extends3['default'])({}, props, {
        'aria-expanded': props.role ? props['in'] : null,
        className: (0, _classnames2['default'])(className, classes),
        exitedClassName: 'collapse',
        exitingClassName: 'collapsing',
        enteredClassName: 'collapse in',
        enteringClassName: 'collapsing',
        onEnter: handleEnter,
        onEntering: handleEntering,
        onEntered: handleEntered,
        onExit: handleExit,
        onExiting: handleExiting
      }));
    };
    return Collapse;
  }(_react2['default'].Component);
  Collapse.propTypes = propTypes;
  Collapse.defaultProps = defaultProps;
  exports['default'] = Collapse;
  module.exports = exports['default'];
});
$__System.registerDynamic('ec', ['70', '71', '67', '68', '69', '6a', '6f', '1c', '50', 'c7', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Collapse = $__require('c7');
  var _Collapse2 = _interopRequireDefault(_Collapse);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    collapsible: _propTypes2['default'].bool,
    onSelect: _propTypes2['default'].func,
    header: _propTypes2['default'].node,
    id: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
    footer: _propTypes2['default'].node,
    defaultExpanded: _propTypes2['default'].bool,
    expanded: _propTypes2['default'].bool,
    eventKey: _propTypes2['default'].any,
    headerRole: _propTypes2['default'].string,
    panelRole: _propTypes2['default'].string,
    onEnter: _propTypes2['default'].func,
    onEntering: _propTypes2['default'].func,
    onEntered: _propTypes2['default'].func,
    onExit: _propTypes2['default'].func,
    onExiting: _propTypes2['default'].func,
    onExited: _propTypes2['default'].func
  };
  var defaultProps = { defaultExpanded: false };
  var Panel = function (_React$Component) {
    (0, _inherits3['default'])(Panel, _React$Component);
    function Panel(props, context) {
      (0, _classCallCheck3['default'])(this, Panel);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleClickTitle = _this.handleClickTitle.bind(_this);
      _this.state = { expanded: _this.props.defaultExpanded };
      return _this;
    }
    Panel.prototype.handleClickTitle = function handleClickTitle(e) {
      e.persist();
      e.selected = true;
      if (this.props.onSelect) {
        this.props.onSelect(this.props.eventKey, e);
      } else {
        e.preventDefault();
      }
      if (e.selected) {
        this.setState({ expanded: !this.state.expanded });
      }
    };
    Panel.prototype.renderHeader = function renderHeader(collapsible, header, id, role, expanded, bsProps) {
      var titleClassName = (0, _bootstrapUtils.prefix)(bsProps, 'title');
      if (!collapsible) {
        if (!_react2['default'].isValidElement(header)) {
          return header;
        }
        return (0, _react.cloneElement)(header, { className: (0, _classnames2['default'])(header.props.className, titleClassName) });
      }
      if (!_react2['default'].isValidElement(header)) {
        return _react2['default'].createElement('h4', {
          role: 'presentation',
          className: titleClassName
        }, this.renderAnchor(header, id, role, expanded));
      }
      return (0, _react.cloneElement)(header, {
        className: (0, _classnames2['default'])(header.props.className, titleClassName),
        children: this.renderAnchor(header.props.children, id, role, expanded)
      });
    };
    Panel.prototype.renderAnchor = function renderAnchor(header, id, role, expanded) {
      return _react2['default'].createElement('a', {
        role: role,
        href: id && '#' + id,
        onClick: this.handleClickTitle,
        'aria-controls': id,
        'aria-expanded': expanded,
        'aria-selected': expanded,
        className: expanded ? null : 'collapsed'
      }, header);
    };
    Panel.prototype.renderCollapsibleBody = function renderCollapsibleBody(id, expanded, role, children, bsProps, animationHooks) {
      return _react2['default'].createElement(_Collapse2['default'], (0, _extends3['default'])({ 'in': expanded }, animationHooks), _react2['default'].createElement('div', {
        id: id,
        role: role,
        className: (0, _bootstrapUtils.prefix)(bsProps, 'collapse'),
        'aria-hidden': !expanded
      }, this.renderBody(children, bsProps)));
    };
    Panel.prototype.renderBody = function renderBody(rawChildren, bsProps) {
      var children = [];
      var bodyChildren = [];
      var bodyClassName = (0, _bootstrapUtils.prefix)(bsProps, 'body');
      function maybeAddBody() {
        if (!bodyChildren.length) {
          return;
        }
        children.push(_react2['default'].createElement('div', {
          key: children.length,
          className: bodyClassName
        }, bodyChildren));
        bodyChildren = [];
      }
      _react2['default'].Children.toArray(rawChildren).forEach(function (child) {
        if (_react2['default'].isValidElement(child) && child.props.fill) {
          maybeAddBody();
          children.push((0, _react.cloneElement)(child, { fill: undefined }));
          return;
        }
        bodyChildren.push(child);
      });
      maybeAddBody();
      return children;
    };
    Panel.prototype.render = function render() {
      var _props = this.props,
          collapsible = _props.collapsible,
          header = _props.header,
          id = _props.id,
          footer = _props.footer,
          propsExpanded = _props.expanded,
          headerRole = _props.headerRole,
          panelRole = _props.panelRole,
          className = _props.className,
          children = _props.children,
          onEnter = _props.onEnter,
          onEntering = _props.onEntering,
          onEntered = _props.onEntered,
          onExit = _props.onExit,
          onExiting = _props.onExiting,
          onExited = _props.onExited,
          props = (0, _objectWithoutProperties3['default'])(_props, ['collapsible', 'header', 'id', 'footer', 'expanded', 'headerRole', 'panelRole', 'className', 'children', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['defaultExpanded', 'eventKey', 'onSelect']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      var expanded = propsExpanded != null ? propsExpanded : this.state.expanded;
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, {
        className: (0, _classnames2['default'])(className, classes),
        id: collapsible ? null : id
      }), header && _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'heading') }, this.renderHeader(collapsible, header, id, headerRole, expanded, bsProps)), collapsible ? this.renderCollapsibleBody(id, expanded, panelRole, children, bsProps, {
        onEnter: onEnter,
        onEntering: onEntering,
        onEntered: onEntered,
        onExit: onExit,
        onExiting: onExiting,
        onExited: onExited
      }) : this.renderBody(children, bsProps), footer && _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'footer') }, footer));
    };
    return Panel;
  }(_react2['default'].Component);
  Panel.propTypes = propTypes;
  Panel.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('panel', (0, _bootstrapUtils.bsStyles)([].concat((0, _values2['default'])(_StyleConfig.State), [_StyleConfig.Style.DEFAULT, _StyleConfig.Style.PRIMARY]), _StyleConfig.Style.DEFAULT, Panel));
  module.exports = exports['default'];
});
$__System.registerDynamic('66', ['67', 'ed', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '9e', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _assign = $__require('ed');
  var _assign2 = _interopRequireDefault(_assign);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    accordion: _propTypes2['default'].bool,
    activeKey: _propTypes2['default'].any,
    defaultActiveKey: _propTypes2['default'].any,
    onSelect: _propTypes2['default'].func,
    role: _propTypes2['default'].string
  };
  var defaultProps = { accordion: false };
  var PanelGroup = function (_React$Component) {
    (0, _inherits3['default'])(PanelGroup, _React$Component);
    function PanelGroup(props, context) {
      (0, _classCallCheck3['default'])(this, PanelGroup);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleSelect = _this.handleSelect.bind(_this);
      _this.state = { activeKey: props.defaultActiveKey };
      return _this;
    }
    PanelGroup.prototype.handleSelect = function handleSelect(key, e) {
      e.preventDefault();
      if (this.props.onSelect) {
        this.props.onSelect(key, e);
      }
      if (this.state.activeKey === key) {
        key = null;
      }
      this.setState({ activeKey: key });
    };
    PanelGroup.prototype.render = function render() {
      var _this2 = this;
      var _props = this.props,
          accordion = _props.accordion,
          propsActiveKey = _props.activeKey,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['accordion', 'activeKey', 'className', 'children']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['defaultActiveKey', 'onSelect']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      var activeKey = void 0;
      if (accordion) {
        activeKey = propsActiveKey != null ? propsActiveKey : this.state.activeKey;
        elementProps.role = elementProps.role || 'tablist';
      }
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), _ValidComponentChildren2['default'].map(children, function (child) {
        var childProps = { bsStyle: child.props.bsStyle || bsProps.bsStyle };
        if (accordion) {
          (0, _assign2['default'])(childProps, {
            headerRole: 'tab',
            panelRole: 'tabpanel',
            collapsible: true,
            expanded: child.props.eventKey === activeKey,
            onSelect: (0, _createChainedFunction2['default'])(_this2.handleSelect, child.props.onSelect)
          });
        }
        return (0, _react.cloneElement)(child, childProps);
      }));
    };
    return PanelGroup;
  }(_react2['default'].Component);
  PanelGroup.propTypes = propTypes;
  PanelGroup.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('panel-group', PanelGroup);
  module.exports = exports['default'];
});
$__System.registerDynamic('ee', ['67', '71', '68', '69', '6a', '6f', '1c', '50', 'ef', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _isRequiredForA11y = $__require('ef');
  var _isRequiredForA11y2 = _interopRequireDefault(_isRequiredForA11y);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    id: (0, _isRequiredForA11y2['default'])(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])),
    placement: _propTypes2['default'].oneOf(['top', 'right', 'bottom', 'left']),
    positionTop: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    positionLeft: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    arrowOffsetTop: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    arrowOffsetLeft: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    title: _propTypes2['default'].node
  };
  var defaultProps = { placement: 'right' };
  var Popover = function (_React$Component) {
    (0, _inherits3['default'])(Popover, _React$Component);
    function Popover() {
      (0, _classCallCheck3['default'])(this, Popover);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Popover.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          placement = _props.placement,
          positionTop = _props.positionTop,
          positionLeft = _props.positionLeft,
          arrowOffsetTop = _props.arrowOffsetTop,
          arrowOffsetLeft = _props.arrowOffsetLeft,
          title = _props.title,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['placement', 'positionTop', 'positionLeft', 'arrowOffsetTop', 'arrowOffsetLeft', 'title', 'className', 'style', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));
      var outerStyle = (0, _extends4['default'])({
        display: 'block',
        top: positionTop,
        left: positionLeft
      }, style);
      var arrowStyle = {
        top: arrowOffsetTop,
        left: arrowOffsetLeft
      };
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
        role: 'tooltip',
        className: (0, _classnames2['default'])(className, classes),
        style: outerStyle
      }), _react2['default'].createElement('div', {
        className: 'arrow',
        style: arrowStyle
      }), title && _react2['default'].createElement('h3', { className: (0, _bootstrapUtils.prefix)(bsProps, 'title') }, title), _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'content') }, children));
    };
    return Popover;
  }(_react2['default'].Component);
  Popover.propTypes = propTypes;
  Popover.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('popover', Popover);
  module.exports = exports['default'];
});
$__System.registerDynamic('f0', ['70', '67', '71', '68', '69', '6a', '6f', '1c', '50', '6c', '6d', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var ROUND_PRECISION = 1000;
  function onlyProgressBar(props, propName, componentName) {
    var children = props[propName];
    if (!children) {
      return null;
    }
    var error = null;
    _react2['default'].Children.forEach(children, function (child) {
      if (error) {
        return;
      }
      if (child.type === ProgressBar) {
        return;
      }
      var childIdentifier = _react2['default'].isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;
      error = new Error('Children of ' + componentName + ' can contain only ProgressBar ' + ('components. Found ' + childIdentifier + '.'));
    });
    return error;
  }
  var propTypes = {
    min: _propTypes2['default'].number,
    now: _propTypes2['default'].number,
    max: _propTypes2['default'].number,
    label: _propTypes2['default'].node,
    srOnly: _propTypes2['default'].bool,
    striped: _propTypes2['default'].bool,
    active: _propTypes2['default'].bool,
    children: onlyProgressBar,
    isChild: _propTypes2['default'].bool
  };
  var defaultProps = {
    min: 0,
    max: 100,
    active: false,
    isChild: false,
    srOnly: false,
    striped: false
  };
  function getPercentage(now, min, max) {
    var percentage = (now - min) / (max - min) * 100;
    return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;
  }
  var ProgressBar = function (_React$Component) {
    (0, _inherits3['default'])(ProgressBar, _React$Component);
    function ProgressBar() {
      (0, _classCallCheck3['default'])(this, ProgressBar);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ProgressBar.prototype.renderProgressBar = function renderProgressBar(_ref) {
      var _extends2;
      var min = _ref.min,
          now = _ref.now,
          max = _ref.max,
          label = _ref.label,
          srOnly = _ref.srOnly,
          striped = _ref.striped,
          active = _ref.active,
          className = _ref.className,
          style = _ref.style,
          props = (0, _objectWithoutProperties3['default'])(_ref, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'className', 'style']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = { active: active }, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'striped')] = active || striped, _extends2));
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
        role: 'progressbar',
        className: (0, _classnames2['default'])(className, classes),
        style: (0, _extends4['default'])({ width: getPercentage(now, min, max) + '%' }, style),
        'aria-valuenow': now,
        'aria-valuemin': min,
        'aria-valuemax': max
      }), srOnly ? _react2['default'].createElement('span', { className: 'sr-only' }, label) : label);
    };
    ProgressBar.prototype.render = function render() {
      var _props = this.props,
          isChild = _props.isChild,
          props = (0, _objectWithoutProperties3['default'])(_props, ['isChild']);
      if (isChild) {
        return this.renderProgressBar(props);
      }
      var min = props.min,
          now = props.now,
          max = props.max,
          label = props.label,
          srOnly = props.srOnly,
          striped = props.striped,
          active = props.active,
          bsClass = props.bsClass,
          bsStyle = props.bsStyle,
          className = props.className,
          children = props.children,
          wrapperProps = (0, _objectWithoutProperties3['default'])(props, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'bsClass', 'bsStyle', 'className', 'children']);
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, wrapperProps, { className: (0, _classnames2['default'])(className, 'progress') }), children ? _ValidComponentChildren2['default'].map(children, function (child) {
        return (0, _react.cloneElement)(child, { isChild: true });
      }) : this.renderProgressBar({
        min: min,
        now: now,
        max: max,
        label: label,
        srOnly: srOnly,
        striped: striped,
        active: active,
        bsClass: bsClass,
        bsStyle: bsStyle
      }));
    };
    return ProgressBar;
  }(_react2['default'].Component);
  ProgressBar.propTypes = propTypes;
  ProgressBar.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('progress-bar', (0, _bootstrapUtils.bsStyles)((0, _values2['default'])(_StyleConfig.State), ProgressBar));
  module.exports = exports['default'];
});
$__System.registerDynamic('f1', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '80', '6c', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      inline: _propTypes2['default'].bool,
      disabled: _propTypes2['default'].bool,
      title: _propTypes2['default'].string,
      validationState: _propTypes2['default'].oneOf(['success', 'warning', 'error', null]),
      inputRef: _propTypes2['default'].func
    };
    var defaultProps = {
      inline: false,
      disabled: false,
      title: ''
    };
    var Radio = function (_React$Component) {
      (0, _inherits3['default'])(Radio, _React$Component);
      function Radio() {
        (0, _classCallCheck3['default'])(this, Radio);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      Radio.prototype.render = function render() {
        var _props = this.props,
            inline = _props.inline,
            disabled = _props.disabled,
            validationState = _props.validationState,
            inputRef = _props.inputRef,
            className = _props.className,
            style = _props.style,
            title = _props.title,
            children = _props.children,
            props = (0, _objectWithoutProperties3['default'])(_props, ['inline', 'disabled', 'validationState', 'inputRef', 'className', 'style', 'title', 'children']);
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        var input = _react2['default'].createElement('input', (0, _extends3['default'])({}, elementProps, {
          ref: inputRef,
          type: 'radio',
          disabled: disabled
        }));
        if (inline) {
          var _classes2;
          var _classes = (_classes2 = {}, _classes2[(0, _bootstrapUtils.prefix)(bsProps, 'inline')] = true, _classes2.disabled = disabled, _classes2);
          'production' !== 'production' ? (0, _warning2['default'])(!validationState, '`validationState` is ignored on `<Radio inline>`. To display ' + 'validation state on an inline radio, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : void 0;
          return _react2['default'].createElement('label', {
            className: (0, _classnames2['default'])(className, _classes),
            style: style,
            title: title
          }, input, children);
        }
        var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { disabled: disabled });
        if (validationState) {
          classes['has-' + validationState] = true;
        }
        return _react2['default'].createElement('div', {
          className: (0, _classnames2['default'])(className, classes),
          style: style
        }, _react2['default'].createElement('label', { title: title }, input, children));
      };
      return Radio;
    }(_react2['default'].Component);
    Radio.propTypes = propTypes;
    Radio.defaultProps = defaultProps;
    exports['default'] = (0, _bootstrapUtils.bsClass)('radio', Radio);
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('f2', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '80', '6c', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends3 = $__require('67');
    var _extends4 = _interopRequireDefault(_extends3);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      children: _propTypes2['default'].element.isRequired,
      a16by9: _propTypes2['default'].bool,
      a4by3: _propTypes2['default'].bool
    };
    var defaultProps = {
      a16by9: false,
      a4by3: false
    };
    var ResponsiveEmbed = function (_React$Component) {
      (0, _inherits3['default'])(ResponsiveEmbed, _React$Component);
      function ResponsiveEmbed() {
        (0, _classCallCheck3['default'])(this, ResponsiveEmbed);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      ResponsiveEmbed.prototype.render = function render() {
        var _extends2;
        var _props = this.props,
            a16by9 = _props.a16by9,
            a4by3 = _props.a4by3,
            className = _props.className,
            children = _props.children,
            props = (0, _objectWithoutProperties3['default'])(_props, ['a16by9', 'a4by3', 'className', 'children']);
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        'production' !== 'production' ? (0, _warning2['default'])(a16by9 || a4by3, 'Either `a16by9` or `a4by3` must be set.') : void 0;
        'production' !== 'production' ? (0, _warning2['default'])(!(a16by9 && a4by3), 'Only one of `a16by9` or `a4by3` can be set.') : void 0;
        var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, '16by9')] = a16by9, _extends2[(0, _bootstrapUtils.prefix)(bsProps, '4by3')] = a4by3, _extends2));
        return _react2['default'].createElement('div', { className: (0, _classnames2['default'])(classes) }, (0, _react.cloneElement)(children, (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(bsProps, 'item')) })));
      };
      return ResponsiveEmbed;
    }(_react2['default'].Component);
    ResponsiveEmbed.propTypes = propTypes;
    ResponsiveEmbed.defaultProps = defaultProps;
    exports['default'] = (0, _bootstrapUtils.bsClass)('embed-responsive', ResponsiveEmbed);
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('f3', ['67', '71', '68', '69', '6a', '6f', '1c', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = { componentClass: _elementType2['default'] };
  var defaultProps = { componentClass: 'div' };
  var Row = function (_React$Component) {
    (0, _inherits3['default'])(Row, _React$Component);
    function Row() {
      (0, _classCallCheck3['default'])(this, Row);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Row.prototype.render = function render() {
      var _props = this.props,
          Component = _props.componentClass,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Row;
  }(_react2['default'].Component);
  Row.propTypes = propTypes;
  Row.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('row', Row);
  module.exports = exports['default'];
});
$__System.registerDynamic('b9', ['bd'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = activeElement;
  var _ownerDocument = $__require('bd');
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function activeElement() {
    var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _ownerDocument2.default)();
    try {
      return doc.activeElement;
    } catch (e) {}
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('f4', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '9f', '77', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _all = $__require('9f');
  var _all2 = _interopRequireDefault(_all);
  var _Button = $__require('77');
  var _Button2 = _interopRequireDefault(_Button);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    vertical: _propTypes2['default'].bool,
    justified: _propTypes2['default'].bool,
    block: (0, _all2['default'])(_propTypes2['default'].bool, function (_ref) {
      var block = _ref.block,
          vertical = _ref.vertical;
      return block && !vertical ? new Error('`block` requires `vertical` to be set to have any effect') : null;
    })
  };
  var defaultProps = {
    block: false,
    justified: false,
    vertical: false
  };
  var ButtonGroup = function (_React$Component) {
    (0, _inherits3['default'])(ButtonGroup, _React$Component);
    function ButtonGroup() {
      (0, _classCallCheck3['default'])(this, ButtonGroup);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    ButtonGroup.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          block = _props.block,
          justified = _props.justified,
          vertical = _props.vertical,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['block', 'justified', 'vertical', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps)] = !vertical, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'vertical')] = vertical, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'justified')] = justified, _extends2[(0, _bootstrapUtils.prefix)(_Button2['default'].defaultProps, 'block')] = block, _extends2));
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return ButtonGroup;
  }(_react2['default'].Component);
  ButtonGroup.propTypes = propTypes;
  ButtonGroup.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('btn-group', ButtonGroup);
  module.exports = exports['default'];
});
$__System.registerDynamic('a2', ['a4'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function () {
    return _inDOM2.default ? function (context, node) {
      if (context.contains) {
        return context.contains(node);
      } else if (context.compareDocumentPosition) {
        return context === node || !!(context.compareDocumentPosition(node) & 16);
      } else {
        return fallback(context, node);
      }
    } : fallback;
  }();
  function fallback(context, node) {
    if (node) do {
      if (node === context) return true;
    } while (node = node.parentNode);
    return false;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('a6', ['a4'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var off = function off() {};
  if (_inDOM2.default) {
    off = function () {
      if (document.addEventListener) return function (node, eventName, handler, capture) {
        return node.removeEventListener(eventName, handler, capture || false);
      };else if (document.attachEvent) return function (node, eventName, handler) {
        return node.detachEvent('on' + eventName, handler);
      };
    }();
  }
  exports.default = off;
  module.exports = exports['default'];
});
$__System.registerDynamic('b7', ['a5', 'a6'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports.default = function (node, event, handler, capture) {
    (0, _on2.default)(node, event, handler, capture);

    return {
      remove: function remove() {
        (0, _off2.default)(node, event, handler, capture);
      }
    };
  };

  var _on = $__require('a5');

  var _on2 = _interopRequireDefault(_on);

  var _off = $__require('a6');

  var _off2 = _interopRequireDefault(_off);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  module.exports = exports['default'];
});
$__System.registerDynamic("bd", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ownerDocument;
  function ownerDocument(node) {
    return node && node.ownerDocument || document;
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('b6', ['4c', 'bd'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  exports.default = function (componentOrElement) {
    return (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(componentOrElement));
  };

  var _reactDom = $__require('4c');

  var _reactDom2 = _interopRequireDefault(_reactDom);

  var _ownerDocument = $__require('bd');

  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  module.exports = exports['default'];
});
$__System.registerDynamic("d8", ["a2", "1c", "50", "4c", "b7", "b6"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _contains = $__require("a2");
  var _contains2 = _interopRequireDefault(_contains);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _addEventListener = $__require("b7");
  var _addEventListener2 = _interopRequireDefault(_addEventListener);
  var _ownerDocument = $__require("b6");
  var _ownerDocument2 = _interopRequireDefault(_ownerDocument);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var escapeKeyCode = 27;
  function isLeftClickEvent(event) {
    return event.button === 0;
  }
  function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
  }
  var RootCloseWrapper = function (_React$Component) {
    _inherits(RootCloseWrapper, _React$Component);
    function RootCloseWrapper(props, context) {
      _classCallCheck(this, RootCloseWrapper);
      var _this = _possibleConstructorReturn(this, (RootCloseWrapper.__proto__ || Object.getPrototypeOf(RootCloseWrapper)).call(this, props, context));
      _this.addEventListeners = function () {
        var event = _this.props.event;
        var doc = (0, _ownerDocument2.default)(_this);
        _this.documentMouseCaptureListener = (0, _addEventListener2.default)(doc, event, _this.handleMouseCapture, true);
        _this.documentMouseListener = (0, _addEventListener2.default)(doc, event, _this.handleMouse);
        _this.documentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', _this.handleKeyUp);
      };
      _this.removeEventListeners = function () {
        if (_this.documentMouseCaptureListener) {
          _this.documentMouseCaptureListener.remove();
        }
        if (_this.documentMouseListener) {
          _this.documentMouseListener.remove();
        }
        if (_this.documentKeyupListener) {
          _this.documentKeyupListener.remove();
        }
      };
      _this.handleMouseCapture = function (e) {
        _this.preventMouseRootClose = isModifiedEvent(e) || !isLeftClickEvent(e) || (0, _contains2.default)(_reactDom2.default.findDOMNode(_this), e.target);
      };
      _this.handleMouse = function (e) {
        if (!_this.preventMouseRootClose && _this.props.onRootClose) {
          _this.props.onRootClose(e);
        }
      };
      _this.handleKeyUp = function (e) {
        if (e.keyCode === escapeKeyCode && _this.props.onRootClose) {
          _this.props.onRootClose(e);
        }
      };
      _this.preventMouseRootClose = false;
      return _this;
    }
    _createClass(RootCloseWrapper, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        if (!this.props.disabled) {
          this.addEventListeners();
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (!this.props.disabled && prevProps.disabled) {
          this.addEventListeners();
        } else if (this.props.disabled && !prevProps.disabled) {
          this.removeEventListeners();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        if (!this.props.disabled) {
          this.removeEventListeners();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return this.props.children;
      }
    }]);
    return RootCloseWrapper;
  }(_react2.default.Component);
  RootCloseWrapper.displayName = 'RootCloseWrapper';
  RootCloseWrapper.propTypes = {
    onRootClose: _propTypes2.default.func,
    children: _propTypes2.default.element,
    disabled: _propTypes2.default.bool,
    event: _propTypes2.default.oneOf(['click', 'mousedown'])
  };
  RootCloseWrapper.defaultProps = { event: 'click' };
  exports.default = RootCloseWrapper;
  module.exports = exports['default'];
});
$__System.registerDynamic('f5', ['67', '71', 'f7', '68', '69', '6a', '6f', 'f6', '1c', '50', '4c', 'd8', '6c', '9e', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _from = $__require('f7');
  var _from2 = _interopRequireDefault(_from);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _keycode = $__require('f6');
  var _keycode2 = _interopRequireDefault(_keycode);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require('4c');
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _RootCloseWrapper = $__require('d8');
  var _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);
  var _bootstrapUtils = $__require('6c');
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    open: _propTypes2['default'].bool,
    pullRight: _propTypes2['default'].bool,
    onClose: _propTypes2['default'].func,
    labelledBy: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
    onSelect: _propTypes2['default'].func,
    rootCloseEvent: _propTypes2['default'].oneOf(['click', 'mousedown'])
  };
  var defaultProps = {
    bsRole: 'menu',
    pullRight: false
  };
  var DropdownMenu = function (_React$Component) {
    (0, _inherits3['default'])(DropdownMenu, _React$Component);
    function DropdownMenu(props) {
      (0, _classCallCheck3['default'])(this, DropdownMenu);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));
      _this.handleRootClose = _this.handleRootClose.bind(_this);
      _this.handleKeyDown = _this.handleKeyDown.bind(_this);
      return _this;
    }
    DropdownMenu.prototype.handleRootClose = function handleRootClose(event) {
      this.props.onClose(event, { source: 'rootClose' });
    };
    DropdownMenu.prototype.handleKeyDown = function handleKeyDown(event) {
      switch (event.keyCode) {
        case _keycode2['default'].codes.down:
          this.focusNext();
          event.preventDefault();
          break;
        case _keycode2['default'].codes.up:
          this.focusPrevious();
          event.preventDefault();
          break;
        case _keycode2['default'].codes.esc:
        case _keycode2['default'].codes.tab:
          this.props.onClose(event, { source: 'keydown' });
          break;
        default:
      }
    };
    DropdownMenu.prototype.getItemsAndActiveIndex = function getItemsAndActiveIndex() {
      var items = this.getFocusableMenuItems();
      var activeIndex = items.indexOf(document.activeElement);
      return {
        items: items,
        activeIndex: activeIndex
      };
    };
    DropdownMenu.prototype.getFocusableMenuItems = function getFocusableMenuItems() {
      var node = _reactDom2['default'].findDOMNode(this);
      if (!node) {
        return [];
      }
      return (0, _from2['default'])(node.querySelectorAll('[tabIndex="-1"]'));
    };
    DropdownMenu.prototype.focusNext = function focusNext() {
      var _getItemsAndActiveInd = this.getItemsAndActiveIndex(),
          items = _getItemsAndActiveInd.items,
          activeIndex = _getItemsAndActiveInd.activeIndex;
      if (items.length === 0) {
        return;
      }
      var nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;
      items[nextIndex].focus();
    };
    DropdownMenu.prototype.focusPrevious = function focusPrevious() {
      var _getItemsAndActiveInd2 = this.getItemsAndActiveIndex(),
          items = _getItemsAndActiveInd2.items,
          activeIndex = _getItemsAndActiveInd2.activeIndex;
      if (items.length === 0) {
        return;
      }
      var prevIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;
      items[prevIndex].focus();
    };
    DropdownMenu.prototype.render = function render() {
      var _extends2,
          _this2 = this;
      var _props = this.props,
          open = _props.open,
          pullRight = _props.pullRight,
          labelledBy = _props.labelledBy,
          onSelect = _props.onSelect,
          className = _props.className,
          rootCloseEvent = _props.rootCloseEvent,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['open', 'pullRight', 'labelledBy', 'onSelect', 'className', 'rootCloseEvent', 'children']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['onClose']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'right')] = pullRight, _extends2));
      return _react2['default'].createElement(_RootCloseWrapper2['default'], {
        disabled: !open,
        onRootClose: this.handleRootClose,
        event: rootCloseEvent
      }, _react2['default'].createElement('ul', (0, _extends4['default'])({}, elementProps, {
        role: 'menu',
        className: (0, _classnames2['default'])(className, classes),
        'aria-labelledby': labelledBy
      }), _ValidComponentChildren2['default'].map(children, function (child) {
        return _react2['default'].cloneElement(child, {
          onKeyDown: (0, _createChainedFunction2['default'])(child.props.onKeyDown, _this2.handleKeyDown),
          onSelect: (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect)
        });
      })));
    };
    return DropdownMenu;
  }(_react2['default'].Component);
  DropdownMenu.propTypes = propTypes;
  DropdownMenu.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown-menu', DropdownMenu);
  module.exports = exports['default'];
});
$__System.registerDynamic('f8', ['f9', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.requiredRoles = requiredRoles;
  exports.exclusiveRoles = exclusiveRoles;
  var _createChainableTypeChecker = $__require('f9');
  var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  function requiredRoles() {
    for (var _len = arguments.length, roles = Array(_len), _key = 0; _key < _len; _key++) {
      roles[_key] = arguments[_key];
    }
    return (0, _createChainableTypeChecker2['default'])(function (props, propName, component) {
      var missing = void 0;
      roles.every(function (role) {
        if (!_ValidComponentChildren2['default'].some(props.children, function (child) {
          return child.props.bsRole === role;
        })) {
          missing = role;
          return false;
        }
        return true;
      });
      if (missing) {
        return new Error('(children) ' + component + ' - Missing a required child with bsRole: ' + (missing + '. ' + component + ' must have at least one child of each of ') + ('the following bsRoles: ' + roles.join(', ')));
      }
      return null;
    });
  }
  function exclusiveRoles() {
    for (var _len2 = arguments.length, roles = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      roles[_key2] = arguments[_key2];
    }
    return (0, _createChainableTypeChecker2['default'])(function (props, propName, component) {
      var duplicate = void 0;
      roles.every(function (role) {
        var childrenWithRole = _ValidComponentChildren2['default'].filter(props.children, function (child) {
          return child.props.bsRole === role;
        });
        if (childrenWithRole.length > 1) {
          duplicate = role;
          return false;
        }
        return true;
      });
      if (duplicate) {
        return new Error('(children) ' + component + ' - Duplicate children detected of bsRole: ' + (duplicate + '. Only one child each allowed with the following ') + ('bsRoles: ' + roles.join(', ')));
      }
      return null;
    });
  }
});
$__System.registerDynamic('86', ['71', '67', '68', '69', '6a', '6f', 'b9', 'a2', 'f6', '1c', '50', '4c', '9f', '79', 'ef', 'cc', '80', 'f4', 'f5', 'fa', '6c', '9e', 'f8', '7d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _activeElement = $__require('b9');
    var _activeElement2 = _interopRequireDefault(_activeElement);
    var _contains = $__require('a2');
    var _contains2 = _interopRequireDefault(_contains);
    var _keycode = $__require('f6');
    var _keycode2 = _interopRequireDefault(_keycode);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = $__require('4c');
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _all = $__require('9f');
    var _all2 = _interopRequireDefault(_all);
    var _elementType = $__require('79');
    var _elementType2 = _interopRequireDefault(_elementType);
    var _isRequiredForA11y = $__require('ef');
    var _isRequiredForA11y2 = _interopRequireDefault(_isRequiredForA11y);
    var _uncontrollable = $__require('cc');
    var _uncontrollable2 = _interopRequireDefault(_uncontrollable);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _ButtonGroup = $__require('f4');
    var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);
    var _DropdownMenu = $__require('f5');
    var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);
    var _DropdownToggle = $__require('fa');
    var _DropdownToggle2 = _interopRequireDefault(_DropdownToggle);
    var _bootstrapUtils = $__require('6c');
    var _createChainedFunction = $__require('9e');
    var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
    var _PropTypes = $__require('f8');
    var _ValidComponentChildren = $__require('7d');
    var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var TOGGLE_ROLE = _DropdownToggle2['default'].defaultProps.bsRole;
    var MENU_ROLE = _DropdownMenu2['default'].defaultProps.bsRole;
    var propTypes = {
      dropup: _propTypes2['default'].bool,
      id: (0, _isRequiredForA11y2['default'])(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])),
      componentClass: _elementType2['default'],
      children: (0, _all2['default'])((0, _PropTypes.requiredRoles)(TOGGLE_ROLE, MENU_ROLE), (0, _PropTypes.exclusiveRoles)(MENU_ROLE)),
      disabled: _propTypes2['default'].bool,
      pullRight: _propTypes2['default'].bool,
      open: _propTypes2['default'].bool,
      defaultOpen: _propTypes2['default'].bool,
      onToggle: _propTypes2['default'].func,
      onSelect: _propTypes2['default'].func,
      role: _propTypes2['default'].string,
      rootCloseEvent: _propTypes2['default'].oneOf(['click', 'mousedown']),
      onMouseEnter: _propTypes2['default'].func,
      onMouseLeave: _propTypes2['default'].func
    };
    var defaultProps = { componentClass: _ButtonGroup2['default'] };
    var Dropdown = function (_React$Component) {
      (0, _inherits3['default'])(Dropdown, _React$Component);
      function Dropdown(props, context) {
        (0, _classCallCheck3['default'])(this, Dropdown);
        var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
        _this.handleClick = _this.handleClick.bind(_this);
        _this.handleKeyDown = _this.handleKeyDown.bind(_this);
        _this.handleClose = _this.handleClose.bind(_this);
        _this._focusInDropdown = false;
        _this.lastOpenEventType = null;
        return _this;
      }
      Dropdown.prototype.componentDidMount = function componentDidMount() {
        this.focusNextOnOpen();
      };
      Dropdown.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {
        if (!nextProps.open && this.props.open) {
          this._focusInDropdown = (0, _contains2['default'])(_reactDom2['default'].findDOMNode(this.menu), (0, _activeElement2['default'])(document));
        }
      };
      Dropdown.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
        var open = this.props.open;
        var prevOpen = prevProps.open;
        if (open && !prevOpen) {
          this.focusNextOnOpen();
        }
        if (!open && prevOpen) {
          if (this._focusInDropdown) {
            this._focusInDropdown = false;
            this.focus();
          }
        }
      };
      Dropdown.prototype.handleClick = function handleClick(event) {
        if (this.props.disabled) {
          return;
        }
        this.toggleOpen(event, { source: 'click' });
      };
      Dropdown.prototype.handleKeyDown = function handleKeyDown(event) {
        if (this.props.disabled) {
          return;
        }
        switch (event.keyCode) {
          case _keycode2['default'].codes.down:
            if (!this.props.open) {
              this.toggleOpen(event, { source: 'keydown' });
            } else if (this.menu.focusNext) {
              this.menu.focusNext();
            }
            event.preventDefault();
            break;
          case _keycode2['default'].codes.esc:
          case _keycode2['default'].codes.tab:
            this.handleClose(event, { source: 'keydown' });
            break;
          default:
        }
      };
      Dropdown.prototype.toggleOpen = function toggleOpen(event, eventDetails) {
        var open = !this.props.open;
        if (open) {
          this.lastOpenEventType = eventDetails.source;
        }
        if (this.props.onToggle) {
          this.props.onToggle(open, event, eventDetails);
        }
      };
      Dropdown.prototype.handleClose = function handleClose(event, eventDetails) {
        if (!this.props.open) {
          return;
        }
        this.toggleOpen(event, eventDetails);
      };
      Dropdown.prototype.focusNextOnOpen = function focusNextOnOpen() {
        var menu = this.menu;
        if (!menu.focusNext) {
          return;
        }
        if (this.lastOpenEventType === 'keydown' || this.props.role === 'menuitem') {
          menu.focusNext();
        }
      };
      Dropdown.prototype.focus = function focus() {
        var toggle = _reactDom2['default'].findDOMNode(this.toggle);
        if (toggle && toggle.focus) {
          toggle.focus();
        }
      };
      Dropdown.prototype.renderToggle = function renderToggle(child, props) {
        var _this2 = this;
        var ref = function ref(c) {
          _this2.toggle = c;
        };
        if (typeof child.ref === 'string') {
          'production' !== 'production' ? (0, _warning2['default'])(false, 'String refs are not supported on `<Dropdown.Toggle>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;
        } else {
          ref = (0, _createChainedFunction2['default'])(child.ref, ref);
        }
        return (0, _react.cloneElement)(child, (0, _extends3['default'])({}, props, {
          ref: ref,
          bsClass: (0, _bootstrapUtils.prefix)(props, 'toggle'),
          onClick: (0, _createChainedFunction2['default'])(child.props.onClick, this.handleClick),
          onKeyDown: (0, _createChainedFunction2['default'])(child.props.onKeyDown, this.handleKeyDown)
        }));
      };
      Dropdown.prototype.renderMenu = function renderMenu(child, _ref) {
        var _this3 = this;
        var id = _ref.id,
            onSelect = _ref.onSelect,
            rootCloseEvent = _ref.rootCloseEvent,
            props = (0, _objectWithoutProperties3['default'])(_ref, ['id', 'onSelect', 'rootCloseEvent']);
        var ref = function ref(c) {
          _this3.menu = c;
        };
        if (typeof child.ref === 'string') {
          'production' !== 'production' ? (0, _warning2['default'])(false, 'String refs are not supported on `<Dropdown.Menu>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : void 0;
        } else {
          ref = (0, _createChainedFunction2['default'])(child.ref, ref);
        }
        return (0, _react.cloneElement)(child, (0, _extends3['default'])({}, props, {
          ref: ref,
          labelledBy: id,
          bsClass: (0, _bootstrapUtils.prefix)(props, 'menu'),
          onClose: (0, _createChainedFunction2['default'])(child.props.onClose, this.handleClose),
          onSelect: (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect, function (key, event) {
            return _this3.handleClose(event, { source: 'select' });
          }),
          rootCloseEvent: rootCloseEvent
        }));
      };
      Dropdown.prototype.render = function render() {
        var _classes,
            _this4 = this;
        var _props = this.props,
            Component = _props.componentClass,
            id = _props.id,
            dropup = _props.dropup,
            disabled = _props.disabled,
            pullRight = _props.pullRight,
            open = _props.open,
            onSelect = _props.onSelect,
            role = _props.role,
            bsClass = _props.bsClass,
            className = _props.className,
            rootCloseEvent = _props.rootCloseEvent,
            children = _props.children,
            props = (0, _objectWithoutProperties3['default'])(_props, ['componentClass', 'id', 'dropup', 'disabled', 'pullRight', 'open', 'onSelect', 'role', 'bsClass', 'className', 'rootCloseEvent', 'children']);
        delete props.onToggle;
        var classes = (_classes = {}, _classes[bsClass] = true, _classes.open = open, _classes.disabled = disabled, _classes);
        if (dropup) {
          classes[bsClass] = false;
          classes.dropup = true;
        }
        return _react2['default'].createElement(Component, (0, _extends3['default'])({}, props, { className: (0, _classnames2['default'])(className, classes) }), _ValidComponentChildren2['default'].map(children, function (child) {
          switch (child.props.bsRole) {
            case TOGGLE_ROLE:
              return _this4.renderToggle(child, {
                id: id,
                disabled: disabled,
                open: open,
                role: role,
                bsClass: bsClass
              });
            case MENU_ROLE:
              return _this4.renderMenu(child, {
                id: id,
                open: open,
                pullRight: pullRight,
                bsClass: bsClass,
                onSelect: onSelect,
                rootCloseEvent: rootCloseEvent
              });
            default:
              return child;
          }
        }));
      };
      return Dropdown;
    }(_react2['default'].Component);
    Dropdown.propTypes = propTypes;
    Dropdown.defaultProps = defaultProps;
    (0, _bootstrapUtils.bsClass)('dropdown', Dropdown);
    var UncontrolledDropdown = (0, _uncontrollable2['default'])(Dropdown, { open: 'onToggle' });
    UncontrolledDropdown.Toggle = _DropdownToggle2['default'];
    UncontrolledDropdown.Menu = _DropdownMenu2['default'];
    exports['default'] = UncontrolledDropdown;
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('fb', ['fc', 'fd'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('fc');
    var $values = $__require('fd')(false);
    $export($export.S, 'Object', { values: function values(it) {
            return $values(it);
        } });
});
$__System.registerDynamic('fe', ['fb', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('fb');
  module.exports = $__require('ff').Object.values;
});
$__System.registerDynamic("70", ["fe"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("fe"), __esModule: true };
});
$__System.registerDynamic('77', ['70', '71', '67', '68', '69', '6a', '6f', '1c', '50', '79', '6c', '6d', '75'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _values = $__require('70');
  var _values2 = _interopRequireDefault(_values);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    active: _propTypes2['default'].bool,
    disabled: _propTypes2['default'].bool,
    block: _propTypes2['default'].bool,
    onClick: _propTypes2['default'].func,
    componentClass: _elementType2['default'],
    href: _propTypes2['default'].string,
    type: _propTypes2['default'].oneOf(['button', 'reset', 'submit'])
  };
  var defaultProps = {
    active: false,
    block: false,
    disabled: false
  };
  var Button = function (_React$Component) {
    (0, _inherits3['default'])(Button, _React$Component);
    function Button() {
      (0, _classCallCheck3['default'])(this, Button);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Button.prototype.renderAnchor = function renderAnchor(elementProps, className) {
      return _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, elementProps.disabled && 'disabled') }));
    };
    Button.prototype.renderButton = function renderButton(_ref, className) {
      var componentClass = _ref.componentClass,
          elementProps = (0, _objectWithoutProperties3['default'])(_ref, ['componentClass']);
      var Component = componentClass || 'button';
      return _react2['default'].createElement(Component, (0, _extends4['default'])({}, elementProps, {
        type: elementProps.type || 'button',
        className: className
      }));
    };
    Button.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          active = _props.active,
          block = _props.block,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'block', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = { active: active }, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'block')] = block, _extends2));
      var fullClassName = (0, _classnames2['default'])(className, classes);
      if (elementProps.href) {
        return this.renderAnchor(elementProps, fullClassName);
      }
      return this.renderButton(elementProps, fullClassName);
    };
    return Button;
  }(_react2['default'].Component);
  Button.propTypes = propTypes;
  Button.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('btn', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL, _StyleConfig.Size.XSMALL], (0, _bootstrapUtils.bsStyles)([].concat((0, _values2['default'])(_StyleConfig.State), [_StyleConfig.Style.DEFAULT, _StyleConfig.Style.PRIMARY, _StyleConfig.Style.LINK]), _StyleConfig.Style.DEFAULT, Button)));
  module.exports = exports['default'];
});
$__System.registerDynamic('fa', ['67', '71', '68', '69', '6a', '1c', '50', '6f', '77', '75', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _Button = $__require('77');
  var _Button2 = _interopRequireDefault(_Button);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    noCaret: _propTypes2['default'].bool,
    open: _propTypes2['default'].bool,
    title: _propTypes2['default'].string,
    useAnchor: _propTypes2['default'].bool
  };
  var defaultProps = {
    open: false,
    useAnchor: false,
    bsRole: 'toggle'
  };
  var DropdownToggle = function (_React$Component) {
    (0, _inherits3['default'])(DropdownToggle, _React$Component);
    function DropdownToggle() {
      (0, _classCallCheck3['default'])(this, DropdownToggle);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    DropdownToggle.prototype.render = function render() {
      var _props = this.props,
          noCaret = _props.noCaret,
          open = _props.open,
          useAnchor = _props.useAnchor,
          bsClass = _props.bsClass,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['noCaret', 'open', 'useAnchor', 'bsClass', 'className', 'children']);
      delete props.bsRole;
      var Component = useAnchor ? _SafeAnchor2['default'] : _Button2['default'];
      var useCaret = !noCaret;
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, props, {
        role: 'button',
        className: (0, _classnames2['default'])(className, bsClass),
        'aria-haspopup': true,
        'aria-expanded': open
      }), children || props.title, useCaret && ' ', useCaret && _react2['default'].createElement('span', { className: 'caret' }));
    };
    return DropdownToggle;
  }(_react2['default'].Component);
  DropdownToggle.propTypes = propTypes;
  DropdownToggle.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('dropdown-toggle', DropdownToggle);
  module.exports = exports['default'];
});
$__System.registerDynamic('100', ['67', '68', '69', '6a', '1c', 'fa'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _DropdownToggle = $__require('fa');
  var _DropdownToggle2 = _interopRequireDefault(_DropdownToggle);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var SplitToggle = function (_React$Component) {
    (0, _inherits3['default'])(SplitToggle, _React$Component);
    function SplitToggle() {
      (0, _classCallCheck3['default'])(this, SplitToggle);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    SplitToggle.prototype.render = function render() {
      return _react2['default'].createElement(_DropdownToggle2['default'], (0, _extends3['default'])({}, this.props, {
        useAnchor: false,
        noCaret: false
      }));
    };
    return SplitToggle;
  }(_react2['default'].Component);
  SplitToggle.defaultProps = _DropdownToggle2['default'].defaultProps;
  exports['default'] = SplitToggle;
  module.exports = exports['default'];
});
$__System.registerDynamic("87", ["101"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _entries = $__require("101");

  var _entries2 = _interopRequireDefault(_entries);

  exports["default"] = splitComponentProps;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { "default": obj };
  }

  function splitComponentProps(props, Component) {
    var componentPropTypes = Component.propTypes;

    var parentProps = {};
    var childProps = {};

    (0, _entries2["default"])(props).forEach(function (_ref) {
      var propName = _ref[0],
          propValue = _ref[1];

      if (componentPropTypes[propName]) {
        parentProps[propName] = propValue;
      } else {
        childProps[propName] = propValue;
      }
    });

    return [parentProps, childProps];
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('102', ['71', '68', '69', '6a', '67', '1c', '50', '77', '86', '100', '87'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _Button = $__require('77');
  var _Button2 = _interopRequireDefault(_Button);
  var _Dropdown = $__require('86');
  var _Dropdown2 = _interopRequireDefault(_Dropdown);
  var _SplitToggle = $__require('100');
  var _SplitToggle2 = _interopRequireDefault(_SplitToggle);
  var _splitComponentProps2 = $__require('87');
  var _splitComponentProps3 = _interopRequireDefault(_splitComponentProps2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _Dropdown2['default'].propTypes, {
    bsStyle: _propTypes2['default'].string,
    bsSize: _propTypes2['default'].string,
    href: _propTypes2['default'].string,
    onClick: _propTypes2['default'].func,
    title: _propTypes2['default'].node.isRequired,
    toggleLabel: _propTypes2['default'].string,
    children: _propTypes2['default'].node
  });
  var SplitButton = function (_React$Component) {
    (0, _inherits3['default'])(SplitButton, _React$Component);
    function SplitButton() {
      (0, _classCallCheck3['default'])(this, SplitButton);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    SplitButton.prototype.render = function render() {
      var _props = this.props,
          bsSize = _props.bsSize,
          bsStyle = _props.bsStyle,
          title = _props.title,
          toggleLabel = _props.toggleLabel,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['bsSize', 'bsStyle', 'title', 'toggleLabel', 'children']);
      var _splitComponentProps = (0, _splitComponentProps3['default'])(props, _Dropdown2['default'].ControlledComponent),
          dropdownProps = _splitComponentProps[0],
          buttonProps = _splitComponentProps[1];
      return _react2['default'].createElement(_Dropdown2['default'], (0, _extends3['default'])({}, dropdownProps, {
        bsSize: bsSize,
        bsStyle: bsStyle
      }), _react2['default'].createElement(_Button2['default'], (0, _extends3['default'])({}, buttonProps, {
        disabled: props.disabled,
        bsSize: bsSize,
        bsStyle: bsStyle
      }), title), _react2['default'].createElement(_SplitToggle2['default'], {
        'aria-label': toggleLabel || title,
        bsSize: bsSize,
        bsStyle: bsStyle
      }), _react2['default'].createElement(_Dropdown2['default'].Menu, null, children));
    };
    return SplitButton;
  }(_react2['default'].Component);
  SplitButton.propTypes = propTypes;
  SplitButton.Toggle = _SplitToggle2['default'];
  exports['default'] = SplitButton;
  module.exports = exports['default'];
});
$__System.registerDynamic('103', ['68', '69', '6a', '67', '1c', '50', '104', '105', '106'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _TabContainer = $__require('104');
  var _TabContainer2 = _interopRequireDefault(_TabContainer);
  var _TabContent = $__require('105');
  var _TabContent2 = _interopRequireDefault(_TabContent);
  var _TabPane = $__require('106');
  var _TabPane2 = _interopRequireDefault(_TabPane);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = (0, _extends3['default'])({}, _TabPane2['default'].propTypes, {
    disabled: _propTypes2['default'].bool,
    title: _propTypes2['default'].node,
    tabClassName: _propTypes2['default'].string
  });
  var Tab = function (_React$Component) {
    (0, _inherits3['default'])(Tab, _React$Component);
    function Tab() {
      (0, _classCallCheck3['default'])(this, Tab);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Tab.prototype.render = function render() {
      var props = (0, _extends3['default'])({}, this.props);
      delete props.title;
      delete props.disabled;
      delete props.tabClassName;
      return _react2['default'].createElement(_TabPane2['default'], props);
    };
    return Tab;
  }(_react2['default'].Component);
  Tab.propTypes = propTypes;
  Tab.Container = _TabContainer2['default'];
  Tab.Content = _TabContent2['default'];
  Tab.Pane = _TabPane2['default'];
  exports['default'] = Tab;
  module.exports = exports['default'];
});
$__System.registerDynamic('107', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    striped: _propTypes2['default'].bool,
    bordered: _propTypes2['default'].bool,
    condensed: _propTypes2['default'].bool,
    hover: _propTypes2['default'].bool,
    responsive: _propTypes2['default'].bool
  };
  var defaultProps = {
    bordered: false,
    condensed: false,
    hover: false,
    responsive: false,
    striped: false
  };
  var Table = function (_React$Component) {
    (0, _inherits3['default'])(Table, _React$Component);
    function Table() {
      (0, _classCallCheck3['default'])(this, Table);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Table.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          striped = _props.striped,
          bordered = _props.bordered,
          condensed = _props.condensed,
          hover = _props.hover,
          responsive = _props.responsive,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['striped', 'bordered', 'condensed', 'hover', 'responsive', 'className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'striped')] = striped, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'bordered')] = bordered, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'condensed')] = condensed, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'hover')] = hover, _extends2));
      var table = _react2['default'].createElement('table', (0, _extends4['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
      if (responsive) {
        return _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'responsive') }, table);
      }
      return table;
    };
    return Table;
  }(_react2['default'].Component);
  Table.propTypes = propTypes;
  Table.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('table', Table);
  module.exports = exports['default'];
});
$__System.registerDynamic('a5', ['a4'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var on = function on() {};
  if (_inDOM2.default) {
    on = function () {
      if (document.addEventListener) return function (node, eventName, handler, capture) {
        return node.addEventListener(eventName, handler, capture || false);
      };else if (document.attachEvent) return function (node, eventName, handler) {
        return node.attachEvent('on' + eventName, function (e) {
          e = e || window.event;
          e.target = e.target || e.srcElement;
          e.currentTarget = node;
          handler.call(node, e);
        });
      };
    }();
  }
  exports.default = on;
  module.exports = exports['default'];
});
$__System.registerDynamic('a4', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  module.exports = exports['default'];
});
$__System.registerDynamic('ea', ['a4'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;
  var _inDOM = $__require('a4');
  var _inDOM2 = _interopRequireDefault(_inDOM);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var transform = 'transform';
  var prefix = void 0,
      transitionEnd = void 0,
      animationEnd = void 0;
  var transitionProperty = void 0,
      transitionDuration = void 0,
      transitionTiming = void 0,
      transitionDelay = void 0;
  var animationName = void 0,
      animationDuration = void 0,
      animationTiming = void 0,
      animationDelay = void 0;
  if (_inDOM2.default) {
    var _getTransitionPropert = getTransitionProperties();
    prefix = _getTransitionPropert.prefix;
    exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;
    exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;
    exports.transform = transform = prefix + '-' + transform;
    exports.transitionProperty = transitionProperty = prefix + '-transition-property';
    exports.transitionDuration = transitionDuration = prefix + '-transition-duration';
    exports.transitionDelay = transitionDelay = prefix + '-transition-delay';
    exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';
    exports.animationName = animationName = prefix + '-animation-name';
    exports.animationDuration = animationDuration = prefix + '-animation-duration';
    exports.animationTiming = animationTiming = prefix + '-animation-delay';
    exports.animationDelay = animationDelay = prefix + '-animation-timing-function';
  }
  exports.transform = transform;
  exports.transitionProperty = transitionProperty;
  exports.transitionTiming = transitionTiming;
  exports.transitionDelay = transitionDelay;
  exports.transitionDuration = transitionDuration;
  exports.transitionEnd = transitionEnd;
  exports.animationName = animationName;
  exports.animationDuration = animationDuration;
  exports.animationTiming = animationTiming;
  exports.animationDelay = animationDelay;
  exports.animationEnd = animationEnd;
  exports.default = {
    transform: transform,
    end: transitionEnd,
    property: transitionProperty,
    timing: transitionTiming,
    delay: transitionDelay,
    duration: transitionDuration
  };
  function getTransitionProperties() {
    var style = document.createElement('div').style;
    var vendorMap = {
      O: function O(e) {
        return 'o' + e.toLowerCase();
      },
      Moz: function Moz(e) {
        return e.toLowerCase();
      },
      Webkit: function Webkit(e) {
        return 'webkit' + e;
      },
      ms: function ms(e) {
        return 'MS' + e;
      }
    };
    var vendors = Object.keys(vendorMap);
    var transitionEnd = void 0,
        animationEnd = void 0;
    var prefix = '';
    for (var i = 0; i < vendors.length; i++) {
      var vendor = vendors[i];
      if (vendor + 'TransitionProperty' in style) {
        prefix = '-' + vendor.toLowerCase();
        transitionEnd = vendorMap[vendor]('TransitionEnd');
        animationEnd = vendorMap[vendor]('AnimationEnd');
        break;
      }
    }
    if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';
    if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';
    style = null;
    return {
      animationEnd: animationEnd,
      transitionEnd: transitionEnd,
      prefix: prefix
    };
  }
});
$__System.registerDynamic("eb", ["6f", "a5", "ea", "1c", "50", "4c"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _classnames = $__require("6f");

  var _classnames2 = _interopRequireDefault(_classnames);

  var _on = $__require("a5");

  var _on2 = _interopRequireDefault(_on);

  var _properties = $__require("ea");

  var _properties2 = _interopRequireDefault(_properties);

  var _react = $__require("1c");

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require("50");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactDom = $__require("4c");

  var _reactDom2 = _interopRequireDefault(_reactDom);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var transitionEndEvent = _properties2.default.end;

  var UNMOUNTED = exports.UNMOUNTED = 0;
  var EXITED = exports.EXITED = 1;
  var ENTERING = exports.ENTERING = 2;
  var ENTERED = exports.ENTERED = 3;
  var EXITING = exports.EXITING = 4;

  /**
   * The Transition component lets you define and run css transitions with a simple declarative api.
   * It works similar to React's own [CSSTransitionGroup](http://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup)
   * but is specifically optimized for transitioning a single child "in" or "out".
   *
   * You don't even need to use class based css transitions if you don't want to (but it is easiest).
   * The extensive set of lifecycle callbacks means you have control over
   * the transitioning now at each step of the way.
   */

  var Transition = function (_React$Component) {
    _inherits(Transition, _React$Component);

    function Transition(props, context) {
      _classCallCheck(this, Transition);

      var _this = _possibleConstructorReturn(this, (Transition.__proto__ || Object.getPrototypeOf(Transition)).call(this, props, context));

      _this.updateStatus = function () {
        if (_this.nextStatus !== null) {
          (function () {
            // nextStatus will always be ENTERING or EXITING.
            _this.cancelNextCallback();
            var node = _reactDom2.default.findDOMNode(_this);

            if (_this.nextStatus === ENTERING) {
              _this.props.onEnter(node);

              _this.safeSetState({ status: ENTERING }, function () {
                _this.props.onEntering(node);

                _this.onTransitionEnd(node, function () {
                  _this.safeSetState({ status: ENTERED }, function () {
                    _this.props.onEntered(node);
                  });
                });
              });
            } else {
              _this.props.onExit(node);

              _this.safeSetState({ status: EXITING }, function () {
                _this.props.onExiting(node);

                _this.onTransitionEnd(node, function () {
                  _this.safeSetState({ status: EXITED }, function () {
                    _this.props.onExited(node);
                  });
                });
              });
            }

            _this.nextStatus = null;
          })();
        } else if (_this.props.unmountOnExit && _this.state.status === EXITED) {
          _this.setState({ status: UNMOUNTED });
        }
      };

      _this.cancelNextCallback = function () {
        if (_this.nextCallback !== null) {
          _this.nextCallback.cancel();
          _this.nextCallback = null;
        }
      };

      _this.safeSetState = function (nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        _this.setState(nextState, _this.setNextCallback(callback));
      };

      _this.setNextCallback = function (callback) {
        var active = true;

        _this.nextCallback = function (event) {
          if (active) {
            active = false;
            _this.nextCallback = null;

            callback(event);
          }
        };

        _this.nextCallback.cancel = function () {
          active = false;
        };

        return _this.nextCallback;
      };

      _this.onTransitionEnd = function (node, handler) {
        _this.setNextCallback(handler);

        if (node) {
          (0, _on2.default)(node, transitionEndEvent, _this.nextCallback);
          setTimeout(_this.nextCallback, _this.props.timeout);
        } else {
          setTimeout(_this.nextCallback, 0);
        }
      };

      var initialStatus = void 0;
      _this.nextStatus = null;

      if (props.in) {
        if (props.transitionAppear) {
          initialStatus = EXITED;
          _this.nextStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }

      _this.state = { status: initialStatus };

      _this.nextCallback = null;
      return _this;
    }

    _createClass(Transition, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.updateStatus();
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var status = this.state.status;

        if (nextProps.in) {
          if (status === UNMOUNTED) {
            this.setState({ status: EXITED });
          }
          if (status !== ENTERING && status !== ENTERED) {
            this.nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            this.nextStatus = EXITING;
          }
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.updateStatus();
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.cancelNextCallback();
      }
    }, {
      key: 'render',
      value: function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }

        var _props = this.props;
        var children = _props.children;
        var className = _props.className;

        var childProps = _objectWithoutProperties(_props, ['children', 'className']);

        Object.keys(Transition.propTypes).forEach(function (key) {
          return delete childProps[key];
        });

        var transitionClassName = void 0;
        if (status === EXITED) {
          transitionClassName = this.props.exitedClassName;
        } else if (status === ENTERING) {
          transitionClassName = this.props.enteringClassName;
        } else if (status === ENTERED) {
          transitionClassName = this.props.enteredClassName;
        } else if (status === EXITING) {
          transitionClassName = this.props.exitingClassName;
        }

        var child = _react2.default.Children.only(children);
        return _react2.default.cloneElement(child, _extends({}, childProps, {
          className: (0, _classnames2.default)(child.props.className, className, transitionClassName)
        }));
      }
    }]);

    return Transition;
  }(_react2.default.Component);

  Transition.propTypes = {
    /**
     * Show the component; triggers the enter or exit animation
     */
    in: _propTypes2.default.bool,

    /**
     * Wait until the first "enter" transition to mount the component (add it to the DOM)
     */
    mountOnEnter: _propTypes2.default.bool,

    /**
     * Unmount the component (remove it from the DOM) when it is not shown
     */
    unmountOnExit: _propTypes2.default.bool,

    /**
     * Run the enter animation when the component mounts, if it is initially
     * shown
     */
    transitionAppear: _propTypes2.default.bool,

    /**
     * A Timeout for the animation, in milliseconds, to ensure that a node doesn't
     * transition indefinately if the browser transitionEnd events are
     * canceled or interrupted.
     *
     * By default this is set to a high number (5 seconds) as a failsafe. You should consider
     * setting this to the duration of your animation (or a bit above it).
     */
    timeout: _propTypes2.default.number,

    /**
     * CSS class or classes applied when the component is exited
     */
    exitedClassName: _propTypes2.default.string,
    /**
     * CSS class or classes applied while the component is exiting
     */
    exitingClassName: _propTypes2.default.string,
    /**
     * CSS class or classes applied when the component is entered
     */
    enteredClassName: _propTypes2.default.string,
    /**
     * CSS class or classes applied while the component is entering
     */
    enteringClassName: _propTypes2.default.string,

    /**
     * Callback fired before the "entering" classes are applied
     */
    onEnter: _propTypes2.default.func,
    /**
     * Callback fired after the "entering" classes are applied
     */
    onEntering: _propTypes2.default.func,
    /**
     * Callback fired after the "enter" classes are applied
     */
    onEntered: _propTypes2.default.func,
    /**
     * Callback fired before the "exiting" classes are applied
     */
    onExit: _propTypes2.default.func,
    /**
     * Callback fired after the "exiting" classes are applied
     */
    onExiting: _propTypes2.default.func,
    /**
     * Callback fired after the "exited" classes are applied
     */
    onExited: _propTypes2.default.func
  };

  // Name the function so it is clearer in the documentation
  function noop() {}

  Transition.displayName = 'Transition';

  Transition.defaultProps = {
    in: false,
    unmountOnExit: false,
    transitionAppear: false,

    timeout: 5000,

    onEnter: noop,
    onEntering: noop,
    onEntered: noop,

    onExit: noop,
    onExiting: noop,
    onExited: noop
  };

  exports.default = Transition;
});
$__System.registerDynamic('c0', ['67', '68', '69', '6a', '6f', '1c', '50', 'eb'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _extends2 = $__require('67');

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = $__require('68');

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = $__require('69');

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = $__require('6a');

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _classnames = $__require('6f');

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require('50');

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _Transition = $__require('eb');

  var _Transition2 = _interopRequireDefault(_Transition);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var propTypes = {
    /**
     * Show the component; triggers the fade in or fade out animation
     */
    'in': _propTypes2['default'].bool,

    /**
     * Wait until the first "enter" transition to mount the component (add it to the DOM)
     */
    mountOnEnter: _propTypes2['default'].bool,

    /**
     * Unmount the component (remove it from the DOM) when it is faded out
     */
    unmountOnExit: _propTypes2['default'].bool,

    /**
     * Run the fade in animation when the component mounts, if it is initially
     * shown
     */
    transitionAppear: _propTypes2['default'].bool,

    /**
     * Duration of the fade animation in milliseconds, to ensure that finishing
     * callbacks are fired even if the original browser transition end events are
     * canceled
     */
    timeout: _propTypes2['default'].number,

    /**
     * Callback fired before the component fades in
     */
    onEnter: _propTypes2['default'].func,
    /**
     * Callback fired after the component starts to fade in
     */
    onEntering: _propTypes2['default'].func,
    /**
     * Callback fired after the has component faded in
     */
    onEntered: _propTypes2['default'].func,
    /**
     * Callback fired before the component fades out
     */
    onExit: _propTypes2['default'].func,
    /**
     * Callback fired after the component starts to fade out
     */
    onExiting: _propTypes2['default'].func,
    /**
     * Callback fired after the component has faded out
     */
    onExited: _propTypes2['default'].func
  };

  var defaultProps = {
    'in': false,
    timeout: 300,
    mountOnEnter: false,
    unmountOnExit: false,
    transitionAppear: false
  };

  var Fade = function (_React$Component) {
    (0, _inherits3['default'])(Fade, _React$Component);

    function Fade() {
      (0, _classCallCheck3['default'])(this, Fade);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }

    Fade.prototype.render = function render() {
      return _react2['default'].createElement(_Transition2['default'], (0, _extends3['default'])({}, this.props, {
        className: (0, _classnames2['default'])(this.props.className, 'fade'),
        enteredClassName: 'in',
        enteringClassName: 'in'
      }));
    };

    return Fade;
  }(_react2['default'].Component);

  Fade.propTypes = propTypes;
  Fade.defaultProps = defaultProps;

  exports['default'] = Fade;
  module.exports = exports['default'];
});
$__System.registerDynamic('106', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '80', '6c', '9e', 'c0', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _elementType = $__require('79');
    var _elementType2 = _interopRequireDefault(_elementType);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    var _createChainedFunction = $__require('9e');
    var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
    var _Fade = $__require('c0');
    var _Fade2 = _interopRequireDefault(_Fade);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      eventKey: _propTypes2['default'].any,
      animation: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _elementType2['default']]),
      id: _propTypes2['default'].string,
      'aria-labelledby': _propTypes2['default'].string,
      bsClass: _propTypes2['default'].string,
      onEnter: _propTypes2['default'].func,
      onEntering: _propTypes2['default'].func,
      onEntered: _propTypes2['default'].func,
      onExit: _propTypes2['default'].func,
      onExiting: _propTypes2['default'].func,
      onExited: _propTypes2['default'].func,
      mountOnEnter: _propTypes2['default'].bool,
      unmountOnExit: _propTypes2['default'].bool
    };
    var contextTypes = {
      $bs_tabContainer: _propTypes2['default'].shape({
        getTabId: _propTypes2['default'].func,
        getPaneId: _propTypes2['default'].func
      }),
      $bs_tabContent: _propTypes2['default'].shape({
        bsClass: _propTypes2['default'].string,
        animation: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _elementType2['default']]),
        activeKey: _propTypes2['default'].any,
        mountOnEnter: _propTypes2['default'].bool,
        unmountOnExit: _propTypes2['default'].bool,
        onPaneEnter: _propTypes2['default'].func.isRequired,
        onPaneExited: _propTypes2['default'].func.isRequired,
        exiting: _propTypes2['default'].bool.isRequired
      })
    };
    var childContextTypes = { $bs_tabContainer: _propTypes2['default'].oneOf([null]) };
    var TabPane = function (_React$Component) {
      (0, _inherits3['default'])(TabPane, _React$Component);
      function TabPane(props, context) {
        (0, _classCallCheck3['default'])(this, TabPane);
        var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
        _this.handleEnter = _this.handleEnter.bind(_this);
        _this.handleExited = _this.handleExited.bind(_this);
        _this['in'] = false;
        return _this;
      }
      TabPane.prototype.getChildContext = function getChildContext() {
        return { $bs_tabContainer: null };
      };
      TabPane.prototype.componentDidMount = function componentDidMount() {
        if (this.shouldBeIn()) {
          this.handleEnter();
        }
      };
      TabPane.prototype.componentDidUpdate = function componentDidUpdate() {
        if (this['in']) {
          if (!this.shouldBeIn()) {
            this.handleExited();
          }
        } else if (this.shouldBeIn()) {
          this.handleEnter();
        }
      };
      TabPane.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this['in']) {
          this.handleExited();
        }
      };
      TabPane.prototype.handleEnter = function handleEnter() {
        var tabContent = this.context.$bs_tabContent;
        if (!tabContent) {
          return;
        }
        this['in'] = tabContent.onPaneEnter(this, this.props.eventKey);
      };
      TabPane.prototype.handleExited = function handleExited() {
        var tabContent = this.context.$bs_tabContent;
        if (!tabContent) {
          return;
        }
        tabContent.onPaneExited(this);
        this['in'] = false;
      };
      TabPane.prototype.getAnimation = function getAnimation() {
        if (this.props.animation != null) {
          return this.props.animation;
        }
        var tabContent = this.context.$bs_tabContent;
        return tabContent && tabContent.animation;
      };
      TabPane.prototype.isActive = function isActive() {
        var tabContent = this.context.$bs_tabContent;
        var activeKey = tabContent && tabContent.activeKey;
        return this.props.eventKey === activeKey;
      };
      TabPane.prototype.shouldBeIn = function shouldBeIn() {
        return this.getAnimation() && this.isActive();
      };
      TabPane.prototype.render = function render() {
        var _props = this.props,
            eventKey = _props.eventKey,
            className = _props.className,
            onEnter = _props.onEnter,
            onEntering = _props.onEntering,
            onEntered = _props.onEntered,
            onExit = _props.onExit,
            onExiting = _props.onExiting,
            onExited = _props.onExited,
            propsMountOnEnter = _props.mountOnEnter,
            propsUnmountOnExit = _props.unmountOnExit,
            props = (0, _objectWithoutProperties3['default'])(_props, ['eventKey', 'className', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'mountOnEnter', 'unmountOnExit']);
        var _context = this.context,
            tabContent = _context.$bs_tabContent,
            tabContainer = _context.$bs_tabContainer;
        var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['animation']),
            bsProps = _splitBsPropsAndOmit[0],
            elementProps = _splitBsPropsAndOmit[1];
        var active = this.isActive();
        var animation = this.getAnimation();
        var mountOnEnter = propsMountOnEnter != null ? propsMountOnEnter : tabContent && tabContent.mountOnEnter;
        var unmountOnExit = propsUnmountOnExit != null ? propsUnmountOnExit : tabContent && tabContent.unmountOnExit;
        if (!active && !animation && unmountOnExit) {
          return null;
        }
        var Transition = animation === true ? _Fade2['default'] : animation || null;
        if (tabContent) {
          bsProps.bsClass = (0, _bootstrapUtils.prefix)(tabContent, 'pane');
        }
        var classes = (0, _extends3['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), { active: active });
        if (tabContainer) {
          'production' !== 'production' ? (0, _warning2['default'])(!elementProps.id && !elementProps['aria-labelledby'], 'In the context of a `<TabContainer>`, `<TabPanes>` are given ' + 'generated `id` and `aria-labelledby` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;
          elementProps.id = tabContainer.getPaneId(eventKey);
          elementProps['aria-labelledby'] = tabContainer.getTabId(eventKey);
        }
        var pane = _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, {
          role: 'tabpanel',
          'aria-hidden': !active,
          className: (0, _classnames2['default'])(className, classes)
        }));
        if (Transition) {
          var exiting = tabContent && tabContent.exiting;
          return _react2['default'].createElement(Transition, {
            'in': active && !exiting,
            onEnter: (0, _createChainedFunction2['default'])(this.handleEnter, onEnter),
            onEntering: onEntering,
            onEntered: onEntered,
            onExit: onExit,
            onExiting: onExiting,
            onExited: (0, _createChainedFunction2['default'])(this.handleExited, onExited),
            mountOnEnter: mountOnEnter,
            unmountOnExit: unmountOnExit
          }, pane);
        }
        return pane;
      };
      return TabPane;
    }(_react2['default'].Component);
    TabPane.propTypes = propTypes;
    TabPane.contextTypes = contextTypes;
    TabPane.childContextTypes = childContextTypes;
    exports['default'] = (0, _bootstrapUtils.bsClass)('tab-pane', TabPane);
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('108', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // Source: http://jsfiddle.net/vWx8V/
  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

  /**
   * Conenience method returns corresponding value for given keyName or keyCode.
   *
   * @param {Mixed} keyCode {Number} or keyName {String}
   * @return {Mixed}
   * @api public
   */

  exports = module.exports = function (searchInput) {
    // Keyboard Events
    if (searchInput && 'object' === typeof searchInput) {
      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;
      if (hasKeyCode) searchInput = hasKeyCode;
    }

    // Numbers
    if ('number' === typeof searchInput) return names[searchInput];

    // Everything else (cast to string)
    var search = String(searchInput);

    // check codes
    var foundNamedKey = codes[search.toLowerCase()];
    if (foundNamedKey) return foundNamedKey;

    // check aliases
    var foundNamedKey = aliases[search.toLowerCase()];
    if (foundNamedKey) return foundNamedKey;

    // weird character?
    if (search.length === 1) return search.charCodeAt(0);

    return undefined;
  };

  /**
   * Get by name
   *
   *   exports.code['enter'] // => 13
   */

  var codes = exports.code = exports.codes = {
    'backspace': 8,
    'tab': 9,
    'enter': 13,
    'shift': 16,
    'ctrl': 17,
    'alt': 18,
    'pause/break': 19,
    'caps lock': 20,
    'esc': 27,
    'space': 32,
    'page up': 33,
    'page down': 34,
    'end': 35,
    'home': 36,
    'left': 37,
    'up': 38,
    'right': 39,
    'down': 40,
    'insert': 45,
    'delete': 46,
    'command': 91,
    'left command': 91,
    'right command': 93,
    'numpad *': 106,
    'numpad +': 107,
    'numpad -': 109,
    'numpad .': 110,
    'numpad /': 111,
    'num lock': 144,
    'scroll lock': 145,
    'my computer': 182,
    'my calculator': 183,
    ';': 186,
    '=': 187,
    ',': 188,
    '-': 189,
    '.': 190,
    '/': 191,
    '`': 192,
    '[': 219,
    '\\': 220,
    ']': 221,
    "'": 222

    // Helper aliases

  };var aliases = exports.aliases = {
    'windows': 91,
    '⇧': 16,
    '⌥': 18,
    '⌃': 17,
    '⌘': 91,
    'ctl': 17,
    'control': 17,
    'option': 18,
    'pause': 19,
    'break': 19,
    'caps': 20,
    'return': 13,
    'escape': 27,
    'spc': 32,
    'pgup': 33,
    'pgdn': 34,
    'ins': 45,
    'del': 46,
    'cmd': 91

    /*!
     * Programatically add the following
     */

    // lower case chars
  };for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32;

  // numbers
  for (var i = 48; i < 58; i++) codes[i - 48] = i;

  // function keys
  for (i = 1; i < 13; i++) codes['f' + i] = i + 111;

  // numpad keys
  for (i = 0; i < 10; i++) codes['numpad ' + i] = i + 96;

  /**
   * Get by code
   *
   *   exports.name[13] // => 'Enter'
   */

  var names = exports.names = exports.title = {}; // title for backward compat

  // Create reverse mapping
  for (i in codes) names[codes[i]] = i;

  // Add aliases
  for (var alias in aliases) {
    codes[alias] = aliases[alias];
  }
});
$__System.registerDynamic("f6", ["108"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("108");
});
$__System.registerDynamic('9f', ['f9'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = all;
  var _createChainableTypeChecker = $__require('f9');
  var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function all() {
    for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {
      validators[_key] = arguments[_key];
    }
    function allPropTypes() {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      var error = null;
      validators.forEach(function (validator) {
        if (error != null) {
          return;
        }
        var result = validator.apply(undefined, args);
        if (result != null) {
          error = result;
        }
      });
      return error;
    }
    return (0, _createChainableTypeChecker2.default)(allPropTypes);
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('109', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = function () {};
    if ('production' !== 'production') {
      warning = function (condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for (var key = 2; key < len; key++) {
          args[key - 2] = arguments[key];
        }
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.length < 10 || /^[s\W]*$/.test(format)) {
          throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
        }
        if (!condition) {
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          if (typeof console !== 'undefined') {
            console.error(message);
          }
          try {
            throw new Error(message);
          } catch (x) {}
        }
      };
    }
    module.exports = warning;
  })($__require('16'));
});
$__System.registerDynamic("80", ["109"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("109");
});
$__System.registerDynamic('10a', ['67', '71', '68', '69', '6a', '6f', 'f6', '1c', '50', '4c', '9f', '80', '6c', '9e', '7d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends3 = $__require('67');
    var _extends4 = _interopRequireDefault(_extends3);
    var _objectWithoutProperties2 = $__require('71');
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require('68');
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _possibleConstructorReturn2 = $__require('69');
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require('6a');
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _classnames = $__require('6f');
    var _classnames2 = _interopRequireDefault(_classnames);
    var _keycode = $__require('f6');
    var _keycode2 = _interopRequireDefault(_keycode);
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactDom = $__require('4c');
    var _reactDom2 = _interopRequireDefault(_reactDom);
    var _all = $__require('9f');
    var _all2 = _interopRequireDefault(_all);
    var _warning = $__require('80');
    var _warning2 = _interopRequireDefault(_warning);
    var _bootstrapUtils = $__require('6c');
    var _createChainedFunction = $__require('9e');
    var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
    var _ValidComponentChildren = $__require('7d');
    var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    var propTypes = {
      activeKey: _propTypes2['default'].any,
      activeHref: _propTypes2['default'].string,
      stacked: _propTypes2['default'].bool,
      justified: (0, _all2['default'])(_propTypes2['default'].bool, function (_ref) {
        var justified = _ref.justified,
            navbar = _ref.navbar;
        return justified && navbar ? Error('justified navbar `Nav`s are not supported') : null;
      }),
      onSelect: _propTypes2['default'].func,
      role: _propTypes2['default'].string,
      navbar: _propTypes2['default'].bool,
      pullRight: _propTypes2['default'].bool,
      pullLeft: _propTypes2['default'].bool
    };
    var defaultProps = {
      justified: false,
      pullRight: false,
      pullLeft: false,
      stacked: false
    };
    var contextTypes = {
      $bs_navbar: _propTypes2['default'].shape({
        bsClass: _propTypes2['default'].string,
        onSelect: _propTypes2['default'].func
      }),
      $bs_tabContainer: _propTypes2['default'].shape({
        activeKey: _propTypes2['default'].any,
        onSelect: _propTypes2['default'].func.isRequired,
        getTabId: _propTypes2['default'].func.isRequired,
        getPaneId: _propTypes2['default'].func.isRequired
      })
    };
    var Nav = function (_React$Component) {
      (0, _inherits3['default'])(Nav, _React$Component);
      function Nav() {
        (0, _classCallCheck3['default'])(this, Nav);
        return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
      }
      Nav.prototype.componentDidUpdate = function componentDidUpdate() {
        var _this2 = this;
        if (!this._needsRefocus) {
          return;
        }
        this._needsRefocus = false;
        var children = this.props.children;
        var _getActiveProps = this.getActiveProps(),
            activeKey = _getActiveProps.activeKey,
            activeHref = _getActiveProps.activeHref;
        var activeChild = _ValidComponentChildren2['default'].find(children, function (child) {
          return _this2.isActive(child, activeKey, activeHref);
        });
        var childrenArray = _ValidComponentChildren2['default'].toArray(children);
        var activeChildIndex = childrenArray.indexOf(activeChild);
        var childNodes = _reactDom2['default'].findDOMNode(this).children;
        var activeNode = childNodes && childNodes[activeChildIndex];
        if (!activeNode || !activeNode.firstChild) {
          return;
        }
        activeNode.firstChild.focus();
      };
      Nav.prototype.handleTabKeyDown = function handleTabKeyDown(onSelect, event) {
        var nextActiveChild = void 0;
        switch (event.keyCode) {
          case _keycode2['default'].codes.left:
          case _keycode2['default'].codes.up:
            nextActiveChild = this.getNextActiveChild(-1);
            break;
          case _keycode2['default'].codes.right:
          case _keycode2['default'].codes.down:
            nextActiveChild = this.getNextActiveChild(1);
            break;
          default:
            return;
        }
        event.preventDefault();
        if (onSelect && nextActiveChild && nextActiveChild.props.eventKey != null) {
          onSelect(nextActiveChild.props.eventKey);
        }
        this._needsRefocus = true;
      };
      Nav.prototype.getNextActiveChild = function getNextActiveChild(offset) {
        var _this3 = this;
        var children = this.props.children;
        var validChildren = children.filter(function (child) {
          return child.props.eventKey != null && !child.props.disabled;
        });
        var _getActiveProps2 = this.getActiveProps(),
            activeKey = _getActiveProps2.activeKey,
            activeHref = _getActiveProps2.activeHref;
        var activeChild = _ValidComponentChildren2['default'].find(children, function (child) {
          return _this3.isActive(child, activeKey, activeHref);
        });
        var activeChildIndex = validChildren.indexOf(activeChild);
        if (activeChildIndex === -1) {
          return validChildren[0];
        }
        var nextIndex = activeChildIndex + offset;
        var numValidChildren = validChildren.length;
        if (nextIndex >= numValidChildren) {
          nextIndex = 0;
        } else if (nextIndex < 0) {
          nextIndex = numValidChildren - 1;
        }
        return validChildren[nextIndex];
      };
      Nav.prototype.getActiveProps = function getActiveProps() {
        var tabContainer = this.context.$bs_tabContainer;
        if (tabContainer) {
          'production' !== 'production' ? (0, _warning2['default'])(this.props.activeKey == null && !this.props.activeHref, 'Specifying a `<Nav>` `activeKey` or `activeHref` in the context of ' + 'a `<TabContainer>` is not supported. Instead use `<TabContainer ' + ('activeKey={' + this.props.activeKey + '} />`.')) : void 0;
          return tabContainer;
        }
        return this.props;
      };
      Nav.prototype.isActive = function isActive(_ref2, activeKey, activeHref) {
        var props = _ref2.props;
        if (props.active || activeKey != null && props.eventKey === activeKey || activeHref && props.href === activeHref) {
          return true;
        }
        return props.active;
      };
      Nav.prototype.getTabProps = function getTabProps(child, tabContainer, navRole, active, onSelect) {
        var _this4 = this;
        if (!tabContainer && navRole !== 'tablist') {
          return null;
        }
        var _child$props = child.props,
            id = _child$props.id,
            controls = _child$props['aria-controls'],
            eventKey = _child$props.eventKey,
            role = _child$props.role,
            onKeyDown = _child$props.onKeyDown,
            tabIndex = _child$props.tabIndex;
        if (tabContainer) {
          'production' !== 'production' ? (0, _warning2['default'])(!id && !controls, 'In the context of a `<TabContainer>`, `<NavItem>`s are given ' + 'generated `id` and `aria-controls` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly, provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : void 0;
          id = tabContainer.getTabId(eventKey);
          controls = tabContainer.getPaneId(eventKey);
        }
        if (navRole === 'tablist') {
          role = role || 'tab';
          onKeyDown = (0, _createChainedFunction2['default'])(function (event) {
            return _this4.handleTabKeyDown(onSelect, event);
          }, onKeyDown);
          tabIndex = active ? tabIndex : -1;
        }
        return {
          id: id,
          role: role,
          onKeyDown: onKeyDown,
          'aria-controls': controls,
          tabIndex: tabIndex
        };
      };
      Nav.prototype.render = function render() {
        var _extends2,
            _this5 = this;
        var _props = this.props,
            stacked = _props.stacked,
            justified = _props.justified,
            onSelect = _props.onSelect,
            propsRole = _props.role,
            propsNavbar = _props.navbar,
            pullRight = _props.pullRight,
            pullLeft = _props.pullLeft,
            className = _props.className,
            children = _props.children,
            props = (0, _objectWithoutProperties3['default'])(_props, ['stacked', 'justified', 'onSelect', 'role', 'navbar', 'pullRight', 'pullLeft', 'className', 'children']);
        var tabContainer = this.context.$bs_tabContainer;
        var role = propsRole || (tabContainer ? 'tablist' : null);
        var _getActiveProps3 = this.getActiveProps(),
            activeKey = _getActiveProps3.activeKey,
            activeHref = _getActiveProps3.activeHref;
        delete props.activeKey;
        delete props.activeHref;
        var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
            bsProps = _splitBsProps[0],
            elementProps = _splitBsProps[1];
        var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'stacked')] = stacked, _extends2[(0, _bootstrapUtils.prefix)(bsProps, 'justified')] = justified, _extends2));
        var navbar = propsNavbar != null ? propsNavbar : this.context.$bs_navbar;
        var pullLeftClassName = void 0;
        var pullRightClassName = void 0;
        if (navbar) {
          var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };
          classes[(0, _bootstrapUtils.prefix)(navbarProps, 'nav')] = true;
          pullRightClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'right');
          pullLeftClassName = (0, _bootstrapUtils.prefix)(navbarProps, 'left');
        } else {
          pullRightClassName = 'pull-right';
          pullLeftClassName = 'pull-left';
        }
        classes[pullRightClassName] = pullRight;
        classes[pullLeftClassName] = pullLeft;
        return _react2['default'].createElement('ul', (0, _extends4['default'])({}, elementProps, {
          role: role,
          className: (0, _classnames2['default'])(className, classes)
        }), _ValidComponentChildren2['default'].map(children, function (child) {
          var active = _this5.isActive(child, activeKey, activeHref);
          var childOnSelect = (0, _createChainedFunction2['default'])(child.props.onSelect, onSelect, navbar && navbar.onSelect, tabContainer && tabContainer.onSelect);
          return (0, _react.cloneElement)(child, (0, _extends4['default'])({}, _this5.getTabProps(child, tabContainer, role, active, childOnSelect), {
            active: active,
            activeKey: activeKey,
            activeHref: activeHref,
            onSelect: childOnSelect
          }));
        }));
      };
      return Nav;
    }(_react2['default'].Component);
    Nav.propTypes = propTypes;
    Nav.defaultProps = defaultProps;
    Nav.contextTypes = contextTypes;
    exports['default'] = (0, _bootstrapUtils.bsClass)('nav', (0, _bootstrapUtils.bsStyles)(['tabs', 'pills'], Nav));
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('10b', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '75', '9e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _createChainedFunction = $__require('9e');
  var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    active: _propTypes2['default'].bool,
    disabled: _propTypes2['default'].bool,
    role: _propTypes2['default'].string,
    href: _propTypes2['default'].string,
    onClick: _propTypes2['default'].func,
    onSelect: _propTypes2['default'].func,
    eventKey: _propTypes2['default'].any
  };
  var defaultProps = {
    active: false,
    disabled: false
  };
  var NavItem = function (_React$Component) {
    (0, _inherits3['default'])(NavItem, _React$Component);
    function NavItem(props, context) {
      (0, _classCallCheck3['default'])(this, NavItem);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handleClick = _this.handleClick.bind(_this);
      return _this;
    }
    NavItem.prototype.handleClick = function handleClick(e) {
      if (this.props.onSelect) {
        e.preventDefault();
        if (!this.props.disabled) {
          this.props.onSelect(this.props.eventKey, e);
        }
      }
    };
    NavItem.prototype.render = function render() {
      var _props = this.props,
          active = _props.active,
          disabled = _props.disabled,
          onClick = _props.onClick,
          className = _props.className,
          style = _props.style,
          props = (0, _objectWithoutProperties3['default'])(_props, ['active', 'disabled', 'onClick', 'className', 'style']);
      delete props.onSelect;
      delete props.eventKey;
      delete props.activeKey;
      delete props.activeHref;
      if (!props.role) {
        if (props.href === '#') {
          props.role = 'button';
        }
      } else if (props.role === 'tab') {
        props['aria-selected'] = active;
      }
      return _react2['default'].createElement('li', {
        role: 'presentation',
        className: (0, _classnames2['default'])(className, {
          active: active,
          disabled: disabled
        }),
        style: style
      }, _react2['default'].createElement(_SafeAnchor2['default'], (0, _extends3['default'])({}, props, {
        disabled: disabled,
        onClick: (0, _createChainedFunction2['default'])(onClick, this.handleClick)
      })));
    };
    return NavItem;
  }(_react2['default'].Component);
  NavItem.propTypes = propTypes;
  NavItem.defaultProps = defaultProps;
  exports['default'] = NavItem;
  module.exports = exports['default'];
});
$__System.registerDynamic('10c', ['1c', '10d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    exports.version = undefined;
    exports.uncontrolledPropTypes = uncontrolledPropTypes;
    exports.getType = getType;
    exports.getValue = getValue;
    exports.getLinkName = getLinkName;
    exports.defaultKey = defaultKey;
    exports.chain = chain;
    exports.transform = transform;
    exports.each = each;
    exports.has = has;
    exports.isReactComponent = isReactComponent;
    var _react = $__require('1c');
    var _react2 = _interopRequireDefault(_react);
    var _invariant = $__require('10d');
    var _invariant2 = _interopRequireDefault(_invariant);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function readOnlyPropType(handler, name) {
      return function (props, propName) {
        if (props[propName] !== undefined) {
          if (!props[handler]) {
            return new Error('You have provided a `' + propName + '` prop to ' + '`' + name + '` without an `' + handler + '` handler. This will render a read-only field. ' + 'If the field should be mutable use `' + defaultKey(propName) + '`. Otherwise, set `' + handler + '`');
          }
        }
      };
    }
    function uncontrolledPropTypes(controlledValues, basePropTypes, displayName) {
      var propTypes = {};
      if ('production' !== 'production' && basePropTypes) {
        transform(controlledValues, function (obj, handler, prop) {
          (0, _invariant2.default)(typeof handler === 'string' && handler.trim().length, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop);
          obj[prop] = readOnlyPropType(handler, displayName);
        }, propTypes);
      }
      return propTypes;
    }
    var version = exports.version = _react2.default.version.split('.').map(parseFloat);
    function getType(component) {
      if (version[0] >= 15 || version[0] === 0 && version[1] >= 13) return component;
      return component.type;
    }
    function getValue(props, name) {
      var linkPropName = getLinkName(name);
      if (linkPropName && !isProp(props, name) && isProp(props, linkPropName)) return props[linkPropName].value;
      return props[name];
    }
    function isProp(props, prop) {
      return props[prop] !== undefined;
    }
    function getLinkName(name) {
      return name === 'value' ? 'valueLink' : name === 'checked' ? 'checkedLink' : null;
    }
    function defaultKey(key) {
      return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
    }
    function chain(thisArg, a, b) {
      return function chainedFunction() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        a && a.call.apply(a, [thisArg].concat(args));
        b && b.call.apply(b, [thisArg].concat(args));
      };
    }
    function transform(obj, cb, seed) {
      each(obj, cb.bind(null, seed = seed || (Array.isArray(obj) ? [] : {})));
      return seed;
    }
    function each(obj, cb, thisArg) {
      if (Array.isArray(obj)) return obj.forEach(cb, thisArg);
      for (var key in obj) {
        if (has(obj, key)) cb.call(thisArg, obj[key], key, obj);
      }
    }
    function has(o, k) {
      return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
    }
    function isReactComponent(component) {
      return !!(component && component.prototype && component.prototype.isReactComponent);
    }
  })($__require('16'));
});
$__System.registerDynamic('10e', ['1c', '10d', '10c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  exports.default = createUncontrollable;
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _invariant = $__require('10d');
  var _invariant2 = _interopRequireDefault(_invariant);
  var _utils = $__require('10c');
  var utils = _interopRequireWildcard(_utils);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function createUncontrollable(mixin, set) {
    return uncontrollable;
    function uncontrollable(Component, controlledValues) {
      var _class, _temp;
      var methods = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var displayName = Component.displayName || Component.name || 'Component',
          basePropTypes = utils.getType(Component).propTypes,
          isCompositeComponent = utils.isReactComponent(Component),
          controlledProps = Object.keys(controlledValues),
          propTypes;
      var OMIT_PROPS = ['valueLink', 'checkedLink'].concat(controlledProps.map(utils.defaultKey));
      propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);
      (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));
      methods = utils.transform(methods, function (obj, method) {
        obj[method] = function () {
          var _refs$inner;
          return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
        };
      }, {});
      var component = (_temp = _class = function (_React$Component) {
        _inherits(component, _React$Component);
        function component() {
          _classCallCheck(this, component);
          return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
        }
        component.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return !mixin.shouldComponentUpdate || mixin.shouldComponentUpdate.apply(this, args);
        };
        component.prototype.componentWillMount = function componentWillMount() {
          var _this2 = this;
          var props = this.props;
          this._values = {};
          controlledProps.forEach(function (key) {
            _this2._values[key] = props[utils.defaultKey(key)];
          });
        };
        component.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var _this3 = this;
          var props = this.props;
          if (mixin.componentWillReceiveProps) {
            mixin.componentWillReceiveProps.call(this, nextProps);
          }
          controlledProps.forEach(function (key) {
            if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {
              _this3._values[key] = nextProps[utils.defaultKey(key)];
            }
          });
        };
        component.prototype.componentWillUnmount = function componentWillUnmount() {
          this.unmounted = true;
        };
        component.prototype.getControlledInstance = function getControlledInstance() {
          return this.refs.inner;
        };
        component.prototype.render = function render() {
          var _this4 = this;
          var newProps = {},
              props = omitProps(this.props);
          utils.each(controlledValues, function (handle, propName) {
            var linkPropName = utils.getLinkName(propName),
                prop = _this4.props[propName];
            if (linkPropName && !isProp(_this4.props, propName) && isProp(_this4.props, linkPropName)) {
              prop = _this4.props[linkPropName].value;
            }
            newProps[propName] = prop !== undefined ? prop : _this4._values[propName];
            newProps[handle] = setAndNotify.bind(_this4, propName);
          });
          newProps = _extends({}, props, newProps, { ref: isCompositeComponent ? 'inner' : null });
          return _react2.default.createElement(Component, newProps);
        };
        return component;
      }(_react2.default.Component), _class.displayName = 'Uncontrolled(' + displayName + ')', _class.propTypes = propTypes, _temp);
      _extends(component.prototype, methods);
      component.ControlledComponent = Component;
      component.deferControlTo = function (newComponent) {
        var additions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var nextMethods = arguments[2];
        return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);
      };
      return component;
      function setAndNotify(propName, value) {
        var linkName = utils.getLinkName(propName),
            handler = this.props[controlledValues[propName]];
        if (linkName && isProp(this.props, linkName) && !handler) {
          handler = this.props[linkName].requestChange;
        }
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }
        set(this, propName, handler, value, args);
      }
      function isProp(props, prop) {
        return props[prop] !== undefined;
      }
      function omitProps(props) {
        var result = {};
        utils.each(props, function (value, key) {
          if (OMIT_PROPS.indexOf(key) === -1) result[key] = value;
        });
        return result;
      }
    }
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('10f', ['10e'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _createUncontrollable = $__require('10e');
  var _createUncontrollable2 = _interopRequireDefault(_createUncontrollable);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var mixin = { shouldComponentUpdate: function shouldComponentUpdate() {
      return !this._notifying;
    } };
  function set(component, propName, handler, value, args) {
    if (handler) {
      component._notifying = true;
      handler.call.apply(handler, [component, value].concat(args));
      component._notifying = false;
    }
    component._values[propName] = value;
    if (!component.unmounted) component.forceUpdate();
  }
  exports.default = (0, _createUncontrollable2.default)(mixin, set);
  module.exports = exports['default'];
});
$__System.registerDynamic("cc", ["10f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("10f");
});
$__System.registerDynamic('104', ['71', '68', '69', '6a', '1c', '50', 'cc'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _objectWithoutProperties2 = $__require('71');

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _classCallCheck2 = $__require('68');

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = $__require('69');

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = $__require('6a');

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require('50');

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _uncontrollable = $__require('cc');

  var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var TAB = 'tab';
  var PANE = 'pane';

  var idPropType = _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]);

  var propTypes = {
    /**
     * HTML id attribute, required if no `generateChildId` prop
     * is specified.
     */
    id: function id(props) {
      var error = null;

      if (!props.generateChildId) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        error = idPropType.apply(undefined, [props].concat(args));

        if (!error && !props.id) {
          error = new Error('In order to properly initialize Tabs in a way that is accessible ' + 'to assistive technologies (such as screen readers) an `id` or a ' + '`generateChildId` prop to TabContainer is required');
        }
      }

      return error;
    },

    /**
     * A function that takes an `eventKey` and `type` and returns a unique id for
     * child tab `<NavItem>`s and `<TabPane>`s. The function _must_ be a pure
     * function, meaning it should always return the _same_ id for the same set
     * of inputs. The default value requires that an `id` to be set for the
     * `<TabContainer>`.
     *
     * The `type` argument will either be `"tab"` or `"pane"`.
     *
     * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`
     */
    generateChildId: _propTypes2['default'].func,

    /**
     * A callback fired when a tab is selected.
     *
     * @controllable activeKey
     */
    onSelect: _propTypes2['default'].func,

    /**
     * The `eventKey` of the currently active tab.
     *
     * @controllable onSelect
     */
    activeKey: _propTypes2['default'].any
  };

  var childContextTypes = {
    $bs_tabContainer: _propTypes2['default'].shape({
      activeKey: _propTypes2['default'].any,
      onSelect: _propTypes2['default'].func.isRequired,
      getTabId: _propTypes2['default'].func.isRequired,
      getPaneId: _propTypes2['default'].func.isRequired
    })
  };

  var TabContainer = function (_React$Component) {
    (0, _inherits3['default'])(TabContainer, _React$Component);

    function TabContainer() {
      (0, _classCallCheck3['default'])(this, TabContainer);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }

    TabContainer.prototype.getChildContext = function getChildContext() {
      var _props = this.props,
          activeKey = _props.activeKey,
          onSelect = _props.onSelect,
          generateChildId = _props.generateChildId,
          id = _props.id;

      var getId = generateChildId || function (key, type) {
        return id ? id + '-' + type + '-' + key : null;
      };

      return {
        $bs_tabContainer: {
          activeKey: activeKey,
          onSelect: onSelect,
          getTabId: function getTabId(key) {
            return getId(key, TAB);
          },
          getPaneId: function getPaneId(key) {
            return getId(key, PANE);
          }
        }
      };
    };

    TabContainer.prototype.render = function render() {
      var _props2 = this.props,
          children = _props2.children,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['children']);

      delete props.generateChildId;
      delete props.onSelect;
      delete props.activeKey;

      return _react2['default'].cloneElement(_react2['default'].Children.only(children), props);
    };

    return TabContainer;
  }(_react2['default'].Component);

  TabContainer.propTypes = propTypes;
  TabContainer.childContextTypes = childContextTypes;

  exports['default'] = (0, _uncontrollable2['default'])(TabContainer, { activeKey: 'onSelect' });
  module.exports = exports['default'];
});
$__System.registerDynamic('105', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '79', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _elementType = $__require('79');
  var _elementType2 = _interopRequireDefault(_elementType);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    componentClass: _elementType2['default'],
    animation: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _elementType2['default']]),
    mountOnEnter: _propTypes2['default'].bool,
    unmountOnExit: _propTypes2['default'].bool
  };
  var defaultProps = {
    componentClass: 'div',
    animation: true,
    mountOnEnter: false,
    unmountOnExit: false
  };
  var contextTypes = { $bs_tabContainer: _propTypes2['default'].shape({ activeKey: _propTypes2['default'].any }) };
  var childContextTypes = { $bs_tabContent: _propTypes2['default'].shape({
      bsClass: _propTypes2['default'].string,
      animation: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _elementType2['default']]),
      activeKey: _propTypes2['default'].any,
      mountOnEnter: _propTypes2['default'].bool,
      unmountOnExit: _propTypes2['default'].bool,
      onPaneEnter: _propTypes2['default'].func.isRequired,
      onPaneExited: _propTypes2['default'].func.isRequired,
      exiting: _propTypes2['default'].bool.isRequired
    }) };
  var TabContent = function (_React$Component) {
    (0, _inherits3['default'])(TabContent, _React$Component);
    function TabContent(props, context) {
      (0, _classCallCheck3['default'])(this, TabContent);
      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));
      _this.handlePaneEnter = _this.handlePaneEnter.bind(_this);
      _this.handlePaneExited = _this.handlePaneExited.bind(_this);
      _this.state = {
        activeKey: null,
        activeChild: null
      };
      return _this;
    }
    TabContent.prototype.getChildContext = function getChildContext() {
      var _props = this.props,
          bsClass = _props.bsClass,
          animation = _props.animation,
          mountOnEnter = _props.mountOnEnter,
          unmountOnExit = _props.unmountOnExit;
      var stateActiveKey = this.state.activeKey;
      var containerActiveKey = this.getContainerActiveKey();
      var activeKey = stateActiveKey != null ? stateActiveKey : containerActiveKey;
      var exiting = stateActiveKey != null && stateActiveKey !== containerActiveKey;
      return { $bs_tabContent: {
          bsClass: bsClass,
          animation: animation,
          activeKey: activeKey,
          mountOnEnter: mountOnEnter,
          unmountOnExit: unmountOnExit,
          onPaneEnter: this.handlePaneEnter,
          onPaneExited: this.handlePaneExited,
          exiting: exiting
        } };
    };
    TabContent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (!nextProps.animation && this.state.activeChild) {
        this.setState({
          activeKey: null,
          activeChild: null
        });
      }
    };
    TabContent.prototype.componentWillUnmount = function componentWillUnmount() {
      this.isUnmounted = true;
    };
    TabContent.prototype.handlePaneEnter = function handlePaneEnter(child, childKey) {
      if (!this.props.animation) {
        return false;
      }
      if (childKey !== this.getContainerActiveKey()) {
        return false;
      }
      this.setState({
        activeKey: childKey,
        activeChild: child
      });
      return true;
    };
    TabContent.prototype.handlePaneExited = function handlePaneExited(child) {
      if (this.isUnmounted) {
        return;
      }
      this.setState(function (_ref) {
        var activeChild = _ref.activeChild;
        if (activeChild !== child) {
          return null;
        }
        return {
          activeKey: null,
          activeChild: null
        };
      });
    };
    TabContent.prototype.getContainerActiveKey = function getContainerActiveKey() {
      var tabContainer = this.context.$bs_tabContainer;
      return tabContainer && tabContainer.activeKey;
    };
    TabContent.prototype.render = function render() {
      var _props2 = this.props,
          Component = _props2.componentClass,
          className = _props2.className,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['componentClass', 'className']);
      var _splitBsPropsAndOmit = (0, _bootstrapUtils.splitBsPropsAndOmit)(props, ['animation', 'mountOnEnter', 'unmountOnExit']),
          bsProps = _splitBsPropsAndOmit[0],
          elementProps = _splitBsPropsAndOmit[1];
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, (0, _bootstrapUtils.prefix)(bsProps, 'content')) }));
    };
    return TabContent;
  }(_react2['default'].Component);
  TabContent.propTypes = propTypes;
  TabContent.defaultProps = defaultProps;
  TabContent.contextTypes = contextTypes;
  TabContent.childContextTypes = childContextTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('tab', TabContent);
  module.exports = exports['default'];
});
$__System.registerDynamic('110', ['67', '71', '68', '69', '6a', '1c', '50', 'ef', 'cc', '10a', '10b', '104', '105', '6c', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _isRequiredForA11y = $__require('ef');
  var _isRequiredForA11y2 = _interopRequireDefault(_isRequiredForA11y);
  var _uncontrollable = $__require('cc');
  var _uncontrollable2 = _interopRequireDefault(_uncontrollable);
  var _Nav = $__require('10a');
  var _Nav2 = _interopRequireDefault(_Nav);
  var _NavItem = $__require('10b');
  var _NavItem2 = _interopRequireDefault(_NavItem);
  var _TabContainer = $__require('104');
  var _TabContainer2 = _interopRequireDefault(_TabContainer);
  var _TabContent = $__require('105');
  var _TabContent2 = _interopRequireDefault(_TabContent);
  var _bootstrapUtils = $__require('6c');
  var _ValidComponentChildren = $__require('7d');
  var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var TabContainer = _TabContainer2['default'].ControlledComponent;
  var propTypes = {
    activeKey: _propTypes2['default'].any,
    bsStyle: _propTypes2['default'].oneOf(['tabs', 'pills']),
    animation: _propTypes2['default'].bool,
    id: (0, _isRequiredForA11y2['default'])(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])),
    onSelect: _propTypes2['default'].func,
    mountOnEnter: _propTypes2['default'].bool,
    unmountOnExit: _propTypes2['default'].bool
  };
  var defaultProps = {
    bsStyle: 'tabs',
    animation: true,
    mountOnEnter: false,
    unmountOnExit: false
  };
  function getDefaultActiveKey(children) {
    var defaultActiveKey = void 0;
    _ValidComponentChildren2['default'].forEach(children, function (child) {
      if (defaultActiveKey == null) {
        defaultActiveKey = child.props.eventKey;
      }
    });
    return defaultActiveKey;
  }
  var Tabs = function (_React$Component) {
    (0, _inherits3['default'])(Tabs, _React$Component);
    function Tabs() {
      (0, _classCallCheck3['default'])(this, Tabs);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Tabs.prototype.renderTab = function renderTab(child) {
      var _child$props = child.props,
          title = _child$props.title,
          eventKey = _child$props.eventKey,
          disabled = _child$props.disabled,
          tabClassName = _child$props.tabClassName;
      if (title == null) {
        return null;
      }
      return _react2['default'].createElement(_NavItem2['default'], {
        eventKey: eventKey,
        disabled: disabled,
        className: tabClassName
      }, title);
    };
    Tabs.prototype.render = function render() {
      var _props = this.props,
          id = _props.id,
          onSelect = _props.onSelect,
          animation = _props.animation,
          mountOnEnter = _props.mountOnEnter,
          unmountOnExit = _props.unmountOnExit,
          bsClass = _props.bsClass,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          _props$activeKey = _props.activeKey,
          activeKey = _props$activeKey === undefined ? getDefaultActiveKey(children) : _props$activeKey,
          props = (0, _objectWithoutProperties3['default'])(_props, ['id', 'onSelect', 'animation', 'mountOnEnter', 'unmountOnExit', 'bsClass', 'className', 'style', 'children', 'activeKey']);
      return _react2['default'].createElement(TabContainer, {
        id: id,
        activeKey: activeKey,
        onSelect: onSelect,
        className: className,
        style: style
      }, _react2['default'].createElement('div', null, _react2['default'].createElement(_Nav2['default'], (0, _extends3['default'])({}, props, { role: 'tablist' }), _ValidComponentChildren2['default'].map(children, this.renderTab)), _react2['default'].createElement(_TabContent2['default'], {
        bsClass: bsClass,
        animation: animation,
        mountOnEnter: mountOnEnter,
        unmountOnExit: unmountOnExit
      }, children)));
    };
    return Tabs;
  }(_react2['default'].Component);
  Tabs.propTypes = propTypes;
  Tabs.defaultProps = defaultProps;
  (0, _bootstrapUtils.bsClass)('tab', Tabs);
  exports['default'] = (0, _uncontrollable2['default'])(Tabs, { activeKey: 'onSelect' });
  module.exports = exports['default'];
});
$__System.registerDynamic('f9', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = createChainableTypeChecker;
  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  // Mostly taken from ReactPropTypes.

  function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location, propFullName) {
      var componentNameSafe = componentName || '<<anonymous>>';
      var propFullNameSafe = propFullName || propName;

      if (props[propName] == null) {
        if (isRequired) {
          return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));
        }

        return null;
      }

      for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
        args[_key - 6] = arguments[_key];
      }

      return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("79", ["1c", "f9"], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _createChainableTypeChecker = $__require("f9");
  var _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function elementType(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);
    if (_react2.default.isValidElement(propValue)) {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of type ReactElement ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
    }
    if (propType !== 'function' && propType !== 'string') {
      return new Error('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected an element type (a string ') + 'or a ReactClass).');
    }
    return null;
  }
  exports.default = (0, _createChainableTypeChecker2.default)(elementType);
  module.exports = exports['default'];
});
$__System.registerDynamic('75', ['67', '71', '68', '69', '6a', '1c', '50', '79'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _extends2 = $__require('67');

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = $__require('71');

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _classCallCheck2 = $__require('68');

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = $__require('69');

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = $__require('6a');

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = $__require('50');

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _elementType = $__require('79');

  var _elementType2 = _interopRequireDefault(_elementType);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var propTypes = {
    href: _propTypes2['default'].string,
    onClick: _propTypes2['default'].func,
    disabled: _propTypes2['default'].bool,
    role: _propTypes2['default'].string,
    tabIndex: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    /**
     * this is sort of silly but needed for Button
     */
    componentClass: _elementType2['default']
  };

  var defaultProps = {
    componentClass: 'a'
  };

  function isTrivialHref(href) {
    return !href || href.trim() === '#';
  }

  /**
   * There are situations due to browser quirks or Bootstrap CSS where
   * an anchor tag is needed, when semantically a button tag is the
   * better choice. SafeAnchor ensures that when an anchor is used like a
   * button its accessible. It also emulates input `disabled` behavior for
   * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.
   */

  var SafeAnchor = function (_React$Component) {
    (0, _inherits3['default'])(SafeAnchor, _React$Component);

    function SafeAnchor(props, context) {
      (0, _classCallCheck3['default'])(this, SafeAnchor);

      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props, context));

      _this.handleClick = _this.handleClick.bind(_this);
      return _this;
    }

    SafeAnchor.prototype.handleClick = function handleClick(event) {
      var _props = this.props,
          disabled = _props.disabled,
          href = _props.href,
          onClick = _props.onClick;

      if (disabled || isTrivialHref(href)) {
        event.preventDefault();
      }

      if (disabled) {
        event.stopPropagation();
        return;
      }

      if (onClick) {
        onClick(event);
      }
    };

    SafeAnchor.prototype.render = function render() {
      var _props2 = this.props,
          Component = _props2.componentClass,
          disabled = _props2.disabled,
          props = (0, _objectWithoutProperties3['default'])(_props2, ['componentClass', 'disabled']);

      if (isTrivialHref(props.href)) {
        props.role = props.role || 'button';
        // we want to make sure there is a href attribute on the node
        // otherwise, the cursor incorrectly styled (except with role='button')
        props.href = props.href || '#';
      }

      if (disabled) {
        props.tabIndex = -1;
        props.style = (0, _extends3['default'])({ pointerEvents: 'none' }, props.style);
      }

      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, props, {
        onClick: this.handleClick
      }));
    };

    return SafeAnchor;
  }(_react2['default'].Component);

  SafeAnchor.propTypes = propTypes;
  SafeAnchor.defaultProps = defaultProps;

  exports['default'] = SafeAnchor;
  module.exports = exports['default'];
});
$__System.registerDynamic('111', ['67', '71', '68', '69', '6a', '6f', '1c', '50', '75', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _SafeAnchor = $__require('75');
  var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    src: _propTypes2['default'].string,
    alt: _propTypes2['default'].string,
    href: _propTypes2['default'].string,
    onError: _propTypes2['default'].func,
    onLoad: _propTypes2['default'].func
  };
  var Thumbnail = function (_React$Component) {
    (0, _inherits3['default'])(Thumbnail, _React$Component);
    function Thumbnail() {
      (0, _classCallCheck3['default'])(this, Thumbnail);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Thumbnail.prototype.render = function render() {
      var _props = this.props,
          src = _props.src,
          alt = _props.alt,
          onError = _props.onError,
          onLoad = _props.onLoad,
          className = _props.className,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['src', 'alt', 'onError', 'onLoad', 'className', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var Component = elementProps.href ? _SafeAnchor2['default'] : 'div';
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement(Component, (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }), _react2['default'].createElement('img', {
        src: src,
        alt: alt,
        onError: onError,
        onLoad: onLoad
      }), children && _react2['default'].createElement('div', { className: 'caption' }, children));
    };
    return Thumbnail;
  }(_react2['default'].Component);
  Thumbnail.propTypes = propTypes;
  exports['default'] = (0, _bootstrapUtils.bsClass)('thumbnail', Thumbnail);
  module.exports = exports['default'];
});
$__System.registerDynamic('ef', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = isRequiredForA11y;
  function isRequiredForA11y(validator) {
    return function validate(props, propName, componentName, location, propFullName) {
      var componentNameSafe = componentName || '<<anonymous>>';
      var propFullNameSafe = propFullName || propName;

      if (props[propName] == null) {
        return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');
      }

      for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        args[_key - 5] = arguments[_key];
      }

      return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));
    };
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('112', ['67', '71', '68', '69', '6a', '6f', '1c', '50', 'ef', '6c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends3 = $__require('67');
  var _extends4 = _interopRequireDefault(_extends3);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _isRequiredForA11y = $__require('ef');
  var _isRequiredForA11y2 = _interopRequireDefault(_isRequiredForA11y);
  var _bootstrapUtils = $__require('6c');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var propTypes = {
    id: (0, _isRequiredForA11y2['default'])(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])),
    placement: _propTypes2['default'].oneOf(['top', 'right', 'bottom', 'left']),
    positionTop: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    positionLeft: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    arrowOffsetTop: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string]),
    arrowOffsetLeft: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])
  };
  var defaultProps = { placement: 'right' };
  var Tooltip = function (_React$Component) {
    (0, _inherits3['default'])(Tooltip, _React$Component);
    function Tooltip() {
      (0, _classCallCheck3['default'])(this, Tooltip);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Tooltip.prototype.render = function render() {
      var _extends2;
      var _props = this.props,
          placement = _props.placement,
          positionTop = _props.positionTop,
          positionLeft = _props.positionLeft,
          arrowOffsetTop = _props.arrowOffsetTop,
          arrowOffsetLeft = _props.arrowOffsetLeft,
          className = _props.className,
          style = _props.style,
          children = _props.children,
          props = (0, _objectWithoutProperties3['default'])(_props, ['placement', 'positionTop', 'positionLeft', 'arrowOffsetTop', 'arrowOffsetLeft', 'className', 'style', 'children']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _extends4['default'])({}, (0, _bootstrapUtils.getClassSet)(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));
      var outerStyle = (0, _extends4['default'])({
        top: positionTop,
        left: positionLeft
      }, style);
      var arrowStyle = {
        top: arrowOffsetTop,
        left: arrowOffsetLeft
      };
      return _react2['default'].createElement('div', (0, _extends4['default'])({}, elementProps, {
        role: 'tooltip',
        className: (0, _classnames2['default'])(className, classes),
        style: outerStyle
      }), _react2['default'].createElement('div', {
        className: (0, _bootstrapUtils.prefix)(bsProps, 'arrow'),
        style: arrowStyle
      }), _react2['default'].createElement('div', { className: (0, _bootstrapUtils.prefix)(bsProps, 'inner') }, children));
    };
    return Tooltip;
  }(_react2['default'].Component);
  Tooltip.propTypes = propTypes;
  Tooltip.defaultProps = defaultProps;
  exports['default'] = (0, _bootstrapUtils.bsClass)('tooltip', Tooltip);
  module.exports = exports['default'];
});
$__System.registerDynamic('113', [], true, function ($__require, exports, module) {
	/* */
	"format cjs";
	/*!
   Copyright (c) 2016 Jed Watson.
   Licensed under the MIT License (MIT), see
   http://jedwatson.github.io/classnames
 */
	/* global define */

	var global = this || self,
	    GLOBAL = global;
	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames() {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (typeof undefined === 'function' && typeof define.amd === 'object' && define.amd) {
			// register as 'classnames', consistent with npm package name
			define('classnames', [], function () {
				return classNames;
			});
		} else {
			window.classNames = classNames;
		}
	})();
});
$__System.registerDynamic("6f", ["113"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("113");
});
$__System.registerDynamic('114', ['67', '71', '68', '69', '6a', '6f', '1c', '6c', '6d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends2 = $__require('67');
  var _extends3 = _interopRequireDefault(_extends2);
  var _objectWithoutProperties2 = $__require('71');
  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
  var _classCallCheck2 = $__require('68');
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _possibleConstructorReturn2 = $__require('69');
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require('6a');
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _classnames = $__require('6f');
  var _classnames2 = _interopRequireDefault(_classnames);
  var _react = $__require('1c');
  var _react2 = _interopRequireDefault(_react);
  var _bootstrapUtils = $__require('6c');
  var _StyleConfig = $__require('6d');
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  var Well = function (_React$Component) {
    (0, _inherits3['default'])(Well, _React$Component);
    function Well() {
      (0, _classCallCheck3['default'])(this, Well);
      return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
    }
    Well.prototype.render = function render() {
      var _props = this.props,
          className = _props.className,
          props = (0, _objectWithoutProperties3['default'])(_props, ['className']);
      var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),
          bsProps = _splitBsProps[0],
          elementProps = _splitBsProps[1];
      var classes = (0, _bootstrapUtils.getClassSet)(bsProps);
      return _react2['default'].createElement('div', (0, _extends3['default'])({}, elementProps, { className: (0, _classnames2['default'])(className, classes) }));
    };
    return Well;
  }(_react2['default'].Component);
  exports['default'] = (0, _bootstrapUtils.bsClass)('well', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.LARGE, _StyleConfig.Size.SMALL], Well));
  module.exports = exports['default'];
});
$__System.registerDynamic('fd', ['115', '116', '117'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var getKeys = $__require('115');
  var toIObject = $__require('116');
  var isEnum = $__require('117').f;
  module.exports = function (isEntries) {
    return function (it) {
      var O = toIObject(it);
      var keys = getKeys(O);
      var length = keys.length;
      var i = 0;
      var result = [];
      var key;
      while (length > i) if (isEnum.call(O, key = keys[i++])) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
      return result;
    };
  };
});
$__System.registerDynamic('118', ['fc', 'fd'], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    /* */
    var $export = $__require('fc');
    var $entries = $__require('fd')(true);
    $export($export.S, 'Object', { entries: function entries(it) {
            return $entries(it);
        } });
});
$__System.registerDynamic('119', ['118', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('118');
  module.exports = $__require('ff').Object.entries;
});
$__System.registerDynamic("101", ["119"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("119"), __esModule: true };
});
$__System.registerDynamic('6d', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var Size = exports.Size = {
    LARGE: 'large',
    SMALL: 'small',
    XSMALL: 'xsmall'
  };

  var SIZE_MAP = exports.SIZE_MAP = {
    large: 'lg',
    medium: 'md',
    small: 'sm',
    xsmall: 'xs',
    lg: 'lg',
    md: 'md',
    sm: 'sm',
    xs: 'xs'
  };

  var DEVICE_SIZES = exports.DEVICE_SIZES = ['lg', 'md', 'sm', 'xs'];

  var State = exports.State = {
    SUCCESS: 'success',
    WARNING: 'warning',
    DANGER: 'danger',
    INFO: 'info'
  };

  var Style = exports.Style = {
    DEFAULT: 'default',
    PRIMARY: 'primary',
    LINK: 'link',
    INVERSE: 'inverse'
  };
});
$__System.registerDynamic('6c', ['101', '67', '10d', '50', '6d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    exports._curry = exports.bsSizes = exports.bsStyles = exports.bsClass = undefined;
    var _entries = $__require('101');
    var _entries2 = _interopRequireDefault(_entries);
    var _extends2 = $__require('67');
    var _extends3 = _interopRequireDefault(_extends2);
    exports.prefix = prefix;
    exports.getClassSet = getClassSet;
    exports.splitBsProps = splitBsProps;
    exports.splitBsPropsAndOmit = splitBsPropsAndOmit;
    exports.addStyle = addStyle;
    var _invariant = $__require('10d');
    var _invariant2 = _interopRequireDefault(_invariant);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _StyleConfig = $__require('6d');
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }
    function curry(fn) {
      return function () {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        var last = args[args.length - 1];
        if (typeof last === 'function') {
          return fn.apply(undefined, args);
        }
        return function (Component) {
          return fn.apply(undefined, args.concat([Component]));
        };
      };
    }
    function prefix(props, variant) {
      !(props.bsClass != null) ? 'production' !== 'production' ? (0, _invariant2['default'])(false, 'A `bsClass` prop is required for this component') : (0, _invariant2['default'])(false) : void 0;
      return props.bsClass + (variant ? '-' + variant : '');
    }
    var bsClass = exports.bsClass = curry(function (defaultClass, Component) {
      var propTypes = Component.propTypes || (Component.propTypes = {});
      var defaultProps = Component.defaultProps || (Component.defaultProps = {});
      propTypes.bsClass = _propTypes2['default'].string;
      defaultProps.bsClass = defaultClass;
      return Component;
    });
    var bsStyles = exports.bsStyles = curry(function (styles, defaultStyle, Component) {
      if (typeof defaultStyle !== 'string') {
        Component = defaultStyle;
        defaultStyle = undefined;
      }
      var existing = Component.STYLES || [];
      var propTypes = Component.propTypes || {};
      styles.forEach(function (style) {
        if (existing.indexOf(style) === -1) {
          existing.push(style);
        }
      });
      var propType = _propTypes2['default'].oneOf(existing);
      Component.STYLES = propType._values = existing;
      Component.propTypes = (0, _extends3['default'])({}, propTypes, { bsStyle: propType });
      if (defaultStyle !== undefined) {
        var defaultProps = Component.defaultProps || (Component.defaultProps = {});
        defaultProps.bsStyle = defaultStyle;
      }
      return Component;
    });
    var bsSizes = exports.bsSizes = curry(function (sizes, defaultSize, Component) {
      if (typeof defaultSize !== 'string') {
        Component = defaultSize;
        defaultSize = undefined;
      }
      var existing = Component.SIZES || [];
      var propTypes = Component.propTypes || {};
      sizes.forEach(function (size) {
        if (existing.indexOf(size) === -1) {
          existing.push(size);
        }
      });
      var values = [];
      existing.forEach(function (size) {
        var mappedSize = _StyleConfig.SIZE_MAP[size];
        if (mappedSize && mappedSize !== size) {
          values.push(mappedSize);
        }
        values.push(size);
      });
      var propType = _propTypes2['default'].oneOf(values);
      propType._values = values;
      Component.SIZES = existing;
      Component.propTypes = (0, _extends3['default'])({}, propTypes, { bsSize: propType });
      if (defaultSize !== undefined) {
        if (!Component.defaultProps) {
          Component.defaultProps = {};
        }
        Component.defaultProps.bsSize = defaultSize;
      }
      return Component;
    });
    function getClassSet(props) {
      var _classes;
      var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);
      if (props.bsSize) {
        var bsSize = _StyleConfig.SIZE_MAP[props.bsSize] || props.bsSize;
        classes[prefix(props, bsSize)] = true;
      }
      if (props.bsStyle) {
        classes[prefix(props, props.bsStyle)] = true;
      }
      return classes;
    }
    function getBsProps(props) {
      return {
        bsClass: props.bsClass,
        bsSize: props.bsSize,
        bsStyle: props.bsStyle,
        bsRole: props.bsRole
      };
    }
    function isBsProp(propName) {
      return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';
    }
    function splitBsProps(props) {
      var elementProps = {};
      (0, _entries2['default'])(props).forEach(function (_ref) {
        var propName = _ref[0],
            propValue = _ref[1];
        if (!isBsProp(propName)) {
          elementProps[propName] = propValue;
        }
      });
      return [getBsProps(props), elementProps];
    }
    function splitBsPropsAndOmit(props, omittedPropNames) {
      var isOmittedProp = {};
      omittedPropNames.forEach(function (propName) {
        isOmittedProp[propName] = true;
      });
      var elementProps = {};
      (0, _entries2['default'])(props).forEach(function (_ref2) {
        var propName = _ref2[0],
            propValue = _ref2[1];
        if (!isBsProp(propName) && !isOmittedProp[propName]) {
          elementProps[propName] = propValue;
        }
      });
      return [getBsProps(props), elementProps];
    }
    function addStyle(Component) {
      for (var _len2 = arguments.length, styleVariant = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        styleVariant[_key2 - 1] = arguments[_key2];
      }
      bsStyles(styleVariant, Component);
    }
    var _curry = exports._curry = curry;
  })($__require('16'));
});
$__System.registerDynamic('9e', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  /**
   * Safe chained function
   *
   * Will only create a new function if needed,
   * otherwise will pass back existing functions or null.
   *
   * @param {function} functions to chain
   * @returns {function|null}
   */
  function createChainedFunction() {
    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    return funcs.filter(function (f) {
      return f != null;
    }).reduce(function (acc, f) {
      if (typeof f !== 'function') {
        throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');
      }

      if (acc === null) {
        return f;
      }

      return function chainedFunction() {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        acc.apply(this, args);
        f.apply(this, args);
      };
    }, null);
  }

  exports['default'] = createChainedFunction;
  module.exports = exports['default'];
});
$__System.registerDynamic('7d', ['1c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  /**
   * Iterates through children that are typically specified as `props.children`,
   * but only maps over children that are "valid components".
   *
   * The mapFunction provided index will be normalised to the components mapped,
   * so an invalid component would not increase the index.
   *
   * @param {?*} children Children tree container.
   * @param {function(*, int)} func.
   * @param {*} context Context for func.
   * @return {object} Object containing the ordered map of results.
   */
  function map(children, func, context) {
    var index = 0;

    return _react2['default'].Children.map(children, function (child) {
      if (!_react2['default'].isValidElement(child)) {
        return child;
      }

      return func.call(context, child, index++);
    });
  }

  /**
   * Iterates through children that are "valid components".
   *
   * The provided forEachFunc(child, index) will be called for each
   * leaf child with the index reflecting the position relative to "valid components".
   *
   * @param {?*} children Children tree container.
   * @param {function(*, int)} func.
   * @param {*} context Context for context.
   */
  // TODO: This module should be ElementChildren, and should use named exports.

  function forEach(children, func, context) {
    var index = 0;

    _react2['default'].Children.forEach(children, function (child) {
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      func.call(context, child, index++);
    });
  }

  /**
   * Count the number of "valid components" in the Children container.
   *
   * @param {?*} children Children tree container.
   * @returns {number}
   */
  function count(children) {
    var result = 0;

    _react2['default'].Children.forEach(children, function (child) {
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      ++result;
    });

    return result;
  }

  /**
   * Finds children that are typically specified as `props.children`,
   * but only iterates over children that are "valid components".
   *
   * The provided forEachFunc(child, index) will be called for each
   * leaf child with the index reflecting the position relative to "valid components".
   *
   * @param {?*} children Children tree container.
   * @param {function(*, int)} func.
   * @param {*} context Context for func.
   * @returns {array} of children that meet the func return statement
   */
  function filter(children, func, context) {
    var index = 0;
    var result = [];

    _react2['default'].Children.forEach(children, function (child) {
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      if (func.call(context, child, index++)) {
        result.push(child);
      }
    });

    return result;
  }

  function find(children, func, context) {
    var index = 0;
    var result = undefined;

    _react2['default'].Children.forEach(children, function (child) {
      if (result) {
        return;
      }
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      if (func.call(context, child, index++)) {
        result = child;
      }
    });

    return result;
  }

  function every(children, func, context) {
    var index = 0;
    var result = true;

    _react2['default'].Children.forEach(children, function (child) {
      if (!result) {
        return;
      }
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      if (!func.call(context, child, index++)) {
        result = false;
      }
    });

    return result;
  }

  function some(children, func, context) {
    var index = 0;
    var result = false;

    _react2['default'].Children.forEach(children, function (child) {
      if (result) {
        return;
      }
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      if (func.call(context, child, index++)) {
        result = true;
      }
    });

    return result;
  }

  function toArray(children) {
    var result = [];

    _react2['default'].Children.forEach(children, function (child) {
      if (!_react2['default'].isValidElement(child)) {
        return;
      }

      result.push(child);
    });

    return result;
  }

  exports['default'] = {
    map: map,
    forEach: forEach,
    count: count,
    find: find,
    filter: filter,
    every: every,
    some: some,
    toArray: toArray
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('11a', ['6c', '9e', '7d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.ValidComponentChildren = exports.createChainedFunction = exports.bootstrapUtils = undefined;
  var _bootstrapUtils2 = $__require('6c');
  var _bootstrapUtils = _interopRequireWildcard(_bootstrapUtils2);
  var _createChainedFunction2 = $__require('9e');
  var _createChainedFunction3 = _interopRequireDefault(_createChainedFunction2);
  var _ValidComponentChildren2 = $__require('7d');
  var _ValidComponentChildren3 = _interopRequireDefault(_ValidComponentChildren2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  exports.bootstrapUtils = _bootstrapUtils;
  exports.createChainedFunction = _createChainedFunction3['default'];
  exports.ValidComponentChildren = _ValidComponentChildren3['default'];
});
$__System.registerDynamic('11b', ['65', '6b', '72', '73', '74', '77', 'f4', '76', '7a', '7b', '7f', '81', '6e', '83', '84', 'c7', '86', '85', 'c0', '88', '8b', '8c', '7c', 'c5', '8d', '8e', '91', '92', '93', '94', '95', '99', '9d', 'bf', 'c1', 'c2', 'c3', 'c4', '10a', 'ca', 'cb', 'cd', '10b', 'd9', 'da', 'db', 'de', 'e0', 'e1', 'e2', 'ec', '66', 'ee', 'f0', 'f1', 'f2', 'f3', '75', '102', '103', '104', '105', '107', '106', '110', '111', '112', '114', '11a'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.utils = exports.Well = exports.Tooltip = exports.Thumbnail = exports.Tabs = exports.TabPane = exports.Table = exports.TabContent = exports.TabContainer = exports.Tab = exports.SplitButton = exports.SafeAnchor = exports.Row = exports.ResponsiveEmbed = exports.Radio = exports.ProgressBar = exports.Popover = exports.PanelGroup = exports.Panel = exports.PaginationButton = exports.Pagination = exports.Pager = exports.PageItem = exports.PageHeader = exports.OverlayTrigger = exports.Overlay = exports.NavItem = exports.NavDropdown = exports.NavbarBrand = exports.Navbar = exports.Nav = exports.ModalTitle = exports.ModalHeader = exports.ModalFooter = exports.ModalBody = exports.Modal = exports.MenuItem = exports.Media = exports.ListGroupItem = exports.ListGroup = exports.Label = exports.Jumbotron = exports.InputGroup = exports.Image = exports.HelpBlock = exports.Grid = exports.Glyphicon = exports.FormGroup = exports.FormControl = exports.Form = exports.Fade = exports.DropdownButton = exports.Dropdown = exports.Collapse = exports.Col = exports.ControlLabel = exports.CloseButton = exports.Clearfix = exports.Checkbox = exports.CarouselItem = exports.Carousel = exports.ButtonToolbar = exports.ButtonGroup = exports.Button = exports.BreadcrumbItem = exports.Breadcrumb = exports.Badge = exports.Alert = exports.Accordion = undefined;
  var _Accordion2 = $__require('65');
  var _Accordion3 = _interopRequireDefault(_Accordion2);
  var _Alert2 = $__require('6b');
  var _Alert3 = _interopRequireDefault(_Alert2);
  var _Badge2 = $__require('72');
  var _Badge3 = _interopRequireDefault(_Badge2);
  var _Breadcrumb2 = $__require('73');
  var _Breadcrumb3 = _interopRequireDefault(_Breadcrumb2);
  var _BreadcrumbItem2 = $__require('74');
  var _BreadcrumbItem3 = _interopRequireDefault(_BreadcrumbItem2);
  var _Button2 = $__require('77');
  var _Button3 = _interopRequireDefault(_Button2);
  var _ButtonGroup2 = $__require('f4');
  var _ButtonGroup3 = _interopRequireDefault(_ButtonGroup2);
  var _ButtonToolbar2 = $__require('76');
  var _ButtonToolbar3 = _interopRequireDefault(_ButtonToolbar2);
  var _Carousel2 = $__require('7a');
  var _Carousel3 = _interopRequireDefault(_Carousel2);
  var _CarouselItem2 = $__require('7b');
  var _CarouselItem3 = _interopRequireDefault(_CarouselItem2);
  var _Checkbox2 = $__require('7f');
  var _Checkbox3 = _interopRequireDefault(_Checkbox2);
  var _Clearfix2 = $__require('81');
  var _Clearfix3 = _interopRequireDefault(_Clearfix2);
  var _CloseButton2 = $__require('6e');
  var _CloseButton3 = _interopRequireDefault(_CloseButton2);
  var _ControlLabel2 = $__require('83');
  var _ControlLabel3 = _interopRequireDefault(_ControlLabel2);
  var _Col2 = $__require('84');
  var _Col3 = _interopRequireDefault(_Col2);
  var _Collapse2 = $__require('c7');
  var _Collapse3 = _interopRequireDefault(_Collapse2);
  var _Dropdown2 = $__require('86');
  var _Dropdown3 = _interopRequireDefault(_Dropdown2);
  var _DropdownButton2 = $__require('85');
  var _DropdownButton3 = _interopRequireDefault(_DropdownButton2);
  var _Fade2 = $__require('c0');
  var _Fade3 = _interopRequireDefault(_Fade2);
  var _Form2 = $__require('88');
  var _Form3 = _interopRequireDefault(_Form2);
  var _FormControl2 = $__require('8b');
  var _FormControl3 = _interopRequireDefault(_FormControl2);
  var _FormGroup2 = $__require('8c');
  var _FormGroup3 = _interopRequireDefault(_FormGroup2);
  var _Glyphicon2 = $__require('7c');
  var _Glyphicon3 = _interopRequireDefault(_Glyphicon2);
  var _Grid2 = $__require('c5');
  var _Grid3 = _interopRequireDefault(_Grid2);
  var _HelpBlock2 = $__require('8d');
  var _HelpBlock3 = _interopRequireDefault(_HelpBlock2);
  var _Image2 = $__require('8e');
  var _Image3 = _interopRequireDefault(_Image2);
  var _InputGroup2 = $__require('91');
  var _InputGroup3 = _interopRequireDefault(_InputGroup2);
  var _Jumbotron2 = $__require('92');
  var _Jumbotron3 = _interopRequireDefault(_Jumbotron2);
  var _Label2 = $__require('93');
  var _Label3 = _interopRequireDefault(_Label2);
  var _ListGroup2 = $__require('94');
  var _ListGroup3 = _interopRequireDefault(_ListGroup2);
  var _ListGroupItem2 = $__require('95');
  var _ListGroupItem3 = _interopRequireDefault(_ListGroupItem2);
  var _Media2 = $__require('99');
  var _Media3 = _interopRequireDefault(_Media2);
  var _MenuItem2 = $__require('9d');
  var _MenuItem3 = _interopRequireDefault(_MenuItem2);
  var _Modal2 = $__require('bf');
  var _Modal3 = _interopRequireDefault(_Modal2);
  var _ModalBody2 = $__require('c1');
  var _ModalBody3 = _interopRequireDefault(_ModalBody2);
  var _ModalFooter2 = $__require('c2');
  var _ModalFooter3 = _interopRequireDefault(_ModalFooter2);
  var _ModalHeader2 = $__require('c3');
  var _ModalHeader3 = _interopRequireDefault(_ModalHeader2);
  var _ModalTitle2 = $__require('c4');
  var _ModalTitle3 = _interopRequireDefault(_ModalTitle2);
  var _Nav2 = $__require('10a');
  var _Nav3 = _interopRequireDefault(_Nav2);
  var _Navbar2 = $__require('ca');
  var _Navbar3 = _interopRequireDefault(_Navbar2);
  var _NavbarBrand2 = $__require('cb');
  var _NavbarBrand3 = _interopRequireDefault(_NavbarBrand2);
  var _NavDropdown2 = $__require('cd');
  var _NavDropdown3 = _interopRequireDefault(_NavDropdown2);
  var _NavItem2 = $__require('10b');
  var _NavItem3 = _interopRequireDefault(_NavItem2);
  var _Overlay2 = $__require('d9');
  var _Overlay3 = _interopRequireDefault(_Overlay2);
  var _OverlayTrigger2 = $__require('da');
  var _OverlayTrigger3 = _interopRequireDefault(_OverlayTrigger2);
  var _PageHeader2 = $__require('db');
  var _PageHeader3 = _interopRequireDefault(_PageHeader2);
  var _PageItem2 = $__require('de');
  var _PageItem3 = _interopRequireDefault(_PageItem2);
  var _Pager2 = $__require('e0');
  var _Pager3 = _interopRequireDefault(_Pager2);
  var _Pagination2 = $__require('e1');
  var _Pagination3 = _interopRequireDefault(_Pagination2);
  var _PaginationButton2 = $__require('e2');
  var _PaginationButton3 = _interopRequireDefault(_PaginationButton2);
  var _Panel2 = $__require('ec');
  var _Panel3 = _interopRequireDefault(_Panel2);
  var _PanelGroup2 = $__require('66');
  var _PanelGroup3 = _interopRequireDefault(_PanelGroup2);
  var _Popover2 = $__require('ee');
  var _Popover3 = _interopRequireDefault(_Popover2);
  var _ProgressBar2 = $__require('f0');
  var _ProgressBar3 = _interopRequireDefault(_ProgressBar2);
  var _Radio2 = $__require('f1');
  var _Radio3 = _interopRequireDefault(_Radio2);
  var _ResponsiveEmbed2 = $__require('f2');
  var _ResponsiveEmbed3 = _interopRequireDefault(_ResponsiveEmbed2);
  var _Row2 = $__require('f3');
  var _Row3 = _interopRequireDefault(_Row2);
  var _SafeAnchor2 = $__require('75');
  var _SafeAnchor3 = _interopRequireDefault(_SafeAnchor2);
  var _SplitButton2 = $__require('102');
  var _SplitButton3 = _interopRequireDefault(_SplitButton2);
  var _Tab2 = $__require('103');
  var _Tab3 = _interopRequireDefault(_Tab2);
  var _TabContainer2 = $__require('104');
  var _TabContainer3 = _interopRequireDefault(_TabContainer2);
  var _TabContent2 = $__require('105');
  var _TabContent3 = _interopRequireDefault(_TabContent2);
  var _Table2 = $__require('107');
  var _Table3 = _interopRequireDefault(_Table2);
  var _TabPane2 = $__require('106');
  var _TabPane3 = _interopRequireDefault(_TabPane2);
  var _Tabs2 = $__require('110');
  var _Tabs3 = _interopRequireDefault(_Tabs2);
  var _Thumbnail2 = $__require('111');
  var _Thumbnail3 = _interopRequireDefault(_Thumbnail2);
  var _Tooltip2 = $__require('112');
  var _Tooltip3 = _interopRequireDefault(_Tooltip2);
  var _Well2 = $__require('114');
  var _Well3 = _interopRequireDefault(_Well2);
  var _utils2 = $__require('11a');
  var _utils = _interopRequireWildcard(_utils2);
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }
  exports.Accordion = _Accordion3['default'];
  exports.Alert = _Alert3['default'];
  exports.Badge = _Badge3['default'];
  exports.Breadcrumb = _Breadcrumb3['default'];
  exports.BreadcrumbItem = _BreadcrumbItem3['default'];
  exports.Button = _Button3['default'];
  exports.ButtonGroup = _ButtonGroup3['default'];
  exports.ButtonToolbar = _ButtonToolbar3['default'];
  exports.Carousel = _Carousel3['default'];
  exports.CarouselItem = _CarouselItem3['default'];
  exports.Checkbox = _Checkbox3['default'];
  exports.Clearfix = _Clearfix3['default'];
  exports.CloseButton = _CloseButton3['default'];
  exports.ControlLabel = _ControlLabel3['default'];
  exports.Col = _Col3['default'];
  exports.Collapse = _Collapse3['default'];
  exports.Dropdown = _Dropdown3['default'];
  exports.DropdownButton = _DropdownButton3['default'];
  exports.Fade = _Fade3['default'];
  exports.Form = _Form3['default'];
  exports.FormControl = _FormControl3['default'];
  exports.FormGroup = _FormGroup3['default'];
  exports.Glyphicon = _Glyphicon3['default'];
  exports.Grid = _Grid3['default'];
  exports.HelpBlock = _HelpBlock3['default'];
  exports.Image = _Image3['default'];
  exports.InputGroup = _InputGroup3['default'];
  exports.Jumbotron = _Jumbotron3['default'];
  exports.Label = _Label3['default'];
  exports.ListGroup = _ListGroup3['default'];
  exports.ListGroupItem = _ListGroupItem3['default'];
  exports.Media = _Media3['default'];
  exports.MenuItem = _MenuItem3['default'];
  exports.Modal = _Modal3['default'];
  exports.ModalBody = _ModalBody3['default'];
  exports.ModalFooter = _ModalFooter3['default'];
  exports.ModalHeader = _ModalHeader3['default'];
  exports.ModalTitle = _ModalTitle3['default'];
  exports.Nav = _Nav3['default'];
  exports.Navbar = _Navbar3['default'];
  exports.NavbarBrand = _NavbarBrand3['default'];
  exports.NavDropdown = _NavDropdown3['default'];
  exports.NavItem = _NavItem3['default'];
  exports.Overlay = _Overlay3['default'];
  exports.OverlayTrigger = _OverlayTrigger3['default'];
  exports.PageHeader = _PageHeader3['default'];
  exports.PageItem = _PageItem3['default'];
  exports.Pager = _Pager3['default'];
  exports.Pagination = _Pagination3['default'];
  exports.PaginationButton = _PaginationButton3['default'];
  exports.Panel = _Panel3['default'];
  exports.PanelGroup = _PanelGroup3['default'];
  exports.Popover = _Popover3['default'];
  exports.ProgressBar = _ProgressBar3['default'];
  exports.Radio = _Radio3['default'];
  exports.ResponsiveEmbed = _ResponsiveEmbed3['default'];
  exports.Row = _Row3['default'];
  exports.SafeAnchor = _SafeAnchor3['default'];
  exports.SplitButton = _SplitButton3['default'];
  exports.Tab = _Tab3['default'];
  exports.TabContainer = _TabContainer3['default'];
  exports.TabContent = _TabContent3['default'];
  exports.Table = _Table3['default'];
  exports.TabPane = _TabPane3['default'];
  exports.Tabs = _Tabs3['default'];
  exports.Thumbnail = _Thumbnail3['default'];
  exports.Tooltip = _Tooltip3['default'];
  exports.Well = _Well3['default'];
  exports.utils = _utils;
});
$__System.registerDynamic("1e", ["11b"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("11b");
});
$__System.registerDynamic("11c", [], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var global = this || self,
      GLOBAL = global;
  (function () {
    if (Array.prototype.fill) return;

    var fill = function (value) {
      // Steps 1-2.
      if (this == null) {
        throw new TypeError("this is null or not defined");
      }

      var O = Object(this);

      // Steps 3-5.
      var len = O.length >>> 0;

      // Steps 6-7.
      var start = arguments[1];
      var relativeStart = start >> 0;

      // Step 8.
      var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);

      // Steps 9-10.
      var end = arguments[2];
      var relativeEnd = end === undefined ? len : end >> 0;

      // Step 11.
      var last = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);

      // Step 12.
      while (k < last) {
        O[k] = value;
        k++;
      }

      // Step 13.
      return O;
    };

    if (Object.defineProperty) {
      try {
        Object.defineProperty(Array.prototype, 'fill', {
          value: fill,
          configurable: true,
          enumerable: false,
          writable: true
        });
      } catch (e) {}
    }

    if (!Array.prototype.fill) {
      Array.prototype.fill = fill;
    }
  })(this);
});
$__System.registerDynamic("11d", ["11c"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("11c");
});
$__System.registerDynamic("11e", ["11d", "122", "124", "123", "1c", "50", "19", "11f", "120", "121"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  $__require("11d");
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _d3Shape = $__require("124");
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _pondjs = $__require("19");
  var _util = $__require("11f");
  var _styler = $__require("120");
  var _curve = $__require("121");
  var _curve2 = _interopRequireDefault(_curve);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultStyle = {
    line: {
      normal: {
        stroke: "steelblue",
        fill: "none",
        strokeWidth: 1
      },
      highlighted: {
        stroke: "#5a98cb",
        fill: "none",
        strokeWidth: 1
      },
      selected: {
        stroke: "steelblue",
        fill: "none",
        strokeWidth: 1
      },
      muted: {
        stroke: "steelblue",
        fill: "none",
        opacity: 0.4,
        strokeWidth: 1
      }
    },
    area: {
      normal: {
        fill: "steelblue",
        stroke: "none",
        opacity: 0.75
      },
      highlighted: {
        fill: "#5a98cb",
        stroke: "none",
        opacity: 0.75
      },
      selected: {
        fill: "steelblue",
        stroke: "none",
        opacity: 0.75
      },
      muted: {
        fill: "steelblue",
        stroke: "none",
        opacity: 0.25
      }
    }
  };
  var AreaChart = function (_React$Component) {
    _inherits(AreaChart, _React$Component);
    function AreaChart() {
      _classCallCheck(this, AreaChart);
      return _possibleConstructorReturn(this, (AreaChart.__proto__ || Object.getPrototypeOf(AreaChart)).apply(this, arguments));
    }
    _createClass(AreaChart, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var newSeries = nextProps.series;
        var oldSeries = this.props.series;
        var width = nextProps.width;
        var timeScale = nextProps.timeScale;
        var yScale = nextProps.yScale;
        var interpolation = nextProps.interpolation;
        var columns = nextProps.columns;
        var style = nextProps.style;
        var highlight = nextProps.highlight;
        var selection = nextProps.selection;
        var widthChanged = this.props.width !== width;
        var timeScaleChanged = (0, _util.scaleAsString)(this.props.timeScale) !== (0, _util.scaleAsString)(timeScale);
        var yAxisScaleChanged = this.props.yScale !== yScale;
        var interpolationChanged = this.props.interpolation !== interpolation;
        var columnsChanged = JSON.stringify(this.props.columns) !== JSON.stringify(columns);
        var styleChanged = JSON.stringify(this.props.style) !== JSON.stringify(style);
        var highlightChanged = this.props.highlight !== highlight;
        var selectionChanged = this.props.selection !== selection;
        var seriesChanged = false;
        if (oldSeries.length !== newSeries.length) {
          seriesChanged = true;
        } else {
          seriesChanged = !_pondjs.TimeSeries.is(oldSeries, newSeries);
        }
        return seriesChanged || timeScaleChanged || widthChanged || interpolationChanged || columnsChanged || styleChanged || yAxisScaleChanged || highlightChanged || selectionChanged;
      }
    }, {
      key: "handleHover",
      value: function handleHover(e, column) {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(column);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(null);
        }
      }
    }, {
      key: "handleClick",
      value: function handleClick(e, column) {
        e.stopPropagation();
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(column);
        }
      }
    }, {
      key: "providedAreaStyleMap",
      value: function providedAreaStyleMap(column) {
        var style = defaultStyle;
        if (this.props.style) {
          if (this.props.style instanceof _styler.Styler) {
            style = this.props.style.areaChartStyle()[column];
          } else if (_underscore2.default.isObject(this.props.style)) {
            style = this.props.style[column];
          } else if (_underscore2.default.isFunction(this.props.style)) {
            style = this.props.style(column);
          }
        }
        return style;
      }
    }, {
      key: "style",
      value: function style(column, type) {
        var style = void 0;
        var styleMap = this.providedAreaStyleMap(column);
        var isHighlighted = this.props.highlight && column === this.props.highlight;
        var isSelected = this.props.selection && column === this.props.selection;
        if (!_underscore2.default.has(styleMap, "line")) {
          console.error("Provided style for AreaChart does not define a style for the outline:", styleMap, column);
        }
        if (!_underscore2.default.has(styleMap, "area")) {
          console.error("Provided style for AreaChart does not define a style for the area:", styleMap);
        }
        if (this.props.selection) {
          if (isSelected) {
            style = (0, _merge2.default)(true, defaultStyle[type].selected, styleMap[type].selected ? styleMap[type].selected : {});
          } else if (isHighlighted) {
            style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});
          } else {
            style = (0, _merge2.default)(true, defaultStyle[type].muted, styleMap[type].muted ? styleMap[type].muted : {});
          }
        } else if (isHighlighted) {
          style = (0, _merge2.default)(true, defaultStyle[type].highlighted, styleMap[type].highlighted ? styleMap[type].highlighted : {});
        } else {
          style = (0, _merge2.default)(true, defaultStyle[type].normal, styleMap[type].normal ? styleMap[type].normal : {});
        }
        return style;
      }
    }, {
      key: "pathStyle",
      value: function pathStyle(column) {
        return this.style(column, "line");
      }
    }, {
      key: "areaStyle",
      value: function areaStyle(column) {
        return this.style(column, "area");
      }
    }, {
      key: "renderPaths",
      value: function renderPaths(columnList, direction) {
        var _this2 = this;
        var dir = direction === "up" ? 1 : -1;
        var size = this.props.series.size();
        var offsets = new Array(size).fill(0);
        return columnList.map(function (column, i) {
          var style = _this2.areaStyle(column);
          var pathStyle = _this2.pathStyle(column);
          var data = [];
          for (var j = 0; j < _this2.props.series.size(); j += 1) {
            var seriesPoint = _this2.props.series.at(j);
            data.push({
              x0: _this2.props.timeScale(seriesPoint.timestamp()),
              y0: _this2.props.yScale(offsets[j]),
              y1: _this2.props.yScale(offsets[j] + dir * seriesPoint.get(column))
            });
            if (_this2.props.stack) {
              offsets[j] += dir * seriesPoint.get(column);
            }
          }
          var areaGenerator = (0, _d3Shape.area)().curve(_curve2.default[_this2.props.interpolation]).x(function (d) {
            return d.x0;
          }).y0(function (d) {
            return d.y0;
          }).y1(function (d) {
            return d.y1;
          });
          var areaPath = areaGenerator(data);
          var lineGenerator = (0, _d3Shape.line)().curve(_curve2.default[_this2.props.interpolation]).x(function (d) {
            return d.x0;
          }).y(function (d) {
            return d.y1;
          });
          var outlinePath = lineGenerator(data);
          return _react2.default.createElement("g", { key: "area-" + i }, _react2.default.createElement("path", {
            d: areaPath,
            style: style,
            onClick: function onClick(e) {
              return _this2.handleClick(e, column);
            },
            onMouseLeave: function onMouseLeave() {
              return _this2.handleHoverLeave();
            },
            onMouseMove: function onMouseMove(e) {
              return _this2.handleHover(e, column);
            }
          }), _react2.default.createElement("path", {
            d: outlinePath,
            style: pathStyle,
            onClick: function onClick(e) {
              return _this2.handleClick(e, column);
            },
            onMouseLeave: function onMouseLeave() {
              return _this2.handleHoverLeave();
            },
            onMouseMove: function onMouseMove(e) {
              return _this2.handleHover(e, column);
            }
          }));
        });
      }
    }, {
      key: "renderAreas",
      value: function renderAreas() {
        var up = this.props.columns.up || [];
        var down = this.props.columns.down || [];
        return _react2.default.createElement("g", null, this.renderPaths(up, "up"), this.renderPaths(down, "down"));
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement("g", null, this.renderAreas());
      }
    }]);
    return AreaChart;
  }(_react2.default.Component);
  exports.default = AreaChart;
  AreaChart.propTypes = {
    series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,
    axis: _propTypes2.default.string.isRequired,
    columns: _propTypes2.default.shape({
      up: _propTypes2.default.arrayOf(_propTypes2.default.string),
      down: _propTypes2.default.arrayOf(_propTypes2.default.string)
    }),
    stack: _propTypes2.default.bool,
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),
    interpolation: _propTypes2.default.oneOf(["curveBasis", "curveBasisOpen", "curveBundle", "curveCardinal", "curveCardinalOpen", "curveCatmullRom", "curveCatmullRomOpen", "curveLinear", "curveMonotoneX", "curveMonotoneY", "curveNatural", "curveRadial", "curveStep", "curveStepAfter", "curveStepBefore"]),
    highlight: _propTypes2.default.string,
    onHighlightChange: _propTypes2.default.func,
    selection: _propTypes2.default.string,
    onSelectionChange: _propTypes2.default.func,
    timeScale: _propTypes2.default.func,
    yScale: _propTypes2.default.func,
    width: _propTypes2.default.number
  };
  AreaChart.defaultProps = {
    interpolation: "curveLinear",
    columns: {
      up: ["value"],
      down: []
    },
    stack: true
  };
});
$__System.registerDynamic("125", ["122", "123", "1c", "50", "19", "126", "120", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _merge = $__require("123");
    var _merge2 = _interopRequireDefault(_merge);
    var _react = $__require("1c");
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require("50");
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _pondjs = $__require("19");
    var _EventMarker = $__require("126");
    var _EventMarker2 = _interopRequireDefault(_EventMarker);
    var _styler = $__require("120");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var defaultStyle = {
      normal: {
        fill: "steelblue",
        opacity: 0.8
      },
      highlighted: {
        fill: "steelblue",
        opacity: 1.0
      },
      selected: {
        fill: "steelblue",
        opacity: 1.0
      },
      muted: {
        fill: "steelblue",
        opacity: 0.4
      }
    };
    var BarChart = function (_React$Component) {
      _inherits(BarChart, _React$Component);
      function BarChart() {
        _classCallCheck(this, BarChart);
        return _possibleConstructorReturn(this, (BarChart.__proto__ || Object.getPrototypeOf(BarChart)).apply(this, arguments));
      }
      _createClass(BarChart, [{
        key: "handleHover",
        value: function handleHover(e, event, column) {
          var bar = {
            event: event,
            column: column
          };
          if (this.props.onHighlightChange) {
            this.props.onHighlightChange(bar);
          }
        }
      }, {
        key: "handleHoverLeave",
        value: function handleHoverLeave() {
          if (this.props.onHighlightChange) {
            this.props.onHighlightChange(null);
          }
        }
      }, {
        key: "handleClick",
        value: function handleClick(e, event, column) {
          var bar = {
            event: event,
            column: column
          };
          if (this.props.onSelectionChange) {
            this.props.onSelectionChange(bar);
          }
          e.stopPropagation();
        }
      }, {
        key: "providedStyleMap",
        value: function providedStyleMap(column) {
          var style = {};
          if (this.props.style) {
            if (this.props.style instanceof _styler.Styler) {
              style = this.props.style.barChartStyle()[column];
            } else if (_underscore2.default.isFunction(this.props.style)) {
              style = this.props.style(column);
            } else if (_underscore2.default.isObject(this.props.style)) {
              style = this.props.style ? this.props.style[column] : defaultStyle;
            }
          }
          return style;
        }
      }, {
        key: "style",
        value: function style(column, event) {
          var style = void 0;
          var styleMap = this.providedStyleMap(column);
          var isHighlighted = this.props.highlighted && column === this.props.highlighted.column && _pondjs.Event.is(this.props.highlighted.event, event);
          var isSelected = this.props.selected && column === this.props.selected.column && _pondjs.Event.is(this.props.selected.event, event);
          if (this.props.selected) {
            if (isSelected) {
              style = (0, _merge2.default)(true, defaultStyle.selected, styleMap.selected ? styleMap.selected : {});
            } else if (isHighlighted) {
              style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
            } else {
              style = (0, _merge2.default)(true, defaultStyle.muted, styleMap.muted ? styleMap.muted : {});
            }
          } else if (isHighlighted) {
            style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
          } else {
            style = (0, _merge2.default)(true, defaultStyle.normal, styleMap.normal ? styleMap.normal : {});
          }
          return style;
        }
      }, {
        key: "renderBars",
        value: function renderBars() {
          var _this2 = this;
          var spacing = +this.props.spacing;
          var offset = +this.props.offset;
          var series = this.props.series;
          var timeScale = this.props.timeScale;
          var yScale = this.props.yScale;
          var columns = this.props.columns || ["value"];
          var bars = [];
          var eventMarker = void 0;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            var _loop = function _loop() {
              var event = _step.value;
              var begin = event.begin();
              var end = event.end();
              var beginPos = timeScale(begin) + spacing;
              var endPos = timeScale(end) - spacing;
              var width = void 0;
              if (_this2.props.size) {
                width = _this2.props.size;
              } else {
                width = endPos - beginPos;
              }
              if (width < 1) {
                width = 1;
              }
              var x = void 0;
              if (_this2.props.size) {
                var center = timeScale(begin) + (timeScale(end) - timeScale(begin)) / 2;
                x = center - _this2.props.size / 2 + offset;
              } else {
                x = timeScale(begin) + spacing + offset;
              }
              var yBase = yScale(0);
              var yposPositive = yBase;
              var yposNegative = yBase;
              if (columns) {
                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;
                try {
                  var _loop2 = function _loop2() {
                    var column = _step2.value;
                    var index = event.index();
                    var key = series.name() + "-" + index + "-" + column;
                    var value = event.get(column);
                    var style = _this2.style(column, event);
                    var height = yScale(0) - yScale(value);
                    var positiveBar = height >= 0;
                    height = Math.max(Math.abs(height), 1);
                    var y = positiveBar ? yposPositive - height : yposNegative;
                    var isHighlighted = _this2.props.highlighted && column === _this2.props.highlighted.column && _pondjs.Event.is(_this2.props.highlighted.event, event);
                    if (isHighlighted && _this2.props.info) {
                      eventMarker = _react2.default.createElement(_EventMarker2.default, _extends({}, _this2.props, {
                        event: event,
                        column: column,
                        offsetX: offset,
                        offsetY: yBase - (positiveBar ? yposPositive : yposNegative)
                      }));
                    }
                    var box = {
                      x: x,
                      y: y,
                      width: width,
                      height: height
                    };
                    var barProps = _extends({ key: key }, box, { style: style });
                    if (_this2.props.onSelectionChange) {
                      barProps.onClick = function (e) {
                        return _this2.handleClick(e, event, column);
                      };
                    }
                    if (_this2.props.onHighlightChange) {
                      barProps.onMouseMove = function (e) {
                        return _this2.handleHover(e, event, column);
                      };
                      barProps.onMouseLeave = function () {
                        return _this2.handleHoverLeave();
                      };
                    }
                    bars.push(_react2.default.createElement("rect", barProps));
                    if (positiveBar) {
                      yposPositive -= height;
                    } else {
                      yposNegative += height;
                    }
                  };
                  for (var _iterator2 = columns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    _loop2();
                  }
                } catch (err) {
                  _didIteratorError2 = true;
                  _iteratorError2 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                      _iterator2.return();
                    }
                  } finally {
                    if (_didIteratorError2) {
                      throw _iteratorError2;
                    }
                  }
                }
              }
            };
            for (var _iterator = series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              _loop();
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return _react2.default.createElement("g", null, bars, eventMarker);
        }
      }, {
        key: "render",
        value: function render() {
          return _react2.default.createElement("g", null, this.renderBars());
        }
      }]);
      return BarChart;
    }(_react2.default.Component);
    exports.default = BarChart;
    BarChart.propTypes = {
      series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,
      spacing: _propTypes2.default.number,
      offset: _propTypes2.default.number,
      columns: _propTypes2.default.arrayOf(_propTypes2.default.string),
      style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),
      info: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        label: _propTypes2.default.string,
        value: _propTypes2.default.string
      })),
      infoStyle: _propTypes2.default.object,
      infoWidth: _propTypes2.default.number,
      infoHeight: _propTypes2.default.number,
      infoTimeFormat: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
      markerRadius: _propTypes2.default.number,
      markerStyle: _propTypes2.default.object,
      size: _propTypes2.default.number,
      selected: _propTypes2.default.shape({
        event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),
        column: _propTypes2.default.string
      }),
      onSelectionChange: _propTypes2.default.func,
      highlighted: _propTypes2.default.shape({
        event: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),
        column: _propTypes2.default.string
      }),
      onHighlightChange: _propTypes2.default.func,
      timeScale: _propTypes2.default.func,
      yScale: _propTypes2.default.func
    };
    BarChart.defaultProps = {
      columns: ["value"],
      spacing: 1.0,
      offset: 0,
      infoStyle: {
        stroke: "#999",
        fill: "white",
        opacity: 0.90,
        pointerEvents: "none"
      },
      stemStyle: {
        stroke: "#999",
        cursor: "crosshair",
        pointerEvents: "none"
      },
      markerStyle: { fill: "#999" },
      markerRadius: 2,
      infoWidth: 90,
      infoHeight: 30
    };
  })($__require("16"));
});
$__System.registerDynamic("127", ["122", "123", "1c", "50", "19", "126", "120", "11f"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _pondjs = $__require("19");
  var _EventMarker = $__require("126");
  var _EventMarker2 = _interopRequireDefault(_EventMarker);
  var _styler = $__require("120");
  var _util = $__require("11f");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultFillStyle = {
    fill: "steelblue",
    stroke: "none"
  };
  var defaultMutedStyle = {
    fill: "grey",
    stroke: "none"
  };
  var defaultStyle = [{
    normal: _extends({}, defaultFillStyle, { opacity: 0.2 }),
    highlighted: _extends({}, defaultFillStyle, { opacity: 0.3 }),
    selected: _extends({}, defaultFillStyle, { opacity: 0.3 }),
    muted: _extends({}, defaultMutedStyle, { opacity: 0.1 })
  }, {
    normal: _extends({}, defaultFillStyle, { opacity: 0.5 }),
    highlighted: _extends({}, defaultFillStyle, { opacity: 0.6 }),
    selected: _extends({}, defaultFillStyle, { opacity: 0.6 }),
    muted: _extends({}, defaultMutedStyle, { opacity: 0.2 })
  }, {
    normal: _extends({}, defaultFillStyle, { opacity: 0.9 }),
    highlighted: _extends({}, defaultFillStyle, { opacity: 1.0 }),
    selected: _extends({}, defaultFillStyle, { opacity: 1.0 }),
    muted: _extends({}, defaultMutedStyle, { opacity: 0.2 })
  }];
  var defaultAggregation = {
    size: "5m",
    reducers: {
      outer: [(0, _pondjs.min)(), (0, _pondjs.max)()],
      inner: [(0, _pondjs.percentile)(25), (0, _pondjs.percentile)(75)],
      center: (0, _pondjs.median)()
    }
  };
  function getSeries(series, column) {
    return series.map(function (e) {
      var v = e.get(column);
      var d = {};
      switch (v.length) {
        case 1:
          d.center = v[0];
          break;
        case 2:
          d.innerMin = v[0];
          d.innerMax = v[1];
          break;
        case 3:
          d.innerMin = v[0];
          d.center = v[1];
          d.innerMax = v[2];
          break;
        case 4:
          d.outerMin = v[0];
          d.innerMin = v[1];
          d.innerMax = v[2];
          d.outerMax = v[3];
          break;
        case 5:
          d.outerMin = v[0];
          d.innerMin = v[1];
          d.center = v[2];
          d.innerMax = v[3];
          d.outerMax = v[4];
          break;
        default:
          console.error("Tried to make boxchart from invalid array");
      }
      var ee = new _pondjs.IndexedEvent(e.index(), d);
      return ee;
    });
  }
  function getAggregatedSeries(series, column) {
    var aggregation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultAggregation;
    var size = aggregation.size,
        reducers = aggregation.reducers;
    var inner = reducers.inner,
        outer = reducers.outer,
        center = reducers.center;
    function mapColumn(c, r) {
      var obj = {};
      obj[c] = r;
      return obj;
    }
    var fixedWindowAggregation = {};
    if (inner) {
      fixedWindowAggregation.innerMin = mapColumn(column, inner[0]);
      fixedWindowAggregation.innerMax = mapColumn(column, inner[1]);
    }
    if (outer) {
      fixedWindowAggregation.outerMin = mapColumn(column, outer[0]);
      fixedWindowAggregation.outerMax = mapColumn(column, outer[1]);
    }
    if (center) {
      fixedWindowAggregation.center = mapColumn(column, center);
    }
    return series.fixedWindowRollup({
      windowSize: size,
      aggregation: fixedWindowAggregation
    });
  }
  var BoxChart = function (_React$Component) {
    _inherits(BoxChart, _React$Component);
    function BoxChart(props) {
      _classCallCheck(this, BoxChart);
      var _this = _possibleConstructorReturn(this, (BoxChart.__proto__ || Object.getPrototypeOf(BoxChart)).call(this, props));
      if (props.series._collection._type === _pondjs.TimeEvent) {
        _this.series = getAggregatedSeries(props.series, props.column, props.aggregation);
      } else {
        _this.series = getSeries(props.series, props.column);
      }
      return _this;
    }
    _createClass(BoxChart, [{
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var aggregation = nextProps.aggregation;
        var aggregationChanged = false;
        if (_underscore2.default.isUndefined(aggregation) !== _underscore2.default.isUndefined(this.props.aggregation)) {
          aggregationChanged = true;
        }
        if (aggregation && this.props.aggregation) {
          if (aggregation.size !== this.props.aggregation.size) {
            aggregationChanged = true;
          }
        }
        if (aggregationChanged) {
          this.series = getAggregatedSeries(nextProps.series, nextProps.column, nextProps.aggregation);
        }
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var newSeries = nextProps.series;
        var oldSeries = this.props.series;
        var width = nextProps.width;
        var timeScale = nextProps.timeScale;
        var yScale = nextProps.yScale;
        var column = nextProps.column;
        var style = nextProps.style;
        var aggregation = nextProps.aggregation;
        var highlighted = nextProps.highlighted;
        var selected = nextProps.selected;
        var widthChanged = this.props.width !== width;
        var timeScaleChanged = (0, _util.scaleAsString)(this.props.timeScale) !== (0, _util.scaleAsString)(timeScale);
        var yAxisScaleChanged = this.props.yScale !== yScale;
        var columnChanged = this.props.column !== column;
        var styleChanged = JSON.stringify(this.props.style) !== JSON.stringify(style);
        var highlightedChanged = this.props.highlighted !== highlighted;
        var selectedChanged = this.props.selected !== selected;
        var aggregationChanged = false;
        if (_underscore2.default.isUndefined(aggregation) !== _underscore2.default.isUndefined(this.props.aggregation)) {
          aggregationChanged = true;
        }
        if (aggregation && this.props.aggregation) {
          if (aggregation.size !== this.props.aggregation.size) {
            aggregationChanged = true;
          }
        }
        var seriesChanged = false;
        if (oldSeries.length !== newSeries.length) {
          seriesChanged = true;
        } else {
          seriesChanged = !_pondjs.TimeSeries.is(oldSeries, newSeries);
        }
        if (seriesChanged) {
          if (nextProps.series._collection._type === _pondjs.TimeEvent) {
            this.series = getAggregatedSeries(nextProps.series, nextProps.column, nextProps.aggregation);
          } else {
            this.series = getSeries(nextProps.series, nextProps.column);
          }
        }
        return seriesChanged || timeScaleChanged || widthChanged || columnChanged || styleChanged || yAxisScaleChanged || aggregationChanged || highlightedChanged || selectedChanged;
      }
    }, {
      key: "handleHover",
      value: function handleHover(e, event) {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(event);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(null);
        }
      }
    }, {
      key: "handleClick",
      value: function handleClick(e, event) {
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(event);
        }
        e.stopPropagation();
      }
    }, {
      key: "providedStyleArray",
      value: function providedStyleArray(column) {
        var style = defaultStyle;
        if (this.props.style) {
          if (this.props.style instanceof _styler.Styler) {
            style = this.props.style.boxChartStyle()[column];
          } else if (_underscore2.default.isFunction(this.props.style)) {
            style = this.props.style(column);
          } else if (_underscore2.default.isObject(this.props.style)) {
            style = this.props.style ? this.props.style[column] : defaultStyle;
          }
        }
        return style;
      }
    }, {
      key: "style",
      value: function style(column, event, level) {
        var style = void 0;
        if (!this.providedStyle) {
          this.providedStyle = this.providedStyleArray(this.props.column);
        }
        if (!_underscore2.default.isNull(this.providedStyle) && (!_underscore2.default.isArray(this.providedStyle) || this.providedStyle.length !== 3)) {
          console.warn("Provided style to BoxChart should be an array of 3 objects");
          return defaultStyle;
        }
        var isHighlighted = this.props.highlighted && _pondjs.Event.is(this.props.highlighted, event);
        var isSelected = this.props.selected && _pondjs.Event.is(this.props.selected, event);
        if (this.props.selected) {
          if (isSelected) {
            if (!this.selectedStyle || !this.selectedStyle[level]) {
              if (!this.selectedStyle) {
                this.selectedStyle = [];
              }
              this.selectedStyle[level] = (0, _merge2.default)(true, defaultStyle[level].selected, this.providedStyle[level].selected ? this.providedStyle[level].selected : {});
            }
            style = this.selectedStyle[level];
          } else if (isHighlighted) {
            if (!this.highlightedStyle || !this.highlightedStyle[level]) {
              if (!this.highlightedStyle) {
                this.highlightedStyle = [];
              }
              this.highlightedStyle[level] = (0, _merge2.default)(true, defaultStyle[level].highlighted, this.providedStyle[level].highlighted ? this.providedStyle[level].highlighted : {});
            }
            style = this.highlightedStyle[level];
          } else {
            if (!this.mutedStyle) {
              this.mutedStyle = [];
            }
            if (!this.mutedStyle[level]) {
              this.mutedStyle[level] = (0, _merge2.default)(true, defaultStyle[level].muted, this.providedStyle[level].muted ? this.providedStyle[level].muted : {});
            }
            style = this.mutedStyle[level];
          }
        } else if (isHighlighted) {
          style = (0, _merge2.default)(true, defaultStyle[level].highlighted, this.providedStyle[level].highlighted ? this.providedStyle[level].highlighted : {});
        } else {
          if (!this.normalStyle) {
            this.normalStyle = [];
          }
          if (!this.normalStyle[level]) {
            this.normalStyle[level] = (0, _merge2.default)(true, defaultStyle[level].normal, this.providedStyle[level].normal ? this.providedStyle[level].normal : {});
          }
          style = this.normalStyle[level];
        }
        return style;
      }
    }, {
      key: "renderBars",
      value: function renderBars() {
        var _this2 = this;
        var _props = this.props,
            timeScale = _props.timeScale,
            yScale = _props.yScale,
            column = _props.column;
        var innerSpacing = +this.props.innerSpacing;
        var outerSpacing = +this.props.outerSpacing;
        var innerSize = +this.props.innerSize;
        var outerSize = +this.props.outerSize;
        var bars = [];
        var eventMarker = void 0;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          var _loop = function _loop() {
            var event = _step.value;
            var index = event.index();
            var begin = event.begin();
            var end = event.end();
            var d = event.data();
            var beginPosInner = timeScale(begin) + innerSpacing;
            var endPosInner = timeScale(end) - innerSpacing;
            var beginPosOuter = timeScale(begin) + outerSpacing;
            var endPosOuter = timeScale(end) - outerSpacing;
            var innerWidth = innerSize || endPosInner - beginPosInner;
            if (innerWidth < 1) {
              innerWidth = 1;
            }
            var outerWidth = outerSize || endPosOuter - beginPosOuter;
            if (outerWidth < 1) {
              outerWidth = 1;
            }
            var c = timeScale(begin) + (timeScale(end) - timeScale(begin)) / 2;
            var xInner = timeScale(begin) + innerSpacing;
            if (innerSize) {
              xInner = c - innerSize / 2;
            }
            var xOuter = timeScale(begin) + outerSpacing;
            if (outerSize) {
              xOuter = c - outerSize / 2;
            }
            var styles = [];
            styles[0] = _this2.style(column, event, 0);
            styles[1] = _this2.style(column, event, 1);
            styles[2] = _this2.style(column, event, 2);
            var innerMin = d.has("innerMin") ? yScale(event.get("innerMin")) : null;
            var innerMax = d.has("innerMax") ? yScale(event.get("innerMax")) : null;
            var outerMin = d.has("outerMin") ? yScale(event.get("outerMin")) : null;
            var outerMax = d.has("outerMax") ? yScale(event.get("outerMax")) : null;
            var center = d.has("center") ? yScale(event.get("center")) : null;
            var hasInner = true;
            var hasOuter = true;
            var hasCenter = true;
            if (_underscore2.default.isNull(innerMin) || _underscore2.default.isNull(innerMax)) {
              hasInner = false;
            }
            if (_underscore2.default.isNull(outerMin) || _underscore2.default.isNull(outerMax)) {
              hasOuter = false;
            }
            if (_underscore2.default.isNull(center)) {
              hasCenter = false;
            }
            var ymax = 0;
            if (hasOuter) {
              var level = 0;
              if (!hasInner) {
                level += 1;
              }
              if (!hasCenter) {
                level += 1;
              }
              var keyOuter = _this2.series.name() + "-" + index + "-outer";
              var boxOuter = {
                x: xOuter,
                y: outerMax,
                width: outerWidth,
                height: outerMin - outerMax,
                rx: 2,
                ry: 2
              };
              var barOuterProps = _extends({ key: keyOuter }, boxOuter, { style: styles[level] });
              if (_this2.props.onSelectionChange) {
                barOuterProps.onClick = function (e) {
                  return _this2.handleClick(e, event);
                };
              }
              if (_this2.props.onHighlightChange) {
                barOuterProps.onMouseMove = function (e) {
                  return _this2.handleHover(e, event);
                };
                barOuterProps.onMouseLeave = function () {
                  return _this2.handleHoverLeave();
                };
              }
              bars.push(_react2.default.createElement("rect", barOuterProps));
              ymax = "outerMax";
            }
            if (hasInner) {
              var _level = 1;
              if (!hasCenter) {
                _level += 1;
              }
              var keyInner = _this2.series.name() + "-" + index + "-inner";
              var boxInner = {
                x: xInner,
                y: innerMax,
                width: innerWidth,
                height: innerMin - innerMax,
                rx: 1,
                ry: 1
              };
              var barInnerProps = _extends({ key: keyInner }, boxInner, { style: styles[_level] });
              if (_this2.props.onSelectionChange) {
                barInnerProps.onClick = function (e) {
                  return _this2.handleClick(e, event);
                };
              }
              if (_this2.props.onHighlightChange) {
                barInnerProps.onMouseMove = function (e) {
                  return _this2.handleHover(e, event);
                };
                barInnerProps.onMouseLeave = function () {
                  return _this2.handleHoverLeave();
                };
              }
              bars.push(_react2.default.createElement("rect", barInnerProps));
              ymax = ymax || "innerMax";
            }
            if (hasCenter) {
              var _level2 = 2;
              var keyCenter = _this2.series.name() + "-" + index + "-center";
              var boxCenter = {
                x: xInner,
                y: center,
                width: innerWidth,
                height: 1
              };
              var barCenterProps = _extends({ key: keyCenter }, boxCenter, { style: styles[_level2] });
              if (_this2.props.onSelectionChange) {
                barCenterProps.onClick = function (e) {
                  return _this2.handleClick(e, event);
                };
              }
              if (_this2.props.onHighlightChange) {
                barCenterProps.onMouseMove = function (e) {
                  return _this2.handleHover(e, event);
                };
                barCenterProps.onMouseLeave = function () {
                  return _this2.handleHoverLeave();
                };
              }
              bars.push(_react2.default.createElement("rect", barCenterProps));
              ymax = ymax || "center";
            }
            var isHighlighted = _this2.props.highlighted && _pondjs.Event.is(_this2.props.highlighted, event);
            if (isHighlighted && _this2.props.info) {
              eventMarker = _react2.default.createElement(_EventMarker2.default, _extends({}, _this2.props, {
                yValueFunc: function yValueFunc(e) {
                  return e.get(ymax);
                },
                event: event,
                column: column,
                marker: "circle",
                markerRadius: 2
              }));
            }
          };
          for (var _iterator = this.series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            _loop();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return _react2.default.createElement("g", null, bars, eventMarker);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement("g", null, this.renderBars());
      }
    }]);
    return BoxChart;
  }(_react2.default.Component);
  exports.default = BoxChart;
  BoxChart.propTypes = {
    series: function series(props, propName, componentName) {
      var value = props[propName];
      if (!(value instanceof _pondjs.TimeSeries)) {
        return new Error("A TimeSeries needs to be passed to " + componentName + " as the 'series' prop.");
      }
      return null;
    },
    column: _propTypes2.default.string,
    aggregation: _propTypes2.default.shape({
      size: _propTypes2.default.string,
      reducers: _propTypes2.default.shape({
        inner: _propTypes2.default.arrayOf(_propTypes2.default.func),
        outer: _propTypes2.default.arrayOf(_propTypes2.default.func),
        center: _propTypes2.default.func
      })
    }),
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),
    infoStyle: _propTypes2.default.object,
    infoWidth: _propTypes2.default.number,
    infoHeight: _propTypes2.default.number,
    info: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    })),
    innerSpacing: _propTypes2.default.number,
    outerSpacing: _propTypes2.default.number,
    innerSize: _propTypes2.default.number,
    outerSize: _propTypes2.default.number,
    selected: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),
    highlighted: _propTypes2.default.instanceOf(_pondjs.IndexedEvent),
    onSelectionChange: _propTypes2.default.func,
    onHighlightChange: _propTypes2.default.func,
    timeScale: _propTypes2.default.func,
    yScale: _propTypes2.default.func,
    width: _propTypes2.default.number
  };
  BoxChart.defaultProps = {
    column: "value",
    innerSpacing: 1.0,
    outerSpacing: 2.0,
    infoStyle: {
      stroke: "#999",
      fill: "white",
      opacity: 0.90,
      pointerEvents: "none"
    },
    stemStyle: {
      stroke: "#999",
      cursor: "crosshair",
      pointerEvents: "none"
    },
    markerStyle: { fill: "#999" },
    markerRadius: 2,
    infoWidth: 90,
    infoHeight: 30
  };
});
$__System.registerDynamic("128", ["123", "1c", "50", "122"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var _merge = $__require("123");

    var _merge2 = _interopRequireDefault(_merge);

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *  Copyright (c) 2015-present, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    */

    var defaultStyle = {
        label: {
            fill: "#8B7E7E", // Default label color
            fontWeight: 100,
            fontSize: 11,
            pointerEvents: "none"
        },
        line: {
            stroke: "#626262",
            strokeWidth: 1,
            strokeDasharray: "5,3",
            pointerEvents: "none"
        }
    };

    /**
     *
     * The BaseLine component displays a simple horizontal line at a value.
     *
     * For example the following code overlays Baselines for the mean and stdev
     * of a series on top of another chart.
     *
     * ```
     * <ChartContainer timeRange={series.timerange()} >
     *     <ChartRow height="150">
     *         <YAxis
     *           id="price"
     *           label="Price ($)"
     *           min={series.min()} max={series.max()}
     *           width="60" format="$,.2f"
     *         />
     *         <Charts>
     *             <LineChart axis="price" series={series} style={style} />
     *             <Baseline axis="price" value={series.avg()} label="Avg" position="right" />
     *             <Baseline axis="price" value={series.avg()-series.stdev()} />
     *             <Baseline axis="price" value={series.avg()+series.stdev()} />
     *         </Charts>
     *     </ChartRow>
     * </ChartContainer>
     * ```
     */

    var Baseline = function (_React$Component) {
        _inherits(Baseline, _React$Component);

        function Baseline() {
            _classCallCheck(this, Baseline);

            return _possibleConstructorReturn(this, (Baseline.__proto__ || Object.getPrototypeOf(Baseline)).apply(this, arguments));
        }

        _createClass(Baseline, [{
            key: "render",
            value: function render() {
                if (!this.props.yScale || _underscore2.default.isUndefined(this.props.value)) {
                    return null;
                }

                var y = this.props.yScale(this.props.value);
                var transform = "translate(0 " + y + ")";
                var textAnchor = void 0;
                var textPositionX = void 0;
                var pts = [];

                var textPositionY = -3;

                if (this.props.position === "left") {
                    textAnchor = "start";
                    textPositionX = 5;
                }
                if (this.props.position === "right") {
                    textAnchor = "end";
                    textPositionX = this.props.width - 5;
                }

                pts.push("0 0");
                pts.push(this.props.width + " 0");
                var points = pts.join(" ");

                //
                // Style
                //

                var labelStyle = (0, _merge2.default)(true, defaultStyle.label, this.props.style.label ? this.props.style.label : {});
                var lineStyle = (0, _merge2.default)(true, defaultStyle.line, this.props.style.line ? this.props.style.line : {});

                return _react2.default.createElement("g", { className: "baseline", transform: transform }, _react2.default.createElement("polyline", { points: points, style: lineStyle }), _react2.default.createElement("text", {
                    style: labelStyle,
                    x: textPositionX,
                    y: textPositionY,
                    textAnchor: textAnchor
                }, this.props.label));
            }
        }]);

        return Baseline;
    }(_react2.default.Component);

    exports.default = Baseline;

    Baseline.defaultProps = {
        value: 0,
        label: "",
        position: "left",
        style: defaultStyle
    };

    Baseline.propTypes = {
        /**
        * Reference to the axis which provides the vertical scale for drawing. e.g.
        * specifying axis="trafficRate" would refer the y-scale to the YAxis of id="trafficRate".
        */
        axis: _propTypes2.default.string.isRequired, // eslint-disable-line
        /**
        * An object describing the style of the baseline of the form
        * { label, line }. "label" and "line" are both objects containing
        * the inline CSS for that part of the baseline.
        */
        style: _propTypes2.default.shape({
            label: _propTypes2.default.object, // eslint-disable-line
            line: _propTypes2.default.object // eslint-disable-line
        }),
        /**
        * The y-value to display the line at.
        */
        value: _propTypes2.default.number,
        /**
        * The label to display with the axis.
        */
        label: _propTypes2.default.string,
        /**
        * Whether to display the label on the "left" or "right".
        */
        position: _propTypes2.default.oneOf(["left", "right"]),
        /**
        * [Internal] The yScale supplied by the associated YAxis
        */
        yScale: _propTypes2.default.func,
        /**
        * [Internal] The width supplied by the surrounding ChartContainer
        */
        width: _propTypes2.default.number
    };
});
$__System.registerDynamic('129', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = function (condition, format, a, b, c, d, e, f) {
      if ('production' !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant;
  })($__require('16'));
});
$__System.registerDynamic("10d", ["129"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("129");
});
$__System.registerDynamic("12a", ["1c", "4c", "50", "19", "11f"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _pondjs = $__require("19");
  var _util = $__require("11f");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var EventHandler = function (_React$Component) {
    _inherits(EventHandler, _React$Component);
    function EventHandler(props) {
      _classCallCheck(this, EventHandler);
      var _this = _possibleConstructorReturn(this, (EventHandler.__proto__ || Object.getPrototypeOf(EventHandler)).call(this, props));
      _this.state = {
        isPanning: false,
        initialPanBegin: null,
        initialPanEnd: null,
        initialPanPosition: null
      };
      _this.handleScrollWheel = _this.handleScrollWheel.bind(_this);
      _this.handleMouseDown = _this.handleMouseDown.bind(_this);
      _this.handleMouseUp = _this.handleMouseUp.bind(_this);
      _this.handleMouseOut = _this.handleMouseOut.bind(_this);
      _this.handleMouseMove = _this.handleMouseMove.bind(_this);
      return _this;
    }
    _createClass(EventHandler, [{
      key: "getOffsetMousePosition",
      value: function getOffsetMousePosition(e) {
        var offset = (0, _util.getElementOffset)(this.eventRect);
        var x = e.pageX - offset.left;
        var y = e.pageY - offset.top;
        return [Math.round(x), Math.round(y)];
      }
    }, {
      key: "handleScrollWheel",
      value: function handleScrollWheel(e) {
        if (!this.props.enablePanZoom) {
          return;
        }
        e.preventDefault();
        var SCALE_FACTOR = 0.001;
        var scale = 1 + e.deltaY * SCALE_FACTOR;
        if (scale > 3) {
          scale = 3;
        }
        if (scale < 0.1) {
          scale = 0.1;
        }
        var xy = this.getOffsetMousePosition(e);
        var begin = this.props.scale.domain()[0].getTime();
        var end = this.props.scale.domain()[1].getTime();
        var center = this.props.scale.invert(xy[0]).getTime();
        var beginScaled = center - parseInt((center - begin) * scale, 10);
        var endScaled = center + parseInt((end - center) * scale, 10);
        var duration = (end - begin) * scale;
        if (this.props.minDuration) {
          var minDuration = parseInt(this.props.minDuration, 10);
          if (duration < this.props.minDuration) {
            beginScaled = center - (center - begin) / (end - begin) * minDuration;
            endScaled = center + (end - center) / (end - begin) * minDuration;
          }
        }
        if (this.props.minTime && this.props.maxTime) {
          var maxDuration = this.props.maxTime.getTime() - this.props.minTime.getTime();
          if (duration > maxDuration) {
            duration = maxDuration;
          }
        }
        if (this.props.minTime && beginScaled < this.props.minTime.getTime()) {
          beginScaled = this.props.minTime.getTime();
          endScaled = beginScaled + duration;
        }
        if (this.props.maxTime && endScaled > this.props.maxTime.getTime()) {
          endScaled = this.props.maxTime.getTime();
          beginScaled = endScaled - duration;
        }
        var newBegin = new Date(beginScaled);
        var newEnd = new Date(endScaled);
        var newTimeRange = new _pondjs.TimeRange(newBegin, newEnd);
        if (this.props.onZoom) {
          this.props.onZoom(newTimeRange);
        }
      }
    }, {
      key: "handleMouseDown",
      value: function handleMouseDown(e) {
        if (!this.props.enablePanZoom) {
          return;
        }
        e.preventDefault();
        var x = e.pageX;
        var y = e.pageY;
        var xy0 = [Math.round(x), Math.round(y)];
        var begin = this.props.scale.domain()[0].getTime();
        var end = this.props.scale.domain()[1].getTime();
        document.addEventListener("mouseover", this.handleMouseMove);
        document.addEventListener("mouseup", this.handleMouseUp);
        this.setState({
          isPanning: true,
          initialPanBegin: begin,
          initialPanEnd: end,
          initialPanPosition: xy0
        });
        return false;
      }
    }, {
      key: "handleMouseUp",
      value: function handleMouseUp(e) {
        if (!this.props.enablePanZoom) {
          return;
        }
        e.stopPropagation();
        document.removeEventListener("mouseover", this.handleMouseMove);
        document.removeEventListener("mouseup", this.handleMouseUp);
        var x = e.pageX;
        if (this.props.onMouseClick && this.state.initialPanPosition && Math.abs(x - this.state.initialPanPosition[0]) < 2) {
          this.props.onMouseClick();
        }
        this.setState({
          isPanning: false,
          initialPanBegin: null,
          initialPanEnd: null,
          initialPanPosition: null
        });
      }
    }, {
      key: "handleMouseOut",
      value: function handleMouseOut(e) {
        e.preventDefault();
        if (this.props.onMouseOut) {
          this.props.onMouseOut();
        }
      }
    }, {
      key: "handleMouseMove",
      value: function handleMouseMove(e) {
        e.preventDefault();
        var x = e.pageX;
        var y = e.pageY;
        var xy = [Math.round(x), Math.round(y)];
        if (this.state.isPanning) {
          var xy0 = this.state.initialPanPosition;
          var timeOffset = this.props.scale.invert(xy[0]).getTime() - this.props.scale.invert(xy0[0]).getTime();
          var newBegin = parseInt(this.state.initialPanBegin - timeOffset, 10);
          var newEnd = parseInt(this.state.initialPanEnd - timeOffset, 10);
          var duration = parseInt(this.state.initialPanEnd - this.state.initialPanBegin, 10);
          if (this.props.minTime && newBegin < this.props.minTime.getTime()) {
            newBegin = this.props.minTime.getTime();
            newEnd = newBegin + duration;
          }
          if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {
            newEnd = this.props.maxTime.getTime();
            newBegin = newEnd - duration;
          }
          var newTimeRange = new _pondjs.TimeRange(newBegin, newEnd);
          if (this.props.onZoom) {
            this.props.onZoom(newTimeRange);
          }
        } else if (this.props.onMouseMove) {
          var trackerPosition = this.getOffsetMousePosition(e)[0];
          var time = this.props.scale.invert(trackerPosition);
          if (this.props.onMouseMove) {
            this.props.onMouseMove(time);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        var cursor = this.state.isPanning ? "-webkit-grabbing" : "default";
        var handlers = {
          onWheel: this.handleScrollWheel,
          onMouseDown: this.handleMouseDown,
          onMouseMove: this.handleMouseMove,
          onMouseOut: this.handleMouseOut,
          onMouseUp: this.handleMouseUp
        };
        return _react2.default.createElement("g", _extends({ pointerEvents: "all" }, handlers), _react2.default.createElement("rect", {
          key: "handler-hit-rect",
          ref: function ref(c) {
            _this2.eventRect = c;
          },
          style: {
            opacity: 0.0,
            cursor: cursor
          },
          x: 0,
          y: 0,
          width: this.props.width,
          height: this.props.height
        }), this.props.children);
      }
    }]);
    return EventHandler;
  }(_react2.default.Component);
  exports.default = EventHandler;
  EventHandler.propTypes = {
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    enablePanZoom: _propTypes2.default.bool,
    scale: _propTypes2.default.func.isRequired,
    width: _propTypes2.default.number.isRequired,
    height: _propTypes2.default.number.isRequired,
    maxTime: _propTypes2.default.instanceOf(Date),
    minTime: _propTypes2.default.instanceOf(Date),
    minDuration: _propTypes2.default.number,
    onZoom: _propTypes2.default.func,
    onMouseMove: _propTypes2.default.func,
    onMouseOut: _propTypes2.default.func,
    onMouseClick: _propTypes2.default.func
  };
  EventHandler.defaultProps = { enablePanZoom: false };
});
$__System.registerDynamic("12b", ["122", "10d", "1c", "50", "131", "19", "12c", "12d", "12e", "12a", "12f", "130"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _invariant = $__require("10d");
  var _invariant2 = _interopRequireDefault(_invariant);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _d3Scale = $__require("131");
  var _pondjs = $__require("19");
  var _Brush = $__require("12c");
  var _Brush2 = _interopRequireDefault(_Brush);
  var _ChartRow = $__require("12d");
  var _ChartRow2 = _interopRequireDefault(_ChartRow);
  var _Charts = $__require("12e");
  var _Charts2 = _interopRequireDefault(_Charts);
  var _EventHandler = $__require("12a");
  var _EventHandler2 = _interopRequireDefault(_EventHandler);
  var _TimeAxis = $__require("12f");
  var _TimeAxis2 = _interopRequireDefault(_TimeAxis);
  var _TimeMarker = $__require("130");
  var _TimeMarker2 = _interopRequireDefault(_TimeMarker);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultTimeAxisStyle = {
    labels: {
      labelColor: "#8B7E7E",
      labelWeight: 100,
      labelSize: 11
    },
    axis: {
      axisColor: "#C0C0C0",
      axisWidth: 1
    }
  };
  var ChartContainer = function (_React$Component) {
    _inherits(ChartContainer, _React$Component);
    function ChartContainer() {
      _classCallCheck(this, ChartContainer);
      return _possibleConstructorReturn(this, (ChartContainer.__proto__ || Object.getPrototypeOf(ChartContainer)).apply(this, arguments));
    }
    _createClass(ChartContainer, [{
      key: "handleTrackerChanged",
      value: function handleTrackerChanged(t) {
        if (this.props.onTrackerChanged) {
          this.props.onTrackerChanged(t);
        }
      }
    }, {
      key: "handleTimeRangeChanged",
      value: function handleTimeRangeChanged(timerange) {
        if (this.props.onTimeRangeChanged) {
          this.props.onTimeRangeChanged(timerange);
        }
      }
    }, {
      key: "handleMouseMove",
      value: function handleMouseMove(t) {
        if (this.props.onTrackerChanged) {
          this.props.onTrackerChanged(t);
        }
      }
    }, {
      key: "handleMouseOut",
      value: function handleMouseOut() {
        if (this.props.onTrackerChanged) {
          this.props.onTrackerChanged(null);
        }
      }
    }, {
      key: "handleBackgroundClick",
      value: function handleBackgroundClick() {
        if (this.props.onBackgroundClick) {
          this.props.onBackgroundClick();
        }
      }
    }, {
      key: "handleZoom",
      value: function handleZoom(timerange) {
        if (this.props.onTimeRangeChanged) {
          this.props.onTimeRangeChanged(timerange);
        }
      }
    }, {
      key: "handleResize",
      value: function handleResize(width, height) {
        if (this.props.onChartResize) {
          this.props.onChartResize(width, height);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        var chartRows = [];
        var leftAxisWidths = [];
        var rightAxisWidths = [];
        _react2.default.Children.forEach(this.props.children, function (childRow) {
          if (childRow.type === _ChartRow2.default) {
            var countLeft = 0;
            var countCharts = 0;
            var align = "left";
            _react2.default.Children.forEach(childRow.props.children, function (child) {
              if (child.type === _Charts2.default) {
                countCharts += 1;
                align = "right";
              } else if (child.type !== _Brush2.default) {
                if (align === "left") {
                  countLeft += 1;
                }
              }
            });
            if (countCharts !== 1) {
              var msg = "ChartRow should have one and only one <Charts> tag within it";
              (0, _invariant2.default)(false, msg, childRow.constructor.name);
            }
            align = "left";
            var pos = countLeft - 1;
            _react2.default.Children.forEach(childRow.props.children, function (child) {
              if (child.type === _Charts2.default || child.type === _Brush2.default) {
                if (child.type === _Charts2.default) {
                  align = "right";
                  pos = 0;
                }
              } else {
                var width = Number(child.props.width) || 40;
                if (align === "left") {
                  leftAxisWidths[pos] = leftAxisWidths[pos] ? Math.max(width, leftAxisWidths[pos]) : width;
                  pos -= 1;
                } else if (align === "right") {
                  rightAxisWidths[pos] = rightAxisWidths[pos] ? Math.max(width, rightAxisWidths[pos]) : width;
                  pos += 1;
                }
              }
            });
          }
        });
        var leftWidth = _underscore2.default.reduce(leftAxisWidths, function (a, b) {
          return a + b;
        }, 0);
        var rightWidth = _underscore2.default.reduce(rightAxisWidths, function (a, b) {
          return a + b;
        }, 0);
        var timeAxisHeight = 35;
        var timeAxisWidth = this.props.width - leftWidth - rightWidth;
        if (!this.props.timeRange) {
          throw Error("Invalid timerange passed to ChartContainer");
        }
        var timeScale = this.props.utc ? (0, _d3Scale.scaleUtc)().domain(this.props.timeRange.toJSON()).range([0, timeAxisWidth]) : (0, _d3Scale.scaleTime)().domain(this.props.timeRange.toJSON()).range([0, timeAxisWidth]);
        var i = 0;
        var yPosition = 0;
        _react2.default.Children.forEach(this.props.children, function (child) {
          if (child.type === _ChartRow2.default) {
            var chartRow = child;
            var rowKey = "chart-row-row-" + i;
            var firstRow = i === 0;
            var props = {
              timeScale: timeScale,
              leftAxisWidths: leftAxisWidths,
              rightAxisWidths: rightAxisWidths,
              width: _this2.props.width,
              minTime: _this2.props.minTime,
              maxTime: _this2.props.maxTime,
              transition: _this2.props.transition,
              enablePanZoom: _this2.props.enablePanZoom,
              minDuration: _this2.props.minDuration,
              timeFormat: _this2.props.format,
              trackerShowTime: firstRow,
              trackerTime: _this2.props.trackerPosition,
              trackerTimeFormat: _this2.props.format,
              onTimeRangeChanged: function onTimeRangeChanged(tr) {
                return _this2.handleTimeRangeChanged(tr);
              },
              onTrackerChanged: function onTrackerChanged(t) {
                return _this2.handleTrackerChanged(t);
              }
            };
            var transform = "translate(" + -leftWidth + "," + yPosition + ")";
            chartRows.push(_react2.default.createElement("g", {
              transform: transform,
              key: rowKey
            }, _react2.default.cloneElement(chartRow, props)));
            yPosition += parseInt(child.props.height, 10);
          }
          i += 1;
        });
        var chartsHeight = yPosition;
        var chartsWidth = this.props.width - leftWidth - rightWidth;
        var tracker = void 0;
        if (this.props.trackerPosition && this.props.timeRange.contains(this.props.trackerPosition)) {
          tracker = _react2.default.createElement("g", {
            key: "tracker-group",
            style: { pointerEvents: "none" },
            transform: "translate(" + leftWidth + ",0)"
          }, _react2.default.createElement(_TimeMarker2.default, {
            width: chartsWidth,
            height: chartsHeight,
            showInfoBox: false,
            time: this.props.trackerPosition,
            timeScale: timeScale,
            timeFormat: this.props.format,
            infoWidth: this.props.trackerHintWidth,
            infoHeight: this.props.trackerHintHeight,
            info: this.props.trackerValues
          }));
        }
        var xStyle = {
          stroke: this.props.timeAxisStyle.axis.axisColor,
          strokeWidth: this.props.timeAxisStyle.axis.axisWidth,
          fill: "none",
          pointerEvents: "none"
        };
        var timeAxis = _react2.default.createElement("g", { transform: "translate(" + leftWidth + "," + chartsHeight + ")" }, _react2.default.createElement("line", {
          x1: -leftWidth,
          y1: 0.5,
          x2: this.props.width,
          y2: 0.5,
          style: xStyle
        }), _react2.default.createElement(_TimeAxis2.default, {
          scale: timeScale,
          utc: this.props.utc,
          style: this.props.timeAxisStyle,
          format: this.props.format,
          showGrid: this.props.showGrid,
          gridHeight: chartsHeight
        }));
        var rows = _react2.default.createElement("g", { transform: "translate(" + leftWidth + "," + 0 + ")" }, _react2.default.createElement(_EventHandler2.default, {
          key: "event-handler",
          width: chartsWidth,
          height: chartsHeight + timeAxisHeight,
          scale: timeScale,
          enablePanZoom: this.props.enablePanZoom,
          minDuration: this.props.minDuration,
          minTime: this.props.minTime,
          maxTime: this.props.maxTime,
          onMouseOut: function onMouseOut(e) {
            return _this2.handleMouseOut(e);
          },
          onMouseMove: function onMouseMove(e) {
            return _this2.handleMouseMove(e);
          },
          onMouseClick: function onMouseClick(e) {
            return _this2.handleBackgroundClick(e);
          },
          onZoom: function onZoom(tr) {
            return _this2.handleZoom(tr);
          },
          onResize: function onResize(width, height) {
            return _this2.handleResize(width, height);
          }
        }, chartRows));
        var svgWidth = this.props.width;
        var svgHeight = yPosition + timeAxisHeight;
        return this.props.showGridPosition === "over" ? _react2.default.createElement("svg", {
          width: svgWidth,
          height: svgHeight,
          style: { display: "block" }
        }, rows, tracker, timeAxis) : _react2.default.createElement("svg", {
          width: svgWidth,
          height: svgHeight,
          style: { display: "block" }
        }, timeAxis, rows, tracker);
      }
    }]);
    return ChartContainer;
  }(_react2.default.Component);
  exports.default = ChartContainer;
  ChartContainer.propTypes = {
    timeRange: _propTypes2.default.instanceOf(_pondjs.TimeRange).isRequired,
    utc: _propTypes2.default.bool,
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.element), _propTypes2.default.element]).isRequired,
    width: _propTypes2.default.number,
    minTime: _propTypes2.default.instanceOf(Date),
    maxTime: _propTypes2.default.instanceOf(Date),
    enablePanZoom: _propTypes2.default.bool,
    minDuration: _propTypes2.default.number,
    format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    transition: _propTypes2.default.number,
    showGrid: _propTypes2.default.bool,
    showGridPosition: _propTypes2.default.oneOf(["over", "under"]),
    timeAxisStyle: _propTypes2.default.shape({
      labels: _propTypes2.default.object,
      axis: _propTypes2.default.object
    }),
    trackerHintWidth: _propTypes2.default.number,
    trackerHintHeight: _propTypes2.default.number,
    trackerValues: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    }))]),
    trackerPosition: _propTypes2.default.instanceOf(Date),
    onTrackerChanged: _propTypes2.default.func,
    onTimeRangeChanged: _propTypes2.default.func,
    onChartResize: _propTypes2.default.func,
    onBackgroundClick: _propTypes2.default.func
  };
  ChartContainer.defaultProps = {
    width: 800,
    padding: 0,
    enablePanZoom: false,
    utc: false,
    showGrid: false,
    showGridPosition: "over",
    timeAxisStyle: defaultTimeAxisStyle
  };
});
$__System.registerDynamic('132', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-array/ Version 1.2.1. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var ascending = function (a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    };

    var bisector = function (compare) {
      if (compare.length === 1) compare = ascendingComparator(compare);
      return {
        left: function (a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
          }
          return lo;
        },
        right: function (a, x, lo, hi) {
          if (lo == null) lo = 0;
          if (hi == null) hi = a.length;
          while (lo < hi) {
            var mid = lo + hi >>> 1;
            if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
          }
          return lo;
        }
      };
    };

    function ascendingComparator(f) {
      return function (d, x) {
        return ascending(f(d), x);
      };
    }

    var ascendingBisect = bisector(ascending);
    var bisectRight = ascendingBisect.right;
    var bisectLeft = ascendingBisect.left;

    var pairs = function (array, f) {
      if (f == null) f = pair;
      var i = 0,
          n = array.length - 1,
          p = array[0],
          pairs = new Array(n < 0 ? 0 : n);
      while (i < n) pairs[i] = f(p, p = array[++i]);
      return pairs;
    };

    function pair(a, b) {
      return [a, b];
    }

    var cross = function (values0, values1, reduce) {
      var n0 = values0.length,
          n1 = values1.length,
          values = new Array(n0 * n1),
          i0,
          i1,
          i,
          value0;

      if (reduce == null) reduce = pair;

      for (i0 = i = 0; i0 < n0; ++i0) {
        for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
          values[i] = reduce(value0, values1[i1]);
        }
      }

      return values;
    };

    var descending = function (a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    };

    var number = function (x) {
      return x === null ? NaN : +x;
    };

    var variance = function (values, valueof) {
      var n = values.length,
          m = 0,
          i = -1,
          mean = 0,
          value,
          delta,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) {
            delta = value - mean;
            mean += delta / ++m;
            sum += delta * (value - mean);
          }
        }
      } else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) {
            delta = value - mean;
            mean += delta / ++m;
            sum += delta * (value - mean);
          }
        }
      }

      if (m > 1) return sum / (m - 1);
    };

    var deviation = function (array, f) {
      var v = variance(array, f);
      return v ? Math.sqrt(v) : v;
    };

    var extent = function (values, valueof) {
      var n = values.length,
          i = -1,
          value,
          min,
          max;

      if (valueof == null) {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            min = max = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = values[i]) != null) {
                if (min > value) min = value;
                if (max < value) max = value;
              }
            }
          }
        }
      } else {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            min = max = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null) {
                if (min > value) min = value;
                if (max < value) max = value;
              }
            }
          }
        }
      }

      return [min, max];
    };

    var array = Array.prototype;

    var slice = array.slice;
    var map = array.map;

    var constant = function (x) {
      return function () {
        return x;
      };
    };

    var identity = function (x) {
      return x;
    };

    var range = function (start, stop, step) {
      start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

      var i = -1,
          n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
          range = new Array(n);

      while (++i < n) {
        range[i] = start + i * step;
      }

      return range;
    };

    var e10 = Math.sqrt(50);
    var e5 = Math.sqrt(10);
    var e2 = Math.sqrt(2);

    var ticks = function (start, stop, count) {
      var reverse,
          i = -1,
          n,
          ticks,
          step;

      stop = +stop, start = +start, count = +count;
      if (start === stop && count > 0) return [start];
      if (reverse = stop < start) n = start, start = stop, stop = n;
      if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

      if (step > 0) {
        start = Math.ceil(start / step);
        stop = Math.floor(stop / step);
        ticks = new Array(n = Math.ceil(stop - start + 1));
        while (++i < n) ticks[i] = (start + i) * step;
      } else {
        start = Math.floor(start * step);
        stop = Math.ceil(stop * step);
        ticks = new Array(n = Math.ceil(start - stop + 1));
        while (++i < n) ticks[i] = (start - i) / step;
      }

      if (reverse) ticks.reverse();

      return ticks;
    };

    function tickIncrement(start, stop, count) {
      var step = (stop - start) / Math.max(0, count),
          power = Math.floor(Math.log(step) / Math.LN10),
          error = step / Math.pow(10, power);
      return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
    }

    function tickStep(start, stop, count) {
      var step0 = Math.abs(stop - start) / Math.max(0, count),
          step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
          error = step0 / step1;
      if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
      return stop < start ? -step1 : step1;
    }

    var sturges = function (values) {
      return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
    };

    var histogram = function () {
      var value = identity,
          domain = extent,
          threshold = sturges;

      function histogram(data) {
        var i,
            n = data.length,
            x,
            values = new Array(n);

        for (i = 0; i < n; ++i) {
          values[i] = value(data[i], i, data);
        }

        var xz = domain(values),
            x0 = xz[0],
            x1 = xz[1],
            tz = threshold(values, x0, x1);

        // Convert number of thresholds into uniform thresholds.
        if (!Array.isArray(tz)) {
          tz = tickStep(x0, x1, tz);
          tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive
        }

        // Remove any thresholds outside the domain.
        var m = tz.length;
        while (tz[0] <= x0) tz.shift(), --m;
        while (tz[m - 1] > x1) tz.pop(), --m;

        var bins = new Array(m + 1),
            bin;

        // Initialize bins.
        for (i = 0; i <= m; ++i) {
          bin = bins[i] = [];
          bin.x0 = i > 0 ? tz[i - 1] : x0;
          bin.x1 = i < m ? tz[i] : x1;
        }

        // Assign data to bins by value, ignoring any outside the domain.
        for (i = 0; i < n; ++i) {
          x = values[i];
          if (x0 <= x && x <= x1) {
            bins[bisectRight(tz, x, 0, m)].push(data[i]);
          }
        }

        return bins;
      }

      histogram.value = function (_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
      };

      histogram.domain = function (_) {
        return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
      };

      histogram.thresholds = function (_) {
        return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
      };

      return histogram;
    };

    var quantile = function (values, p, valueof) {
      if (valueof == null) valueof = number;
      if (!(n = values.length)) return;
      if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
      if (p >= 1) return +valueof(values[n - 1], n - 1, values);
      var n,
          i = (n - 1) * p,
          i0 = Math.floor(i),
          value0 = +valueof(values[i0], i0, values),
          value1 = +valueof(values[i0 + 1], i0 + 1, values);
      return value0 + (value1 - value0) * (i - i0);
    };

    var freedmanDiaconis = function (values, min, max) {
      values = map.call(values, number).sort(ascending);
      return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));
    };

    var scott = function (values, min, max) {
      return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
    };

    var max = function (values, valueof) {
      var n = values.length,
          i = -1,
          value,
          max;

      if (valueof == null) {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            max = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = values[i]) != null && value > max) {
                max = value;
              }
            }
          }
        }
      } else {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            max = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null && value > max) {
                max = value;
              }
            }
          }
        }
      }

      return max;
    };

    var mean = function (values, valueof) {
      var n = values.length,
          m = n,
          i = -1,
          value,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) sum += value;else --m;
        }
      } else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;else --m;
        }
      }

      if (m) return sum / m;
    };

    var median = function (values, valueof) {
      var n = values.length,
          i = -1,
          value,
          numbers = [];

      if (valueof == null) {
        while (++i < n) {
          if (!isNaN(value = number(values[i]))) {
            numbers.push(value);
          }
        }
      } else {
        while (++i < n) {
          if (!isNaN(value = number(valueof(values[i], i, values)))) {
            numbers.push(value);
          }
        }
      }

      return quantile(numbers.sort(ascending), 0.5);
    };

    var merge = function (arrays) {
      var n = arrays.length,
          m,
          i = -1,
          j = 0,
          merged,
          array;

      while (++i < n) j += arrays[i].length;
      merged = new Array(j);

      while (--n >= 0) {
        array = arrays[n];
        m = array.length;
        while (--m >= 0) {
          merged[--j] = array[m];
        }
      }

      return merged;
    };

    var min = function (values, valueof) {
      var n = values.length,
          i = -1,
          value,
          min;

      if (valueof == null) {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = values[i]) != null && value >= value) {
            min = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = values[i]) != null && min > value) {
                min = value;
              }
            }
          }
        }
      } else {
        while (++i < n) {
          // Find the first comparable value.
          if ((value = valueof(values[i], i, values)) != null && value >= value) {
            min = value;
            while (++i < n) {
              // Compare the remaining values.
              if ((value = valueof(values[i], i, values)) != null && min > value) {
                min = value;
              }
            }
          }
        }
      }

      return min;
    };

    var permute = function (array, indexes) {
      var i = indexes.length,
          permutes = new Array(i);
      while (i--) permutes[i] = array[indexes[i]];
      return permutes;
    };

    var scan = function (values, compare) {
      if (!(n = values.length)) return;
      var n,
          i = 0,
          j = 0,
          xi,
          xj = values[j];

      if (compare == null) compare = ascending;

      while (++i < n) {
        if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
          xj = xi, j = i;
        }
      }

      if (compare(xj, xj) === 0) return j;
    };

    var shuffle = function (array, i0, i1) {
      var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
          t,
          i;

      while (m) {
        i = Math.random() * m-- | 0;
        t = array[m + i0];
        array[m + i0] = array[i + i0];
        array[i + i0] = t;
      }

      return array;
    };

    var sum = function (values, valueof) {
      var n = values.length,
          i = -1,
          value,
          sum = 0;

      if (valueof == null) {
        while (++i < n) {
          if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
        }
      } else {
        while (++i < n) {
          if (value = +valueof(values[i], i, values)) sum += value;
        }
      }

      return sum;
    };

    var transpose = function (matrix) {
      if (!(n = matrix.length)) return [];
      for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
        for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
          row[j] = matrix[j][i];
        }
      }
      return transpose;
    };

    function length(d) {
      return d.length;
    }

    var zip = function () {
      return transpose(arguments);
    };

    exports.bisect = bisectRight;
    exports.bisectRight = bisectRight;
    exports.bisectLeft = bisectLeft;
    exports.ascending = ascending;
    exports.bisector = bisector;
    exports.cross = cross;
    exports.descending = descending;
    exports.deviation = deviation;
    exports.extent = extent;
    exports.histogram = histogram;
    exports.thresholdFreedmanDiaconis = freedmanDiaconis;
    exports.thresholdScott = scott;
    exports.thresholdSturges = sturges;
    exports.max = max;
    exports.mean = mean;
    exports.median = median;
    exports.merge = merge;
    exports.min = min;
    exports.pairs = pairs;
    exports.permute = permute;
    exports.quantile = quantile;
    exports.range = range;
    exports.scan = scan;
    exports.shuffle = shuffle;
    exports.sum = sum;
    exports.ticks = ticks;
    exports.tickIncrement = tickIncrement;
    exports.tickStep = tickStep;
    exports.transpose = transpose;
    exports.variance = variance;
    exports.zip = zip;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("133", ["132"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("132");
});
$__System.registerDynamic('134', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var prefix = "$";

    function Map() {}

    Map.prototype = map.prototype = {
      constructor: Map,
      has: function (key) {
        return prefix + key in this;
      },
      get: function (key) {
        return this[prefix + key];
      },
      set: function (key, value) {
        this[prefix + key] = value;
        return this;
      },
      remove: function (key) {
        var property = prefix + key;
        return property in this && delete this[property];
      },
      clear: function () {
        for (var property in this) if (property[0] === prefix) delete this[property];
      },
      keys: function () {
        var keys = [];
        for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
        return keys;
      },
      values: function () {
        var values = [];
        for (var property in this) if (property[0] === prefix) values.push(this[property]);
        return values;
      },
      entries: function () {
        var entries = [];
        for (var property in this) if (property[0] === prefix) entries.push({ key: property.slice(1), value: this[property] });
        return entries;
      },
      size: function () {
        var size = 0;
        for (var property in this) if (property[0] === prefix) ++size;
        return size;
      },
      empty: function () {
        for (var property in this) if (property[0] === prefix) return false;
        return true;
      },
      each: function (f) {
        for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
      }
    };

    function map(object, f) {
      var map = new Map();

      // Copy constructor.
      if (object instanceof Map) object.each(function (value, key) {
        map.set(key, value);
      });

      // Index array by numeric index or specified key function.
      else if (Array.isArray(object)) {
          var i = -1,
              n = object.length,
              o;

          if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
        }

        // Convert object to map.
        else if (object) for (var key in object) map.set(key, object[key]);

      return map;
    }

    var nest = function () {
      var keys = [],
          sortKeys = [],
          sortValues,
          rollup,
          nest;

      function apply(array, depth, createResult, setResult) {
        if (depth >= keys.length) {
          if (sortValues != null) array.sort(sortValues);
          return rollup != null ? rollup(array) : array;
        }

        var i = -1,
            n = array.length,
            key = keys[depth++],
            keyValue,
            value,
            valuesByKey = map(),
            values,
            result = createResult();

        while (++i < n) {
          if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
            values.push(value);
          } else {
            valuesByKey.set(keyValue, [value]);
          }
        }

        valuesByKey.each(function (values, key) {
          setResult(result, key, apply(values, depth, createResult, setResult));
        });

        return result;
      }

      function entries(map$$1, depth) {
        if (++depth > keys.length) return map$$1;
        var array,
            sortKey = sortKeys[depth - 1];
        if (rollup != null && depth >= keys.length) array = map$$1.entries();else array = [], map$$1.each(function (v, k) {
          array.push({ key: k, values: entries(v, depth) });
        });
        return sortKey != null ? array.sort(function (a, b) {
          return sortKey(a.key, b.key);
        }) : array;
      }

      return nest = {
        object: function (array) {
          return apply(array, 0, createObject, setObject);
        },
        map: function (array) {
          return apply(array, 0, createMap, setMap);
        },
        entries: function (array) {
          return entries(apply(array, 0, createMap, setMap), 0);
        },
        key: function (d) {
          keys.push(d);return nest;
        },
        sortKeys: function (order) {
          sortKeys[keys.length - 1] = order;return nest;
        },
        sortValues: function (order) {
          sortValues = order;return nest;
        },
        rollup: function (f) {
          rollup = f;return nest;
        }
      };
    };

    function createObject() {
      return {};
    }

    function setObject(object, key, value) {
      object[key] = value;
    }

    function createMap() {
      return map();
    }

    function setMap(map$$1, key, value) {
      map$$1.set(key, value);
    }

    function Set() {}

    var proto = map.prototype;

    Set.prototype = set.prototype = {
      constructor: Set,
      has: proto.has,
      add: function (value) {
        value += "";
        this[prefix + value] = value;
        return this;
      },
      remove: proto.remove,
      clear: proto.clear,
      values: proto.keys,
      size: proto.size,
      empty: proto.empty,
      each: proto.each
    };

    function set(object, f) {
      var set = new Set();

      // Copy constructor.
      if (object instanceof Set) object.each(function (value) {
        set.add(value);
      });

      // Otherwise, assume it’s an array.
      else if (object) {
          var i = -1,
              n = object.length;
          if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
        }

      return set;
    }

    var keys = function (map) {
      var keys = [];
      for (var key in map) keys.push(key);
      return keys;
    };

    var values = function (map) {
      var values = [];
      for (var key in map) values.push(map[key]);
      return values;
    };

    var entries = function (map) {
      var entries = [];
      for (var key in map) entries.push({ key: key, value: map[key] });
      return entries;
    };

    exports.nest = nest;
    exports.set = set;
    exports.map = map;
    exports.keys = keys;
    exports.values = values;
    exports.entries = entries;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("135", ["134"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("134");
});
$__System.registerDynamic('136', ['133', '135', '13a', '137', '138', '13b', '139'], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('133'), $__require('135'), $__require('13a'), $__require('137'), $__require('138'), $__require('13b'), $__require('139')) : typeof undefined === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) : factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3);
  })(this, function (exports, d3Array, d3Collection, d3Interpolate, d3Format, d3Time, d3TimeFormat, d3Color) {
    'use strict';

    var array = Array.prototype;

    var map$1 = array.map;
    var slice = array.slice;

    var implicit = { name: "implicit" };

    function ordinal(range$$1) {
      var index = d3Collection.map(),
          domain = [],
          unknown = implicit;

      range$$1 = range$$1 == null ? [] : slice.call(range$$1);

      function scale(d) {
        var key = d + "",
            i = index.get(key);
        if (!i) {
          if (unknown !== implicit) return unknown;
          index.set(key, i = domain.push(d));
        }
        return range$$1[(i - 1) % range$$1.length];
      }

      scale.domain = function (_) {
        if (!arguments.length) return domain.slice();
        domain = [], index = d3Collection.map();
        var i = -1,
            n = _.length,
            d,
            key;
        while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
        return scale;
      };

      scale.range = function (_) {
        return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();
      };

      scale.unknown = function (_) {
        return arguments.length ? (unknown = _, scale) : unknown;
      };

      scale.copy = function () {
        return ordinal().domain(domain).range(range$$1).unknown(unknown);
      };

      return scale;
    }

    function band() {
      var scale = ordinal().unknown(undefined),
          domain = scale.domain,
          ordinalRange = scale.range,
          range$$1 = [0, 1],
          step,
          bandwidth,
          round = false,
          paddingInner = 0,
          paddingOuter = 0,
          align = 0.5;

      delete scale.unknown;

      function rescale() {
        var n = domain().length,
            reverse = range$$1[1] < range$$1[0],
            start = range$$1[reverse - 0],
            stop = range$$1[1 - reverse];
        step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
        if (round) step = Math.floor(step);
        start += (stop - start - step * (n - paddingInner)) * align;
        bandwidth = step * (1 - paddingInner);
        if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
        var values = d3Array.range(n).map(function (i) {
          return start + step * i;
        });
        return ordinalRange(reverse ? values.reverse() : values);
      }

      scale.domain = function (_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.range = function (_) {
        return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();
      };

      scale.rangeRound = function (_) {
        return range$$1 = [+_[0], +_[1]], round = true, rescale();
      };

      scale.bandwidth = function () {
        return bandwidth;
      };

      scale.step = function () {
        return step;
      };

      scale.round = function (_) {
        return arguments.length ? (round = !!_, rescale()) : round;
      };

      scale.padding = function (_) {
        return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
      };

      scale.paddingInner = function (_) {
        return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
      };

      scale.paddingOuter = function (_) {
        return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
      };

      scale.align = function (_) {
        return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
      };

      scale.copy = function () {
        return band().domain(domain()).range(range$$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
      };

      return rescale();
    }

    function pointish(scale) {
      var copy = scale.copy;

      scale.padding = scale.paddingOuter;
      delete scale.paddingInner;
      delete scale.paddingOuter;

      scale.copy = function () {
        return pointish(copy());
      };

      return scale;
    }

    function point() {
      return pointish(band().paddingInner(1));
    }

    var constant = function (x) {
      return function () {
        return x;
      };
    };

    var number = function (x) {
      return +x;
    };

    var unit = [0, 1];

    function deinterpolateLinear(a, b) {
      return (b -= a = +a) ? function (x) {
        return (x - a) / b;
      } : constant(b);
    }

    function deinterpolateClamp(deinterpolate) {
      return function (a, b) {
        var d = deinterpolate(a = +a, b = +b);
        return function (x) {
          return x <= a ? 0 : x >= b ? 1 : d(x);
        };
      };
    }

    function reinterpolateClamp(reinterpolate) {
      return function (a, b) {
        var r = reinterpolate(a = +a, b = +b);
        return function (t) {
          return t <= 0 ? a : t >= 1 ? b : r(t);
        };
      };
    }

    function bimap(domain, range$$1, deinterpolate, reinterpolate) {
      var d0 = domain[0],
          d1 = domain[1],
          r0 = range$$1[0],
          r1 = range$$1[1];
      if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
      return function (x) {
        return r0(d0(x));
      };
    }

    function polymap(domain, range$$1, deinterpolate, reinterpolate) {
      var j = Math.min(domain.length, range$$1.length) - 1,
          d = new Array(j),
          r = new Array(j),
          i = -1;

      // Reverse descending domains.
      if (domain[j] < domain[0]) {
        domain = domain.slice().reverse();
        range$$1 = range$$1.slice().reverse();
      }

      while (++i < j) {
        d[i] = deinterpolate(domain[i], domain[i + 1]);
        r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);
      }

      return function (x) {
        var i = d3Array.bisect(domain, x, 1, j) - 1;
        return r[i](d[i](x));
      };
    }

    function copy(source, target) {
      return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());
    }

    // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
    // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
    function continuous(deinterpolate, reinterpolate) {
      var domain = unit,
          range$$1 = unit,
          interpolate$$1 = d3Interpolate.interpolate,
          clamp = false,
          piecewise,
          output,
          input;

      function rescale() {
        piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;
        output = input = null;
        return scale;
      }

      function scale(x) {
        return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);
      }

      scale.invert = function (y) {
        return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
      };

      scale.domain = function (_) {
        return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();
      };

      scale.range = function (_) {
        return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
      };

      scale.rangeRound = function (_) {
        return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();
      };

      scale.clamp = function (_) {
        return arguments.length ? (clamp = !!_, rescale()) : clamp;
      };

      scale.interpolate = function (_) {
        return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;
      };

      return rescale();
    }

    var tickFormat = function (domain, count, specifier) {
      var start = domain[0],
          stop = domain[domain.length - 1],
          step = d3Array.tickStep(start, stop, count == null ? 10 : count),
          precision;
      specifier = d3Format.formatSpecifier(specifier == null ? ",f" : specifier);
      switch (specifier.type) {
        case "s":
          {
            var value = Math.max(Math.abs(start), Math.abs(stop));
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;
            return d3Format.formatPrefix(specifier, value);
          }
        case "":
        case "e":
        case "g":
        case "p":
        case "r":
          {
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
            break;
          }
        case "f":
        case "%":
          {
            if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
            break;
          }
      }
      return d3Format.format(specifier);
    };

    function linearish(scale) {
      var domain = scale.domain;

      scale.ticks = function (count) {
        var d = domain();
        return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);
      };

      scale.tickFormat = function (count, specifier) {
        return tickFormat(domain(), count, specifier);
      };

      scale.nice = function (count) {
        if (count == null) count = 10;

        var d = domain(),
            i0 = 0,
            i1 = d.length - 1,
            start = d[i0],
            stop = d[i1],
            step;

        if (stop < start) {
          step = start, start = stop, stop = step;
          step = i0, i0 = i1, i1 = step;
        }

        step = d3Array.tickIncrement(start, stop, count);

        if (step > 0) {
          start = Math.floor(start / step) * step;
          stop = Math.ceil(stop / step) * step;
          step = d3Array.tickIncrement(start, stop, count);
        } else if (step < 0) {
          start = Math.ceil(start * step) / step;
          stop = Math.floor(stop * step) / step;
          step = d3Array.tickIncrement(start, stop, count);
        }

        if (step > 0) {
          d[i0] = Math.floor(start / step) * step;
          d[i1] = Math.ceil(stop / step) * step;
          domain(d);
        } else if (step < 0) {
          d[i0] = Math.ceil(start * step) / step;
          d[i1] = Math.floor(stop * step) / step;
          domain(d);
        }

        return scale;
      };

      return scale;
    }

    function linear() {
      var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);

      scale.copy = function () {
        return copy(scale, linear());
      };

      return linearish(scale);
    }

    function identity() {
      var domain = [0, 1];

      function scale(x) {
        return +x;
      }

      scale.invert = scale;

      scale.domain = scale.range = function (_) {
        return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();
      };

      scale.copy = function () {
        return identity().domain(domain);
      };

      return linearish(scale);
    }

    var nice = function (domain, interval) {
      domain = domain.slice();

      var i0 = 0,
          i1 = domain.length - 1,
          x0 = domain[i0],
          x1 = domain[i1],
          t;

      if (x1 < x0) {
        t = i0, i0 = i1, i1 = t;
        t = x0, x0 = x1, x1 = t;
      }

      domain[i0] = interval.floor(x0);
      domain[i1] = interval.ceil(x1);
      return domain;
    };

    function deinterpolate(a, b) {
      return (b = Math.log(b / a)) ? function (x) {
        return Math.log(x / a) / b;
      } : constant(b);
    }

    function reinterpolate(a, b) {
      return a < 0 ? function (t) {
        return -Math.pow(-b, t) * Math.pow(-a, 1 - t);
      } : function (t) {
        return Math.pow(b, t) * Math.pow(a, 1 - t);
      };
    }

    function pow10(x) {
      return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
    }

    function powp(base) {
      return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
        return Math.pow(base, x);
      };
    }

    function logp(base) {
      return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
        return Math.log(x) / base;
      });
    }

    function reflect(f) {
      return function (x) {
        return -f(-x);
      };
    }

    function log() {
      var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),
          domain = scale.domain,
          base = 10,
          logs = logp(10),
          pows = powp(10);

      function rescale() {
        logs = logp(base), pows = powp(base);
        if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
        return scale;
      }

      scale.base = function (_) {
        return arguments.length ? (base = +_, rescale()) : base;
      };

      scale.domain = function (_) {
        return arguments.length ? (domain(_), rescale()) : domain();
      };

      scale.ticks = function (count) {
        var d = domain(),
            u = d[0],
            v = d[d.length - 1],
            r;

        if (r = v < u) i = u, u = v, v = i;

        var i = logs(u),
            j = logs(v),
            p,
            k,
            t,
            n = count == null ? 10 : +count,
            z = [];

        if (!(base % 1) && j - i < n) {
          i = Math.round(i) - 1, j = Math.round(j) + 1;
          if (u > 0) for (; i < j; ++i) {
            for (k = 1, p = pows(i); k < base; ++k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          } else for (; i < j; ++i) {
            for (k = base - 1, p = pows(i); k >= 1; --k) {
              t = p * k;
              if (t < u) continue;
              if (t > v) break;
              z.push(t);
            }
          }
        } else {
          z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);
        }

        return r ? z.reverse() : z;
      };

      scale.tickFormat = function (count, specifier) {
        if (specifier == null) specifier = base === 10 ? ".0e" : ",";
        if (typeof specifier !== "function") specifier = d3Format.format(specifier);
        if (count === Infinity) return specifier;
        if (count == null) count = 10;
        var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
        return function (d) {
          var i = d / pows(Math.round(logs(d)));
          if (i * base < base - 0.5) i *= base;
          return i <= k ? specifier(d) : "";
        };
      };

      scale.nice = function () {
        return domain(nice(domain(), {
          floor: function (x) {
            return pows(Math.floor(logs(x)));
          },
          ceil: function (x) {
            return pows(Math.ceil(logs(x)));
          }
        }));
      };

      scale.copy = function () {
        return copy(scale, log().base(base));
      };

      return scale;
    }

    function raise(x, exponent) {
      return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
    }

    function pow() {
      var exponent = 1,
          scale = continuous(deinterpolate, reinterpolate),
          domain = scale.domain;

      function deinterpolate(a, b) {
        return (b = raise(b, exponent) - (a = raise(a, exponent))) ? function (x) {
          return (raise(x, exponent) - a) / b;
        } : constant(b);
      }

      function reinterpolate(a, b) {
        b = raise(b, exponent) - (a = raise(a, exponent));
        return function (t) {
          return raise(a + b * t, 1 / exponent);
        };
      }

      scale.exponent = function (_) {
        return arguments.length ? (exponent = +_, domain(domain())) : exponent;
      };

      scale.copy = function () {
        return copy(scale, pow().exponent(exponent));
      };

      return linearish(scale);
    }

    function sqrt() {
      return pow().exponent(0.5);
    }

    function quantile$1() {
      var domain = [],
          range$$1 = [],
          thresholds = [];

      function rescale() {
        var i = 0,
            n = Math.max(1, range$$1.length);
        thresholds = new Array(n - 1);
        while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);
        return scale;
      }

      function scale(x) {
        if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];
      }

      scale.invertExtent = function (y) {
        var i = range$$1.indexOf(y);
        return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
      };

      scale.domain = function (_) {
        if (!arguments.length) return domain.slice();
        domain = [];
        for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
        domain.sort(d3Array.ascending);
        return rescale();
      };

      scale.range = function (_) {
        return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();
      };

      scale.quantiles = function () {
        return thresholds.slice();
      };

      scale.copy = function () {
        return quantile$1().domain(domain).range(range$$1);
      };

      return scale;
    }

    function quantize() {
      var x0 = 0,
          x1 = 1,
          n = 1,
          domain = [0.5],
          range$$1 = [0, 1];

      function scale(x) {
        if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
      }

      function rescale() {
        var i = -1;
        domain = new Array(n);
        while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
        return scale;
      }

      scale.domain = function (_) {
        return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
      };

      scale.range = function (_) {
        return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();
      };

      scale.invertExtent = function (y) {
        var i = range$$1.indexOf(y);
        return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
      };

      scale.copy = function () {
        return quantize().domain([x0, x1]).range(range$$1);
      };

      return linearish(scale);
    }

    function threshold() {
      var domain = [0.5],
          range$$1 = [0, 1],
          n = 1;

      function scale(x) {
        if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];
      }

      scale.domain = function (_) {
        return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();
      };

      scale.range = function (_) {
        return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();
      };

      scale.invertExtent = function (y) {
        var i = range$$1.indexOf(y);
        return [domain[i - 1], domain[i]];
      };

      scale.copy = function () {
        return threshold().domain(domain).range(range$$1);
      };

      return scale;
    }

    var durationSecond = 1000;
    var durationMinute = durationSecond * 60;
    var durationHour = durationMinute * 60;
    var durationDay = durationHour * 24;
    var durationWeek = durationDay * 7;
    var durationMonth = durationDay * 30;
    var durationYear = durationDay * 365;

    function date(t) {
      return new Date(t);
    }

    function number$1(t) {
      return t instanceof Date ? +t : +new Date(+t);
    }

    function calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {
      var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),
          invert = scale.invert,
          domain = scale.domain;

      var formatMillisecond = format$$1(".%L"),
          formatSecond = format$$1(":%S"),
          formatMinute = format$$1("%I:%M"),
          formatHour = format$$1("%I %p"),
          formatDay = format$$1("%a %d"),
          formatWeek = format$$1("%b %d"),
          formatMonth = format$$1("%B"),
          formatYear = format$$1("%Y");

      var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

      function tickFormat(date) {
        return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
      }

      function tickInterval(interval, start, stop, step) {
        if (interval == null) interval = 10;

        // If a desired tick count is specified, pick a reasonable tick interval
        // based on the extent of the domain and a rough estimate of tick size.
        // Otherwise, assume interval is already a time interval and use it.
        if (typeof interval === "number") {
          var target = Math.abs(stop - start) / interval,
              i = d3Array.bisector(function (i) {
            return i[2];
          }).right(tickIntervals, target);
          if (i === tickIntervals.length) {
            step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);
            interval = year;
          } else if (i) {
            i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
            step = i[1];
            interval = i[0];
          } else {
            step = Math.max(d3Array.tickStep(start, stop, interval), 1);
            interval = millisecond;
          }
        }

        return step == null ? interval : interval.every(step);
      }

      scale.invert = function (y) {
        return new Date(invert(y));
      };

      scale.domain = function (_) {
        return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);
      };

      scale.ticks = function (interval, step) {
        var d = domain(),
            t0 = d[0],
            t1 = d[d.length - 1],
            r = t1 < t0,
            t;
        if (r) t = t0, t0 = t1, t1 = t;
        t = tickInterval(interval, t0, t1, step);
        t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
        return r ? t.reverse() : t;
      };

      scale.tickFormat = function (count, specifier) {
        return specifier == null ? tickFormat : format$$1(specifier);
      };

      scale.nice = function (interval, step) {
        var d = domain();
        return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;
      };

      scale.copy = function () {
        return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));
      };

      return scale;
    }

    var time = function () {
      return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
    };

    var utcTime = function () {
      return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
    };

    var colors = function (s) {
      return s.match(/.{6}/g).map(function (x) {
        return "#" + x;
      });
    };

    var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

    var category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");

    var category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");

    var category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");

    var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));

    var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));

    var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));

    var rainbow = d3Color.cubehelix();

    var rainbow$1 = function (t) {
      if (t < 0 || t > 1) t -= Math.floor(t);
      var ts = Math.abs(t - 0.5);
      rainbow.h = 360 * t - 100;
      rainbow.s = 1.5 - 1.5 * ts;
      rainbow.l = 0.8 - 0.9 * ts;
      return rainbow + "";
    };

    function ramp(range$$1) {
      var n = range$$1.length;
      return function (t) {
        return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
      };
    }

    var viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

    var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

    var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

    var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

    function sequential(interpolator) {
      var x0 = 0,
          x1 = 1,
          clamp = false;

      function scale(x) {
        var t = (x - x0) / (x1 - x0);
        return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
      }

      scale.domain = function (_) {
        return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
      };

      scale.clamp = function (_) {
        return arguments.length ? (clamp = !!_, scale) : clamp;
      };

      scale.interpolator = function (_) {
        return arguments.length ? (interpolator = _, scale) : interpolator;
      };

      scale.copy = function () {
        return sequential(interpolator).domain([x0, x1]).clamp(clamp);
      };

      return linearish(scale);
    }

    exports.scaleBand = band;
    exports.scalePoint = point;
    exports.scaleIdentity = identity;
    exports.scaleLinear = linear;
    exports.scaleLog = log;
    exports.scaleOrdinal = ordinal;
    exports.scaleImplicit = implicit;
    exports.scalePow = pow;
    exports.scaleSqrt = sqrt;
    exports.scaleQuantile = quantile$1;
    exports.scaleQuantize = quantize;
    exports.scaleThreshold = threshold;
    exports.scaleTime = time;
    exports.scaleUtc = utcTime;
    exports.schemeCategory10 = category10;
    exports.schemeCategory20b = category20b;
    exports.schemeCategory20c = category20c;
    exports.schemeCategory20 = category20;
    exports.interpolateCubehelixDefault = cubehelix$1;
    exports.interpolateRainbow = rainbow$1;
    exports.interpolateWarm = warm;
    exports.interpolateCool = cool;
    exports.interpolateViridis = viridis;
    exports.interpolateMagma = magma;
    exports.interpolateInferno = inferno;
    exports.interpolatePlasma = plasma;
    exports.scaleSequential = sequential;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("131", ["136"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("136");
});
$__System.registerDynamic("12c", ["123", "1c", "50", "19", "11f"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _pondjs = $__require("19");
  var _util = $__require("11f");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var Brush = function (_React$Component) {
    _inherits(Brush, _React$Component);
    function Brush(props) {
      _classCallCheck(this, Brush);
      var _this = _possibleConstructorReturn(this, (Brush.__proto__ || Object.getPrototypeOf(Brush)).call(this, props));
      _this.state = { isBrushing: false };
      _this.handleBrushMouseDown = _this.handleBrushMouseDown.bind(_this);
      _this.handleOverlayMouseDown = _this.handleOverlayMouseDown.bind(_this);
      _this.handleHandleMouseDown = _this.handleHandleMouseDown.bind(_this);
      _this.handleMouseUp = _this.handleMouseUp.bind(_this);
      _this.handleClick = _this.handleClick.bind(_this);
      _this.handleMouseMove = _this.handleMouseMove.bind(_this);
      return _this;
    }
    _createClass(Brush, [{
      key: "viewport",
      value: function viewport() {
        var _props = this.props,
            width = _props.width,
            timeScale = _props.timeScale;
        var viewBeginTime = timeScale.invert(0);
        var viewEndTime = timeScale.invert(width);
        return new _pondjs.TimeRange(viewBeginTime, viewEndTime);
      }
    }, {
      key: "handleBrushMouseDown",
      value: function handleBrushMouseDown(e) {
        e.preventDefault();
        var x = e.pageX,
            y = e.pageY;
        var xy0 = [Math.round(x), Math.round(y)];
        var begin = +this.props.timeRange.begin();
        var end = +this.props.timeRange.end();
        this.setState({
          isBrushing: true,
          brushingInitializationSite: "brush",
          initialBrushBeginTime: begin,
          initialBrushEndTime: end,
          initialBrushXYPosition: xy0
        });
      }
    }, {
      key: "handleOverlayMouseDown",
      value: function handleOverlayMouseDown(e) {
        e.preventDefault();
        var offset = (0, _util.getElementOffset)(this.overlay);
        var x = e.pageX - offset.left;
        var t = this.props.timeScale.invert(x).getTime();
        this.setState({
          isBrushing: true,
          brushingInitializationSite: "overlay",
          initialBrushBeginTime: t,
          initialBrushEndTime: t,
          initialBrushXYPosition: null
        });
      }
    }, {
      key: "handleHandleMouseDown",
      value: function handleHandleMouseDown(e, handle) {
        e.preventDefault();
        var x = e.pageX,
            y = e.pageY;
        var xy0 = [Math.round(x), Math.round(y)];
        var begin = this.props.timeRange.begin().getTime();
        var end = this.props.timeRange.end().getTime();
        document.addEventListener("mouseover", this.handleMouseMove);
        document.addEventListener("mouseup", this.handleMouseUp);
        this.setState({
          isBrushing: true,
          brushingInitializationSite: "handle-" + handle,
          initialBrushBeginTime: begin,
          initialBrushEndTime: end,
          initialBrushXYPosition: xy0
        });
      }
    }, {
      key: "handleMouseUp",
      value: function handleMouseUp(e) {
        e.preventDefault();
        document.removeEventListener("mouseover", this.handleMouseMove);
        document.removeEventListener("mouseup", this.handleMouseUp);
        this.setState({
          isBrushing: false,
          brushingInitializationSite: null,
          initialBrushBeginTime: null,
          initialBrushEndTime: null,
          initialBrushXYPosition: null
        });
      }
    }, {
      key: "handleClick",
      value: function handleClick() {
        if (this.props.allowSelectionClear && this.props.onTimeRangeChanged) {
          this.props.onTimeRangeChanged(null);
        }
      }
    }, {
      key: "handleMouseMove",
      value: function handleMouseMove(e) {
        e.preventDefault();
        var x = e.pageX;
        var y = e.pageY;
        var xy = [Math.round(x), Math.round(y)];
        var viewport = this.viewport();
        if (this.state.isBrushing) {
          var newBegin = void 0;
          var newEnd = void 0;
          var tb = this.state.initialBrushBeginTime;
          var te = this.state.initialBrushEndTime;
          if (this.state.brushingInitializationSite === "overlay") {
            var offset = (0, _util.getElementOffset)(this.overlay);
            var xx = e.pageX - offset.left;
            var t = this.props.timeScale.invert(xx).getTime();
            if (t < tb) {
              newBegin = t < viewport.begin().getTime() ? viewport.begin() : t;
              newEnd = tb > viewport.end().getTime() ? viewport.end() : tb;
            } else {
              newBegin = tb < viewport.begin().getTime() ? viewport.begin() : tb;
              newEnd = t > viewport.end().getTime() ? viewport.end() : t;
            }
          } else {
            var xy0 = this.state.initialBrushXYPosition;
            var timeOffset = this.props.timeScale.invert(xy0[0]).getTime() - this.props.timeScale.invert(xy[0]).getTime();
            var startOffsetConstraint = timeOffset;
            var endOffsetConstrain = timeOffset;
            if (tb - timeOffset < viewport.begin()) {
              startOffsetConstraint = tb - viewport.begin().getTime();
            }
            if (te - timeOffset > viewport.end()) {
              endOffsetConstrain = te - viewport.end().getTime();
            }
            newBegin = this.state.brushingInitializationSite === "brush" || this.state.brushingInitializationSite === "handle-left" ? parseInt(tb - startOffsetConstraint, 10) : tb;
            newEnd = this.state.brushingInitializationSite === "brush" || this.state.brushingInitializationSite === "handle-right" ? parseInt(te - endOffsetConstrain, 10) : te;
            if (newBegin > newEnd) {
              var _ref = [newEnd, newBegin];
              newBegin = _ref[0];
              newEnd = _ref[1];
            }
          }
          if (this.props.onTimeRangeChanged) {
            this.props.onTimeRangeChanged(new _pondjs.TimeRange(newBegin, newEnd));
          }
        }
      }
    }, {
      key: "renderOverlay",
      value: function renderOverlay() {
        var _this2 = this;
        var _props2 = this.props,
            width = _props2.width,
            height = _props2.height;
        var cursor = void 0;
        switch (this.state.brushingInitializationSite) {
          case "handle-right":
          case "handle-left":
            cursor = "ew-resize";
            break;
          case "brush":
            cursor = "move";
            break;
          default:
            cursor = "crosshair";
        }
        var overlayStyle = {
          fill: "white",
          opacity: 0,
          cursor: cursor
        };
        return _react2.default.createElement("rect", {
          ref: function ref(c) {
            _this2.overlay = c;
          },
          x: 0,
          y: 0,
          width: width,
          height: height,
          style: overlayStyle,
          onMouseDown: this.handleOverlayMouseDown,
          onMouseUp: this.handleMouseUp,
          onClick: this.handleClick
        });
      }
    }, {
      key: "renderBrush",
      value: function renderBrush() {
        var _props3 = this.props,
            timeRange = _props3.timeRange,
            timeScale = _props3.timeScale,
            height = _props3.height,
            style = _props3.style;
        if (!timeRange) {
          return _react2.default.createElement("g", null);
        }
        var cursor = void 0;
        switch (this.state.brushingInitializationSite) {
          case "handle-right":
          case "handle-left":
            cursor = "ew-resize";
            break;
          case "overlay":
            cursor = "crosshair";
            break;
          default:
            cursor = "move";
        }
        var brushDefaultStyle = {
          fill: "#777",
          fillOpacity: 0.3,
          stroke: "#fff",
          shapeRendering: "crispEdges",
          cursor: cursor
        };
        var brushStyle = (0, _merge2.default)(true, brushDefaultStyle, style);
        if (!this.viewport().disjoint(timeRange)) {
          var range = timeRange.intersection(this.viewport());
          var begin = range.begin();
          var end = range.end();
          var _ref2 = [timeScale(begin), 0],
              x = _ref2[0],
              y = _ref2[1];
          var endPos = timeScale(end);
          var width = endPos - x;
          if (width < 1) {
            width = 1;
          }
          var bounds = {
            x: x,
            y: y,
            width: width,
            height: height
          };
          return _react2.default.createElement("rect", _extends({}, bounds, {
            style: brushStyle,
            pointerEvents: "all",
            onMouseDown: this.handleBrushMouseDown,
            onMouseUp: this.handleMouseUp
          }));
        }
        return _react2.default.createElement("g", null);
      }
    }, {
      key: "renderHandles",
      value: function renderHandles() {
        var _this3 = this;
        var _props4 = this.props,
            timeRange = _props4.timeRange,
            timeScale = _props4.timeScale,
            height = _props4.height;
        if (!timeRange) {
          return _react2.default.createElement("g", null);
        }
        var handleStyle = {
          fill: "white",
          opacity: 0,
          cursor: "ew-resize"
        };
        if (!this.viewport().disjoint(timeRange)) {
          var range = timeRange.intersection(this.viewport());
          var _range$toJSON = range.toJSON(),
              _range$toJSON2 = _slicedToArray(_range$toJSON, 2),
              begin = _range$toJSON2[0],
              end = _range$toJSON2[1];
          var _ref3 = [timeScale(begin), 0],
              x = _ref3[0],
              y = _ref3[1];
          var endPos = timeScale(end);
          var width = endPos - x;
          if (width < 1) {
            width = 1;
          }
          var handleSize = this.props.handleSize;
          var leftHandleBounds = {
            x: x - 1,
            y: y,
            width: handleSize,
            height: height
          };
          var rightHandleBounds = {
            x: x + (width - handleSize),
            y: y,
            width: handleSize + 1,
            height: height
          };
          return _react2.default.createElement("g", null, _react2.default.createElement("rect", _extends({}, leftHandleBounds, {
            style: handleStyle,
            pointerEvents: "all",
            onMouseDown: function onMouseDown(e) {
              return _this3.handleHandleMouseDown(e, "left");
            },
            onMouseUp: this.handleMouseUp
          })), _react2.default.createElement("rect", _extends({}, rightHandleBounds, {
            style: handleStyle,
            pointerEvents: "all",
            onMouseDown: function onMouseDown(e) {
              return _this3.handleHandleMouseDown(e, "right");
            },
            onMouseUp: this.handleMouseUp
          })));
        }
        return _react2.default.createElement("g", null);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement("g", { onMouseMove: this.handleMouseMove }, this.renderOverlay(), this.renderBrush(), this.renderHandles());
      }
    }]);
    return Brush;
  }(_react2.default.Component);
  exports.default = Brush;
  Brush.propTypes = {
    timeRange: _propTypes2.default.instanceOf(_pondjs.TimeRange),
    style: _propTypes2.default.object,
    handleSize: _propTypes2.default.number,
    allowSelectionClear: _propTypes2.default.bool,
    onTimeRangeChanged: _propTypes2.default.func,
    timeScale: _propTypes2.default.func,
    width: _propTypes2.default.number,
    height: _propTypes2.default.number
  };
  Brush.defaultProps = {
    handleSize: 6,
    allowSelectionClear: false
  };
});
$__System.registerDynamic("13c", ["122"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }(); /**
opyright (c) 2015, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *  LICENSE file in the root directory of this source tree.


    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var ScaleInterpolator = function () {
        function ScaleInterpolator(transition, ease, observer) {
            _classCallCheck(this, ScaleInterpolator);

            this.id = _underscore2.default.uniqueId("scaler");
            this.ease = ease;
            this.transitionTime = transition;
            this.observer = observer;

            this.sourceScale = null;
            this.targetScale = null;
            this.cachedScaler = null;
            this.cacheKey = null;
        }

        _createClass(ScaleInterpolator, [{
            key: "update",
            value: function update() {
                var _this = this;

                var animationTime = 0;

                if (!this.initialTimestamp) {
                    this.initialTimestamp = window.performance.now();
                } else {
                    animationTime = window.performance.now() - this.initialTimestamp;
                }

                var animationPosition = this.transitionTime ? Math.min(animationTime / this.transitionTime, 1.0) : 1.0;

                if (!this.targetScale) {
                    return;
                }

                if (this.observer) {
                    var func1 = this.sourceScale;
                    var func2 = this.targetScale;
                    var te = this.ease(animationPosition);
                    var scaler = function scaler(x) {
                        var a = func1(x);
                        var b = func2(x);
                        return a + (b - a) * te;
                    };
                    this.observer(scaler);
                }

                if (animationPosition < 1.0) {
                    // keep animating
                    setTimeout(function () {
                        return _this.update();
                    }, 20);
                } else {
                    // reset
                    this.sourceScale = this.targetScale;
                    this.targetScale = null;
                    this.initialTimestamp = null;
                }
            }

            /**
            * A new (or initial) scale is set on the interpolator
            */
        }, {
            key: "setScale",
            value: function setScale(key, scale) {
                var _this2 = this;

                // Initial scale
                if (!this.sourceScale) {
                    this.sourceScale = scale;
                    return;
                }

                //
                //  If there was already a scale, and a new scale is set
                // the this begins an animation across between the two
                // scales, assuming a transition time is provided. To do
                // this we set the new scale as the target and reset the
                // t to 0. (if there's no transition, jump to t = 1)
                //

                if (key !== this.cacheKey) {
                    this.targetScale = scale;
                    this.cachedScaler = null;
                    this.initialTimestamp = null;
                    setTimeout(function () {
                        return _this2.update();
                    }, 0);
                }

                this.cacheKey = key;
            }

            /**
            * Returns a scaler, which is a function that scales the value
            * supplied to it. This return the scaler corresponding to the
            * source scale. Note that if a target scale is defined and the
            * interpolator is animating towards that target, the observer
            * callback will be called with the transitional scaler that can
            * be used to scale data to the intermediate state.
            */
        }, {
            key: "scaler",
            value: function scaler() {
                var _this3 = this;

                if (_underscore2.default.isNull(this.cachedScaler)) {
                    this.cachedScaler = function (v) {
                        return _this3.sourceScale(v);
                    };
                }
                return this.cachedScaler;
            }

            /**
            * Returns the d3 scale. It will return the target scale if present
            * otherwise the source scale. Note: this is the d3 internal scale. To
            * scale values, use the scaler.
            */
        }, {
            key: "latestScale",
            value: function latestScale() {
                return this.targetScale ? this.targetScale : this.sourceScale;
            }

            /**
            * Returns the transition, as set in the constructor
            */
        }, {
            key: "transition",
            value: function transition() {
                return this.transitionTime;
            }
        }]);

        return ScaleInterpolator;
    }();

    exports.default = ScaleInterpolator;
});
$__System.registerDynamic("12d", ["122", "50", "1c", "13e", "131", "12c", "12e", "130", "13d", "13c"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _d3Ease = $__require("13e");
  var _d3Scale = $__require("131");
  var _Brush = $__require("12c");
  var _Brush2 = _interopRequireDefault(_Brush);
  var _Charts = $__require("12e");
  var _Charts2 = _interopRequireDefault(_Charts);
  var _TimeMarker = $__require("130");
  var _TimeMarker2 = _interopRequireDefault(_TimeMarker);
  var _YAxis = $__require("13d");
  var _YAxis2 = _interopRequireDefault(_YAxis);
  var _interpolators = $__require("13c");
  var _interpolators2 = _interopRequireDefault(_interpolators);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var AXIS_MARGIN = 5;
  function createScale(yaxis, type, min, max, y0, y1) {
    var scale = void 0;
    if (_underscore2.default.isUndefined(min) || _underscore2.default.isUndefined(max)) {
      scale = null;
    } else if (type === "linear") {
      scale = (0, _d3Scale.scaleLinear)().domain([min, max]).range([y0, y1]).nice();
    } else if (type === "log") {
      var base = yaxis.props.logBase || 10;
      scale = (0, _d3Scale.scaleLog)().base(base).domain([min, max]).range([y0, y1]);
    } else if (type === "power") {
      var power = yaxis.props.powerExponent || 2;
      scale = (0, _d3Scale.scalePow)().exponent(power).domain([min, max]).range([y0, y1]);
    }
    return scale;
  }
  var ChartRow = function (_React$Component) {
    _inherits(ChartRow, _React$Component);
    function ChartRow(props) {
      _classCallCheck(this, ChartRow);
      var _this = _possibleConstructorReturn(this, (ChartRow.__proto__ || Object.getPrototypeOf(ChartRow)).call(this, props));
      var clipId = _underscore2.default.uniqueId("clip_");
      var clipPathURL = "url(#" + clipId + ")";
      _this.state = {
        clipId: clipId,
        clipPathURL: clipPathURL
      };
      return _this;
    }
    _createClass(ChartRow, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var _this2 = this;
        this.scaleMap = {};
        var innerHeight = +this.props.height - AXIS_MARGIN * 2;
        var rangeTop = AXIS_MARGIN;
        var rangeBottom = innerHeight - AXIS_MARGIN;
        _react2.default.Children.forEach(this.props.children, function (child) {
          if ((child.type === _YAxis2.default || _underscore2.default.has(child.props, "min")) && _underscore2.default.has(child.props, "max")) {
            var _child$props = child.props,
                id = _child$props.id,
                max = _child$props.max,
                min = _child$props.min,
                _child$props$transiti = _child$props.transition,
                transition = _child$props$transiti === undefined ? 0 : _child$props$transiti,
                _child$props$type = _child$props.type,
                type = _child$props$type === undefined ? "linear" : _child$props$type;
            var initialScale = createScale(child, type, min, max, rangeBottom, rangeTop);
            _this2.scaleMap[id] = new _interpolators2.default(transition, _d3Ease.easeSinOut, function (s) {
              var yAxisScalerMap = _this2.state.yAxisScalerMap;
              yAxisScalerMap[id] = s;
              _this2.setState(yAxisScalerMap);
            });
            var cacheKey = type + "-" + min + "-" + max + "-" + rangeBottom + "-" + rangeTop;
            _this2.scaleMap[id].setScale(cacheKey, initialScale);
          }
        });
        var scalerMap = {};
        _underscore2.default.forEach(this.scaleMap, function (interpolator, id) {
          scalerMap[id] = interpolator.scaler();
        });
        this.setState({ yAxisScalerMap: scalerMap });
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;
        var innerHeight = +nextProps.height - AXIS_MARGIN * 2;
        var rangeTop = AXIS_MARGIN;
        var rangeBottom = innerHeight - AXIS_MARGIN;
        _react2.default.Children.forEach(nextProps.children, function (child) {
          if ((child.type === _YAxis2.default || _underscore2.default.has(child.props, "min")) && _underscore2.default.has(child.props, "max")) {
            var _child$props2 = child.props,
                id = _child$props2.id,
                max = _child$props2.max,
                min = _child$props2.min,
                _child$props2$transit = _child$props2.transition,
                transition = _child$props2$transit === undefined ? 0 : _child$props2$transit,
                _child$props2$type = _child$props2.type,
                type = _child$props2$type === undefined ? "linear" : _child$props2$type;
            var scale = createScale(child, type, min, max, rangeBottom, rangeTop);
            if (!_underscore2.default.has(_this3.scaleMap, id)) {
              _this3.scaleMap[id] = new _interpolators2.default(transition, _d3Ease.easeSinOut, function (s) {
                var yAxisScalerMap = _this3.state.yAxisScalerMap;
                yAxisScalerMap[id] = s;
                _this3.setState(yAxisScalerMap);
              });
            }
            var cacheKey = type + "-" + min + "-" + max + "-" + rangeBottom + "-" + rangeTop;
            _this3.scaleMap[id].setScale(cacheKey, scale);
          }
        });
        var scalerMap = {};
        _underscore2.default.forEach(this.scaleMap, function (interpolator, id) {
          scalerMap[id] = interpolator.scaler();
        });
        this.setState({ yAxisScalerMap: scalerMap });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;
        var axes = [];
        var chartList = [];
        var innerHeight = +this.props.height - AXIS_MARGIN * 2;
        var yAxisMap = {};
        var leftAxisList = [];
        var rightAxisList = [];
        var alignLeft = true;
        _react2.default.Children.forEach(this.props.children, function (child) {
          if (child.type === _Charts2.default) {
            alignLeft = false;
          } else {
            var _id = child.props.id;
            if ((child.type === _YAxis2.default || _underscore2.default.has(child.props, "min")) && _underscore2.default.has(child.props, "max")) {
              var yaxis = child;
              if (yaxis.props.id) {
                yAxisMap[yaxis.props.id] = yaxis;
              }
              if (alignLeft) {
                leftAxisList.push(_id);
              } else {
                rightAxisList.push(_id);
              }
            }
          }
        });
        leftAxisList.reverse();
        var transform = void 0;
        var id = void 0;
        var props = void 0;
        var axis = void 0;
        var posx = 0;
        var leftWidth = _underscore2.default.reduce(this.props.leftAxisWidths, function (a, b) {
          return a + b;
        }, 0);
        var rightWidth = _underscore2.default.reduce(this.props.rightAxisWidths, function (a, b) {
          return a + b;
        }, 0);
        posx = leftWidth;
        for (var leftColumnIndex = 0; leftColumnIndex < this.props.leftAxisWidths.length; leftColumnIndex += 1) {
          var colWidth = this.props.leftAxisWidths[leftColumnIndex];
          posx -= colWidth;
          if (leftColumnIndex < leftAxisList.length) {
            id = leftAxisList[leftColumnIndex];
            transform = "translate(" + posx + ",0)";
            props = {
              width: colWidth,
              height: innerHeight,
              align: "left",
              scale: this.scaleMap[id].latestScale()
            };
            axis = _react2.default.cloneElement(yAxisMap[id], props);
            axes.push(_react2.default.createElement("g", {
              key: "y-axis-left-" + leftColumnIndex,
              transform: transform
            }, axis));
          }
        }
        posx = this.props.width - rightWidth;
        for (var rightColumnIndex = 0; rightColumnIndex < this.props.rightAxisWidths.length; rightColumnIndex += 1) {
          var _colWidth = this.props.rightAxisWidths[rightColumnIndex];
          if (rightColumnIndex < rightAxisList.length) {
            id = rightAxisList[rightColumnIndex];
            transform = "translate(" + posx + ",0)";
            props = {
              width: _colWidth,
              height: innerHeight,
              align: "right",
              scale: this.scaleMap[id].latestScale()
            };
            axis = _react2.default.cloneElement(yAxisMap[id], props);
            axes.push(_react2.default.createElement("g", {
              key: "y-axis-right-" + rightColumnIndex,
              transform: transform
            }, axis));
          }
          posx += _colWidth;
        }
        var chartWidth = this.props.width - leftWidth - rightWidth;
        var chartTransform = "translate(" + leftWidth + ",0)";
        var keyCount = 0;
        _react2.default.Children.forEach(this.props.children, function (child) {
          if (child.type === _Charts2.default) {
            var _charts = child;
            _react2.default.Children.forEach(_charts.props.children, function (chart) {
              var scale = null;
              if (_underscore2.default.has(_this4.state.yAxisScalerMap, chart.props.axis)) {
                scale = _this4.state.yAxisScalerMap[chart.props.axis];
              }
              var ytransition = null;
              if (_underscore2.default.has(_this4.scaleMap, chart.props.axis)) {
                ytransition = _this4.scaleMap[chart.props.axis];
              }
              var chartProps = {
                key: keyCount,
                width: chartWidth,
                height: innerHeight,
                timeScale: _this4.props.timeScale,
                timeFormat: _this4.props.timeFormat
              };
              if (scale) {
                chartProps.yScale = scale;
              }
              if (ytransition) {
                chartProps.transition = ytransition;
              }
              chartList.push(_react2.default.cloneElement(chart, chartProps));
              keyCount += 1;
            });
          }
        });
        var brushList = [];
        keyCount = 0;
        _react2.default.Children.forEach(this.props.children, function (child) {
          if (child.type === _Brush2.default) {
            var brushProps = {
              key: "brush-" + keyCount,
              width: chartWidth,
              height: innerHeight,
              timeScale: _this4.props.timeScale
            };
            brushList.push(_react2.default.cloneElement(child, brushProps));
          }
          keyCount += 1;
        });
        var charts = _react2.default.createElement("g", {
          transform: chartTransform,
          key: "event-rect-group"
        }, _react2.default.createElement("g", {
          key: "charts",
          clipPath: this.state.clipPathURL
        }, chartList));
        var clipper = _react2.default.createElement("defs", null, _react2.default.createElement("clipPath", { id: this.state.clipId }, _react2.default.createElement("rect", {
          x: "0",
          y: "0",
          width: chartWidth,
          height: innerHeight
        })));
        var brushes = _react2.default.createElement("g", {
          transform: chartTransform,
          key: "brush-group"
        }, brushList);
        var tracker = void 0;
        if (this.props.trackerTime) {
          var timeFormat = this.props.trackerTimeFormat || this.props.timeFormat;
          var timeMarkerProps = {
            timeFormat: timeFormat,
            showLine: false,
            showTime: this.props.trackerShowTime,
            time: this.props.trackerTime,
            timeScale: this.props.timeScale,
            width: chartWidth
          };
          if (this.props.trackerInfoValues) {
            timeMarkerProps.infoWidth = this.props.trackerInfoWidth;
            timeMarkerProps.infoHeight = this.props.trackerInfoHeight;
            timeMarkerProps.infoValues = this.props.trackerInfoValues;
            timeMarkerProps.timeFormat = this.props.trackerTimeFormat;
          }
          var trackerStyle = { pointerEvents: "none" };
          var trackerTransform = "translate(" + leftWidth + ",0)";
          tracker = _react2.default.createElement("g", {
            key: "tracker-group",
            style: trackerStyle,
            transform: trackerTransform
          }, _react2.default.createElement(_TimeMarker2.default, timeMarkerProps));
        }
        return _react2.default.createElement("g", null, clipper, axes, charts, brushes, tracker);
      }
    }]);
    return ChartRow;
  }(_react2.default.Component);
  exports.default = ChartRow;
  ChartRow.defaultProps = {
    trackerTimeFormat: "%b %d %Y %X",
    enablePanZoom: false,
    height: 100
  };
  ChartRow.propTypes = {
    height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
    leftAxisWidths: _propTypes2.default.arrayOf(_propTypes2.default.number),
    rightAxisWidths: _propTypes2.default.arrayOf(_propTypes2.default.number),
    width: _propTypes2.default.number,
    timeScale: _propTypes2.default.func,
    trackerTimeFormat: _propTypes2.default.string,
    timeFormat: _propTypes2.default.string,
    trackerTime: _propTypes2.default.instanceOf(Date),
    trackerShowTime: _propTypes2.default.bool,
    trackerInfoWidth: _propTypes2.default.number,
    trackerInfoHeight: _propTypes2.default.number,
    trackerInfoValues: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    }))])
  };
});
$__System.registerDynamic("12e", ["1c"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _react = $__require("1c");

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  } /**
     *  Copyright (c) 2015-present, The Regents of the University of California,
     *  through Lawrence Berkeley National Laboratory (subject to receipt
     *  of any required approvals from the U.S. Dept. of Energy).
     *  All rights reserved.
     *
     *  This source code is licensed under the BSD-style license found in the
     *  LICENSE file in the root directory of this source tree.
     */

  /**
   *
   * The `<Charts>` element is a grouping for charts within a row.
   * It takes no props. Each chart within the group will be overlaid
   * on top of each other.
   *
   * Here is an example of two line charts within a `<Charts>` group:
   *
   * ```xml
   * <ChartContainer timeRange={audSeries.timerange()}>
   *     <ChartRow height="200">
   *         <YAxis/>
   *         <Charts>
   *             <LineChart axis="aud" series={audSeries} style={audStyle}/>
   *             <LineChart axis="euro" series={euroSeries} style={euroStyle}/>
   *         </Charts>
   *         <YAxis/>
   *     </ChartRow>
   * </ChartContainer>
   * ```
   *
   * ## Making your own chart
   *
   * Anything within this grouping is considered a chart, meaning it will have
   * certain props injected into it. As a result you can easily implement your own chart
   * by simply expecting to have these props available and rendering as such.
   *
   * For your own chart, the render() method should return a SVG group `<g>` at the
   * top level, and then your chart rendering within that.
   *
   * In addition to any props you add to your chart, the following props are passed into
   * each chart automatically:
   *
   * #### timeScale
   *
   * A d3 scale for the time axis which you can use to transform your data in the x direction
   *
   * #### yScale
   *
   * A d3 scale for the y-axis which you can use to transform your data in the y direction
   *
   * #### width
   *
   * A the width your chart will render into
   */
  var Charts = function (_React$Component) {
    _inherits(Charts, _React$Component);

    function Charts() {
      _classCallCheck(this, Charts);

      return _possibleConstructorReturn(this, (Charts.__proto__ || Object.getPrototypeOf(Charts)).apply(this, arguments));
    }

    _createClass(Charts, [{
      key: "render",
      value: function render() {
        return this.constructor.name + " elements are for configuration only\nand should not be rendered";
      }
    }]);

    return Charts;
  }(_react2.default.Component);

  exports.default = Charts;
});
$__System.registerDynamic("13f", ["122", "123", "1c", "50", "19"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    var _merge = $__require("123");

    var _merge2 = _interopRequireDefault(_merge);

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _pondjs = $__require("19");

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    } /**
opyright (c) 2015-present, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree.


    /**
     * Renders an event view that shows the supplied set of events along a time axis.
     * The events should be supplied as a Pond TimeSeries.
     * That series may contain regular TimeEvents, TimeRangeEvents
     * or IndexedEvents.
     */
    var EventChart = function (_React$Component) {
        _inherits(EventChart, _React$Component);

        function EventChart(props) {
            _classCallCheck(this, EventChart);

            var _this = _possibleConstructorReturn(this, (EventChart.__proto__ || Object.getPrototypeOf(EventChart)).call(this, props));

            _this.state = {
                hover: null
            };
            return _this;
        }

        /**
        * Continues a hover event on a specific bar of the bar chart.
        */

        _createClass(EventChart, [{
            key: "onMouseOver",
            value: function onMouseOver(e, event) {
                if (this.props.onMouseOver) {
                    this.props.onMouseOver(event);
                }
                this.setState({ hover: event });
            }

            /**
            * Handle mouse leave and calls onMouseLeave callback if one is provided
            */
        }, {
            key: "onMouseLeave",
            value: function onMouseLeave() {
                if (this.props.onMouseLeave) {
                    this.props.onMouseLeave(this.state.hover);
                }
                this.setState({ hover: null });
            }

            /**
            * Handle click will call the onSelectionChange callback if one is provided
            * as a prop. It will be called with the event selected.
            */
        }, {
            key: "handleClick",
            value: function handleClick(e, event) {
                e.stopPropagation();
                if (this.props.onSelectionChange) {
                    this.props.onSelectionChange(event);
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this2 = this;

                var _props = this.props,
                    series = _props.series,
                    textOffsetX = _props.textOffsetX,
                    textOffsetY = _props.textOffsetY,
                    hoverMarkerWidth = _props.hoverMarkerWidth;

                var scale = this.props.timeScale;
                var eventMarkers = [];

                // Create and array of markers, one for each event
                var i = 0;
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    var _loop = function _loop() {
                        var event = _step.value;

                        var begin = event.begin();
                        var end = event.end();
                        var beginPos = scale(begin) >= 0 ? scale(begin) : 0;
                        var endPos = scale(end) <= _this2.props.width ? scale(end) : _this2.props.width;

                        var transform = "translate(" + beginPos + ",0)";
                        var isHover = _this2.state.hover ? _pondjs.Event.is(event, _this2.state.hover) : false;

                        var state = void 0;
                        if (isHover) {
                            state = "hover";
                        } else {
                            state = "normal";
                        }

                        var barNormalStyle = {};
                        var barStyle = {};
                        if (_this2.props.style) {
                            barNormalStyle = _this2.props.style(event, "normal");
                            barStyle = _this2.props.style(event, state);
                        }

                        var label = "";
                        if (_this2.props.label) {
                            if (_underscore2.default.isString(_this2.props.label)) {
                                label = _this2.props.label;
                            } else if (_underscore2.default.isFunction(_this2.props.label)) {
                                label = _this2.props.label(event);
                            }
                        }

                        var x = _this2.props.spacing;
                        var y = 0;
                        var width = endPos - beginPos - 2 * _this2.props.spacing;
                        width = width < 0 ? 0 : width;
                        var height = _this2.props.size;

                        var eventLabelStyle = {
                            fontWeight: 100,
                            fontSize: 11
                        };

                        var text = null;
                        if (isHover) {
                            text = _react2.default.createElement("g", null, _react2.default.createElement("rect", {
                                className: "eventchart-marker",
                                x: x,
                                y: y,
                                width: hoverMarkerWidth,
                                height: height + 4,
                                style: (0, _merge2.default)(true, barNormalStyle, {
                                    pointerEvents: "none"
                                })
                            }), _react2.default.createElement("text", {
                                style: _extends({
                                    pointerEvents: "none",
                                    fill: "#444"
                                }, eventLabelStyle),
                                x: 8 + textOffsetX,
                                y: 15 + textOffsetY
                            }, label));
                        }

                        eventMarkers.push(_react2.default.createElement("g", { transform: transform, key: i }, _react2.default.createElement("rect", {
                            className: "eventchart-marker",
                            x: x,
                            y: y,
                            width: width,
                            height: height,
                            style: barStyle,
                            onClick: function onClick(e) {
                                return _this2.handleClick(e, event);
                            },
                            onMouseLeave: function onMouseLeave() {
                                return _this2.onMouseLeave();
                            },
                            onMouseOver: function onMouseOver(e) {
                                return _this2.onMouseOver(e, event);
                            }
                        }), text));

                        i += 1;
                    };

                    for (var _iterator = series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        _loop();
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }

                return _react2.default.createElement("g", null, eventMarkers);
            }
        }]);

        return EventChart;
    }(_react2.default.Component);

    exports.default = EventChart;

    EventChart.defaultProps = {
        size: 30,
        spacing: 0,
        textOffsetX: 0,
        textOffsetY: 0,
        hoverMarkerWidth: 5
    };

    EventChart.propTypes = {
        /**
        * What [Pond TimeSeries](http://software.es.net/pond#timeseries) data to visualize
        */
        series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,
        /**
        * Set hover label text
        * When label is function callback it will be called with current event.
        */
        label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
        /**
        * The height in pixels for the event bar
        */
        size: _propTypes2.default.number,
        /**
        * The distance in pixels to inset the event bar from its actual timerange
        */
        spacing: _propTypes2.default.number,
        /**
        * Marker width on hover
        */
        hoverMarkerWidth: _propTypes2.default.number,
        /**
        * Hover text offset position X
        */
        textOffsetX: _propTypes2.default.number,
        /**
        * Hover text offset position Y
        */
        textOffsetY: _propTypes2.default.number,
        /**
        * A function that should return the style of the event box
        */
        style: _propTypes2.default.func,
        /**
        * Event selection on click. Will be called with selected event.
        */
        onSelectionChange: _propTypes2.default.func,
        /**
        * Mouse leave at end of hover event
        */
        onMouseLeave: _propTypes2.default.func,
        /**
        * Mouse over event callback
        */
        onMouseOver: _propTypes2.default.func,
        /**
        * [Internal] The timeScale supplied by the surrounding ChartContainer
        */
        timeScale: _propTypes2.default.func,
        /**
        * [Internal] The width supplied by the surrounding ChartContainer
        */
        width: _propTypes2.default.number
    };
});
$__System.registerDynamic("140", ["1c", "50", "137", "141"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _d3Format = $__require("137");
  var _ValueList = $__require("141");
  var _ValueList2 = _interopRequireDefault(_ValueList);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var LabelAxis = function (_React$Component) {
    _inherits(LabelAxis, _React$Component);
    function LabelAxis() {
      _classCallCheck(this, LabelAxis);
      return _possibleConstructorReturn(this, (LabelAxis.__proto__ || Object.getPrototypeOf(LabelAxis)).apply(this, arguments));
    }
    _createClass(LabelAxis, [{
      key: "renderAxis",
      value: function renderAxis() {
        var valueWidth = this.props.valWidth;
        var rectWidth = this.props.width - valueWidth;
        var style = {
          fontSize: 11,
          textAnchor: "left",
          fill: "#bdbdbd"
        };
        if (this.props.hideScale) {
          return _react2.default.createElement("g", null);
        }
        var valXPos = rectWidth + 3;
        var fmt = this.props.format;
        var maxStr = (0, _d3Format.format)(fmt)(this.props.max);
        var minStr = (0, _d3Format.format)(fmt)(this.props.min);
        return _react2.default.createElement("g", null, _react2.default.createElement("text", {
          x: valXPos,
          y: 0,
          dy: "1.2em",
          style: style
        }, maxStr), _react2.default.createElement("text", {
          x: valXPos,
          y: this.props.height,
          style: style
        }, minStr));
      }
    }, {
      key: "render",
      value: function render() {
        var valueWidth = this.props.valWidth;
        var rectWidth = this.props.width - valueWidth;
        var labelStyle = {
          fontSize: 12,
          textAnchor: "middle",
          fill: "#838383"
        };
        var valueList = null;
        var labelYPos = void 0;
        if (this.props.values) {
          labelYPos = Math.max(parseInt(this.props.height / 4, 10), 10);
          valueList = _react2.default.createElement(_ValueList2.default, {
            style: {
              fill: "none",
              stroke: "none"
            },
            values: this.props.values,
            width: rectWidth
          });
        } else {
          labelYPos = parseInt(this.props.height / 2, 10);
        }
        return _react2.default.createElement("g", null, _react2.default.createElement("rect", {
          x: "0",
          y: "0",
          width: rectWidth,
          height: this.props.height,
          style: {
            fill: "none",
            stroke: "none"
          }
        }), _react2.default.createElement("text", {
          x: parseInt(rectWidth / 2, 10),
          y: labelYPos,
          style: labelStyle
        }, this.props.label), _react2.default.createElement("g", { transform: "translate(0," + (labelYPos + 2) + ")" }, valueList), this.renderAxis());
      }
    }]);
    return LabelAxis;
  }(_react2.default.Component);
  exports.default = LabelAxis;
  LabelAxis.propTypes = {
    label: _propTypes2.default.string.isRequired,
    hideScale: _propTypes2.default.bool,
    values: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
    })).isRequired,
    valWidth: _propTypes2.default.number,
    max: _propTypes2.default.number.isRequired,
    min: _propTypes2.default.number.isRequired,
    format: _propTypes2.default.string,
    width: _propTypes2.default.number,
    height: _propTypes2.default.number
  };
  LabelAxis.defaultProps = {
    hideScale: false,
    values: [],
    valWidth: 40,
    format: ".2f"
  };
});
$__System.registerDynamic('142', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    (function (factory) {
      typeof exports === 'object' && typeof module !== 'undefined' ? module['exports'] = factory(null) : typeof undefined === 'function' && define['amd'] ? define(factory(null)) : window['stylis'] = factory(null);
    })(function factory(options) {
      'use strict';

      var nullptn = /^\0+/g;
      var formatptn = /[\0\r\f]/g;
      var colonptn = /: */g;
      var cursorptn = /zoo|gra/;
      var transformptn = /([,: ])(transform)/g;
      var animationptn = /,+\s*(?![^(]*[)])/g;
      var propertiesptn = / +\s*(?![^(]*[)])/g;
      var elementptn = / *[\0] */g;
      var selectorptn = /,\r+?/g;
      var andptn = /([\t\r\n ])*\f?&/g;
      var escapeptn = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g;
      var invalidptn = /\W+/g;
      var keyframeptn = /@(k\w+)\s*(\S*)\s*/;
      var plcholdrptn = /::(place)/g;
      var readonlyptn = /:(read-only)/g;
      var beforeptn = /\s+(?=[{\];=:>])/g;
      var afterptn = /([[}=:>])\s+/g;
      var tailptn = /(\{[^{]+?);(?=\})/g;
      var whiteptn = /\s{2,}/g;
      var pseudoptn = /([^\(])(:+) */g;
      var writingptn = /[svh]\w+-[tblr]{2}/;
      var gradientptn = /([\w-]+t\()/g;
      var supportsptn = /\(\s*(.*)\s*\)/g;
      var propertyptn = /([^]*?);/g;
      var selfptn = /-self|flex-/g;
      var pseudofmt = /[^]*?(:[rp][el]a[\w-]+)[^]*/;
      var trimptn = /[ \t]+$/;
      var webkit = '-webkit-';
      var moz = '-moz-';
      var ms = '-ms-';
      var SEMICOLON = 59;
      var CLOSEBRACES = 125;
      var OPENBRACES = 123;
      var OPENPARENTHESES = 40;
      var CLOSEPARENTHESES = 41;
      var OPENBRACKET = 91;
      var CLOSEBRACKET = 93;
      var NEWLINE = 10;
      var CARRIAGE = 13;
      var TAB = 9;
      var AT = 64;
      var SPACE = 32;
      var AND = 38;
      var DASH = 45;
      var UNDERSCORE = 95;
      var STAR = 42;
      var COMMA = 44;
      var COLON = 58;
      var SINGLEQUOTE = 39;
      var DOUBLEQUOTE = 34;
      var FOWARDSLASH = 47;
      var GREATERTHAN = 62;
      var PLUS = 43;
      var TILDE = 126;
      var NULL = 0;
      var FORMFEED = 12;
      var VERTICALTAB = 11;
      var KEYFRAME = 107;
      var MEDIA = 109;
      var SUPPORTS = 115;
      var PLACEHOLDER = 112;
      var READONLY = 111;
      var IMPORT = 169;
      var CHARSET = 163;
      var DOCUMENT = 100;
      var PAGE = 112;
      var column = 1;
      var line = 1;
      var pattern = 0;
      var cascade = 1;
      var prefix = 1;
      var escape = 1;
      var compress = 0;
      var semicolon = 0;
      var preserve = 0;
      var array = [];
      var plugins = [];
      var plugged = 0;
      var should = null;
      var POSTS = -2;
      var PREPS = -1;
      var UNKWN = 0;
      var PROPS = 1;
      var BLCKS = 2;
      var ATRUL = 3;
      var unkwn = 0;
      var keyed = 1;
      var key = '';
      var nscopealt = '';
      var nscope = '';
      function compile(parent, current, body, id, depth) {
        var bracket = 0;
        var comment = 0;
        var parentheses = 0;
        var quote = 0;
        var first = 0;
        var second = 0;
        var code = 0;
        var tail = 0;
        var trail = 0;
        var peak = 0;
        var counter = 0;
        var context = 0;
        var atrule = 0;
        var pseudo = 0;
        var caret = 0;
        var format = 0;
        var insert = 0;
        var invert = 0;
        var length = 0;
        var eof = body.length;
        var eol = eof - 1;
        var char = '';
        var chars = '';
        var child = '';
        var out = '';
        var children = '';
        var flat = '';
        var selector;
        var result;
        while (caret < eof) {
          code = body.charCodeAt(caret);
          if (caret === eol) {
            if (comment + quote + parentheses + bracket !== 0) {
              if (comment !== 0) {
                code = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH;
              }
              quote = parentheses = bracket = 0;
              eof++;
              eol++;
            }
          }
          if (comment + quote + parentheses + bracket === 0) {
            if (caret === eol) {
              if (format > 0) {
                chars = chars.replace(formatptn, '');
              }
              if (chars.trim().length > 0) {
                switch (code) {
                  case SPACE:
                  case TAB:
                  case SEMICOLON:
                  case CARRIAGE:
                  case NEWLINE:
                    {
                      break;
                    }
                  default:
                    {
                      chars += body.charAt(caret);
                    }
                }
                code = SEMICOLON;
              }
            }
            if (insert === 1) {
              switch (code) {
                case OPENBRACES:
                case CLOSEBRACES:
                case SEMICOLON:
                case DOUBLEQUOTE:
                case SINGLEQUOTE:
                case OPENPARENTHESES:
                case CLOSEPARENTHESES:
                case COMMA:
                  {
                    insert = 0;
                  }
                case TAB:
                case CARRIAGE:
                case NEWLINE:
                case SPACE:
                  {
                    break;
                  }
                default:
                  {
                    insert = 0;
                    length = caret;
                    first = code;
                    caret--;
                    code = SEMICOLON;
                    while (length < eof) {
                      switch (body.charCodeAt(++length)) {
                        case NEWLINE:
                        case CARRIAGE:
                        case SEMICOLON:
                          {
                            caret++;
                            code = first;
                          }
                        case COLON:
                        case OPENBRACES:
                          {
                            length = eof;
                          }
                      }
                    }
                  }
              }
            }
            switch (code) {
              case OPENBRACES:
                {
                  chars = chars.trim();
                  first = chars.charCodeAt(0);
                  counter = 1;
                  length = ++caret;
                  while (caret < eof) {
                    code = body.charCodeAt(caret);
                    switch (code) {
                      case OPENBRACES:
                        {
                          counter++;
                          break;
                        }
                      case CLOSEBRACES:
                        {
                          counter--;
                          break;
                        }
                    }
                    if (counter === 0) {
                      break;
                    }
                    caret++;
                  }
                  child = body.substring(length, caret);
                  if (first === NULL) {
                    first = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0);
                  }
                  switch (first) {
                    case AT:
                      {
                        if (format > 0) {
                          chars = chars.replace(formatptn, '');
                        }
                        second = chars.charCodeAt(1);
                        switch (second) {
                          case DOCUMENT:
                          case MEDIA:
                          case SUPPORTS:
                          case DASH:
                            {
                              selector = current;
                              break;
                            }
                          default:
                            {
                              selector = array;
                            }
                        }
                        child = compile(current, selector, child, second, depth + 1);
                        length = child.length;
                        if (preserve > 0 && length === 0) {
                          length = chars.length;
                        }
                        if (plugged > 0) {
                          selector = select(array, chars, invert);
                          result = proxy(ATRUL, child, selector, current, line, column, length, second, depth);
                          chars = selector.join('');
                          if (result !== void 0) {
                            if ((length = (child = result.trim()).length) === 0) {
                              second = 0;
                              child = '';
                            }
                          }
                        }
                        if (length > 0) {
                          switch (second) {
                            case SUPPORTS:
                              {
                                chars = chars.replace(supportsptn, supports);
                              }
                            case DOCUMENT:
                            case MEDIA:
                            case DASH:
                              {
                                child = chars + '{' + child + '}';
                                break;
                              }
                            case KEYFRAME:
                              {
                                chars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''));
                                child = chars + '{' + child + '}';
                                if (prefix === 1 || prefix === 2 && vendor('@' + child, 3)) {
                                  child = '@' + webkit + child + '@' + child;
                                } else {
                                  child = '@' + child;
                                }
                                break;
                              }
                            default:
                              {
                                child = chars + child;
                                if (id === PAGE) {
                                  child = (out += child, '');
                                }
                              }
                          }
                        } else {
                          child = '';
                        }
                        break;
                      }
                    default:
                      {
                        child = compile(current, select(current, chars, invert), child, id, depth + 1);
                      }
                  }
                  children += child;
                  context = 0;
                  insert = 0;
                  pseudo = 0;
                  format = 0;
                  invert = 0;
                  atrule = 0;
                  chars = '';
                  child = '';
                  code = body.charCodeAt(++caret);
                  break;
                }
              case CLOSEBRACES:
              case SEMICOLON:
                {
                  chars = (format > 0 ? chars.replace(formatptn, '') : chars).trim();
                  if ((length = chars.length) > 1) {
                    if (pseudo === 0) {
                      first = chars.charCodeAt(0);
                      if (first === DASH || first > 96 && first < 123) {
                        length = (chars = chars.replace(' ', ':')).length;
                      }
                    }
                    if (plugged > 0) {
                      if ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth)) !== void 0) {
                        if ((length = (chars = result.trim()).length) === 0) {
                          chars = '\0\0';
                        }
                      }
                    }
                    first = chars.charCodeAt(0);
                    second = chars.charCodeAt(1);
                    switch (first + second) {
                      case NULL:
                        {
                          break;
                        }
                      case IMPORT:
                      case CHARSET:
                        {
                          flat += chars + body.charAt(caret);
                          break;
                        }
                      default:
                        {
                          if (chars.charCodeAt(length - 1) === COLON) break;
                          out += property(chars, first, second, chars.charCodeAt(2));
                        }
                    }
                  }
                  context = 0;
                  insert = 0;
                  pseudo = 0;
                  format = 0;
                  invert = 0;
                  chars = '';
                  code = body.charCodeAt(++caret);
                  break;
                }
            }
          }
          switch (code) {
            case CARRIAGE:
            case NEWLINE:
              {
                if (comment + quote + parentheses + bracket + semicolon === 0) {
                  switch (peak) {
                    case CLOSEPARENTHESES:
                    case SINGLEQUOTE:
                    case DOUBLEQUOTE:
                    case AT:
                    case TILDE:
                    case GREATERTHAN:
                    case STAR:
                    case PLUS:
                    case FOWARDSLASH:
                    case DASH:
                    case COLON:
                    case COMMA:
                    case SEMICOLON:
                    case OPENBRACES:
                    case CLOSEBRACES:
                      {
                        break;
                      }
                    default:
                      {
                        if (pseudo > 0) {
                          insert = 1;
                        }
                      }
                  }
                }
                if (comment === FOWARDSLASH) {
                  comment = 0;
                } else if (cascade + context === 0) {
                  format = 1;
                  chars += '\0';
                }
                if (plugged * unkwn > 0) {
                  proxy(UNKWN, chars, current, parent, line, column, out.length, id, depth);
                }
                column = 1;
                line++;
                break;
              }
            case SEMICOLON:
            case CLOSEBRACES:
              {
                if (comment + quote + parentheses + bracket === 0) {
                  column++;
                  break;
                }
              }
            default:
              {
                column++;
                char = body.charAt(caret);
                switch (code) {
                  case TAB:
                  case SPACE:
                    {
                      if (quote + bracket + comment === 0) {
                        switch (tail) {
                          case COMMA:
                          case COLON:
                          case TAB:
                          case SPACE:
                            {
                              char = '';
                              break;
                            }
                          default:
                            {
                              if (code !== SPACE) {
                                char = ' ';
                              }
                            }
                        }
                      }
                      break;
                    }
                  case NULL:
                    {
                      char = '\\0';
                      break;
                    }
                  case FORMFEED:
                    {
                      char = '\\f';
                      break;
                    }
                  case VERTICALTAB:
                    {
                      char = '\\v';
                      break;
                    }
                  case AND:
                    {
                      if (quote + comment + bracket === 0 && cascade > 0) {
                        invert = 1;
                        format = 1;
                        char = '\f' + char;
                      }
                      break;
                    }
                  case 108:
                    {
                      if (quote + comment + bracket + pattern === 0 && pseudo > 0) {
                        switch (caret - pseudo) {
                          case 2:
                            {
                              if (tail === PLACEHOLDER && body.charCodeAt(caret - 3) === COLON) {
                                pattern = tail;
                              }
                            }
                          case 8:
                            {
                              if (trail === READONLY) {
                                pattern = trail;
                              }
                            }
                        }
                      }
                      break;
                    }
                  case COLON:
                    {
                      if (quote + comment + bracket === 0) {
                        pseudo = caret;
                      }
                      break;
                    }
                  case COMMA:
                    {
                      if (comment + parentheses + quote + bracket === 0) {
                        format = 1;
                        char += '\r';
                      }
                      break;
                    }
                  case DOUBLEQUOTE:
                    {
                      if (comment === 0) {
                        quote = quote === code ? 0 : quote === 0 ? code : quote;
                      }
                      break;
                    }
                  case SINGLEQUOTE:
                    {
                      if (comment === 0) {
                        quote = quote === code ? 0 : quote === 0 ? code : quote;
                      }
                      break;
                    }
                  case OPENBRACKET:
                    {
                      if (quote + comment + parentheses === 0) {
                        bracket++;
                      }
                      break;
                    }
                  case CLOSEBRACKET:
                    {
                      if (quote + comment + parentheses === 0) {
                        bracket--;
                      }
                      break;
                    }
                  case CLOSEPARENTHESES:
                    {
                      if (quote + comment + bracket === 0) {
                        parentheses--;
                      }
                      break;
                    }
                  case OPENPARENTHESES:
                    {
                      if (quote + comment + bracket === 0) {
                        if (context === 0) {
                          switch (tail * 2 + trail * 3) {
                            case 533:
                              {
                                break;
                              }
                            default:
                              {
                                counter = 0;
                                context = 1;
                              }
                          }
                        }
                        parentheses++;
                      }
                      break;
                    }
                  case AT:
                    {
                      if (comment + parentheses + quote + bracket + pseudo + atrule === 0) {
                        atrule = 1;
                      }
                      break;
                    }
                  case STAR:
                  case FOWARDSLASH:
                    {
                      if (quote + bracket + parentheses > 0) {
                        break;
                      }
                      switch (comment) {
                        case 0:
                          {
                            switch (code * 2 + body.charCodeAt(caret + 1) * 3) {
                              case 235:
                                {
                                  comment = FOWARDSLASH;
                                  break;
                                }
                              case 220:
                                {
                                  length = caret;
                                  comment = STAR;
                                  break;
                                }
                            }
                            break;
                          }
                        case STAR:
                          {
                            if (code === FOWARDSLASH && tail === STAR) {
                              if (body.charCodeAt(length + 2) === 33) {
                                out += body.substring(length, caret + 1);
                              }
                              char = '';
                              comment = 0;
                            }
                          }
                      }
                    }
                }
                if (comment === 0) {
                  if (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {
                    switch (code) {
                      case COMMA:
                      case TILDE:
                      case GREATERTHAN:
                      case PLUS:
                      case CLOSEPARENTHESES:
                      case OPENPARENTHESES:
                        {
                          if (context === 0) {
                            switch (tail) {
                              case TAB:
                              case SPACE:
                              case NEWLINE:
                              case CARRIAGE:
                                {
                                  char = char + '\0';
                                  break;
                                }
                              default:
                                {
                                  char = '\0' + char + (code === COMMA ? '' : '\0');
                                }
                            }
                            format = 1;
                          } else {
                            switch (code) {
                              case OPENPARENTHESES:
                                {
                                  context = ++counter;
                                  break;
                                }
                              case CLOSEPARENTHESES:
                                {
                                  if ((context = --counter) === 0) {
                                    format = 1;
                                    char += '\0';
                                  }
                                  break;
                                }
                            }
                          }
                          break;
                        }
                      case TAB:
                      case SPACE:
                        {
                          switch (tail) {
                            case NULL:
                            case OPENBRACES:
                            case CLOSEBRACES:
                            case SEMICOLON:
                            case COMMA:
                            case FORMFEED:
                            case TAB:
                            case SPACE:
                            case NEWLINE:
                            case CARRIAGE:
                              {
                                break;
                              }
                            default:
                              {
                                if (context === 0) {
                                  format = 1;
                                  char += '\0';
                                }
                              }
                          }
                        }
                    }
                  }
                  chars += char;
                  if (code !== SPACE && code !== TAB) {
                    peak = code;
                  }
                }
              }
          }
          trail = tail;
          tail = code;
          caret++;
        }
        length = out.length;
        if (preserve > 0) {
          if (length === 0 && children.length === 0 && current[0].length === 0 === false) {
            if (id !== MEDIA || current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0]) {
              length = current.join(',').length + 2;
            }
          }
        }
        if (length > 0) {
          selector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current;
          if (plugged > 0) {
            result = proxy(BLCKS, out, selector, parent, line, column, length, id, depth);
            if (result !== void 0 && (out = result).length === 0) {
              return flat + out + children;
            }
          }
          out = selector.join(',') + '{' + out + '}';
          if (prefix * pattern !== 0) {
            if (prefix === 2 && !vendor(out, 2)) pattern = 0;
            switch (pattern) {
              case READONLY:
                {
                  out = out.replace(readonlyptn, ':' + moz + '$1') + out;
                  break;
                }
              case PLACEHOLDER:
                {
                  out = out.replace(plcholdrptn, '::' + webkit + 'input-$1') + out.replace(plcholdrptn, '::' + moz + '$1') + out.replace(plcholdrptn, ':' + ms + 'input-$1') + out;
                  break;
                }
            }
            pattern = 0;
          }
        }
        return flat + out + children;
      }
      function select(parent, current, invert) {
        var selectors = current.trim().split(selectorptn);
        var out = selectors;
        var length = selectors.length;
        var l = parent.length;
        switch (l) {
          case 0:
          case 1:
            {
              for (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {
                out[i] = scope(selector, out[i], invert, l).trim();
              }
              break;
            }
          default:
            {
              for (var i = 0, j = 0, out = []; i < length; ++i) {
                for (var k = 0; k < l; ++k) {
                  out[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim();
                }
              }
            }
        }
        return out;
      }
      function scope(parent, current, invert, level) {
        var selector = current;
        var code = selector.charCodeAt(0);
        if (code < 33) {
          code = (selector = selector.trim()).charCodeAt(0);
        }
        switch (code) {
          case AND:
            {
              switch (cascade + level) {
                case 0:
                case 1:
                  {
                    if (parent.trim().length === 0) {
                      break;
                    }
                  }
                default:
                  {
                    return selector.replace(andptn, '$1' + parent.trim());
                  }
              }
              break;
            }
          case COLON:
            {
              switch (selector.charCodeAt(1)) {
                case 103:
                  {
                    if (escape > 0 && cascade > 0) {
                      return selector.replace(escapeptn, '$1').replace(andptn, '$1' + nscope);
                    }
                    break;
                  }
                default:
                  {
                    return parent.trim() + selector;
                  }
              }
            }
          default:
            {
              if (invert * cascade > 0 && selector.indexOf('\f') > 0) {
                return selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1') + parent.trim());
              }
            }
        }
        return parent + selector;
      }
      function property(input, first, second, third) {
        var index = 0;
        var out = input + ';';
        var hash = first * 2 + second * 3 + third * 4;
        var cache;
        if (hash === 944) {
          return animation(out);
        } else if (prefix === 0 || prefix === 2 && !vendor(out, 1)) {
          return out;
        }
        switch (hash) {
          case 1015:
            {
              return out.charCodeAt(9) === DASH ? webkit + out + out : out;
            }
          case 951:
            {
              return out.charCodeAt(3) === 116 ? webkit + out + out : out;
            }
          case 963:
            {
              return out.charCodeAt(5) === 110 ? webkit + out + out : out;
            }
          case 1009:
            {
              if (out.charCodeAt(4) !== 100) {
                break;
              }
            }
          case 969:
          case 942:
            {
              return webkit + out + out;
            }
          case 978:
            {
              return webkit + out + moz + out + out;
            }
          case 1019:
          case 983:
            {
              return webkit + out + moz + out + ms + out + out;
            }
          case 883:
            {
              return out.charCodeAt(8) === DASH ? webkit + out + out : out;
            }
          case 932:
            {
              if (out.charCodeAt(4) === DASH) {
                switch (out.charCodeAt(5)) {
                  case 103:
                    {
                      return webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out;
                    }
                  case 115:
                    {
                      return webkit + out + ms + out.replace('shrink', 'negative') + out;
                    }
                  case 98:
                    {
                      return webkit + out + ms + out.replace('basis', 'preferred-size') + out;
                    }
                }
              }
              return webkit + out + ms + out + out;
            }
          case 964:
            {
              return webkit + out + ms + 'flex' + '-' + out + out;
            }
          case 1023:
            {
              if (out.charCodeAt(8) !== 99) {
                break;
              }
              cache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
              return webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out;
            }
          case 1005:
            {
              return cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out;
            }
          case 1000:
            {
              cache = out.substring(13).trim();
              index = cache.indexOf('-') + 1;
              switch (cache.charCodeAt(0) + cache.charCodeAt(index)) {
                case 226:
                  {
                    cache = out.replace(writingptn, 'tb');
                    break;
                  }
                case 232:
                  {
                    cache = out.replace(writingptn, 'tb-rl');
                    break;
                  }
                case 220:
                  {
                    cache = out.replace(writingptn, 'lr');
                    break;
                  }
                default:
                  {
                    return out;
                  }
              }
              return webkit + out + ms + cache + out;
            }
          case 1017:
            {
              if (out.indexOf('sticky', 9) === -1) {
                return out;
              }
            }
          case 975:
            {
              index = (out = input).length - 10;
              cache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim();
              switch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7) | 0)) {
                case 203:
                  {
                    if (cache.charCodeAt(8) < 111) {
                      break;
                    }
                  }
                case 115:
                  {
                    out = out.replace(cache, webkit + cache) + ';' + out;
                    break;
                  }
                case 207:
                case 102:
                  {
                    out = out.replace(cache, webkit + (hash > 102 ? 'inline-' : '') + 'box') + ';' + out.replace(cache, webkit + cache) + ';' + out.replace(cache, ms + cache + 'box') + ';' + out;
                  }
              }
              return out + ';';
            }
          case 938:
            {
              if (out.charCodeAt(5) === DASH) {
                switch (out.charCodeAt(6)) {
                  case 105:
                    {
                      cache = out.replace('-items', '');
                      return webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out;
                    }
                  case 115:
                    {
                      return webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out;
                    }
                  default:
                    {
                      return webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '') + out;
                    }
                }
              }
              break;
            }
          case 953:
            {
              if ((index = out.indexOf('-content', 9)) > 0) {
                if (out.charCodeAt(index - 3) === 109 && out.charCodeAt(index - 4) !== 45) {
                  cache = out.substring(index - 3);
                  return 'width:' + webkit + cache + 'width:' + moz + cache + 'width:' + cache;
                }
              }
              break;
            }
          case 962:
            {
              out = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out;
              if (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {
                return out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out;
              }
              break;
            }
        }
        return out;
      }
      var i = 0;
      function vendor(content, context) {
        var index = content.indexOf(context === 1 ? ':' : '{');
        var key = content.substring(0, context !== 3 ? index : 10);
        var value = content.substring(index + 1, content.length - 1);
        return should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context);
      }
      function supports(match, group) {
        var out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2));
        return out !== group + ';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '(' + group + ')';
      }
      function animation(input) {
        var length = input.length;
        var index = input.indexOf(':', 9) + 1;
        var declare = input.substring(0, index).trim();
        var out = input.substring(index, length - 1).trim();
        switch (input.charCodeAt(9) * keyed) {
          case 0:
            {
              break;
            }
          case DASH:
            {
              if (input.charCodeAt(10) !== 110) {
                break;
              }
            }
          default:
            {
              var list = out.split((out = '', animationptn));
              for (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {
                var value = list[i];
                var items = value.split(propertiesptn);
                while (value = items[index]) {
                  var peak = value.charCodeAt(0);
                  if (keyed === 1 && (peak > AT && peak < 90 || peak > 96 && peak < 123 || peak === UNDERSCORE || peak === DASH && value.charCodeAt(1) !== DASH)) {
                    switch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {
                      case 1:
                        {
                          switch (value) {
                            case 'infinite':
                            case 'alternate':
                            case 'backwards':
                            case 'running':
                            case 'normal':
                            case 'forwards':
                            case 'both':
                            case 'none':
                            case 'linear':
                            case 'ease':
                            case 'ease-in':
                            case 'ease-out':
                            case 'ease-in-out':
                            case 'paused':
                            case 'reverse':
                            case 'alternate-reverse':
                            case 'inherit':
                            case 'initial':
                            case 'unset':
                            case 'step-start':
                            case 'step-end':
                              {
                                break;
                              }
                            default:
                              {
                                value += key;
                              }
                          }
                        }
                    }
                  }
                  items[index++] = value;
                }
                out += (i === 0 ? '' : ',') + items.join(' ');
              }
            }
        }
        out = declare + out + ';';
        if (prefix === 1 || prefix === 2 && vendor(out, 1)) return webkit + out + out;
        return out;
      }
      function isolate(current) {
        for (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {
          var elements = current[i].split(elementptn);
          var out = '';
          for (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {
            if ((size = (element = elements[j]).length) === 0 && l > 1) {
              continue;
            }
            tail = out.charCodeAt(out.length - 1);
            code = element.charCodeAt(0);
            padding = '';
            if (j !== 0) {
              switch (tail) {
                case STAR:
                case TILDE:
                case GREATERTHAN:
                case PLUS:
                case SPACE:
                case OPENPARENTHESES:
                  {
                    break;
                  }
                default:
                  {
                    padding = ' ';
                  }
              }
            }
            switch (code) {
              case AND:
                {
                  element = padding + nscopealt;
                }
              case TILDE:
              case GREATERTHAN:
              case PLUS:
              case SPACE:
              case CLOSEPARENTHESES:
              case OPENPARENTHESES:
                {
                  break;
                }
              case OPENBRACKET:
                {
                  element = padding + element + nscopealt;
                  break;
                }
              case COLON:
                {
                  switch (element.charCodeAt(1) * 2 + element.charCodeAt(2) * 3) {
                    case 530:
                      {
                        if (escape > 0) {
                          element = padding + element.substring(8, size - 1);
                          break;
                        }
                      }
                    default:
                      {
                        if (j < 1 || elements[j - 1].length < 1) {
                          element = padding + nscopealt + element;
                        }
                      }
                  }
                  break;
                }
              case COMMA:
                {
                  padding = '';
                }
              default:
                {
                  if (size > 1 && element.indexOf(':') > 0) {
                    element = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2');
                  } else {
                    element = padding + element + nscopealt;
                  }
                }
            }
            out += element;
          }
          selector[i] = out.replace(formatptn, '').trim();
        }
        return selector;
      }
      function proxy(context, content, selectors, parents, line, column, length, id, depth) {
        for (var i = 0, out = content, next; i < plugged; ++i) {
          switch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth)) {
            case void 0:
            case false:
            case true:
            case null:
              {
                break;
              }
            default:
              {
                out = next;
              }
          }
        }
        switch (out) {
          case void 0:
          case false:
          case true:
          case null:
          case content:
            {
              break;
            }
          default:
            {
              return out;
            }
        }
      }
      function minify(output) {
        return output.replace(formatptn, '').replace(beforeptn, '').replace(afterptn, '$1').replace(tailptn, '$1').replace(whiteptn, ' ');
      }
      function use(plugin) {
        switch (plugin) {
          case void 0:
          case null:
            {
              plugged = plugins.length = 0;
              break;
            }
          default:
            {
              switch (plugin.constructor) {
                case Array:
                  {
                    for (var i = 0, length = plugin.length; i < length; ++i) {
                      use(plugin[i]);
                    }
                    break;
                  }
                case Function:
                  {
                    plugins[plugged++] = plugin;
                    break;
                  }
                case Boolean:
                  {
                    unkwn = !!plugin | 0;
                  }
              }
            }
        }
        return use;
      }
      function set(options) {
        for (var name in options) {
          var value = options[name];
          switch (name) {
            case 'keyframe':
              keyed = value | 0;
              break;
            case 'global':
              escape = value | 0;
              break;
            case 'cascade':
              cascade = value | 0;
              break;
            case 'compress':
              compress = value | 0;
              break;
            case 'semicolon':
              semicolon = value | 0;
              break;
            case 'preserve':
              preserve = value | 0;
              break;
            case 'prefix':
              should = null;
              if (!value) {
                prefix = 0;
              } else if (typeof value !== 'function') {
                prefix = 1;
              } else {
                prefix = 2;
                should = value;
              }
          }
        }
        return set;
      }
      function stylis(selector, input) {
        if (this !== void 0 && this.constructor === stylis) {
          return factory(selector);
        }
        var ns = selector;
        var code = ns.charCodeAt(0);
        if (code < 33) {
          code = (ns = ns.trim()).charCodeAt(0);
        }
        if (keyed > 0) {
          key = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-');
        }
        code = 1;
        if (cascade === 1) {
          nscope = ns;
        } else {
          nscopealt = ns;
        }
        var selectors = [nscope];
        var result;
        if (plugged > 0) {
          result = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0);
          if (result !== void 0 && typeof result === 'string') {
            input = result;
          }
        }
        var output = compile(array, selectors, input, 0, 0);
        if (plugged > 0) {
          result = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0);
          if (result !== void 0 && typeof (output = result) !== 'string') {
            code = 0;
          }
        }
        key = '';
        nscope = '';
        nscopealt = '';
        pattern = 0;
        line = 1;
        column = 1;
        return compress * code === 0 ? output : minify(output);
      }
      stylis['use'] = use;
      stylis['set'] = set;
      if (options !== void 0) {
        set(options);
      }
      return stylis;
    });
  })($__require('16'));
});
$__System.registerDynamic("143", ["142"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("142");
});
$__System.registerDynamic('144', ['143', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _stylis = $__require('143');
  var _stylis2 = _interopRequireDefault(_stylis);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  var stylis = new _stylis2.default({
    global: false,
    cascade: true,
    keyframe: false,
    prefix: true,
    compress: false,
    semicolon: true
  });
  var stringifyRules = function stringifyRules(rules, selector, prefix) {
    var flatCSS = rules.join('').replace(/^\s*\/\/.*$/gm, '');
    var cssStr = selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS;
    return stylis(prefix || !selector ? '' : selector, cssStr);
  };
  exports.default = stringifyRules;
  module.exports = exports['default'];
});
$__System.registerDynamic('146', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');
  var charsLength = chars.length;

  /* Some high number, usually 9-digit base-10. Map it to base-😎 */
  var generateAlphabeticName = function generateAlphabeticName(code) {
    var name = '';
    var x = void 0;

    for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
      name = chars[x % charsLength] + name;
    }

    return chars[x % charsLength] + name;
  };

  exports.default = generateAlphabeticName;
  module.exports = exports['default'];
});
$__System.registerDynamic('147', ['145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  exports.default = function (strings, interpolations) {
    return interpolations.reduce(function (array, interp, i) {
      return array.concat(interp, strings[i + 1]);
    }, [strings[0]]);
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('148', ['14a', '149', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.objToCss = undefined;
  var _hyphenateStyleName = $__require('14a');
  var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
  var _isPlainObject = $__require('149');
  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  var objToCss = exports.objToCss = function objToCss(obj, prevKey) {
    var css = Object.keys(obj).filter(function (key) {
      var chunk = obj[key];
      return chunk !== undefined && chunk !== null && chunk !== false && chunk !== '';
    }).map(function (key) {
      if ((0, _isPlainObject2.default)(obj[key])) return objToCss(obj[key], key);
      return (0, _hyphenateStyleName2.default)(key) + ': ' + obj[key] + ';';
    }).join(' ');
    return prevKey ? prevKey + ' {\n  ' + css + '\n}' : css;
  };
  var flatten = function flatten(chunks, executionContext) {
    return chunks.reduce(function (ruleSet, chunk) {
      if (chunk === undefined || chunk === null || chunk === false || chunk === '') return ruleSet;
      if (Array.isArray(chunk)) return [].concat(ruleSet, flatten(chunk, executionContext));
      if (chunk.hasOwnProperty('styledComponentId')) return [].concat(ruleSet, ['.' + chunk.styledComponentId]);
      if (typeof chunk === 'function') {
        return executionContext ? ruleSet.concat.apply(ruleSet, flatten([chunk(executionContext)], executionContext)) : ruleSet.concat(chunk);
      }
      return ruleSet.concat((0, _isPlainObject2.default)(chunk) ? objToCss(chunk) : chunk.toString());
    }, []);
  };
  exports.default = flatten;
});
$__System.registerDynamic('14b', ['147', '148', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _interleave = $__require('147');
  var _interleave2 = _interopRequireDefault(_interleave);
  var _flatten = $__require('148');
  var _flatten2 = _interopRequireDefault(_flatten);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_RuleSet = $__require('145').babelPluginFlowReactPropTypes_proptype_RuleSet || $__require('50').any;
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  exports.default = function (strings) {
    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      interpolations[_key - 1] = arguments[_key];
    }
    return (0, _flatten2.default)((0, _interleave2.default)(strings, interpolations));
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('14c', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var LIMIT = 200;

  exports.default = function (displayName) {
    var generatedClasses = {};
    var warningSeen = false;

    return function (className) {
      if (!warningSeen) {
        generatedClasses[className] = true;
        if (Object.keys(generatedClasses).length >= LIMIT) {
          // Unable to find latestRule in test environment.
          /* eslint-disable no-console, prefer-template */
          console.warn('Over ' + LIMIT + ' classes were generated for component ' + displayName + '. \n' + 'Consider using the attrs method, together with a style object for frequently changed styles.\n' + 'Example:\n' + '  const Component = styled.div.attrs({\n' + '    style: ({ background }) => ({\n' + '      background,\n' + '    }),\n' + '  })`width: 100%;`\n\n' + '  <Component />');
          warningSeen = true;
          generatedClasses = {};
        }
      }
    };
  };

  module.exports = exports['default'];
});
$__System.registerDynamic('14d', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  /* Trying to avoid the unknown-prop errors on styled components
   by filtering by React's attribute whitelist.
   */

  /* Logic copied from ReactDOMUnknownPropertyHook */
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,
    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true,
    className: true,

    /* List copied from https://facebook.github.io/react/docs/events.html */
    onCopy: true,
    onCut: true,
    onPaste: true,
    onCompositionEnd: true,
    onCompositionStart: true,
    onCompositionUpdate: true,
    onKeyDown: true,
    onKeyPress: true,
    onKeyUp: true,
    onFocus: true,
    onBlur: true,
    onChange: true,
    onInput: true,
    onSubmit: true,
    onReset: true,
    onClick: true,
    onContextMenu: true,
    onDoubleClick: true,
    onDrag: true,
    onDragEnd: true,
    onDragEnter: true,
    onDragExit: true,
    onDragLeave: true,
    onDragOver: true,
    onDragStart: true,
    onDrop: true,
    onMouseDown: true,
    onMouseEnter: true,
    onMouseLeave: true,
    onMouseMove: true,
    onMouseOut: true,
    onMouseOver: true,
    onMouseUp: true,
    onSelect: true,
    onTouchCancel: true,
    onTouchEnd: true,
    onTouchMove: true,
    onTouchStart: true,
    onScroll: true,
    onWheel: true,
    onAbort: true,
    onCanPlay: true,
    onCanPlayThrough: true,
    onDurationChange: true,
    onEmptied: true,
    onEncrypted: true,
    onEnded: true,
    onError: true,
    onLoadedData: true,
    onLoadedMetadata: true,
    onLoadStart: true,
    onPause: true,
    onPlay: true,
    onPlaying: true,
    onProgress: true,
    onRateChange: true,
    onSeeked: true,
    onSeeking: true,
    onStalled: true,
    onSuspend: true,
    onTimeUpdate: true,
    onVolumeChange: true,
    onWaiting: true,
    onLoad: true,
    onAnimationStart: true,
    onAnimationEnd: true,
    onAnimationIteration: true,
    onTransitionEnd: true,

    onCopyCapture: true,
    onCutCapture: true,
    onPasteCapture: true,
    onCompositionEndCapture: true,
    onCompositionStartCapture: true,
    onCompositionUpdateCapture: true,
    onKeyDownCapture: true,
    onKeyPressCapture: true,
    onKeyUpCapture: true,
    onFocusCapture: true,
    onBlurCapture: true,
    onChangeCapture: true,
    onInputCapture: true,
    onSubmitCapture: true,
    onResetCapture: true,
    onClickCapture: true,
    onContextMenuCapture: true,
    onDoubleClickCapture: true,
    onDragCapture: true,
    onDragEndCapture: true,
    onDragEnterCapture: true,
    onDragExitCapture: true,
    onDragLeaveCapture: true,
    onDragOverCapture: true,
    onDragStartCapture: true,
    onDropCapture: true,
    onMouseDownCapture: true,
    onMouseEnterCapture: true,
    onMouseLeaveCapture: true,
    onMouseMoveCapture: true,
    onMouseOutCapture: true,
    onMouseOverCapture: true,
    onMouseUpCapture: true,
    onSelectCapture: true,
    onTouchCancelCapture: true,
    onTouchEndCapture: true,
    onTouchMoveCapture: true,
    onTouchStartCapture: true,
    onScrollCapture: true,
    onWheelCapture: true,
    onAbortCapture: true,
    onCanPlayCapture: true,
    onCanPlayThroughCapture: true,
    onDurationChangeCapture: true,
    onEmptiedCapture: true,
    onEncryptedCapture: true,
    onEndedCapture: true,
    onErrorCapture: true,
    onLoadedDataCapture: true,
    onLoadedMetadataCapture: true,
    onLoadStartCapture: true,
    onPauseCapture: true,
    onPlayCapture: true,
    onPlayingCapture: true,
    onProgressCapture: true,
    onRateChangeCapture: true,
    onSeekedCapture: true,
    onSeekingCapture: true,
    onStalledCapture: true,
    onSuspendCapture: true,
    onTimeUpdateCapture: true,
    onVolumeChangeCapture: true,
    onWaitingCapture: true,
    onLoadCapture: true,
    onAnimationStartCapture: true,
    onAnimationEndCapture: true,
    onAnimationIterationCapture: true,
    onTransitionEndCapture: true
  };

  /* From HTMLDOMPropertyConfig */
  var htmlProps = {
    /**
     * Standard Properties
     */
    accept: true,
    acceptCharset: true,
    accessKey: true,
    action: true,
    allowFullScreen: true,
    allowTransparency: true,
    alt: true,
    // specifies target context for links with `preload` type
    as: true,
    async: true,
    autoComplete: true,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: true,
    autoPlay: true,
    capture: true,
    cellPadding: true,
    cellSpacing: true,
    charSet: true,
    challenge: true,
    checked: true,
    cite: true,
    classID: true,
    className: true,
    cols: true,
    colSpan: true,
    content: true,
    contentEditable: true,
    contextMenu: true,
    controls: true,
    coords: true,
    crossOrigin: true,
    data: true, // For `<object />` acts as `src`.
    dateTime: true,
    default: true,
    defer: true,
    dir: true,
    disabled: true,
    download: true,
    draggable: true,
    encType: true,
    form: true,
    formAction: true,
    formEncType: true,
    formMethod: true,
    formNoValidate: true,
    formTarget: true,
    frameBorder: true,
    headers: true,
    height: true,
    hidden: true,
    high: true,
    href: true,
    hrefLang: true,
    htmlFor: true,
    httpEquiv: true,
    icon: true,
    id: true,
    inputMode: true,
    integrity: true,
    is: true,
    keyParams: true,
    keyType: true,
    kind: true,
    label: true,
    lang: true,
    list: true,
    loop: true,
    low: true,
    manifest: true,
    marginHeight: true,
    marginWidth: true,
    max: true,
    maxLength: true,
    media: true,
    mediaGroup: true,
    method: true,
    min: true,
    minLength: true,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: true,
    muted: true,
    name: true,
    nonce: true,
    noValidate: true,
    open: true,
    optimum: true,
    pattern: true,
    placeholder: true,
    playsInline: true,
    poster: true,
    preload: true,
    profile: true,
    radioGroup: true,
    readOnly: true,
    referrerPolicy: true,
    rel: true,
    required: true,
    reversed: true,
    role: true,
    rows: true,
    rowSpan: true,
    sandbox: true,
    scope: true,
    scoped: true,
    scrolling: true,
    seamless: true,
    selected: true,
    shape: true,
    size: true,
    sizes: true,
    span: true,
    spellCheck: true,
    src: true,
    srcDoc: true,
    srcLang: true,
    srcSet: true,
    start: true,
    step: true,
    style: true,
    summary: true,
    tabIndex: true,
    target: true,
    title: true,
    // Setting .type throws on non-<input> tags
    type: true,
    useMap: true,
    value: true,
    width: true,
    wmode: true,
    wrap: true,

    /**
     * RDFa Properties
     */
    about: true,
    datatype: true,
    inlist: true,
    prefix: true,
    // property is also supported for OpenGraph in meta tags.
    property: true,
    resource: true,
    typeof: true,
    vocab: true,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: true,
    autoCorrect: true,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: true,
    // color is for Safari mask-icon link
    color: true,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: true,
    itemScope: true,
    itemType: true,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: true,
    itemRef: true,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: true,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: true,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  };

  var svgProps = {
    accentHeight: true,
    accumulate: true,
    additive: true,
    alignmentBaseline: true,
    allowReorder: true,
    alphabetic: true,
    amplitude: true,
    arabicForm: true,
    ascent: true,
    attributeName: true,
    attributeType: true,
    autoReverse: true,
    azimuth: true,
    baseFrequency: true,
    baseProfile: true,
    baselineShift: true,
    bbox: true,
    begin: true,
    bias: true,
    by: true,
    calcMode: true,
    capHeight: true,
    clip: true,
    clipPath: true,
    clipRule: true,
    clipPathUnits: true,
    colorInterpolation: true,
    colorInterpolationFilters: true,
    colorProfile: true,
    colorRendering: true,
    contentScriptType: true,
    contentStyleType: true,
    cursor: true,
    cx: true,
    cy: true,
    d: true,
    decelerate: true,
    descent: true,
    diffuseConstant: true,
    direction: true,
    display: true,
    divisor: true,
    dominantBaseline: true,
    dur: true,
    dx: true,
    dy: true,
    edgeMode: true,
    elevation: true,
    enableBackground: true,
    end: true,
    exponent: true,
    externalResourcesRequired: true,
    fill: true,
    fillOpacity: true,
    fillRule: true,
    filter: true,
    filterRes: true,
    filterUnits: true,
    floodColor: true,
    floodOpacity: true,
    focusable: true,
    fontFamily: true,
    fontSize: true,
    fontSizeAdjust: true,
    fontStretch: true,
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    format: true,
    from: true,
    fx: true,
    fy: true,
    g1: true,
    g2: true,
    glyphName: true,
    glyphOrientationHorizontal: true,
    glyphOrientationVertical: true,
    glyphRef: true,
    gradientTransform: true,
    gradientUnits: true,
    hanging: true,
    horizAdvX: true,
    horizOriginX: true,
    ideographic: true,
    imageRendering: true,
    in: true,
    in2: true,
    intercept: true,
    k: true,
    k1: true,
    k2: true,
    k3: true,
    k4: true,
    kernelMatrix: true,
    kernelUnitLength: true,
    kerning: true,
    keyPoints: true,
    keySplines: true,
    keyTimes: true,
    lengthAdjust: true,
    letterSpacing: true,
    lightingColor: true,
    limitingConeAngle: true,
    local: true,
    markerEnd: true,
    markerMid: true,
    markerStart: true,
    markerHeight: true,
    markerUnits: true,
    markerWidth: true,
    mask: true,
    maskContentUnits: true,
    maskUnits: true,
    mathematical: true,
    mode: true,
    numOctaves: true,
    offset: true,
    opacity: true,
    operator: true,
    order: true,
    orient: true,
    orientation: true,
    origin: true,
    overflow: true,
    overlinePosition: true,
    overlineThickness: true,
    paintOrder: true,
    panose1: true,
    pathLength: true,
    patternContentUnits: true,
    patternTransform: true,
    patternUnits: true,
    pointerEvents: true,
    points: true,
    pointsAtX: true,
    pointsAtY: true,
    pointsAtZ: true,
    preserveAlpha: true,
    preserveAspectRatio: true,
    primitiveUnits: true,
    r: true,
    radius: true,
    refX: true,
    refY: true,
    renderingIntent: true,
    repeatCount: true,
    repeatDur: true,
    requiredExtensions: true,
    requiredFeatures: true,
    restart: true,
    result: true,
    rotate: true,
    rx: true,
    ry: true,
    scale: true,
    seed: true,
    shapeRendering: true,
    slope: true,
    spacing: true,
    specularConstant: true,
    specularExponent: true,
    speed: true,
    spreadMethod: true,
    startOffset: true,
    stdDeviation: true,
    stemh: true,
    stemv: true,
    stitchTiles: true,
    stopColor: true,
    stopOpacity: true,
    strikethroughPosition: true,
    strikethroughThickness: true,
    string: true,
    stroke: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeLinecap: true,
    strokeLinejoin: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true,
    surfaceScale: true,
    systemLanguage: true,
    tableValues: true,
    targetX: true,
    targetY: true,
    textAnchor: true,
    textDecoration: true,
    textRendering: true,
    textLength: true,
    to: true,
    transform: true,
    u1: true,
    u2: true,
    underlinePosition: true,
    underlineThickness: true,
    unicode: true,
    unicodeBidi: true,
    unicodeRange: true,
    unitsPerEm: true,
    vAlphabetic: true,
    vHanging: true,
    vIdeographic: true,
    vMathematical: true,
    values: true,
    vectorEffect: true,
    version: true,
    vertAdvY: true,
    vertOriginX: true,
    vertOriginY: true,
    viewBox: true,
    viewTarget: true,
    visibility: true,
    widths: true,
    wordSpacing: true,
    writingMode: true,
    x: true,
    xHeight: true,
    x1: true,
    x2: true,
    xChannelSelector: true,
    xlinkActuate: true,
    xlinkArcrole: true,
    xlinkHref: true,
    xlinkRole: true,
    xlinkShow: true,
    xlinkTitle: true,
    xlinkType: true,
    xmlBase: true,
    xmlns: true,
    xmlnsXlink: true,
    xmlLang: true,
    xmlSpace: true,
    y: true,
    y1: true,
    y2: true,
    yChannelSelector: true,
    z: true,
    zoomAndPan: true
  };

  /* From DOMProperty */
  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));

  var hasOwnProperty = {}.hasOwnProperty;

  exports.default = function (name) {
    return hasOwnProperty.call(htmlProps, name) || hasOwnProperty.call(svgProps, name) || isCustomAttribute(name.toLowerCase()) || hasOwnProperty.call(reactProps, name);
  };

  module.exports = exports['default'];
});
$__System.registerDynamic('14e', ['145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = isTag;
  var babelPluginFlowReactPropTypes_proptype_Target = $__require('145').babelPluginFlowReactPropTypes_proptype_Target || $__require('50').any;
  function isTag(target) {
    return typeof target === 'string';
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('14f', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = getComponentName;

  /* eslint-disable no-undef */
  function getComponentName(target) {
    return target.displayName || target.name || 'Component';
  }
  module.exports = exports['default'];
});
$__System.registerDynamic('150', ['156', '50', '14c', '14d', '14e', '151', '14f', '152', '153', '154', '155', '145', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _createClass = function () {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function (Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = $__require('156');
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _createWarnTooManyClasses = $__require('14c');
    var _createWarnTooManyClasses2 = _interopRequireDefault(_createWarnTooManyClasses);
    var _validAttr = $__require('14d');
    var _validAttr2 = _interopRequireDefault(_validAttr);
    var _isTag = $__require('14e');
    var _isTag2 = _interopRequireDefault(_isTag);
    var _isStyledComponent = $__require('151');
    var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);
    var _getComponentName = $__require('14f');
    var _getComponentName2 = _interopRequireDefault(_getComponentName);
    var _determineTheme = $__require('152');
    var _determineTheme2 = _interopRequireDefault(_determineTheme);
    var _ThemeProvider = $__require('153');
    var _StyleSheet = $__require('154');
    var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
    var _ServerStyleSheet = $__require('155');
    var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var babelPluginFlowReactPropTypes_proptype_Theme = $__require('153').babelPluginFlowReactPropTypes_proptype_Theme || $__require('50').any;
    var babelPluginFlowReactPropTypes_proptype_Target = $__require('145').babelPluginFlowReactPropTypes_proptype_Target || $__require('50').any;
    var babelPluginFlowReactPropTypes_proptype_RuleSet = $__require('145').babelPluginFlowReactPropTypes_proptype_RuleSet || $__require('50').any;
    var escapeRegex = /[[\].#*$><+~=|^:(),"'`]/g;
    var multiDashRegex = /--+/g;
    var STATIC_EXECUTION_CONTEXT = {};
    exports.default = function (ComponentStyle, constructWithOptions) {
      var identifiers = {};
      var generateId = function generateId(_displayName, parentComponentId) {
        var displayName = typeof _displayName !== 'string' ? 'sc' : _displayName.replace(escapeRegex, '-').replace(multiDashRegex, '-');
        var nr = (identifiers[displayName] || 0) + 1;
        identifiers[displayName] = nr;
        var hash = ComponentStyle.generateName(displayName + nr);
        var componentId = displayName + '-' + hash;
        return parentComponentId !== undefined ? parentComponentId + '-' + componentId : componentId;
      };
      var BaseStyledComponent = function (_Component) {
        _inherits(BaseStyledComponent, _Component);
        function BaseStyledComponent() {
          var _temp, _this, _ret;
          _classCallCheck(this, BaseStyledComponent);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.attrs = {}, _this.state = {
            theme: null,
            generatedClassName: ''
          }, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
        }
        BaseStyledComponent.prototype.unsubscribeFromContext = function unsubscribeFromContext() {
          if (this.unsubscribeId !== -1) {
            this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
          }
        };
        BaseStyledComponent.prototype.buildExecutionContext = function buildExecutionContext(theme, props) {
          var attrs = this.constructor.attrs;
          var context = _extends({}, props, { theme: theme });
          if (attrs === undefined) {
            return context;
          }
          this.attrs = Object.keys(attrs).reduce(function (acc, key) {
            var attr = attrs[key];
            acc[key] = typeof attr === 'function' ? attr(context) : attr;
            return acc;
          }, {});
          return _extends({}, context, this.attrs);
        };
        BaseStyledComponent.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
          var _constructor = this.constructor,
              attrs = _constructor.attrs,
              componentStyle = _constructor.componentStyle,
              warnTooManyClasses = _constructor.warnTooManyClasses;
          var styleSheet = this.context[_StyleSheet.CONTEXT_KEY] || _StyleSheet2.default.instance;
          if (componentStyle.isStatic && attrs === undefined) {
            return componentStyle.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, styleSheet);
          } else {
            var executionContext = this.buildExecutionContext(theme, props);
            var className = componentStyle.generateAndInjectStyles(executionContext, styleSheet);
            if (warnTooManyClasses !== undefined) warnTooManyClasses(className);
            return className;
          }
        };
        BaseStyledComponent.prototype.componentWillMount = function componentWillMount() {
          var _this2 = this;
          var componentStyle = this.constructor.componentStyle;
          var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
          if (componentStyle.isStatic) {
            var generatedClassName = this.generateAndInjectStyles(STATIC_EXECUTION_CONTEXT, this.props);
            this.setState({ generatedClassName: generatedClassName });
          } else if (styledContext !== undefined) {
            var subscribe = styledContext.subscribe;
            this.unsubscribeId = subscribe(function (nextTheme) {
              var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, _this2.constructor.defaultProps);
              var generatedClassName = _this2.generateAndInjectStyles(theme, _this2.props);
              _this2.setState({
                theme: theme,
                generatedClassName: generatedClassName
              });
            });
          } else {
            var _theme = this.props.theme || {};
            var _generatedClassName = this.generateAndInjectStyles(_theme, this.props);
            this.setState({
              theme: _theme,
              generatedClassName: _generatedClassName
            });
          }
        };
        BaseStyledComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var _this3 = this;
          var componentStyle = this.constructor.componentStyle;
          if (componentStyle.isStatic) {
            return;
          }
          this.setState(function (oldState) {
            var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, _this3.constructor.defaultProps);
            var generatedClassName = _this3.generateAndInjectStyles(theme, nextProps);
            return {
              theme: theme,
              generatedClassName: generatedClassName
            };
          });
        };
        BaseStyledComponent.prototype.componentWillUnmount = function componentWillUnmount() {
          this.unsubscribeFromContext();
        };
        BaseStyledComponent.prototype.render = function render() {
          var _this4 = this;
          var innerRef = this.props.innerRef;
          var generatedClassName = this.state.generatedClassName;
          var _constructor2 = this.constructor,
              styledComponentId = _constructor2.styledComponentId,
              target = _constructor2.target;
          var isTargetTag = (0, _isTag2.default)(target);
          var className = [this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(' ');
          var baseProps = _extends({}, this.attrs, { className: className });
          if ((0, _isStyledComponent2.default)(target)) {
            baseProps.innerRef = innerRef;
          } else {
            baseProps.ref = innerRef;
          }
          var propsForElement = Object.keys(this.props).reduce(function (acc, propName) {
            if (propName !== 'innerRef' && propName !== 'className' && (!isTargetTag || (0, _validAttr2.default)(propName))) {
              acc[propName] = _this4.props[propName];
            }
            return acc;
          }, baseProps);
          return (0, _react.createElement)(target, propsForElement);
        };
        return BaseStyledComponent;
      }(_react.Component);
      var createStyledComponent = function createStyledComponent(target, options, rules) {
        var _StyledComponent$cont;
        var _options$displayName = options.displayName,
            displayName = _options$displayName === undefined ? (0, _isTag2.default)(target) ? 'styled.' + target : 'Styled(' + (0, _getComponentName2.default)(target) + ')' : _options$displayName,
            _options$componentId = options.componentId,
            componentId = _options$componentId === undefined ? generateId(options.displayName, options.parentComponentId) : _options$componentId,
            _options$ParentCompon = options.ParentComponent,
            ParentComponent = _options$ParentCompon === undefined ? BaseStyledComponent : _options$ParentCompon,
            extendingRules = options.rules,
            attrs = options.attrs;
        var styledComponentId = options.displayName && options.componentId ? options.displayName + '-' + options.componentId : componentId;
        var warnTooManyClasses = void 0;
        if ('production' !== 'production') {
          warnTooManyClasses = (0, _createWarnTooManyClasses2.default)(displayName);
        }
        var componentStyle = new ComponentStyle(extendingRules === undefined ? rules : extendingRules.concat(rules), attrs, styledComponentId);
        var StyledComponent = function (_ParentComponent) {
          _inherits(StyledComponent, _ParentComponent);
          function StyledComponent() {
            _classCallCheck(this, StyledComponent);
            return _possibleConstructorReturn(this, _ParentComponent.apply(this, arguments));
          }
          StyledComponent.withComponent = function withComponent(tag) {
            var previousComponentId = options.componentId,
                optionsToCopy = _objectWithoutProperties(options, ['componentId']);
            var newComponentId = previousComponentId && previousComponentId + '-' + ((0, _isTag2.default)(tag) ? tag : (0, _getComponentName2.default)(tag));
            var newOptions = _extends({}, optionsToCopy, {
              componentId: newComponentId,
              ParentComponent: StyledComponent
            });
            return createStyledComponent(tag, newOptions, rules);
          };
          _createClass(StyledComponent, null, [{
            key: 'extend',
            get: function get() {
              var rulesFromOptions = options.rules,
                  parentComponentId = options.componentId,
                  optionsToCopy = _objectWithoutProperties(options, ['rules', 'componentId']);
              var newRules = rulesFromOptions === undefined ? rules : rulesFromOptions.concat(rules);
              var newOptions = _extends({}, optionsToCopy, {
                rules: newRules,
                parentComponentId: parentComponentId,
                ParentComponent: StyledComponent
              });
              return constructWithOptions(createStyledComponent, target, newOptions);
            }
          }]);
          return StyledComponent;
        }(ParentComponent);
        StyledComponent.contextTypes = (_StyledComponent$cont = {}, _StyledComponent$cont[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _StyledComponent$cont[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _StyledComponent$cont[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]), _StyledComponent$cont);
        StyledComponent.displayName = displayName;
        StyledComponent.styledComponentId = styledComponentId;
        StyledComponent.attrs = attrs;
        StyledComponent.componentStyle = componentStyle;
        StyledComponent.warnTooManyClasses = warnTooManyClasses;
        StyledComponent.target = target;
        return StyledComponent;
      };
      return createStyledComponent;
    };
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('157', ['158', '154', '151', '145', '50', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _hash = $__require('158');
    var _hash2 = _interopRequireDefault(_hash);
    var _StyleSheet = $__require('154');
    var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
    var _isStyledComponent = $__require('151');
    var _isStyledComponent2 = _interopRequireDefault(_isStyledComponent);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var babelPluginFlowReactPropTypes_proptype_Stringifier = $__require('145').babelPluginFlowReactPropTypes_proptype_Stringifier || $__require('50').any;
    var babelPluginFlowReactPropTypes_proptype_Flattener = $__require('145').babelPluginFlowReactPropTypes_proptype_Flattener || $__require('50').any;
    var babelPluginFlowReactPropTypes_proptype_NameGenerator = $__require('145').babelPluginFlowReactPropTypes_proptype_NameGenerator || $__require('50').any;
    var babelPluginFlowReactPropTypes_proptype_RuleSet = $__require('145').babelPluginFlowReactPropTypes_proptype_RuleSet || $__require('50').any;
    var isStaticRules = function isStaticRules(rules, attrs) {
      for (var i = 0; i < rules.length; i += 1) {
        var rule = rules[i];
        if (Array.isArray(rule) && !isStaticRules(rule)) {
          return false;
        } else if (typeof rule === 'function' && !(0, _isStyledComponent2.default)(rule)) {
          return false;
        }
      }
      if (attrs !== undefined) {
        for (var key in attrs) {
          var value = attrs[key];
          if (typeof value === 'function') {
            return false;
          }
        }
      }
      return true;
    };
    var isHRMEnabled = typeof module !== 'undefined' && module.hot && 'production' !== 'production';
    exports.default = function (nameGenerator, flatten, stringifyRules) {
      var ComponentStyle = function () {
        function ComponentStyle(rules, attrs, componentId) {
          _classCallCheck(this, ComponentStyle);
          this.rules = rules;
          this.isStatic = !isHRMEnabled && isStaticRules(rules, attrs);
          this.componentId = componentId;
          if (!_StyleSheet2.default.instance.hasInjectedComponent(this.componentId)) {
            var placeholder = 'production' !== 'production' ? '.' + componentId + ' {}' : '';
            _StyleSheet2.default.instance.deferredInject(componentId, true, placeholder);
          }
        }
        ComponentStyle.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
          var isStatic = this.isStatic,
              lastClassName = this.lastClassName;
          if (isStatic && lastClassName !== undefined) {
            return lastClassName;
          }
          var flatCSS = flatten(this.rules, executionContext);
          var hash = (0, _hash2.default)(this.componentId + flatCSS.join(''));
          var existingName = styleSheet.getName(hash);
          if (existingName !== undefined) {
            if (styleSheet.stylesCacheable) {
              this.lastClassName = existingName;
            }
            return existingName;
          }
          var name = nameGenerator(hash);
          if (styleSheet.stylesCacheable) {
            this.lastClassName = existingName;
          }
          if (styleSheet.alreadyInjected(hash, name)) {
            return name;
          }
          var css = '\n' + stringifyRules(flatCSS, '.' + name);
          styleSheet.inject(this.componentId, true, css, hash, name);
          return name;
        };
        ComponentStyle.generateName = function generateName(str) {
          return nameGenerator((0, _hash2.default)(str));
        };
        return ComponentStyle;
      }();
      return ComponentStyle;
    };
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('159', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  // Thanks to ReactDOMFactories for this handy list!

  exports.default = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',

  // SVG
  'circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];
  module.exports = exports['default'];
});
$__System.registerDynamic('15a', ['159', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _domElements = $__require('159');
  var _domElements2 = _interopRequireDefault(_domElements);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_Target = $__require('145').babelPluginFlowReactPropTypes_proptype_Target || $__require('50').any;
  exports.default = function (styledComponent, constructWithOptions) {
    var styled = function styled(tag) {
      return constructWithOptions(styledComponent, tag);
    };
    _domElements2.default.forEach(function (domElement) {
      styled[domElement] = styled(domElement);
    });
    return styled;
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('15b', ['158', '154', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _hash = $__require('158');
  var _hash2 = _interopRequireDefault(_hash);
  var _StyleSheet = $__require('154');
  var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_Stringifier = $__require('145').babelPluginFlowReactPropTypes_proptype_Stringifier || $__require('50').any;
  var babelPluginFlowReactPropTypes_proptype_NameGenerator = $__require('145').babelPluginFlowReactPropTypes_proptype_NameGenerator || $__require('50').any;
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  var replaceWhitespace = function replaceWhitespace(str) {
    return str.replace(/\s|\\n/g, '');
  };
  exports.default = function (nameGenerator, stringifyRules, css) {
    return function (strings) {
      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        interpolations[_key - 1] = arguments[_key];
      }
      var rules = css.apply(undefined, [strings].concat(interpolations));
      var hash = (0, _hash2.default)(replaceWhitespace(JSON.stringify(rules)));
      var existingName = _StyleSheet2.default.instance.getName(hash);
      if (existingName) return existingName;
      var name = nameGenerator(hash);
      if (_StyleSheet2.default.instance.alreadyInjected(hash, name)) return name;
      var generatedCSS = stringifyRules(rules, name, '@keyframes');
      _StyleSheet2.default.instance.inject('sc-keyframes-' + name, true, generatedCSS, hash, name);
      return name;
    };
  };
  module.exports = exports['default'];
});
$__System.registerDynamic("158", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = doHash;
  // murmurhash2 via https://gist.github.com/raycmorgan/588423

  function doHash(str, seed) {
    var m = 0x5bd1e995;
    var r = 24;
    var h = seed ^ str.length;
    var length = str.length;
    var currentIndex = 0;

    while (length >= 4) {
      var k = UInt32(str, currentIndex);

      k = Umul32(k, m);
      k ^= k >>> r;
      k = Umul32(k, m);

      h = Umul32(h, m);
      h ^= k;

      currentIndex += 4;
      length -= 4;
    }

    switch (length) {
      case 3:
        h ^= UInt16(str, currentIndex);
        h ^= str.charCodeAt(currentIndex + 2) << 16;
        h = Umul32(h, m);
        break;

      case 2:
        h ^= UInt16(str, currentIndex);
        h = Umul32(h, m);
        break;

      case 1:
        h ^= str.charCodeAt(currentIndex);
        h = Umul32(h, m);
        break;
    }

    h ^= h >>> 13;
    h = Umul32(h, m);
    h ^= h >>> 15;

    return h >>> 0;
  }

  function UInt32(str, pos) {
    return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
  }

  function UInt16(str, pos) {
    return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
  }

  function Umul32(n, m) {
    n = n | 0;
    m = m | 0;
    var nlo = n & 0xffff;
    var nhi = n >>> 16;
    var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
    return res;
  }
  module.exports = exports["default"];
});
$__System.registerDynamic('15c', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s+(\S+)\s+\*\//mg;

  exports.default = function (maybeCSS) {
    var css = '' + (maybeCSS || ''); // Definitely a string, and a clone
    var existingComponents = [];
    css.replace(SC_COMPONENT_ID, function (match, componentId, matchIndex) {
      existingComponents.push({ componentId: componentId, matchIndex: matchIndex });
      return match;
    });
    return existingComponents.map(function (_ref, i) {
      var componentId = _ref.componentId,
          matchIndex = _ref.matchIndex;

      var nextComp = existingComponents[i + 1];
      var cssFromDOM = nextComp ? css.slice(matchIndex, nextComp.matchIndex) : css.slice(matchIndex);
      return { componentId: componentId, cssFromDOM: cssFromDOM };
    });
  };

  module.exports = exports['default'];
});
$__System.registerDynamic('15d', ['15c', '15e', '154', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.COMPONENTS_PER_TAG = undefined;
  var _extractCompsFromCSS = $__require('15c');
  var _extractCompsFromCSS2 = _interopRequireDefault(_extractCompsFromCSS);
  var _nonce = $__require('15e');
  var _nonce2 = _interopRequireDefault(_nonce);
  var _StyleSheet = $__require('154');
  var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var babelPluginFlowReactPropTypes_proptype_Tag = $__require('154').babelPluginFlowReactPropTypes_proptype_Tag || $__require('50').any;
  var COMPONENTS_PER_TAG = exports.COMPONENTS_PER_TAG = 40;
  var BrowserTag = function () {
    function BrowserTag(el, isLocal) {
      var existingSource = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      _classCallCheck(this, BrowserTag);
      this.el = el;
      this.isLocal = isLocal;
      this.ready = false;
      var extractedComps = (0, _extractCompsFromCSS2.default)(existingSource);
      this.size = extractedComps.length;
      this.components = extractedComps.reduce(function (acc, obj) {
        acc[obj.componentId] = obj;
        return acc;
      }, {});
    }
    BrowserTag.prototype.isFull = function isFull() {
      return this.size >= COMPONENTS_PER_TAG;
    };
    BrowserTag.prototype.addComponent = function addComponent(componentId) {
      if (!this.ready) this.replaceElement();
      if (this.components[componentId]) throw new Error('Trying to add Component \'' + componentId + '\' twice!');
      var comp = {
        componentId: componentId,
        textNode: document.createTextNode('')
      };
      this.el.appendChild(comp.textNode);
      this.size += 1;
      this.components[componentId] = comp;
    };
    BrowserTag.prototype.inject = function inject(componentId, css, name) {
      if (!this.ready) this.replaceElement();
      var comp = this.components[componentId];
      if (!comp) throw new Error('Must add a new component before you can inject css into it');
      if (comp.textNode.data === '') comp.textNode.appendData('\n/* sc-component-id: ' + componentId + ' */\n');
      comp.textNode.appendData(css);
      if (name) {
        var existingNames = this.el.getAttribute(_StyleSheet.SC_ATTR);
        this.el.setAttribute(_StyleSheet.SC_ATTR, existingNames ? existingNames + ' ' + name : name);
      }
      var nonce = (0, _nonce2.default)();
      if (nonce) {
        this.el.setAttribute('nonce', nonce);
      }
    };
    BrowserTag.prototype.toHTML = function toHTML() {
      return this.el.outerHTML;
    };
    BrowserTag.prototype.toReactElement = function toReactElement() {
      throw new Error('BrowserTag doesn\'t implement toReactElement!');
    };
    BrowserTag.prototype.clone = function clone() {
      throw new Error('BrowserTag cannot be cloned!');
    };
    BrowserTag.prototype.replaceElement = function replaceElement() {
      var _this = this;
      this.ready = true;
      if (this.size === 0) return;
      var newEl = this.el.cloneNode();
      newEl.appendChild(document.createTextNode('\n'));
      Object.keys(this.components).forEach(function (key) {
        var comp = _this.components[key];
        comp.textNode = document.createTextNode(comp.cssFromDOM);
        newEl.appendChild(comp.textNode);
      });
      if (!this.el.parentNode) throw new Error("Trying to replace an element that wasn't mounted!");
      this.el.parentNode.replaceChild(newEl, this.el);
      this.el = newEl;
    };
    return BrowserTag;
  }();
  exports.default = { create: function create() {
      var tags = [];
      var names = {};
      var nodes = document.querySelectorAll('[' + _StyleSheet.SC_ATTR + ']');
      var nodesLength = nodes.length;
      for (var i = 0; i < nodesLength; i += 1) {
        var el = nodes[i];
        tags.push(new BrowserTag(el, el.getAttribute(_StyleSheet.LOCAL_ATTR) === 'true', el.innerHTML));
        var attr = el.getAttribute(_StyleSheet.SC_ATTR);
        if (attr) {
          attr.trim().split(/\s+/).forEach(function (name) {
            names[name] = true;
          });
        }
      }
      var tagConstructor = function tagConstructor(isLocal) {
        var el = document.createElement('style');
        el.type = 'text/css';
        el.setAttribute(_StyleSheet.SC_ATTR, '');
        el.setAttribute(_StyleSheet.LOCAL_ATTR, isLocal ? 'true' : 'false');
        if (!document.head) throw new Error('Missing document <head>');
        document.head.appendChild(el);
        return new BrowserTag(el, isLocal);
      };
      return new _StyleSheet2.default(tagConstructor, tags, names);
    } };
});
$__System.registerDynamic('15f', ['156', '50', '154', '155'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _StyleSheetManager$ch;
  var _react = $__require('156');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _StyleSheet = $__require('154');
  var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
  var _ServerStyleSheet = $__require('155');
  var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var StyleSheetManager = function (_Component) {
    _inherits(StyleSheetManager, _Component);
    function StyleSheetManager() {
      _classCallCheck(this, StyleSheetManager);
      return _possibleConstructorReturn(this, _Component.apply(this, arguments));
    }
    StyleSheetManager.prototype.getChildContext = function getChildContext() {
      var _ref;
      return _ref = {}, _ref[_StyleSheet.CONTEXT_KEY] = this.props.sheet, _ref;
    };
    StyleSheetManager.prototype.render = function render() {
      return _react2.default.Children.only(this.props.children);
    };
    return StyleSheetManager;
  }(_react.Component);
  StyleSheetManager.childContextTypes = (_StyleSheetManager$ch = {}, _StyleSheetManager$ch[_StyleSheet.CONTEXT_KEY] = _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]).isRequired, _StyleSheetManager$ch);
  StyleSheetManager.propTypes = { sheet: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_StyleSheet2.default), _propTypes2.default.instanceOf(_ServerStyleSheet2.default)]).isRequired };
  exports.default = StyleSheetManager;
  module.exports = exports['default'];
});
$__System.registerDynamic('15e', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function () {
    return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;
  };
  /* eslint-disable camelcase, no-undef */

  module.exports = exports['default'];
});
$__System.registerDynamic('155', ['156', '154', '15f', '15e', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('156');
  var _react2 = _interopRequireDefault(_react);
  var _StyleSheet = $__require('154');
  var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
  var _StyleSheetManager = $__require('15f');
  var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);
  var _nonce = $__require('15e');
  var _nonce2 = _interopRequireDefault(_nonce);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var babelPluginFlowReactPropTypes_proptype_Tag = $__require('154').babelPluginFlowReactPropTypes_proptype_Tag || $__require('50').any;
  var ServerTag = function () {
    function ServerTag(isLocal) {
      _classCallCheck(this, ServerTag);
      this.isLocal = isLocal;
      this.components = {};
      this.size = 0;
      this.names = [];
    }
    ServerTag.prototype.isFull = function isFull() {
      return false;
    };
    ServerTag.prototype.addComponent = function addComponent(componentId) {
      if (this.components[componentId]) throw new Error('Trying to add Component \'' + componentId + '\' twice!');
      this.components[componentId] = {
        componentId: componentId,
        css: ''
      };
      this.size += 1;
    };
    ServerTag.prototype.concatenateCSS = function concatenateCSS() {
      var _this = this;
      return Object.keys(this.components).reduce(function (styles, k) {
        return styles + _this.components[k].css;
      }, '');
    };
    ServerTag.prototype.inject = function inject(componentId, css, name) {
      var comp = this.components[componentId];
      if (!comp) throw new Error('Must add a new component before you can inject css into it');
      if (comp.css === '') comp.css = '/* sc-component-id: ' + componentId + ' */\n';
      comp.css += css.replace(/\n*$/, '\n');
      if (name) this.names.push(name);
    };
    ServerTag.prototype.toHTML = function toHTML() {
      var attrs = ['type="text/css"', _StyleSheet.SC_ATTR + '="' + this.names.join(' ') + '"', _StyleSheet.LOCAL_ATTR + '="' + (this.isLocal ? 'true' : 'false') + '"'];
      var nonce = (0, _nonce2.default)();
      if (nonce) {
        attrs.push('nonce="' + nonce + '"');
      }
      return '<style ' + attrs.join(' ') + '>' + this.concatenateCSS() + '</style>';
    };
    ServerTag.prototype.toReactElement = function toReactElement(key) {
      var _attrs;
      var attrs = (_attrs = {}, _attrs[_StyleSheet.SC_ATTR] = this.names.join(' '), _attrs[_StyleSheet.LOCAL_ATTR] = this.isLocal.toString(), _attrs);
      var nonce = (0, _nonce2.default)();
      if (nonce) {
        attrs.nonce = nonce;
      }
      return _react2.default.createElement('style', _extends({
        key: key,
        type: 'text/css'
      }, attrs, { dangerouslySetInnerHTML: { __html: this.concatenateCSS() } }));
    };
    ServerTag.prototype.clone = function clone() {
      var _this2 = this;
      var copy = new ServerTag(this.isLocal);
      copy.names = [].concat(this.names);
      copy.size = this.size;
      copy.components = Object.keys(this.components).reduce(function (acc, key) {
        acc[key] = _extends({}, _this2.components[key]);
        return acc;
      }, {});
      return copy;
    };
    return ServerTag;
  }();
  var ServerStyleSheet = function () {
    function ServerStyleSheet() {
      _classCallCheck(this, ServerStyleSheet);
      this.instance = _StyleSheet2.default.clone(_StyleSheet2.default.instance);
    }
    ServerStyleSheet.prototype.collectStyles = function collectStyles(children) {
      if (this.closed) throw new Error("Can't collect styles once you've called getStyleTags!");
      return _react2.default.createElement(_StyleSheetManager2.default, { sheet: this.instance }, children);
    };
    ServerStyleSheet.prototype.getStyleTags = function getStyleTags() {
      if (!this.closed) {
        _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
        this.closed = true;
      }
      return this.instance.toHTML();
    };
    ServerStyleSheet.prototype.getStyleElement = function getStyleElement() {
      if (!this.closed) {
        _StyleSheet.clones.splice(_StyleSheet.clones.indexOf(this.instance), 1);
        this.closed = true;
      }
      return this.instance.toReactElements();
    };
    ServerStyleSheet.create = function create() {
      return new _StyleSheet2.default(function (isLocal) {
        return new ServerTag(isLocal);
      });
    };
    return ServerStyleSheet;
  }();
  exports.default = ServerStyleSheet;
  module.exports = exports['default'];
});
$__System.registerDynamic('154', ['156', '15d', '155'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.clones = exports.CONTEXT_KEY = exports.LOCAL_ATTR = exports.SC_ATTR = undefined;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _react = $__require('156');
  var _react2 = _interopRequireDefault(_react);
  var _BrowserStyleSheet = $__require('15d');
  var _BrowserStyleSheet2 = _interopRequireDefault(_BrowserStyleSheet);
  var _ServerStyleSheet = $__require('155');
  var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var SC_ATTR = exports.SC_ATTR = 'data-styled-components';
  var LOCAL_ATTR = exports.LOCAL_ATTR = 'data-styled-components-is-local';
  var CONTEXT_KEY = exports.CONTEXT_KEY = '__styled-components-stylesheet__';
  var instance = null;
  var clones = exports.clones = [];
  var StyleSheet = function () {
    function StyleSheet(tagConstructor) {
      var tags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      _classCallCheck(this, StyleSheet);
      this.hashes = {};
      this.deferredInjections = {};
      this.stylesCacheable = typeof document !== 'undefined';
      this.tagConstructor = tagConstructor;
      this.tags = tags;
      this.names = names;
      this.constructComponentTagMap();
    }
    StyleSheet.prototype.constructComponentTagMap = function constructComponentTagMap() {
      var _this = this;
      this.componentTags = {};
      this.tags.forEach(function (tag) {
        Object.keys(tag.components).forEach(function (componentId) {
          _this.componentTags[componentId] = tag;
        });
      });
    };
    StyleSheet.prototype.getName = function getName(hash) {
      return this.hashes[hash.toString()];
    };
    StyleSheet.prototype.alreadyInjected = function alreadyInjected(hash, name) {
      if (!this.names[name]) return false;
      this.hashes[hash.toString()] = name;
      return true;
    };
    StyleSheet.prototype.hasInjectedComponent = function hasInjectedComponent(componentId) {
      return !!this.componentTags[componentId];
    };
    StyleSheet.prototype.deferredInject = function deferredInject(componentId, isLocal, css) {
      if (this === instance) {
        clones.forEach(function (clone) {
          clone.deferredInject(componentId, isLocal, css);
        });
      }
      this.getOrCreateTag(componentId, isLocal);
      this.deferredInjections[componentId] = css;
    };
    StyleSheet.prototype.inject = function inject(componentId, isLocal, css, hash, name) {
      if (this === instance) {
        clones.forEach(function (clone) {
          clone.inject(componentId, isLocal, css);
        });
      }
      var tag = this.getOrCreateTag(componentId, isLocal);
      var deferredInjection = this.deferredInjections[componentId];
      if (deferredInjection) {
        tag.inject(componentId, deferredInjection);
        delete this.deferredInjections[componentId];
      }
      tag.inject(componentId, css, name);
      if (hash && name) {
        this.hashes[hash.toString()] = name;
      }
    };
    StyleSheet.prototype.toHTML = function toHTML() {
      return this.tags.map(function (tag) {
        return tag.toHTML();
      }).join('');
    };
    StyleSheet.prototype.toReactElements = function toReactElements() {
      return this.tags.map(function (tag, i) {
        return tag.toReactElement('sc-' + i);
      });
    };
    StyleSheet.prototype.getOrCreateTag = function getOrCreateTag(componentId, isLocal) {
      var existingTag = this.componentTags[componentId];
      if (existingTag) {
        return existingTag;
      }
      var lastTag = this.tags[this.tags.length - 1];
      var componentTag = !lastTag || lastTag.isFull() || lastTag.isLocal !== isLocal ? this.createNewTag(isLocal) : lastTag;
      this.componentTags[componentId] = componentTag;
      componentTag.addComponent(componentId);
      return componentTag;
    };
    StyleSheet.prototype.createNewTag = function createNewTag(isLocal) {
      var newTag = this.tagConstructor(isLocal);
      this.tags.push(newTag);
      return newTag;
    };
    StyleSheet.reset = function reset(isServer) {
      instance = StyleSheet.create(isServer);
    };
    StyleSheet.create = function create() {
      var isServer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typeof document === 'undefined';
      return (isServer ? _ServerStyleSheet2.default : _BrowserStyleSheet2.default).create();
    };
    StyleSheet.clone = function clone(oldSheet) {
      var newSheet = new StyleSheet(oldSheet.tagConstructor, oldSheet.tags.map(function (tag) {
        return tag.clone();
      }), _extends({}, oldSheet.names));
      newSheet.hashes = _extends({}, oldSheet.hashes);
      newSheet.deferredInjections = _extends({}, oldSheet.deferredInjections);
      clones.push(newSheet);
      return newSheet;
    };
    _createClass(StyleSheet, null, [{
      key: 'instance',
      get: function get() {
        return instance || (instance = StyleSheet.create());
      }
    }]);
    return StyleSheet;
  }();
  exports.default = StyleSheet;
});
$__System.registerDynamic('160', ['158', '154', '145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _hash = $__require('158');
  var _hash2 = _interopRequireDefault(_hash);
  var _StyleSheet = $__require('154');
  var _StyleSheet2 = _interopRequireDefault(_StyleSheet);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var babelPluginFlowReactPropTypes_proptype_Stringifier = $__require('145').babelPluginFlowReactPropTypes_proptype_Stringifier || $__require('50').any;
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  exports.default = function (stringifyRules, css) {
    var injectGlobal = function injectGlobal(strings) {
      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        interpolations[_key - 1] = arguments[_key];
      }
      var rules = css.apply(undefined, [strings].concat(interpolations));
      var hash = (0, _hash2.default)(JSON.stringify(rules));
      var componentId = 'sc-global-' + hash;
      if (_StyleSheet2.default.instance.hasInjectedComponent(componentId)) return;
      _StyleSheet2.default.instance.inject(componentId, false, stringifyRules(rules));
    };
    return injectGlobal;
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('161', ['145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var babelPluginFlowReactPropTypes_proptype_Target = $__require('145').babelPluginFlowReactPropTypes_proptype_Target || $__require('50').any;
  var babelPluginFlowReactPropTypes_proptype_Interpolation = $__require('145').babelPluginFlowReactPropTypes_proptype_Interpolation || $__require('50').any;
  exports.default = function (css) {
    var constructWithOptions = function constructWithOptions(componentConstructor, tag) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (typeof tag !== 'string' && typeof tag !== 'function') {
        throw new Error('Cannot create styled-component for component: ' + tag);
      }
      var templateFunction = function templateFunction(strings) {
        for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          interpolations[_key - 1] = arguments[_key];
        }
        return componentConstructor(tag, options, css.apply(undefined, [strings].concat(interpolations)));
      };
      templateFunction.withConfig = function (config) {
        return constructWithOptions(componentConstructor, tag, _extends({}, options, config));
      };
      templateFunction.attrs = function (attrs) {
        return constructWithOptions(componentConstructor, tag, _extends({}, options, { attrs: _extends({}, options.attrs || {}, attrs) }));
      };
      return templateFunction;
    };
    return constructWithOptions;
  };
  module.exports = exports['default'];
});
$__System.registerDynamic('162', [], true, function ($__require, exports, module) {
    /**
     * Copyright 2015, Yahoo! Inc.
     * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
     */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var REACT_STATICS = {
        childContextTypes: true,
        contextTypes: true,
        defaultProps: true,
        displayName: true,
        getDefaultProps: true,
        mixins: true,
        propTypes: true,
        type: true
    };

    var KNOWN_STATICS = {
        name: true,
        length: true,
        prototype: true,
        caller: true,
        arguments: true,
        arity: true
    };

    var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

    module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
        if (typeof sourceComponent !== 'string') {
            // don't hoist over string (html) components
            var keys = Object.getOwnPropertyNames(sourceComponent);

            /* istanbul ignore else */
            if (isGetOwnPropertySymbolsAvailable) {
                keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
            }

            for (var i = 0; i < keys.length; ++i) {
                if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                    try {
                        targetComponent[keys[i]] = sourceComponent[keys[i]];
                    } catch (error) {}
                }
            }
        }

        return targetComponent;
    };
});
$__System.registerDynamic("163", ["162"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("162");
});
$__System.registerDynamic("164", ["165", "166", "167"], true, function ($__require, exports, module) {
  /** @license React v16.2.0
   * react.production.min.js
   *
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';
  var global = this || self,
      GLOBAL = global;
  var m = $__require("165"),
      n = $__require("166"),
      p = $__require("167"),
      q = "function" === typeof Symbol && Symbol["for"],
      r = q ? Symbol["for"]("react.element") : 60103,
      t = q ? Symbol["for"]("react.call") : 60104,
      u = q ? Symbol["for"]("react.return") : 60105,
      v = q ? Symbol["for"]("react.portal") : 60106,
      w = q ? Symbol["for"]("react.fragment") : 60107,
      x = "function" === typeof Symbol && Symbol.iterator;
  function y(a) {
    for (var b = arguments.length - 1, e = "Minified React error #" + a + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" + a, c = 0; c < b; c++) e += "\x26args[]\x3d" + encodeURIComponent(arguments[c + 1]);b = Error(e + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name = "Invariant Violation";b.framesToPop = 1;throw b;
  }
  var z = { isMounted: function () {
      return !1;
    }, enqueueForceUpdate: function () {}, enqueueReplaceState: function () {}, enqueueSetState: function () {} };function A(a, b, e) {
    this.props = a;this.context = b;this.refs = n;this.updater = e || z;
  }A.prototype.isReactComponent = {};A.prototype.setState = function (a, b) {
    "object" !== typeof a && "function" !== typeof a && null != a ? y("85") : void 0;this.updater.enqueueSetState(this, a, b, "setState");
  };A.prototype.forceUpdate = function (a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
  };
  function B(a, b, e) {
    this.props = a;this.context = b;this.refs = n;this.updater = e || z;
  }function C() {}C.prototype = A.prototype;var D = B.prototype = new C();D.constructor = B;m(D, A.prototype);D.isPureReactComponent = !0;function E(a, b, e) {
    this.props = a;this.context = b;this.refs = n;this.updater = e || z;
  }var F = E.prototype = new C();F.constructor = E;m(F, A.prototype);F.unstable_isAsyncReactComponent = !0;F.render = function () {
    return this.props.children;
  };var G = { current: null },
      H = Object.prototype.hasOwnProperty,
      I = { key: !0, ref: !0, __self: !0, __source: !0 };
  function J(a, b, e) {
    var c,
        d = {},
        g = null,
        k = null;if (null != b) for (c in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b) H.call(b, c) && !I.hasOwnProperty(c) && (d[c] = b[c]);var f = arguments.length - 2;if (1 === f) d.children = e;else if (1 < f) {
      for (var h = Array(f), l = 0; l < f; l++) h[l] = arguments[l + 2];d.children = h;
    }if (a && a.defaultProps) for (c in f = a.defaultProps, f) void 0 === d[c] && (d[c] = f[c]);return { $$typeof: r, type: a, key: g, ref: k, props: d, _owner: G.current };
  }function K(a) {
    return "object" === typeof a && null !== a && a.$$typeof === r;
  }
  function escape(a) {
    var b = { "\x3d": "\x3d0", ":": "\x3d2" };return "$" + ("" + a).replace(/[=:]/g, function (a) {
      return b[a];
    });
  }var L = /\/+/g,
      M = [];function N(a, b, e, c) {
    if (M.length) {
      var d = M.pop();d.result = a;d.keyPrefix = b;d.func = e;d.context = c;d.count = 0;return d;
    }return { result: a, keyPrefix: b, func: e, context: c, count: 0 };
  }function O(a) {
    a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > M.length && M.push(a);
  }
  function P(a, b, e, c) {
    var d = typeof a;if ("undefined" === d || "boolean" === d) a = null;var g = !1;if (null === a) g = !0;else switch (d) {case "string":case "number":
        g = !0;break;case "object":
        switch (a.$$typeof) {case r:case t:case u:case v:
            g = !0;}}if (g) return e(c, a, "" === b ? "." + Q(a, 0) : b), 1;g = 0;b = "" === b ? "." : b + ":";if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
      d = a[k];var f = b + Q(d, k);g += P(d, f, e, c);
    } else if (null === a || "undefined" === typeof a ? f = null : (f = x && a[x] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) d = d.value, f = b + Q(d, k++), g += P(d, f, e, c);else "object" === d && (e = "" + a, y("31", "[object Object]" === e ? "object with keys {" + Object.keys(a).join(", ") + "}" : e, ""));return g;
  }function Q(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
  }function R(a, b) {
    a.func.call(a.context, b, a.count++);
  }
  function S(a, b, e) {
    var c = a.result,
        d = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? T(a, c, e, p.thatReturnsArgument) : null != a && (K(a) && (b = d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(L, "$\x26/") + "/") + e, a = { $$typeof: r, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner }), c.push(a));
  }function T(a, b, e, c, d) {
    var g = "";null != e && (g = ("" + e).replace(L, "$\x26/") + "/");b = N(b, g, c, d);null == a || P(a, "", S, b);O(b);
  }
  var U = { Children: { map: function (a, b, e) {
        if (null == a) return a;var c = [];T(a, c, null, b, e);return c;
      }, forEach: function (a, b, e) {
        if (null == a) return a;b = N(null, null, b, e);null == a || P(a, "", R, b);O(b);
      }, count: function (a) {
        return null == a ? 0 : P(a, "", p.thatReturnsNull, null);
      }, toArray: function (a) {
        var b = [];T(a, b, null, p.thatReturnsArgument);return b;
      }, only: function (a) {
        K(a) ? void 0 : y("143");return a;
      } }, Component: A, PureComponent: B, unstable_AsyncComponent: E, Fragment: w, createElement: J, cloneElement: function (a, b, e) {
      var c = m({}, a.props),
          d = a.key,
          g = a.ref,
          k = a._owner;if (null != b) {
        void 0 !== b.ref && (g = b.ref, k = G.current);void 0 !== b.key && (d = "" + b.key);if (a.type && a.type.defaultProps) var f = a.type.defaultProps;for (h in b) H.call(b, h) && !I.hasOwnProperty(h) && (c[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
      }var h = arguments.length - 2;if (1 === h) c.children = e;else if (1 < h) {
        f = Array(h);for (var l = 0; l < h; l++) f[l] = arguments[l + 2];c.children = f;
      }return { $$typeof: r, type: a.type, key: d, ref: g, props: c, _owner: k };
    }, createFactory: function (a) {
      var b = J.bind(null, a);b.type = a;return b;
    },
    isValidElement: K, version: "16.2.0", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: G, assign: m } },
      V = Object.freeze({ default: U }),
      W = V && U || V;module.exports = W["default"] ? W["default"] : W;
});
$__System.registerDynamic('168', ['165', '166', '169', '16a', '167', '16b', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== "production") {
      (function () {
        'use strict';

        var _assign = $__require('165');
        var emptyObject = $__require('166');
        var invariant = $__require('169');
        var warning = $__require('16a');
        var emptyFunction = $__require('167');
        var checkPropTypes = $__require('16b');
        var ReactVersion = '16.2.0';
        var hasSymbol = typeof Symbol === 'function' && Symbol['for'];
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;
        var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
        var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;
        var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator';
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable === 'undefined') {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === 'function') {
            return maybeIterator;
          }
          return null;
        }
        var lowPriorityWarning = function () {};
        {
          var printWarning = function (format) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            var argIndex = 0;
            var message = 'Warning: ' + format.replace(/%s/g, function () {
              return args[argIndex++];
            });
            if (typeof console !== 'undefined') {
              console.warn(message);
            }
            try {
              throw new Error(message);
            } catch (x) {}
          };
          lowPriorityWarning = function (condition, format) {
            if (format === undefined) {
              throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (!condition) {
              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
              }
              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }
        var lowPriorityWarning$1 = lowPriorityWarning;
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var constructor = publicInstance.constructor;
            var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';
            var warningKey = componentName + '.' + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function (publicInstance) {
            return false;
          },
          enqueueForceUpdate: function (publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
          },
          enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
          },
          enqueueSetState: function (publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
          }
        };
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function (partialState, callback) {
          !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
          this.updater.enqueueSetState(this, partialState, callback, 'setState');
        };
        Component.prototype.forceUpdate = function (callback) {
          this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
        };
        {
          var deprecatedAPIs = {
            isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
            replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
          };
          var defineDeprecationWarning = function (methodName, info) {
            Object.defineProperty(Component.prototype, methodName, { get: function () {
                lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
              } });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        function ComponentDummy() {}
        ComponentDummy.prototype = Component.prototype;
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        _assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function AsyncComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();
        asyncComponentPrototype.constructor = AsyncComponent;
        _assign(asyncComponentPrototype, Component.prototype);
        asyncComponentPrototype.unstable_isAsyncReactComponent = true;
        asyncComponentPrototype.render = function () {
          return this.props.children;
        };
        var ReactCurrentOwner = { current: null };
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, 'ref')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== undefined;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, 'key')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== undefined;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function () {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function () {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        var ReactElement = function (type, key, ref, self, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            ref: ref,
            props: props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, 'validated', {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, '_self', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element, '_source', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === undefined) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
                var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          var propName;
          var props = _assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var ReactDebugCurrentFrame = {};
        {
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function () {
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              return impl();
            }
            return null;
          };
        }
        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            '=': '=0',
            ':': '=2'
          };
          var escapedString = ('' + key).replace(escapeRegex, function (match) {
            return escaperLookup[match];
          });
          return '$' + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
        }
        var POOL_SIZE = 10;
        var traverseContextPool = [];
        function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
          if (traverseContextPool.length) {
            var traverseContext = traverseContextPool.pop();
            traverseContext.result = mapResult;
            traverseContext.keyPrefix = keyPrefix;
            traverseContext.func = mapFunction;
            traverseContext.context = mapContext;
            traverseContext.count = 0;
            return traverseContext;
          } else {
            return {
              result: mapResult,
              keyPrefix: keyPrefix,
              func: mapFunction,
              context: mapContext,
              count: 0
            };
          }
        }
        function releaseTraverseContext(traverseContext) {
          traverseContext.result = null;
          traverseContext.keyPrefix = null;
          traverseContext.func = null;
          traverseContext.context = null;
          traverseContext.count = 0;
          if (traverseContextPool.length < POOL_SIZE) {
            traverseContextPool.push(traverseContext);
          }
        }
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
          var type = typeof children;
          if (type === 'undefined' || type === 'boolean') {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case 'string':
              case 'number':
                invokeCallback = true;
                break;
              case 'object':
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_CALL_TYPE:
                  case REACT_RETURN_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getComponentKey(child, i);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
              {
                if (iteratorFn === children.entries) {
                  warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(children);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getComponentKey(child, ii++);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            } else if (type === 'object') {
              var addendum = '';
              {
                addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
              }
              var childrenString = '' + children;
              invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
            }
          }
          return subtreeCount;
        }
        function traverseAllChildren(children, callback, traverseContext) {
          if (children == null) {
            return 0;
          }
          return traverseAllChildrenImpl(children, '', callback, traverseContext);
        }
        function getComponentKey(component, index) {
          if (typeof component === 'object' && component !== null && component.key != null) {
            return escape(component.key);
          }
          return index.toString(36);
        }
        function forEachSingleChild(bookKeeping, child, name) {
          var func = bookKeeping.func,
              context = bookKeeping.context;
          func.call(context, child, bookKeeping.count++);
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          if (children == null) {
            return children;
          }
          var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
          traverseAllChildren(children, forEachSingleChild, traverseContext);
          releaseTraverseContext(traverseContext);
        }
        function mapSingleChildIntoContext(bookKeeping, child, childKey) {
          var result = bookKeeping.result,
              keyPrefix = bookKeeping.keyPrefix,
              func = bookKeeping.func,
              context = bookKeeping.context;
          var mappedChild = func.call(context, child, bookKeeping.count++);
          if (Array.isArray(mappedChild)) {
            mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
          } else if (mappedChild != null) {
            if (isValidElement(mappedChild)) {
              mappedChild = cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
            }
            result.push(mappedChild);
          }
        }
        function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
          var escapedPrefix = '';
          if (prefix != null) {
            escapedPrefix = escapeUserProvidedKey(prefix) + '/';
          }
          var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
          traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
          releaseTraverseContext(traverseContext);
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, func, context);
          return result;
        }
        function countChildren(children, context) {
          return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
        }
        function toArray(children) {
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
          return result;
        }
        function onlyChild(children) {
          !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
          return children;
        }
        var describeComponentFrame = function (name, source, ownerName) {
          return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
        };
        function getComponentName(fiber) {
          var type = fiber.type;
          if (typeof type === 'string') {
            return type;
          }
          if (typeof type === 'function') {
            return type.displayName || type.name;
          }
          return null;
        }
        {
          var currentlyValidatingElement = null;
          var propTypesMisspellWarningShown = false;
          var getDisplayName = function (element) {
            if (element == null) {
              return '#empty';
            } else if (typeof element === 'string' || typeof element === 'number') {
              return '#text';
            } else if (typeof element.type === 'string') {
              return element.type;
            } else if (element.type === REACT_FRAGMENT_TYPE) {
              return 'React.Fragment';
            } else {
              return element.type.displayName || element.type.name || 'Unknown';
            }
          };
          var getStackAddendum = function () {
            var stack = '';
            if (currentlyValidatingElement) {
              var name = getDisplayName(currentlyValidatingElement);
              var owner = currentlyValidatingElement._owner;
              stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
            }
            stack += ReactDebugCurrentFrame.getStackAddendum() || '';
            return stack;
          };
          var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentName(ReactCurrentOwner.current);
            if (name) {
              return '\n\nCheck the render method of `' + name + '`.';
            }
          }
          return '';
        }
        function getSourceInfoErrorAddendum(elementProps) {
          if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
            var source = elementProps.__source;
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
          }
          return '';
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = '\n\nCheck the top-level render call using <' + parentName + '>.';
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = '';
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
          }
          currentlyValidatingElement = element;
          {
            warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
          }
          currentlyValidatingElement = null;
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== 'object') {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          var componentClass = element.type;
          if (typeof componentClass !== 'function') {
            return;
          }
          var name = componentClass.displayName || componentClass.name;
          var propTypes = componentClass.propTypes;
          if (propTypes) {
            currentlyValidatingElement = element;
            checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
            currentlyValidatingElement = null;
          } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true;
            warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
          }
          if (typeof componentClass.getDefaultProps === 'function') {
            warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
          }
        }
        function validateFragmentProps(fragment) {
          currentlyValidatingElement = fragment;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var key = _step.value;
              if (!VALID_FRAGMENT_PROPS.has(key)) {
                warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
                break;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator['return']) {
                _iterator['return']();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if (fragment.ref !== null) {
            warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
          }
          currentlyValidatingElement = null;
        }
        function createElementWithValidation(type, props, children) {
          var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';
          if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendum(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            info += getStackAddendum() || '';
            warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
          }
          var element = createElement.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
                Object.defineProperty(this, 'type', { value: type });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        var React = {
          Children: {
            map: mapChildren,
            forEach: forEachChildren,
            count: countChildren,
            toArray: toArray,
            only: onlyChild
          },
          Component: Component,
          PureComponent: PureComponent,
          unstable_AsyncComponent: AsyncComponent,
          Fragment: REACT_FRAGMENT_TYPE,
          createElement: createElementWithValidation,
          cloneElement: cloneElementWithValidation,
          createFactory: createFactoryWithValidation,
          isValidElement: isValidElement,
          version: ReactVersion,
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentOwner: ReactCurrentOwner,
            assign: _assign
          }
        };
        {
          _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
            ReactDebugCurrentFrame: ReactDebugCurrentFrame,
            ReactComponentTreeHook: {}
          });
        }
        var React$2 = Object.freeze({ default: React });
        var React$3 = React$2 && React || React$2;
        var react = React$3['default'] ? React$3['default'] : React$3;
        module.exports = react;
      })();
    }
  })($__require('16'));
});
$__System.registerDynamic('16c', ['164', '168', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' === 'production') {
      module.exports = $__require('164');
    } else {
      module.exports = $__require('168');
    }
  })($__require('16'));
});
$__System.registerDynamic("156", ["16c"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("16c");
});
$__System.registerDynamic('16d', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = isFunction;

  var toString = Object.prototype.toString;

  function isFunction(fn) {
    var string = toString.call(fn);
    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && (
    // IE8 and below
    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);
  };
});
$__System.registerDynamic("16e", ["16d"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("16d");
});
$__System.registerDynamic('16f', [], true, function ($__require, exports, module) {
  /*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = function isObject(val) {
    return val != null && typeof val === 'object' && Array.isArray(val) === false;
  };
});
$__System.registerDynamic("170", ["16f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("16f");
});
$__System.registerDynamic('171', ['170'], true, function ($__require, exports, module) {
  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isObject = $__require('170');

  function isObjectObject(o) {
    return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';
  }

  module.exports = function isPlainObject(o) {
    var ctor, prot;

    if (isObjectObject(o) === false) return false;

    // If has modified constructor
    ctor = o.constructor;
    if (typeof ctor !== 'function') return false;

    // If has modified prototype
    prot = ctor.prototype;
    if (isObjectObject(prot) === false) return false;

    // If constructor does not have an Object-specific method
    if (prot.hasOwnProperty('isPrototypeOf') === false) {
      return false;
    }

    // Most likely a plain Object
    return true;
  };
});
$__System.registerDynamic("149", ["171"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("171");
});
$__System.registerDynamic("172", ["50"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  if (typeof exports !== "undefined") Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_Broadcast", {
    value: $__require("50").shape({
      publish: $__require("50").func.isRequired,
      subscribe: $__require("50").func.isRequired,
      unsubscribe: $__require("50").func.isRequired
    })
  });
  /**
   * Creates a broadcast that can be listened to, i.e. simple event emitter
   *
   * @see https://github.com/ReactTraining/react-broadcast
   */

  var createBroadcast = function createBroadcast(initialState) {
    var listeners = {};
    var id = 0;
    var state = initialState;

    function publish(nextState) {
      state = nextState;

      // eslint-disable-next-line guard-for-in, no-restricted-syntax
      for (var key in listeners) {
        var _listener = listeners[key];
        if (_listener === undefined) {
          // eslint-disable-next-line no-continue
          continue;
        }

        _listener(state);
      }
    }

    function subscribe(listener) {
      var currentId = id;
      listeners[currentId] = listener;
      id += 1;
      listener(state);
      return currentId;
    }

    function unsubscribe(unsubID) {
      listeners[unsubID] = undefined;
    }

    return { publish: publish, subscribe: subscribe, unsubscribe: unsubscribe };
  };

  exports.default = createBroadcast;
  module.exports = exports["default"];
});
$__System.registerDynamic("173", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  // Helper to call a given function, only once
  exports.default = function (cb) {
    var called = false;

    return function () {
      if (!called) {
        called = true;
        cb();
      }
    };
  };

  module.exports = exports["default"];
});
$__System.registerDynamic('153', ['156', '50', '16e', '149', '172', '173'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.CONTEXT_CHANNEL_SHAPE = exports.CHANNEL_NEXT = exports.CHANNEL = undefined;
  var _ThemeProvider$childC, _ThemeProvider$contex;
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _react = $__require('156');
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require('50');
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _isFunction = $__require('16e');
  var _isFunction2 = _interopRequireDefault(_isFunction);
  var _isPlainObject = $__require('149');
  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
  var _createBroadcast = $__require('172');
  var _createBroadcast2 = _interopRequireDefault(_createBroadcast);
  var _once = $__require('173');
  var _once2 = _interopRequireDefault(_once);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var babelPluginFlowReactPropTypes_proptype_Broadcast = $__require('172').babelPluginFlowReactPropTypes_proptype_Broadcast || $__require('50').any;
  var CHANNEL = exports.CHANNEL = '__styled-components__';
  var CHANNEL_NEXT = exports.CHANNEL_NEXT = CHANNEL + 'next__';
  var CONTEXT_CHANNEL_SHAPE = exports.CONTEXT_CHANNEL_SHAPE = _propTypes2.default.shape({
    getTheme: _propTypes2.default.func,
    subscribe: _propTypes2.default.func,
    unsubscribe: _propTypes2.default.func
  });
  if (typeof exports !== 'undefined') Object.defineProperty(exports, 'babelPluginFlowReactPropTypes_proptype_Theme', { value: $__require('50').shape({}) });
  var warnChannelDeprecated = (0, _once2.default)(function () {
    console.error('Warning: Usage of `context.' + CHANNEL + '` as a function is deprecated. It will be replaced with the object on `.context.' + CHANNEL_NEXT + '` in a future version.');
  });
  var ThemeProvider = function (_Component) {
    _inherits(ThemeProvider, _Component);
    function ThemeProvider() {
      _classCallCheck(this, ThemeProvider);
      var _this = _possibleConstructorReturn(this, _Component.call(this));
      _this.unsubscribeToOuterId = -1;
      _this.getTheme = _this.getTheme.bind(_this);
      return _this;
    }
    ThemeProvider.prototype.componentWillMount = function componentWillMount() {
      var _this2 = this;
      var outerContext = this.context[CHANNEL_NEXT];
      if (outerContext !== undefined) {
        this.unsubscribeToOuterId = outerContext.subscribe(function (theme) {
          _this2.outerTheme = theme;
        });
      }
      this.broadcast = (0, _createBroadcast2.default)(this.getTheme());
    };
    ThemeProvider.prototype.getChildContext = function getChildContext() {
      var _this3 = this,
          _extends2;
      return _extends({}, this.context, (_extends2 = {}, _extends2[CHANNEL_NEXT] = {
        getTheme: this.getTheme,
        subscribe: this.broadcast.subscribe,
        unsubscribe: this.broadcast.unsubscribe
      }, _extends2[CHANNEL] = function (subscriber) {
        warnChannelDeprecated();
        var unsubscribeId = _this3.broadcast.subscribe(subscriber);
        return function () {
          return _this3.broadcast.unsubscribe(unsubscribeId);
        };
      }, _extends2));
    };
    ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      if (this.props.theme !== nextProps.theme) this.broadcast.publish(this.getTheme(nextProps.theme));
    };
    ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
      if (this.unsubscribeToOuterId !== -1) {
        this.context[CHANNEL_NEXT].unsubscribe(this.unsubscribeToOuterId);
      }
    };
    ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
      var theme = passedTheme || this.props.theme;
      if ((0, _isFunction2.default)(theme)) {
        var mergedTheme = theme(this.outerTheme);
        if (!(0, _isPlainObject2.default)(mergedTheme)) {
          throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');
        }
        return mergedTheme;
      }
      if (!(0, _isPlainObject2.default)(theme)) {
        throw new Error('[ThemeProvider] Please make your theme prop a plain object');
      }
      return _extends({}, this.outerTheme, theme);
    };
    ThemeProvider.prototype.render = function render() {
      if (!this.props.children) {
        return null;
      }
      return _react2.default.Children.only(this.props.children);
    };
    return ThemeProvider;
  }(_react.Component);
  ThemeProvider.propTypes = {
    children: $__require('50').any,
    theme: $__require('50').oneOfType([$__require('50').shape({}), $__require('50').func]).isRequired
  };
  ThemeProvider.childContextTypes = (_ThemeProvider$childC = {}, _ThemeProvider$childC[CHANNEL] = _propTypes2.default.func, _ThemeProvider$childC[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$childC);
  ThemeProvider.contextTypes = (_ThemeProvider$contex = {}, _ThemeProvider$contex[CHANNEL_NEXT] = CONTEXT_CHANNEL_SHAPE, _ThemeProvider$contex);
  exports.default = ThemeProvider;
});
$__System.registerDynamic("145", ["50"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /* todo: I want this to actually be an array of Function | string but that causes errors */

  var global = this || self,
      GLOBAL = global;
  if (typeof exports !== "undefined") Object.defineProperty(exports, "babelPluginFlowReactPropTypes_proptype_StyleSheet", {
    value: $__require("50").shape({
      create: $__require("50").func.isRequired
    })
  });

  /* eslint-disable no-undef */
});
$__System.registerDynamic('151', ['145', '50'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.default = isStyledComponent;
  var babelPluginFlowReactPropTypes_proptype_Target = $__require('145').babelPluginFlowReactPropTypes_proptype_Target || $__require('50').any;
  function isStyledComponent(target) {
    return typeof target === 'function' && typeof target.styledComponentId === 'string';
  }
  module.exports = exports['default'];
});
$__System.registerDynamic("152", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function (props, fallbackTheme, defaultProps) {
    // Props should take precedence over ThemeProvider, which should take precedence over
    // defaultProps, but React automatically puts defaultProps on props.

    /* eslint-disable react/prop-types */
    var isDefaultTheme = defaultProps && props.theme === defaultProps.theme;
    var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme;
    /* eslint-enable */

    return theme;
  };

  module.exports = exports["default"];
});
$__System.registerDynamic('174', ['156', '50', '163', '153', '151', '152', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    exports.__esModule = true;
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = $__require('156');
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = $__require('50');
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _hoistNonReactStatics = $__require('163');
    var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
    var _ThemeProvider = $__require('153');
    var _isStyledComponent2 = $__require('151');
    var _isStyledComponent3 = _interopRequireDefault(_isStyledComponent2);
    var _determineTheme = $__require('152');
    var _determineTheme2 = _interopRequireDefault(_determineTheme);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        } });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var wrapWithTheme = function wrapWithTheme(Component) {
      var _WithTheme$contextTyp;
      var componentName = Component.displayName || Component.name || 'Component';
      var isStyledComponent = (0, _isStyledComponent3.default)(Component);
      var WithTheme = function (_React$Component) {
        _inherits(WithTheme, _React$Component);
        function WithTheme() {
          var _temp, _this, _ret;
          _classCallCheck(this, WithTheme);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {}, _this.unsubscribeId = -1, _temp), _possibleConstructorReturn(_this, _ret);
        }
        WithTheme.prototype.componentWillMount = function componentWillMount() {
          var _this2 = this;
          var defaultProps = this.constructor.defaultProps;
          var styledContext = this.context[_ThemeProvider.CHANNEL_NEXT];
          var themeProp = (0, _determineTheme2.default)(this.props, undefined, defaultProps);
          if (styledContext === undefined && themeProp === undefined && 'production' !== 'production') {
            console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps');
          } else if (styledContext === undefined && themeProp !== undefined) {
            this.setState({ theme: themeProp });
          } else {
            var subscribe = styledContext.subscribe;
            this.unsubscribeId = subscribe(function (nextTheme) {
              var theme = (0, _determineTheme2.default)(_this2.props, nextTheme, defaultProps);
              _this2.setState({ theme: theme });
            });
          }
        };
        WithTheme.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var defaultProps = this.constructor.defaultProps;
          this.setState(function (oldState) {
            var theme = (0, _determineTheme2.default)(nextProps, oldState.theme, defaultProps);
            return { theme: theme };
          });
        };
        WithTheme.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.unsubscribeId !== -1) {
            this.context[_ThemeProvider.CHANNEL_NEXT].unsubscribe(this.unsubscribeId);
          }
        };
        WithTheme.prototype.render = function render() {
          var innerRef = this.props.innerRef;
          var theme = this.state.theme;
          return _react2.default.createElement(Component, _extends({ theme: theme }, this.props, {
            innerRef: isStyledComponent ? innerRef : undefined,
            ref: isStyledComponent ? undefined : innerRef
          }));
        };
        return WithTheme;
      }(_react2.default.Component);
      WithTheme.displayName = 'WithTheme(' + componentName + ')';
      WithTheme.styledComponentId = 'withTheme';
      WithTheme.contextTypes = (_WithTheme$contextTyp = {}, _WithTheme$contextTyp[_ThemeProvider.CHANNEL] = _propTypes2.default.func, _WithTheme$contextTyp[_ThemeProvider.CHANNEL_NEXT] = _ThemeProvider.CONTEXT_CHANNEL_SHAPE, _WithTheme$contextTyp);
      return (0, _hoistNonReactStatics2.default)(WithTheme, Component);
    };
    exports.default = wrapWithTheme;
    module.exports = exports['default'];
  })($__require('16'));
});
$__System.registerDynamic('175', ['148', '144', '146', '14b', '155', '15f', '150', '157', '15a', '15b', '160', '161', '153', '174'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  exports.StyleSheetManager = exports.ServerStyleSheet = exports.withTheme = exports.ThemeProvider = exports.injectGlobal = exports.keyframes = exports.css = undefined;
  var _flatten = $__require('148');
  var _flatten2 = _interopRequireDefault(_flatten);
  var _stringifyRules = $__require('144');
  var _stringifyRules2 = _interopRequireDefault(_stringifyRules);
  var _generateAlphabeticName = $__require('146');
  var _generateAlphabeticName2 = _interopRequireDefault(_generateAlphabeticName);
  var _css = $__require('14b');
  var _css2 = _interopRequireDefault(_css);
  var _ServerStyleSheet = $__require('155');
  var _ServerStyleSheet2 = _interopRequireDefault(_ServerStyleSheet);
  var _StyleSheetManager = $__require('15f');
  var _StyleSheetManager2 = _interopRequireDefault(_StyleSheetManager);
  var _StyledComponent2 = $__require('150');
  var _StyledComponent3 = _interopRequireDefault(_StyledComponent2);
  var _ComponentStyle2 = $__require('157');
  var _ComponentStyle3 = _interopRequireDefault(_ComponentStyle2);
  var _styled2 = $__require('15a');
  var _styled3 = _interopRequireDefault(_styled2);
  var _keyframes2 = $__require('15b');
  var _keyframes3 = _interopRequireDefault(_keyframes2);
  var _injectGlobal2 = $__require('160');
  var _injectGlobal3 = _interopRequireDefault(_injectGlobal2);
  var _constructWithOptions2 = $__require('161');
  var _constructWithOptions3 = _interopRequireDefault(_constructWithOptions2);
  var _ThemeProvider = $__require('153');
  var _ThemeProvider2 = _interopRequireDefault(_ThemeProvider);
  var _withTheme = $__require('174');
  var _withTheme2 = _interopRequireDefault(_withTheme);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var ComponentStyle = (0, _ComponentStyle3.default)(_generateAlphabeticName2.default, _flatten2.default, _stringifyRules2.default);
  var constructWithOptions = (0, _constructWithOptions3.default)(_css2.default);
  var StyledComponent = (0, _StyledComponent3.default)(ComponentStyle, constructWithOptions);
  var keyframes = (0, _keyframes3.default)(_generateAlphabeticName2.default, _stringifyRules2.default, _css2.default);
  var injectGlobal = (0, _injectGlobal3.default)(_stringifyRules2.default, _css2.default);
  var styled = (0, _styled3.default)(StyledComponent, constructWithOptions);
  exports.default = styled;
  exports.css = _css2.default;
  exports.keyframes = keyframes;
  exports.injectGlobal = injectGlobal;
  exports.ThemeProvider = _ThemeProvider2.default;
  exports.withTheme = _withTheme2.default;
  exports.ServerStyleSheet = _ServerStyleSheet2.default;
  exports.StyleSheetManager = _StyleSheetManager2.default;
});
$__System.registerDynamic("176", ["175"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("175");
});
$__System.registerDynamic('177', ['50', '1c', '176'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _templateObject = _taggedTemplateLiteral(['\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n'], ['\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n  ', '\n']);

  var _propTypes = $__require('50');

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _react = $__require('1c');

  var _react2 = _interopRequireDefault(_react);

  var _styledComponents = $__require('176');

  var _styledComponents2 = _interopRequireDefault(_styledComponents);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _taggedTemplateLiteral(strings, raw) {
    return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
  }

  var Flexbox = (0, _styledComponents2.default)(function (_ref) {
    var alignContent = _ref.alignContent,
        alignItems = _ref.alignItems,
        alignSelf = _ref.alignSelf,
        children = _ref.children,
        display = _ref.display,
        element = _ref.element,
        flex = _ref.flex,
        flexBasis = _ref.flexBasis,
        flexDirection = _ref.flexDirection,
        flexGrow = _ref.flexGrow,
        flexShrink = _ref.flexShrink,
        flexWrap = _ref.flexWrap,
        height = _ref.height,
        justifyContent = _ref.justifyContent,
        margin = _ref.margin,
        marginBottom = _ref.marginBottom,
        marginLeft = _ref.marginLeft,
        marginRight = _ref.marginRight,
        marginTop = _ref.marginTop,
        maxHeight = _ref.maxHeight,
        maxWidth = _ref.maxWidth,
        minHeight = _ref.minHeight,
        minWidth = _ref.minWidth,
        order = _ref.order,
        padding = _ref.padding,
        paddingBottom = _ref.paddingBottom,
        paddingLeft = _ref.paddingLeft,
        paddingRight = _ref.paddingRight,
        paddingTop = _ref.paddingTop,
        width = _ref.width,
        props = _objectWithoutProperties(_ref, ['alignContent', 'alignItems', 'alignSelf', 'children', 'display', 'element', 'flex', 'flexBasis', 'flexDirection', 'flexGrow', 'flexShrink', 'flexWrap', 'height', 'justifyContent', 'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'order', 'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', 'width']);

    return _react2.default.createElement(element, props, children);
  })(_templateObject, function (props) {
    return props.alignContent ? 'align-content: ' + props.alignContent + ';' : '';
  }, function (props) {
    return props.alignSelf ? 'align-self: ' + props.alignSelf + ';' : '';
  }, function (props) {
    return props.alignItems ? 'align-items: ' + props.alignItems + ';' : '';
  }, function (props) {
    return props.display ? 'display: ' + props.display + ';' : '';
  }, function (props) {
    return props.flex ? 'flex: ' + props.flex + ';' : '';
  }, function (props) {
    return props.flexBasis ? 'flex-basis: ' + props.flexBasis + ';' : '';
  }, function (props) {
    return props.flexDirection ? 'flex-direction: ' + props.flexDirection + ';' : '';
  }, function (props) {
    return props.flexGrow ? 'flex-grow: ' + props.flexGrow + ';' : '';
  }, function (props) {
    return props.flexShrink ? 'flex-shrink: ' + props.flexShrink + ';' : '';
  }, function (props) {
    return props.flexWrap ? 'flex-wrap: ' + props.flexWrap + ';' : '';
  }, function (props) {
    return props.height ? 'height: ' + props.height + ';' : '';
  }, function (props) {
    return props.justifyContent ? 'justify-content: ' + props.justifyContent + ';' : '';
  }, function (props) {
    return props.margin ? 'margin: ' + props.margin + ';' : '';
  }, function (props) {
    return props.marginBottom ? 'margin-bottom: ' + props.marginBottom + ';' : '';
  }, function (props) {
    return props.marginLeft ? 'margin-left: ' + props.marginLeft + ';' : '';
  }, function (props) {
    return props.marginRight ? 'margin-right: ' + props.marginRight + ';' : '';
  }, function (props) {
    return props.marginTop ? 'margin-top: ' + props.marginTop + ';' : '';
  }, function (props) {
    return props.maxHeight ? 'max-height: ' + props.maxHeight + ';' : '';
  }, function (props) {
    return props.maxWidth ? 'max-width: ' + props.maxWidth + ';' : '';
  }, function (props) {
    return props.minHeight ? 'min-height: ' + props.minHeight + ';' : '';
  }, function (props) {
    return props.minWidth ? 'min-width: ' + props.minWidth + ';' : '';
  }, function (props) {
    return props.order ? 'order: ' + props.order + ';' : '';
  }, function (props) {
    return props.padding ? 'padding: ' + props.padding + ';' : '';
  }, function (props) {
    return props.paddingBottom ? 'padding-bottom: ' + props.paddingBottom + ';' : '';
  }, function (props) {
    return props.paddingLeft ? 'padding-left: ' + props.paddingLeft + ';' : '';
  }, function (props) {
    return props.paddingRight ? 'padding-right: ' + props.paddingRight + ';' : '';
  }, function (props) {
    return props.paddingTop ? 'padding-top: ' + props.paddingTop + ';' : '';
  }, function (props) {
    return props.width ? 'width: ' + props.width + ';' : '';
  });

  Flexbox.propTypes = {
    alignContent: _propTypes2.default.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between', 'stretch']),
    alignItems: _propTypes2.default.oneOf(['baseline', 'center', 'flex-end', 'flex-start', 'stretch']),
    alignSelf: _propTypes2.default.oneOf(['baseline', 'center', 'flex-end', 'flex-start', 'stretch']),
    children: _propTypes2.default.node,
    display: _propTypes2.default.oneOf(['flex', 'inline-flex']),
    element: _propTypes2.default.oneOf(['article', 'aside', 'div', 'figure', 'footer', 'header', 'main', 'nav', 'section']),
    flex: _propTypes2.default.string,
    flexBasis: _propTypes2.default.string,
    flexDirection: _propTypes2.default.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),
    flexGrow: _propTypes2.default.number,
    flexShrink: _propTypes2.default.number,
    flexWrap: _propTypes2.default.oneOf(['nowrap', 'wrap-reverse', 'wrap']),
    height: _propTypes2.default.string,
    inline: _propTypes2.default.bool,
    justifyContent: _propTypes2.default.oneOf(['center', 'flex-end', 'flex-start', 'space-around', 'space-between']),
    margin: _propTypes2.default.string,
    marginBottom: _propTypes2.default.string,
    marginLeft: _propTypes2.default.string,
    marginRight: _propTypes2.default.string,
    marginTop: _propTypes2.default.string,
    maxHeight: _propTypes2.default.string,
    maxWidth: _propTypes2.default.string,
    minHeight: _propTypes2.default.string,
    minWidth: _propTypes2.default.string,
    order: _propTypes2.default.number,
    padding: _propTypes2.default.string,
    paddingBottom: _propTypes2.default.string,
    paddingLeft: _propTypes2.default.string,
    paddingRight: _propTypes2.default.string,
    paddingTop: _propTypes2.default.string,
    style: _propTypes2.default.object,
    width: _propTypes2.default.string
  };

  Flexbox.defaultProps = {
    display: 'flex',
    element: 'div'
  };

  exports.default = Flexbox;
});
$__System.registerDynamic('178', ['177'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.default = undefined;
  var _Flexbox = $__require('177');
  var _Flexbox2 = _interopRequireDefault(_Flexbox);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = _Flexbox2.default;
});
$__System.registerDynamic("179", ["178"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("178");
});
$__System.registerDynamic("17a", ["122", "123", "1c", "50", "179", "120"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _flexboxReact = $__require("179");
  var _flexboxReact2 = _interopRequireDefault(_flexboxReact);
  var _styler = $__require("120");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultStyle = {
    symbol: {
      normal: {
        stroke: "steelblue",
        fill: "none",
        strokeWidth: 1
      },
      highlighted: {
        stroke: "#5a98cb",
        fill: "none",
        strokeWidth: 1
      },
      selected: {
        stroke: "steelblue",
        fill: "none",
        strokeWidth: 2
      },
      muted: {
        stroke: "steelblue",
        fill: "none",
        opacity: 0.4,
        strokeWidth: 1
      }
    },
    label: {
      normal: {
        fontSize: "normal",
        color: "#333"
      },
      highlighted: {
        fontSize: "normal",
        color: "#222"
      },
      selected: {
        fontSize: "normal",
        color: "#333"
      },
      muted: {
        fontSize: "normal",
        color: "#333",
        opacity: 0.4
      }
    },
    value: {
      normal: {
        fontSize: "normal",
        color: "#333"
      },
      highlighted: {
        fontSize: "normal",
        color: "#222"
      },
      selected: {
        fontSize: "normal",
        color: "#333"
      },
      muted: {
        fontSize: "normal",
        color: "#333",
        opacity: 0.4
      }
    }
  };
  var LegendItem = function (_React$Component) {
    _inherits(LegendItem, _React$Component);
    function LegendItem() {
      _classCallCheck(this, LegendItem);
      return _possibleConstructorReturn(this, (LegendItem.__proto__ || Object.getPrototypeOf(LegendItem)).apply(this, arguments));
    }
    _createClass(LegendItem, [{
      key: "handleClick",
      value: function handleClick(e, key) {
        e.stopPropagation();
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(key);
        }
      }
    }, {
      key: "handleHover",
      value: function handleHover(e, key) {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(key);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(null);
        }
      }
    }, {
      key: "renderLine",
      value: function renderLine(style) {
        var _props = this.props,
            symbolWidth = _props.symbolWidth,
            symbolHeight = _props.symbolHeight;
        return _react2.default.createElement("svg", {
          style: { float: "left" },
          width: symbolWidth,
          height: symbolHeight
        }, _react2.default.createElement("line", {
          style: style,
          x1: 0,
          y1: parseInt(symbolWidth / 2, 10),
          x2: symbolWidth,
          y2: parseInt(symbolWidth / 2, 10),
          stroke: "black",
          strokeWidth: "2"
        }));
      }
    }, {
      key: "renderSwatch",
      value: function renderSwatch(style) {
        var _props2 = this.props,
            symbolWidth = _props2.symbolWidth,
            symbolHeight = _props2.symbolHeight;
        return _react2.default.createElement("svg", {
          style: { float: "left" },
          width: symbolWidth,
          height: symbolHeight
        }, _react2.default.createElement("rect", {
          style: style,
          x: 2,
          y: 2,
          width: symbolWidth - 4,
          height: symbolHeight - 4,
          rx: 2,
          ry: 2
        }));
      }
    }, {
      key: "renderDot",
      value: function renderDot(style) {
        var _props3 = this.props,
            symbolWidth = _props3.symbolWidth,
            symbolHeight = _props3.symbolHeight;
        return _react2.default.createElement("svg", {
          style: { float: "left" },
          width: symbolWidth,
          height: symbolHeight
        }, _react2.default.createElement("ellipse", {
          style: style,
          cx: parseInt(symbolWidth / 2, 10) + 2,
          cy: parseInt(symbolHeight / 2, 10) + 1,
          rx: parseInt(symbolWidth / 2, 10) - 2,
          ry: parseInt(symbolHeight / 2, 10) - 2
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;
        var _props4 = this.props,
            symbolStyle = _props4.symbolStyle,
            labelStyle = _props4.labelStyle,
            valueStyle = _props4.valueStyle,
            itemKey = _props4.itemKey;
        var symbol = void 0;
        switch (this.props.type) {
          case "swatch":
            symbol = this.renderSwatch(symbolStyle);
            break;
          case "line":
            symbol = this.renderLine(symbolStyle);
            break;
          case "dot":
            symbol = this.renderDot(symbolStyle);
            break;
          default:
        }
        return _react2.default.createElement(_flexboxReact2.default, {
          flexDirection: "column",
          key: itemKey
        }, _react2.default.createElement("div", {
          onClick: function onClick(e) {
            return _this2.handleClick(e, itemKey);
          },
          onMouseMove: function onMouseMove(e) {
            return _this2.handleHover(e, itemKey);
          },
          onMouseLeave: function onMouseLeave() {
            return _this2.handleHoverLeave();
          }
        }, _react2.default.createElement(_flexboxReact2.default, { flexDirection: "row" }, _react2.default.createElement(_flexboxReact2.default, { width: "20px" }, symbol), _react2.default.createElement(_flexboxReact2.default, { flexDirection: "column" }, _react2.default.createElement(_flexboxReact2.default, null, _react2.default.createElement("div", { style: labelStyle }, this.props.label)), _react2.default.createElement(_flexboxReact2.default, null, _react2.default.createElement("div", { style: valueStyle }, this.props.value))))));
      }
    }]);
    return LegendItem;
  }(_react2.default.Component);
  var Legend = function (_React$Component2) {
    _inherits(Legend, _React$Component2);
    function Legend() {
      _classCallCheck(this, Legend);
      return _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).apply(this, arguments));
    }
    _createClass(Legend, [{
      key: "handleClick",
      value: function handleClick(e, key) {
        e.stopPropagation();
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(key);
        }
      }
    }, {
      key: "handleHover",
      value: function handleHover(e, key) {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(key);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(null);
        }
      }
    }, {
      key: "providedStyle",
      value: function providedStyle(category) {
        var style = {};
        if (this.props.style) {
          if (this.props.style instanceof _styler.Styler) {
            style = this.props.style.legendStyle(category.key, this.props.type);
          } else if (_underscore2.default.isObject(this.props.style)) {
            style = this.props.style[category.key];
          } else if (_underscore2.default.isFunction(this.props.style)) {
            style = this.props.style(category.key);
          }
        }
        return style;
      }
    }, {
      key: "styleMode",
      value: function styleMode(category) {
        var isHighlighted = this.props.highlight && category.key === this.props.highlight;
        var isSelected = this.props.selection && category.key === this.props.selection;
        var isDisabled = category.disabled;
        var mode = "normal";
        if (this.props.selection) {
          if (isSelected) {
            mode = "selected";
          } else if (isHighlighted) {
            mode = "highlighted";
          } else {
            mode = "muted";
          }
        } else if (isHighlighted) {
          mode = "highlighted";
        } else if (isDisabled) {
          mode = "muted";
        }
        return mode;
      }
    }, {
      key: "symbolStyle",
      value: function symbolStyle(category) {
        var styleMap = this.providedStyle(category, this.props.type);
        var styleMode = this.styleMode(category);
        return (0, _merge2.default)(true, defaultStyle[styleMode], styleMap.symbol[styleMode] ? styleMap.symbol[styleMode] : {});
      }
    }, {
      key: "labelStyle",
      value: function labelStyle(category) {
        var styleMap = this.providedStyle(category);
        var styleMode = this.styleMode(category);
        return (0, _merge2.default)(true, defaultStyle[styleMode], styleMap.label[styleMode] ? styleMap.label[styleMode] : {});
      }
    }, {
      key: "valueStyle",
      value: function valueStyle(category) {
        var styleMap = this.providedStyle(category);
        var styleMode = this.styleMode(category);
        return (0, _merge2.default)(true, defaultStyle[styleMode], styleMap.value[styleMode] ? styleMap.value[styleMode] : {});
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;
        var _props5 = this.props,
            type = _props5.type,
            symbolWidth = _props5.symbolWidth,
            symbolHeight = _props5.symbolHeight;
        var items = this.props.categories.map(function (category) {
          var key = category.key,
              label = category.label,
              value = category.value;
          var symbolStyle = _this4.symbolStyle(category);
          var labelStyle = _this4.labelStyle(category);
          var valueStyle = _this4.valueStyle(category);
          return _react2.default.createElement(LegendItem, {
            key: key,
            type: type,
            itemKey: key,
            label: label,
            value: value,
            symbolWidth: symbolWidth,
            symbolHeight: symbolHeight,
            symbolStyle: symbolStyle,
            labelStyle: labelStyle,
            valueStyle: valueStyle,
            onSelectionChange: _this4.props.onSelectionChange,
            onHighlightChange: _this4.props.onHighlightChange
          });
        });
        var align = this.props.align === "left" ? "flex-start" : "flex-end";
        return _react2.default.createElement(_flexboxReact2.default, { justifyContent: align }, items);
      }
    }]);
    return Legend;
  }(_react2.default.Component);
  exports.default = Legend;
  Legend.propTypes = {
    type: _propTypes2.default.oneOf(["swatch", "line", "dot"]),
    align: _propTypes2.default.oneOf(["left", "right"]),
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]).isRequired,
    categories: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      key: _propTypes2.default.string.isRequired,
      label: _propTypes2.default.string.isRequired,
      disabled: _propTypes2.default.bool,
      style: _propTypes2.default.object,
      labelStyle: _propTypes2.default.object
    })).isRequired,
    symbolWidth: _propTypes2.default.number,
    symbolHeight: _propTypes2.default.number,
    highlight: _propTypes2.default.string,
    selection: _propTypes2.default.string,
    onSelectionChange: _propTypes2.default.func,
    onHighlightChange: _propTypes2.default.func
  };
  Legend.defaultProps = {
    style: {},
    labelStyle: {},
    type: "swatch",
    align: "left",
    symbolWidth: 16,
    symbolHeight: 16
  };
});
$__System.registerDynamic('17b', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var pi = Math.PI;
    var tau = 2 * pi;
    var epsilon = 1e-6;
    var tauEpsilon = tau - epsilon;

    function Path() {
      this._x0 = this._y0 = // start of current subpath
      this._x1 = this._y1 = null; // end of current subpath
      this._ = "";
    }

    function path() {
      return new Path();
    }

    Path.prototype = path.prototype = {
      constructor: Path,
      moveTo: function (x, y) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
      },
      closePath: function () {
        if (this._x1 !== null) {
          this._x1 = this._x0, this._y1 = this._y0;
          this._ += "Z";
        }
      },
      lineTo: function (x, y) {
        this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      quadraticCurveTo: function (x1, y1, x, y) {
        this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      bezierCurveTo: function (x1, y1, x2, y2, x, y) {
        this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
      },
      arcTo: function (x1, y1, x2, y2, r) {
        x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
        var x0 = this._x1,
            y0 = this._y1,
            x21 = x2 - x1,
            y21 = y2 - y1,
            x01 = x0 - x1,
            y01 = y0 - y1,
            l01_2 = x01 * x01 + y01 * y01;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x1,y1).
        if (this._x1 === null) {
          this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
        }

        // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
        else if (!(l01_2 > epsilon)) {}

          // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
          // Equivalently, is (x1,y1) coincident with (x2,y2)?
          // Or, is the radius zero? Line to (x1,y1).
          else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
              this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
            }

            // Otherwise, draw an arc!
            else {
                var x20 = x2 - x0,
                    y20 = y2 - y0,
                    l21_2 = x21 * x21 + y21 * y21,
                    l20_2 = x20 * x20 + y20 * y20,
                    l21 = Math.sqrt(l21_2),
                    l01 = Math.sqrt(l01_2),
                    l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                    t01 = l / l01,
                    t21 = l / l21;

                // If the start tangent is not coincident with (x0,y0), line to.
                if (Math.abs(t01 - 1) > epsilon) {
                  this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
                }

                this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
              }
      },
      arc: function (x, y, r, a0, a1, ccw) {
        x = +x, y = +y, r = +r;
        var dx = r * Math.cos(a0),
            dy = r * Math.sin(a0),
            x0 = x + dx,
            y0 = y + dy,
            cw = 1 ^ ccw,
            da = ccw ? a0 - a1 : a1 - a0;

        // Is the radius negative? Error.
        if (r < 0) throw new Error("negative radius: " + r);

        // Is this path empty? Move to (x0,y0).
        if (this._x1 === null) {
          this._ += "M" + x0 + "," + y0;
        }

        // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
        else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
            this._ += "L" + x0 + "," + y0;
          }

        // Is this arc empty? We’re done.
        if (!r) return;

        // Does the angle go the wrong way? Flip the direction.
        if (da < 0) da = da % tau + tau;

        // Is this a complete circle? Draw two arcs to complete the circle.
        if (da > tauEpsilon) {
          this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
        }

        // Is this arc non-empty? Draw an arc!
        else if (da > epsilon) {
            this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
          }
      },
      rect: function (x, y, w, h) {
        this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
      },
      toString: function () {
        return this._;
      }
    };

    exports.path = path;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("17c", ["17b"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("17b");
});
$__System.registerDynamic('17d', ['17c'], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('17c')) : typeof undefined === 'function' && define.amd ? define(['exports', 'd3-path'], factory) : factory(global.d3 = global.d3 || {}, global.d3);
  })(this, function (exports, d3Path) {
    'use strict';

    var constant = function (x) {
      return function constant() {
        return x;
      };
    };

    var abs = Math.abs;
    var atan2 = Math.atan2;
    var cos = Math.cos;
    var max = Math.max;
    var min = Math.min;
    var sin = Math.sin;
    var sqrt = Math.sqrt;

    var epsilon = 1e-12;
    var pi = Math.PI;
    var halfPi = pi / 2;
    var tau = 2 * pi;

    function acos(x) {
      return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
    }

    function asin(x) {
      return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
    }

    function arcInnerRadius(d) {
      return d.innerRadius;
    }

    function arcOuterRadius(d) {
      return d.outerRadius;
    }

    function arcStartAngle(d) {
      return d.startAngle;
    }

    function arcEndAngle(d) {
      return d.endAngle;
    }

    function arcPadAngle(d) {
      return d && d.padAngle; // Note: optional!
    }

    function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
      var x10 = x1 - x0,
          y10 = y1 - y0,
          x32 = x3 - x2,
          y32 = y3 - y2,
          t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
      return [x0 + t * x10, y0 + t * y10];
    }

    // Compute perpendicular offset line of length rc.
    // http://mathworld.wolfram.com/Circle-LineIntersection.html
    function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
      var x01 = x0 - x1,
          y01 = y0 - y1,
          lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),
          ox = lo * y01,
          oy = -lo * x01,
          x11 = x0 + ox,
          y11 = y0 + oy,
          x10 = x1 + ox,
          y10 = y1 + oy,
          x00 = (x11 + x10) / 2,
          y00 = (y11 + y10) / 2,
          dx = x10 - x11,
          dy = y10 - y11,
          d2 = dx * dx + dy * dy,
          r = r1 - rc,
          D = x11 * y10 - x10 * y11,
          d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),
          cx0 = (D * dy - dx * d) / d2,
          cy0 = (-D * dx - dy * d) / d2,
          cx1 = (D * dy + dx * d) / d2,
          cy1 = (-D * dx + dy * d) / d2,
          dx0 = cx0 - x00,
          dy0 = cy0 - y00,
          dx1 = cx1 - x00,
          dy1 = cy1 - y00;

      // Pick the closer of the two intersection points.
      // TODO Is there a faster way to determine which intersection to use?
      if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

      return {
        cx: cx0,
        cy: cy0,
        x01: -ox,
        y01: -oy,
        x11: cx0 * (r1 / r - 1),
        y11: cy0 * (r1 / r - 1)
      };
    }

    var arc = function () {
      var innerRadius = arcInnerRadius,
          outerRadius = arcOuterRadius,
          cornerRadius = constant(0),
          padRadius = null,
          startAngle = arcStartAngle,
          endAngle = arcEndAngle,
          padAngle = arcPadAngle,
          context = null;

      function arc() {
        var buffer,
            r,
            r0 = +innerRadius.apply(this, arguments),
            r1 = +outerRadius.apply(this, arguments),
            a0 = startAngle.apply(this, arguments) - halfPi,
            a1 = endAngle.apply(this, arguments) - halfPi,
            da = abs(a1 - a0),
            cw = a1 > a0;

        if (!context) context = buffer = d3Path.path();

        // Ensure that the outer radius is always larger than the inner radius.
        if (r1 < r0) r = r1, r1 = r0, r0 = r;

        // Is it a point?
        if (!(r1 > epsilon)) context.moveTo(0, 0);

        // Or is it a circle or annulus?
        else if (da > tau - epsilon) {
            context.moveTo(r1 * cos(a0), r1 * sin(a0));
            context.arc(0, 0, r1, a0, a1, !cw);
            if (r0 > epsilon) {
              context.moveTo(r0 * cos(a1), r0 * sin(a1));
              context.arc(0, 0, r0, a1, a0, cw);
            }
          }

          // Or is it a circular or annular sector?
          else {
              var a01 = a0,
                  a11 = a1,
                  a00 = a0,
                  a10 = a1,
                  da0 = da,
                  da1 = da,
                  ap = padAngle.apply(this, arguments) / 2,
                  rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),
                  rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
                  rc0 = rc,
                  rc1 = rc,
                  t0,
                  t1;

              // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
              if (rp > epsilon) {
                var p0 = asin(rp / r0 * sin(ap)),
                    p1 = asin(rp / r1 * sin(ap));
                if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
                if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
              }

              var x01 = r1 * cos(a01),
                  y01 = r1 * sin(a01),
                  x10 = r0 * cos(a10),
                  y10 = r0 * sin(a10);

              // Apply rounded corners?
              if (rc > epsilon) {
                var x11 = r1 * cos(a11),
                    y11 = r1 * sin(a11),
                    x00 = r0 * cos(a00),
                    y00 = r0 * sin(a00);

                // Restrict the corner radius according to the sector angle.
                if (da < pi) {
                  var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
                      ax = x01 - oc[0],
                      ay = y01 - oc[1],
                      bx = x11 - oc[0],
                      by = y11 - oc[1],
                      kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),
                      lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
                  rc0 = min(rc, (r0 - lc) / (kc - 1));
                  rc1 = min(rc, (r1 - lc) / (kc + 1));
                }
              }

              // Is the sector collapsed to a line?
              if (!(da1 > epsilon)) context.moveTo(x01, y01);

              // Does the sector’s outer ring have rounded corners?
              else if (rc1 > epsilon) {
                  t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
                  t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

                  context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

                  // Have the corners merged?
                  if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

                  // Otherwise, draw the two corners and the ring.
                  else {
                      context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
                      context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                      context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
                    }
                }

                // Or is the outer ring just a circular arc?
                else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

              // Is there no inner ring, and it’s a circular sector?
              // Or perhaps it’s an annular sector collapsed due to padding?
              if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);

              // Does the sector’s inner ring (or point) have rounded corners?
              else if (rc0 > epsilon) {
                  t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
                  t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

                  context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

                  // Have the corners merged?
                  if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

                  // Otherwise, draw the two corners and the ring.
                  else {
                      context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
                      context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                      context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
                    }
                }

                // Or is the inner ring just a circular arc?
                else context.arc(0, 0, r0, a10, a00, cw);
            }

        context.closePath();

        if (buffer) return context = null, buffer + "" || null;
      }

      arc.centroid = function () {
        var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
            a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
        return [cos(a) * r, sin(a) * r];
      };

      arc.innerRadius = function (_) {
        return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant(+_), arc) : innerRadius;
      };

      arc.outerRadius = function (_) {
        return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant(+_), arc) : outerRadius;
      };

      arc.cornerRadius = function (_) {
        return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant(+_), arc) : cornerRadius;
      };

      arc.padRadius = function (_) {
        return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant(+_), arc) : padRadius;
      };

      arc.startAngle = function (_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), arc) : startAngle;
      };

      arc.endAngle = function (_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), arc) : endAngle;
      };

      arc.padAngle = function (_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), arc) : padAngle;
      };

      arc.context = function (_) {
        return arguments.length ? (context = _ == null ? null : _, arc) : context;
      };

      return arc;
    };

    function Linear(context) {
      this._context = context;
    }

    Linear.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._point = 0;
      },
      lineEnd: function () {
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2; // proceed
          default:
            this._context.lineTo(x, y);break;
        }
      }
    };

    var curveLinear = function (context) {
      return new Linear(context);
    };

    function x(p) {
      return p[0];
    }

    function y(p) {
      return p[1];
    }

    var line = function () {
      var x$$1 = x,
          y$$1 = y,
          defined = constant(true),
          context = null,
          curve = curveLinear,
          output = null;

      function line(data) {
        var i,
            n = data.length,
            d,
            defined0 = false,
            buffer;

        if (context == null) output = curve(buffer = d3Path.path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) output.lineStart();else output.lineEnd();
          }
          if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      line.x = function (_) {
        return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant(+_), line) : x$$1;
      };

      line.y = function (_) {
        return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant(+_), line) : y$$1;
      };

      line.defined = function (_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), line) : defined;
      };

      line.curve = function (_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
      };

      line.context = function (_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
      };

      return line;
    };

    var area = function () {
      var x0 = x,
          x1 = null,
          y0 = constant(0),
          y1 = y,
          defined = constant(true),
          context = null,
          curve = curveLinear,
          output = null;

      function area(data) {
        var i,
            j,
            k,
            n = data.length,
            d,
            defined0 = false,
            buffer,
            x0z = new Array(n),
            y0z = new Array(n);

        if (context == null) output = curve(buffer = d3Path.path());

        for (i = 0; i <= n; ++i) {
          if (!(i < n && defined(d = data[i], i, data)) === defined0) {
            if (defined0 = !defined0) {
              j = i;
              output.areaStart();
              output.lineStart();
            } else {
              output.lineEnd();
              output.lineStart();
              for (k = i - 1; k >= j; --k) {
                output.point(x0z[k], y0z[k]);
              }
              output.lineEnd();
              output.areaEnd();
            }
          }
          if (defined0) {
            x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
            output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
          }
        }

        if (buffer) return output = null, buffer + "" || null;
      }

      function arealine() {
        return line().defined(defined).curve(curve).context(context);
      }

      area.x = function (_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), x1 = null, area) : x0;
      };

      area.x0 = function (_) {
        return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), area) : x0;
      };

      area.x1 = function (_) {
        return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : x1;
      };

      area.y = function (_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), y1 = null, area) : y0;
      };

      area.y0 = function (_) {
        return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), area) : y0;
      };

      area.y1 = function (_) {
        return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : y1;
      };

      area.lineX0 = area.lineY0 = function () {
        return arealine().x(x0).y(y0);
      };

      area.lineY1 = function () {
        return arealine().x(x0).y(y1);
      };

      area.lineX1 = function () {
        return arealine().x(x1).y(y0);
      };

      area.defined = function (_) {
        return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), area) : defined;
      };

      area.curve = function (_) {
        return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
      };

      area.context = function (_) {
        return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
      };

      return area;
    };

    var descending = function (a, b) {
      return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
    };

    var identity = function (d) {
      return d;
    };

    var pie = function () {
      var value = identity,
          sortValues = descending,
          sort = null,
          startAngle = constant(0),
          endAngle = constant(tau),
          padAngle = constant(0);

      function pie(data) {
        var i,
            n = data.length,
            j,
            k,
            sum = 0,
            index = new Array(n),
            arcs = new Array(n),
            a0 = +startAngle.apply(this, arguments),
            da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
            a1,
            p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
            pa = p * (da < 0 ? -1 : 1),
            v;

        for (i = 0; i < n; ++i) {
          if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
            sum += v;
          }
        }

        // Optionally sort the arcs by previously-computed values or by data.
        if (sortValues != null) index.sort(function (i, j) {
          return sortValues(arcs[i], arcs[j]);
        });else if (sort != null) index.sort(function (i, j) {
          return sort(data[i], data[j]);
        });

        // Compute the arcs! They are stored in the original data's order.
        for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
          j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
            data: data[j],
            index: i,
            value: v,
            startAngle: a0,
            endAngle: a1,
            padAngle: p
          };
        }

        return arcs;
      }

      pie.value = function (_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), pie) : value;
      };

      pie.sortValues = function (_) {
        return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
      };

      pie.sort = function (_) {
        return arguments.length ? (sort = _, sortValues = null, pie) : sort;
      };

      pie.startAngle = function (_) {
        return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), pie) : startAngle;
      };

      pie.endAngle = function (_) {
        return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), pie) : endAngle;
      };

      pie.padAngle = function (_) {
        return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), pie) : padAngle;
      };

      return pie;
    };

    var curveRadialLinear = curveRadial(curveLinear);

    function Radial(curve) {
      this._curve = curve;
    }

    Radial.prototype = {
      areaStart: function () {
        this._curve.areaStart();
      },
      areaEnd: function () {
        this._curve.areaEnd();
      },
      lineStart: function () {
        this._curve.lineStart();
      },
      lineEnd: function () {
        this._curve.lineEnd();
      },
      point: function (a, r) {
        this._curve.point(r * Math.sin(a), r * -Math.cos(a));
      }
    };

    function curveRadial(curve) {

      function radial(context) {
        return new Radial(curve(context));
      }

      radial._curve = curve;

      return radial;
    }

    function lineRadial(l) {
      var c = l.curve;

      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;

      l.curve = function (_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };

      return l;
    }

    var lineRadial$1 = function () {
      return lineRadial(line().curve(curveRadialLinear));
    };

    var areaRadial = function () {
      var a = area().curve(curveRadialLinear),
          c = a.curve,
          x0 = a.lineX0,
          x1 = a.lineX1,
          y0 = a.lineY0,
          y1 = a.lineY1;

      a.angle = a.x, delete a.x;
      a.startAngle = a.x0, delete a.x0;
      a.endAngle = a.x1, delete a.x1;
      a.radius = a.y, delete a.y;
      a.innerRadius = a.y0, delete a.y0;
      a.outerRadius = a.y1, delete a.y1;
      a.lineStartAngle = function () {
        return lineRadial(x0());
      }, delete a.lineX0;
      a.lineEndAngle = function () {
        return lineRadial(x1());
      }, delete a.lineX1;
      a.lineInnerRadius = function () {
        return lineRadial(y0());
      }, delete a.lineY0;
      a.lineOuterRadius = function () {
        return lineRadial(y1());
      }, delete a.lineY1;

      a.curve = function (_) {
        return arguments.length ? c(curveRadial(_)) : c()._curve;
      };

      return a;
    };

    var pointRadial = function (x, y) {
      return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
    };

    var slice = Array.prototype.slice;

    function linkSource(d) {
      return d.source;
    }

    function linkTarget(d) {
      return d.target;
    }

    function link(curve) {
      var source = linkSource,
          target = linkTarget,
          x$$1 = x,
          y$$1 = y,
          context = null;

      function link() {
        var buffer,
            argv = slice.call(arguments),
            s = source.apply(this, argv),
            t = target.apply(this, argv);
        if (!context) context = buffer = d3Path.path();
        curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));
        if (buffer) return context = null, buffer + "" || null;
      }

      link.source = function (_) {
        return arguments.length ? (source = _, link) : source;
      };

      link.target = function (_) {
        return arguments.length ? (target = _, link) : target;
      };

      link.x = function (_) {
        return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant(+_), link) : x$$1;
      };

      link.y = function (_) {
        return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant(+_), link) : y$$1;
      };

      link.context = function (_) {
        return arguments.length ? (context = _ == null ? null : _, link) : context;
      };

      return link;
    }

    function curveHorizontal(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
    }

    function curveVertical(context, x0, y0, x1, y1) {
      context.moveTo(x0, y0);
      context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
    }

    function curveRadial$1(context, x0, y0, x1, y1) {
      var p0 = pointRadial(x0, y0),
          p1 = pointRadial(x0, y0 = (y0 + y1) / 2),
          p2 = pointRadial(x1, y0),
          p3 = pointRadial(x1, y1);
      context.moveTo(p0[0], p0[1]);
      context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
    }

    function linkHorizontal() {
      return link(curveHorizontal);
    }

    function linkVertical() {
      return link(curveVertical);
    }

    function linkRadial() {
      var l = link(curveRadial$1);
      l.angle = l.x, delete l.x;
      l.radius = l.y, delete l.y;
      return l;
    }

    var circle = {
      draw: function (context, size) {
        var r = Math.sqrt(size / pi);
        context.moveTo(r, 0);
        context.arc(0, 0, r, 0, tau);
      }
    };

    var cross = {
      draw: function (context, size) {
        var r = Math.sqrt(size / 5) / 2;
        context.moveTo(-3 * r, -r);
        context.lineTo(-r, -r);
        context.lineTo(-r, -3 * r);
        context.lineTo(r, -3 * r);
        context.lineTo(r, -r);
        context.lineTo(3 * r, -r);
        context.lineTo(3 * r, r);
        context.lineTo(r, r);
        context.lineTo(r, 3 * r);
        context.lineTo(-r, 3 * r);
        context.lineTo(-r, r);
        context.lineTo(-3 * r, r);
        context.closePath();
      }
    };

    var tan30 = Math.sqrt(1 / 3);
    var tan30_2 = tan30 * 2;

    var diamond = {
      draw: function (context, size) {
        var y = Math.sqrt(size / tan30_2),
            x = y * tan30;
        context.moveTo(0, -y);
        context.lineTo(x, 0);
        context.lineTo(0, y);
        context.lineTo(-x, 0);
        context.closePath();
      }
    };

    var ka = 0.89081309152928522810;
    var kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);
    var kx = Math.sin(tau / 10) * kr;
    var ky = -Math.cos(tau / 10) * kr;

    var star = {
      draw: function (context, size) {
        var r = Math.sqrt(size * ka),
            x = kx * r,
            y = ky * r;
        context.moveTo(0, -r);
        context.lineTo(x, y);
        for (var i = 1; i < 5; ++i) {
          var a = tau * i / 5,
              c = Math.cos(a),
              s = Math.sin(a);
          context.lineTo(s * r, -c * r);
          context.lineTo(c * x - s * y, s * x + c * y);
        }
        context.closePath();
      }
    };

    var square = {
      draw: function (context, size) {
        var w = Math.sqrt(size),
            x = -w / 2;
        context.rect(x, x, w, w);
      }
    };

    var sqrt3 = Math.sqrt(3);

    var triangle = {
      draw: function (context, size) {
        var y = -Math.sqrt(size / (sqrt3 * 3));
        context.moveTo(0, y * 2);
        context.lineTo(-sqrt3 * y, -y);
        context.lineTo(sqrt3 * y, -y);
        context.closePath();
      }
    };

    var c = -0.5;
    var s = Math.sqrt(3) / 2;
    var k = 1 / Math.sqrt(12);
    var a = (k / 2 + 1) * 3;

    var wye = {
      draw: function (context, size) {
        var r = Math.sqrt(size / a),
            x0 = r / 2,
            y0 = r * k,
            x1 = x0,
            y1 = r * k + r,
            x2 = -x1,
            y2 = y1;
        context.moveTo(x0, y0);
        context.lineTo(x1, y1);
        context.lineTo(x2, y2);
        context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
        context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
        context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
        context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
        context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
        context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
        context.closePath();
      }
    };

    var symbols = [circle, cross, diamond, square, star, triangle, wye];

    var symbol = function () {
      var type = constant(circle),
          size = constant(64),
          context = null;

      function symbol() {
        var buffer;
        if (!context) context = buffer = d3Path.path();
        type.apply(this, arguments).draw(context, +size.apply(this, arguments));
        if (buffer) return context = null, buffer + "" || null;
      }

      symbol.type = function (_) {
        return arguments.length ? (type = typeof _ === "function" ? _ : constant(_), symbol) : type;
      };

      symbol.size = function (_) {
        return arguments.length ? (size = typeof _ === "function" ? _ : constant(+_), symbol) : size;
      };

      symbol.context = function (_) {
        return arguments.length ? (context = _ == null ? null : _, symbol) : context;
      };

      return symbol;
    };

    var noop = function () {};

    function point(that, x, y) {
      that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
    }

    function Basis(context) {
      this._context = context;
    }

    Basis.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 3:
            point(this, this._x1, this._y1); // proceed
          case 2:
            this._context.lineTo(this._x1, this._y1);break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3;this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
          default:
            point(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    var basis = function (context) {
      return new Basis(context);
    };

    function BasisClosed(context) {
      this._context = context;
    }

    BasisClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x2, this._y2);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
              this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x2, this._y2);
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              break;
            }
        }
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._x2 = x, this._y2 = y;break;
          case 1:
            this._point = 2;this._x3 = x, this._y3 = y;break;
          case 2:
            this._point = 3;this._x4 = x, this._y4 = y;this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);break;
          default:
            point(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    var basisClosed = function (context) {
      return new BasisClosed(context);
    };

    function BasisOpen(context) {
      this._context = context;
    }

    BasisOpen.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._y0 = this._y1 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3;var x0 = (this._x0 + 4 * this._x1 + x) / 6,
                y0 = (this._y0 + 4 * this._y1 + y) / 6;this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);break;
          case 3:
            this._point = 4; // proceed
          default:
            point(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
      }
    };

    var basisOpen = function (context) {
      return new BasisOpen(context);
    };

    function Bundle(context, beta) {
      this._basis = new Basis(context);
      this._beta = beta;
    }

    Bundle.prototype = {
      lineStart: function () {
        this._x = [];
        this._y = [];
        this._basis.lineStart();
      },
      lineEnd: function () {
        var x = this._x,
            y = this._y,
            j = x.length - 1;

        if (j > 0) {
          var x0 = x[0],
              y0 = y[0],
              dx = x[j] - x0,
              dy = y[j] - y0,
              i = -1,
              t;

          while (++i <= j) {
            t = i / j;
            this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
          }
        }

        this._x = this._y = null;
        this._basis.lineEnd();
      },
      point: function (x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    var bundle = function custom(beta) {

      function bundle(context) {
        return beta === 1 ? new Basis(context) : new Bundle(context, beta);
      }

      bundle.beta = function (beta) {
        return custom(+beta);
      };

      return bundle;
    }(0.85);

    function point$1(that, x, y) {
      that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
    }

    function Cardinal(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    Cardinal.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);break;
          case 3:
            point$1(this, this._x1, this._y1);break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2;this._x1 = x, this._y1 = y;break;
          case 2:
            this._point = 3; // proceed
          default:
            point$1(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinal = function custom(tension) {

      function cardinal(context) {
        return new Cardinal(context, tension);
      }

      cardinal.tension = function (tension) {
        return custom(+tension);
      };

      return cardinal;
    }(0);

    function CardinalClosed(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.lineTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              this.point(this._x5, this._y5);
              break;
            }
        }
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._x3 = x, this._y3 = y;break;
          case 1:
            this._point = 2;this._context.moveTo(this._x4 = x, this._y4 = y);break;
          case 2:
            this._point = 3;this._x5 = x, this._y5 = y;break;
          default:
            point$1(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalClosed = function custom(tension) {

      function cardinal(context) {
        return new CardinalClosed(context, tension);
      }

      cardinal.tension = function (tension) {
        return custom(+tension);
      };

      return cardinal;
    }(0);

    function CardinalOpen(context, tension) {
      this._context = context;
      this._k = (1 - tension) / 6;
    }

    CardinalOpen.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3;this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);break;
          case 3:
            this._point = 4; // proceed
          default:
            point$1(this, x, y);break;
        }
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var cardinalOpen = function custom(tension) {

      function cardinal(context) {
        return new CardinalOpen(context, tension);
      }

      cardinal.tension = function (tension) {
        return custom(+tension);
      };

      return cardinal;
    }(0);

    function point$2(that, x, y) {
      var x1 = that._x1,
          y1 = that._y1,
          x2 = that._x2,
          y2 = that._y2;

      if (that._l01_a > epsilon) {
        var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
            n = 3 * that._l01_a * (that._l01_a + that._l12_a);
        x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
        y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
      }

      if (that._l23_a > epsilon) {
        var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
            m = 3 * that._l23_a * (that._l23_a + that._l12_a);
        x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
        y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
      }

      that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
    }

    function CatmullRom(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRom.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x2, this._y2);break;
          case 3:
            this.point(this._x2, this._y2);break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3; // proceed
          default:
            point$2(this, x, y);break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRom = function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
      }

      catmullRom.alpha = function (alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    }(0.5);

    function CatmullRomClosed(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 1:
            {
              this._context.moveTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 2:
            {
              this._context.lineTo(this._x3, this._y3);
              this._context.closePath();
              break;
            }
          case 3:
            {
              this.point(this._x3, this._y3);
              this.point(this._x4, this._y4);
              this.point(this._x5, this._y5);
              break;
            }
        }
      },
      point: function (x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0:
            this._point = 1;this._x3 = x, this._y3 = y;break;
          case 1:
            this._point = 2;this._context.moveTo(this._x4 = x, this._y4 = y);break;
          case 2:
            this._point = 3;this._x5 = x, this._y5 = y;break;
          default:
            point$2(this, x, y);break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomClosed = function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
      }

      catmullRom.alpha = function (alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    }(0.5);

    function CatmullRomOpen(context, alpha) {
      this._context = context;
      this._alpha = alpha;
    }

    CatmullRomOpen.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
        this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
      },
      lineEnd: function () {
        if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;

        if (this._point) {
          var x23 = this._x2 - x,
              y23 = this._y2 - y;
          this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
        }

        switch (this._point) {
          case 0:
            this._point = 1;break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3;this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);break;
          case 3:
            this._point = 4; // proceed
          default:
            point$2(this, x, y);break;
        }

        this._l01_a = this._l12_a, this._l12_a = this._l23_a;
        this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
        this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
        this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
      }
    };

    var catmullRomOpen = function custom(alpha) {

      function catmullRom(context) {
        return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
      }

      catmullRom.alpha = function (alpha) {
        return custom(+alpha);
      };

      return catmullRom;
    }(0.5);

    function LinearClosed(context) {
      this._context = context;
    }

    LinearClosed.prototype = {
      areaStart: noop,
      areaEnd: noop,
      lineStart: function () {
        this._point = 0;
      },
      lineEnd: function () {
        if (this._point) this._context.closePath();
      },
      point: function (x, y) {
        x = +x, y = +y;
        if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
      }
    };

    var linearClosed = function (context) {
      return new LinearClosed(context);
    };

    function sign(x) {
      return x < 0 ? -1 : 1;
    }

    // Calculate the slopes of the tangents (Hermite-type interpolation) based on
    // the following paper: Steffen, M. 1990. A Simple Method for Monotonic
    // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
    // NOV(II), P. 443, 1990.
    function slope3(that, x2, y2) {
      var h0 = that._x1 - that._x0,
          h1 = x2 - that._x1,
          s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
          s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
          p = (s0 * h1 + s1 * h0) / (h0 + h1);
      return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
    }

    // Calculate a one-sided slope.
    function slope2(that, t) {
      var h = that._x1 - that._x0;
      return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
    }

    // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
    // "you can express cubic Hermite interpolation in terms of cubic Bézier curves
    // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
    function point$3(that, t0, t1) {
      var x0 = that._x0,
          y0 = that._y0,
          x1 = that._x1,
          y1 = that._y1,
          dx = (x1 - x0) / 3;
      that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
    }

    function MonotoneX(context) {
      this._context = context;
    }

    MonotoneX.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        switch (this._point) {
          case 2:
            this._context.lineTo(this._x1, this._y1);break;
          case 3:
            point$3(this, this._t0, slope2(this, this._t0));break;
        }
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        this._line = 1 - this._line;
      },
      point: function (x, y) {
        var t1 = NaN;

        x = +x, y = +y;
        if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2;break;
          case 2:
            this._point = 3;point$3(this, slope2(this, t1 = slope3(this, x, y)), t1);break;
          default:
            point$3(this, this._t0, t1 = slope3(this, x, y));break;
        }

        this._x0 = this._x1, this._x1 = x;
        this._y0 = this._y1, this._y1 = y;
        this._t0 = t1;
      }
    };

    function MonotoneY(context) {
      this._context = new ReflectContext(context);
    }

    (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
      MonotoneX.prototype.point.call(this, y, x);
    };

    function ReflectContext(context) {
      this._context = context;
    }

    ReflectContext.prototype = {
      moveTo: function (x, y) {
        this._context.moveTo(y, x);
      },
      closePath: function () {
        this._context.closePath();
      },
      lineTo: function (x, y) {
        this._context.lineTo(y, x);
      },
      bezierCurveTo: function (x1, y1, x2, y2, x, y) {
        this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
      }
    };

    function monotoneX(context) {
      return new MonotoneX(context);
    }

    function monotoneY(context) {
      return new MonotoneY(context);
    }

    function Natural(context) {
      this._context = context;
    }

    Natural.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x = [];
        this._y = [];
      },
      lineEnd: function () {
        var x = this._x,
            y = this._y,
            n = x.length;

        if (n) {
          this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
          if (n === 2) {
            this._context.lineTo(x[1], y[1]);
          } else {
            var px = controlPoints(x),
                py = controlPoints(y);
            for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
              this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
            }
          }
        }

        if (this._line || this._line !== 0 && n === 1) this._context.closePath();
        this._line = 1 - this._line;
        this._x = this._y = null;
      },
      point: function (x, y) {
        this._x.push(+x);
        this._y.push(+y);
      }
    };

    // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
    function controlPoints(x) {
      var i,
          n = x.length - 1,
          m,
          a = new Array(n),
          b = new Array(n),
          r = new Array(n);
      a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
      for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
      a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
      for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
      a[n - 1] = r[n - 1] / b[n - 1];
      for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
      b[n - 1] = (x[n] + a[n - 1]) / 2;
      for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
      return [a, b];
    }

    var natural = function (context) {
      return new Natural(context);
    };

    function Step(context, t) {
      this._context = context;
      this._t = t;
    }

    Step.prototype = {
      areaStart: function () {
        this._line = 0;
      },
      areaEnd: function () {
        this._line = NaN;
      },
      lineStart: function () {
        this._x = this._y = NaN;
        this._point = 0;
      },
      lineEnd: function () {
        if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
        if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
        if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
      },
      point: function (x, y) {
        x = +x, y = +y;
        switch (this._point) {
          case 0:
            this._point = 1;this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);break;
          case 1:
            this._point = 2; // proceed
          default:
            {
              if (this._t <= 0) {
                this._context.lineTo(this._x, y);
                this._context.lineTo(x, y);
              } else {
                var x1 = this._x * (1 - this._t) + x * this._t;
                this._context.lineTo(x1, this._y);
                this._context.lineTo(x1, y);
              }
              break;
            }
        }
        this._x = x, this._y = y;
      }
    };

    var step = function (context) {
      return new Step(context, 0.5);
    };

    function stepBefore(context) {
      return new Step(context, 0);
    }

    function stepAfter(context) {
      return new Step(context, 1);
    }

    var none = function (series, order) {
      if (!((n = series.length) > 1)) return;
      for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
        s0 = s1, s1 = series[order[i]];
        for (j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    };

    var none$1 = function (series) {
      var n = series.length,
          o = new Array(n);
      while (--n >= 0) o[n] = n;
      return o;
    };

    function stackValue(d, key) {
      return d[key];
    }

    var stack = function () {
      var keys = constant([]),
          order = none$1,
          offset = none,
          value = stackValue;

      function stack(data) {
        var kz = keys.apply(this, arguments),
            i,
            m = data.length,
            n = kz.length,
            sz = new Array(n),
            oz;

        for (i = 0; i < n; ++i) {
          for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
            si[j] = sij = [0, +value(data[j], ki, j, data)];
            sij.data = data[j];
          }
          si.key = ki;
        }

        for (i = 0, oz = order(sz); i < n; ++i) {
          sz[oz[i]].index = i;
        }

        offset(sz, oz);
        return sz;
      }

      stack.keys = function (_) {
        return arguments.length ? (keys = typeof _ === "function" ? _ : constant(slice.call(_)), stack) : keys;
      };

      stack.value = function (_) {
        return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), stack) : value;
      };

      stack.order = function (_) {
        return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant(slice.call(_)), stack) : order;
      };

      stack.offset = function (_) {
        return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
      };

      return stack;
    };

    var expand = function (series, order) {
      if (!((n = series.length) > 0)) return;
      for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
        for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
        if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
      }
      none(series, order);
    };

    var diverging = function (series, order) {
      if (!((n = series.length) > 1)) return;
      for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
        for (yp = yn = 0, i = 0; i < n; ++i) {
          if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {
            d[0] = yp, d[1] = yp += dy;
          } else if (dy < 0) {
            d[1] = yn, d[0] = yn += dy;
          } else {
            d[0] = yp;
          }
        }
      }
    };

    var silhouette = function (series, order) {
      if (!((n = series.length) > 0)) return;
      for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
        for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
        s0[j][1] += s0[j][0] = -y / 2;
      }
      none(series, order);
    };

    var wiggle = function (series, order) {
      if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
      for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
        for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
          var si = series[order[i]],
              sij0 = si[j][1] || 0,
              sij1 = si[j - 1][1] || 0,
              s3 = (sij0 - sij1) / 2;
          for (var k = 0; k < i; ++k) {
            var sk = series[order[k]],
                skj0 = sk[j][1] || 0,
                skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0, s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        if (s1) y -= s2 / s1;
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      none(series, order);
    };

    var ascending = function (series) {
      var sums = series.map(sum);
      return none$1(series).sort(function (a, b) {
        return sums[a] - sums[b];
      });
    };

    function sum(series) {
      var s = 0,
          i = -1,
          n = series.length,
          v;
      while (++i < n) if (v = +series[i][1]) s += v;
      return s;
    }

    var descending$1 = function (series) {
      return ascending(series).reverse();
    };

    var insideOut = function (series) {
      var n = series.length,
          i,
          j,
          sums = series.map(sum),
          order = none$1(series).sort(function (a, b) {
        return sums[b] - sums[a];
      }),
          top = 0,
          bottom = 0,
          tops = [],
          bottoms = [];

      for (i = 0; i < n; ++i) {
        j = order[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }

      return bottoms.reverse().concat(tops);
    };

    var reverse = function (series) {
      return none$1(series).reverse();
    };

    exports.arc = arc;
    exports.area = area;
    exports.line = line;
    exports.pie = pie;
    exports.areaRadial = areaRadial;
    exports.radialArea = areaRadial;
    exports.lineRadial = lineRadial$1;
    exports.radialLine = lineRadial$1;
    exports.pointRadial = pointRadial;
    exports.linkHorizontal = linkHorizontal;
    exports.linkVertical = linkVertical;
    exports.linkRadial = linkRadial;
    exports.symbol = symbol;
    exports.symbols = symbols;
    exports.symbolCircle = circle;
    exports.symbolCross = cross;
    exports.symbolDiamond = diamond;
    exports.symbolSquare = square;
    exports.symbolStar = star;
    exports.symbolTriangle = triangle;
    exports.symbolWye = wye;
    exports.curveBasisClosed = basisClosed;
    exports.curveBasisOpen = basisOpen;
    exports.curveBasis = basis;
    exports.curveBundle = bundle;
    exports.curveCardinalClosed = cardinalClosed;
    exports.curveCardinalOpen = cardinalOpen;
    exports.curveCardinal = cardinal;
    exports.curveCatmullRomClosed = catmullRomClosed;
    exports.curveCatmullRomOpen = catmullRomOpen;
    exports.curveCatmullRom = catmullRom;
    exports.curveLinearClosed = linearClosed;
    exports.curveLinear = curveLinear;
    exports.curveMonotoneX = monotoneX;
    exports.curveMonotoneY = monotoneY;
    exports.curveNatural = natural;
    exports.curveStep = step;
    exports.curveStepAfter = stepAfter;
    exports.curveStepBefore = stepBefore;
    exports.stack = stack;
    exports.stackOffsetExpand = expand;
    exports.stackOffsetDiverging = diverging;
    exports.stackOffsetNone = none;
    exports.stackOffsetSilhouette = silhouette;
    exports.stackOffsetWiggle = wiggle;
    exports.stackOrderAscending = ascending;
    exports.stackOrderDescending = descending$1;
    exports.stackOrderInsideOut = insideOut;
    exports.stackOrderNone = none$1;
    exports.stackOrderReverse = reverse;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("124", ["17d"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("17d");
});
$__System.registerDynamic("121", ["124"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _d3Shape = $__require("124");

    exports.default = {
        curveBasisClosed: _d3Shape.curveBasisClosed,
        curveBasisOpen: _d3Shape.curveBasisOpen,
        curveBasis: _d3Shape.curveBasis,
        curveBundle: _d3Shape.curveBundle,
        curveCardinalClosed: _d3Shape.curveCardinalClosed,
        curveCardinalOpen: _d3Shape.curveCardinalOpen,
        curveCardinal: _d3Shape.curveCardinal,
        curveCatmullRomClosed: _d3Shape.curveCatmullRomClosed,
        curveCatmullRomOpen: _d3Shape.curveCatmullRomOpen,
        curveCatmullRom: _d3Shape.curveCatmullRom,
        curveLinearClosed: _d3Shape.curveLinearClosed,
        curveLinear: _d3Shape.curveLinear,
        curveMonotoneX: _d3Shape.curveMonotoneX,
        curveMonotoneY: _d3Shape.curveMonotoneY,
        curveNatural: _d3Shape.curveNatural,
        curveStep: _d3Shape.curveStep,
        curveStepAfter: _d3Shape.curveStepAfter,
        curveStepBefore: _d3Shape.curveStepBefore
    }; /**
        *  Copyright (c) 2017, The Regents of the University of California,
        *  through Lawrence Berkeley National Laboratory (subject to receipt
        *  of any required approvals from the U.S. Dept. of Energy).
        *  All rights reserved.
        *
        *  This source code is licensed under the BSD-style license found in the
        *  LICENSE file in the root directory of this source tree.
        */
});
$__System.registerDynamic("17e", ["122", "124", "123", "1c", "50", "19", "120", "11f", "121"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _d3Shape = $__require("124");
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _pondjs = $__require("19");
  var _styler = $__require("120");
  var _util = $__require("11f");
  var _curve = $__require("121");
  var _curve2 = _interopRequireDefault(_curve);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultStyle = {
    normal: {
      stroke: "steelblue",
      fill: "none",
      strokeWidth: 1
    },
    highlighted: {
      stroke: "#5a98cb",
      fill: "none",
      strokeWidth: 1
    },
    selected: {
      stroke: "steelblue",
      fill: "none",
      strokeWidth: 2
    },
    muted: {
      stroke: "steelblue",
      fill: "none",
      opacity: 0.4,
      strokeWidth: 1
    }
  };
  var LineChart = function (_React$Component) {
    _inherits(LineChart, _React$Component);
    function LineChart() {
      _classCallCheck(this, LineChart);
      return _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).apply(this, arguments));
    }
    _createClass(LineChart, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var newSeries = nextProps.series;
        var oldSeries = this.props.series;
        var width = nextProps.width;
        var timeScale = nextProps.timeScale;
        var yScale = nextProps.yScale;
        var interpolation = nextProps.interpolation;
        var highlight = nextProps.highlight;
        var selection = nextProps.selection;
        var columns = nextProps.columns;
        var widthChanged = this.props.width !== width;
        var timeScaleChanged = (0, _util.scaleAsString)(this.props.timeScale) !== (0, _util.scaleAsString)(timeScale);
        var yAxisScaleChanged = this.props.yScale !== yScale;
        var interpolationChanged = this.props.interpolation !== interpolation;
        var highlightChanged = this.props.highlight !== highlight;
        var selectionChanged = this.props.selection !== selection;
        var columnsChanged = this.props.columns !== columns;
        var seriesChanged = false;
        if (oldSeries.length !== newSeries.length) {
          seriesChanged = true;
        } else {
          seriesChanged = !_pondjs.TimeSeries.is(oldSeries, newSeries);
        }
        return widthChanged || seriesChanged || timeScaleChanged || yAxisScaleChanged || interpolationChanged || highlightChanged || selectionChanged || columnsChanged;
      }
    }, {
      key: "handleHover",
      value: function handleHover(e, column) {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(column);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onHighlightChange) {
          this.props.onHighlightChange(null);
        }
      }
    }, {
      key: "handleClick",
      value: function handleClick(e, column) {
        e.stopPropagation();
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(column);
        }
      }
    }, {
      key: "providedPathStyleMap",
      value: function providedPathStyleMap(column) {
        var style = {};
        if (this.props.style) {
          if (this.props.style instanceof _styler.Styler) {
            style = this.props.style.lineChartStyle()[column];
          } else if (_underscore2.default.isObject(this.props.style)) {
            style = this.props.style[column];
          } else if (_underscore2.default.isFunction(this.props.style)) {
            style = this.props.style(column);
          }
        }
        return style;
      }
    }, {
      key: "pathStyle",
      value: function pathStyle(column) {
        var style = void 0;
        var styleMap = this.providedPathStyleMap(column);
        var isHighlighted = this.props.highlight && column === this.props.highlight;
        var isSelected = this.props.selection && column === this.props.selection;
        if (this.props.selection) {
          if (isSelected) {
            style = (0, _merge2.default)(true, defaultStyle.selected, styleMap.selected ? styleMap.selected : {});
          } else if (isHighlighted) {
            style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
          } else {
            style = (0, _merge2.default)(true, defaultStyle.muted, styleMap.muted ? styleMap.muted : {});
          }
        } else if (isHighlighted) {
          style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
        } else {
          style = (0, _merge2.default)(true, defaultStyle.normal, styleMap.normal);
        }
        style.pointerEvents = "none";
        return style;
      }
    }, {
      key: "renderPath",
      value: function renderPath(data, column, key) {
        var _this2 = this;
        var hitStyle = {
          stroke: "white",
          fill: "none",
          opacity: 0.0,
          strokeWidth: 7,
          cursor: "crosshair",
          pointerEvents: "stroke"
        };
        var path = (0, _d3Shape.line)().curve(_curve2.default[this.props.interpolation]).x(function (d) {
          return _this2.props.timeScale(d.x);
        }).y(function (d) {
          return _this2.props.yScale(d.y);
        })(data);
        return _react2.default.createElement("g", { key: key }, _react2.default.createElement("path", {
          d: path,
          style: this.pathStyle(column)
        }), _react2.default.createElement("path", {
          d: path,
          style: hitStyle,
          onClick: function onClick(e) {
            return _this2.handleClick(e, column);
          },
          onMouseLeave: function onMouseLeave() {
            return _this2.handleHoverLeave();
          },
          onMouseMove: function onMouseMove(e) {
            return _this2.handleHover(e, column);
          }
        }));
      }
    }, {
      key: "renderLines",
      value: function renderLines() {
        var _this3 = this;
        return _underscore2.default.map(this.props.columns, function (column) {
          return _this3.renderLine(column);
        });
      }
    }, {
      key: "renderLine",
      value: function renderLine(column) {
        var pathLines = [];
        var count = 1;
        if (this.props.breakLine) {
          var currentPoints = null;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = this.props.series.events()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var d = _step.value;
              var timestamp = new Date(d.begin().getTime() + (d.end().getTime() - d.begin().getTime()) / 2);
              var value = d.get(column);
              var badPoint = _underscore2.default.isNull(value) || _underscore2.default.isNaN(value) || !_underscore2.default.isFinite(value);
              if (!badPoint) {
                if (!currentPoints) currentPoints = [];
                currentPoints.push({
                  x: timestamp,
                  y: value
                });
              } else if (currentPoints) {
                if (currentPoints.length > 1) {
                  pathLines.push(this.renderPath(currentPoints, column, count));
                  count += 1;
                }
                currentPoints = null;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if (currentPoints && currentPoints.length > 1) {
            pathLines.push(this.renderPath(currentPoints, column, count));
            count += 1;
          }
        } else {
          var cleanedPoints = [];
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;
          try {
            for (var _iterator2 = this.props.series.events()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var _d = _step2.value;
              var _timestamp = new Date(_d.begin().getTime() + (_d.end().getTime() - _d.begin().getTime()) / 2);
              var _value = _d.get(column);
              var _badPoint = _underscore2.default.isNull(_value) || _underscore2.default.isNaN(_value) || !_underscore2.default.isFinite(_value);
              if (!_badPoint) {
                cleanedPoints.push({
                  x: _timestamp,
                  y: _value
                });
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          pathLines.push(this.renderPath(cleanedPoints, column, count));
          count += 1;
        }
        return _react2.default.createElement("g", { key: column }, pathLines);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement("g", null, this.renderLines());
      }
    }]);
    return LineChart;
  }(_react2.default.Component);
  exports.default = LineChart;
  LineChart.propTypes = {
    series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,
    axis: _propTypes2.default.string.isRequired,
    columns: _propTypes2.default.arrayOf(_propTypes2.default.string),
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),
    interpolation: _propTypes2.default.oneOf(["curveBasis", "curveBasisOpen", "curveBundle", "curveCardinal", "curveCardinalOpen", "curveCatmullRom", "curveCatmullRomOpen", "curveLinear", "curveMonotoneX", "curveMonotoneY", "curveNatural", "curveRadial", "curveStep", "curveStepAfter", "curveStepBefore"]),
    breakLine: _propTypes2.default.bool,
    selection: _propTypes2.default.string,
    onSelectionChange: _propTypes2.default.func,
    highlight: _propTypes2.default.string,
    onHighlightChange: _propTypes2.default.func,
    timeScale: _propTypes2.default.func,
    yScale: _propTypes2.default.func,
    width: _propTypes2.default.number
  };
  LineChart.defaultProps = {
    columns: ["value"],
    smooth: true,
    interpolation: "curveLinear",
    breakLine: true
  };
});
$__System.registerDynamic("17f", ["1c", "50"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    } /**
opyright (c) 2015-present, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *  of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree.


    /**
     * This takes a single child and inserts a prop 'width' on it that is the
     * current width of the this container. This is handy if you want to surround
     * a chart or other svg diagram and have this drive the chart width.
     */
    var Resizable = function (_React$Component) {
        _inherits(Resizable, _React$Component);

        function Resizable(props) {
            _classCallCheck(this, Resizable);

            var _this = _possibleConstructorReturn(this, (Resizable.__proto__ || Object.getPrototypeOf(Resizable)).call(this, props));

            _this.state = { width: 0 };
            return _this;
        }

        _createClass(Resizable, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;

                window.addEventListener("resize", function () {
                    return _this2.handleResize();
                });
                this.handleResize();
            }
        }, {
            key: "componentWillUnmount",
            value: function componentWillUnmount() {
                var _this3 = this;

                window.removeEventListener("resize", function () {
                    return _this3.handleResize();
                });
            }
        }, {
            key: "handleResize",
            value: function handleResize() {
                if (this.container) {
                    this.setState({
                        width: this.container.offsetWidth
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _this4 = this;

                var child = _react2.default.Children.only(this.props.children);
                var childElement = this.state.width ? _react2.default.cloneElement(child, { width: this.state.width }) : null;
                return _react2.default.createElement("div", _extends({
                    ref: function ref(c) {
                        _this4.container = c;
                    }
                }, this.props), childElement);
            }
        }]);

        return Resizable;
    }(_react2.default.Component);

    exports.default = Resizable;

    Resizable.propTypes = {
        children: _propTypes2.default.node
    };
});
$__System.registerDynamic("126", ["122", "1c", "50", "123", "19", "13b", "180", "141"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _pondjs = $__require("19");
  var _d3TimeFormat = $__require("13b");
  var _Label = $__require("180");
  var _Label2 = _interopRequireDefault(_Label);
  var _ValueList = $__require("141");
  var _ValueList2 = _interopRequireDefault(_ValueList);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var EventTime = function EventTime(_ref) {
    var time = _ref.time,
        _ref$format = _ref.format,
        format = _ref$format === undefined ? "%m/%d/%y %X" : _ref$format;
    var textStyle = {
      fontSize: 11,
      textAnchor: "left",
      fill: "#bdbdbd",
      pointerEvents: "none"
    };
    var text = void 0;
    if (_underscore2.default.isFunction(format)) {
      text = format(time);
    } else {
      var fmt = (0, _d3TimeFormat.timeFormat)(format);
      text = fmt(time);
    }
    return _react2.default.createElement("text", {
      x: 0,
      y: 0,
      dy: "1.2em",
      style: textStyle
    }, text);
  };
  EventTime.propTypes = {
    time: _propTypes2.default.instanceOf(Date),
    format: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string])
  };
  EventTime.defaultProps = { infoTimeFormat: "%m/%d/%y %X" };
  var EventTimeRange = function EventTimeRange(_ref2) {
    var timerange = _ref2.timerange,
        _ref2$format = _ref2.format,
        format = _ref2$format === undefined ? "%m/%d/%y %X" : _ref2$format;
    var textStyle = {
      fontSize: 11,
      textAnchor: "left",
      fill: "#bdbdbd",
      pointerEvents: "none"
    };
    var d1 = timerange.begin();
    var d2 = timerange.end();
    var beginText = void 0;
    var endText = void 0;
    if (_underscore2.default.isFunction(format)) {
      beginText = format(d1);
      endText = format(d2);
    } else {
      var fmt = (0, _d3TimeFormat.timeFormat)(format);
      beginText = fmt(d1);
      endText = fmt(d2);
    }
    return _react2.default.createElement("text", {
      x: 0,
      y: 0,
      dy: "1.2em",
      style: textStyle
    }, beginText + " to " + endText);
  };
  EventTimeRange.propTypes = {
    timerange: _propTypes2.default.instanceOf(_pondjs.TimeRange),
    format: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string])
  };
  EventTimeRange.defaultProps = { infoTimeFormat: "%m/%d/%y %X" };
  var EventIndex = function EventIndex(_ref3) {
    var index = _ref3.index,
        format = _ref3.format;
    var textStyle = {
      fontSize: 11,
      textAnchor: "left",
      fill: "#bdbdbd",
      pointerEvents: "none"
    };
    var text = void 0;
    if (_underscore2.default.isFunction(format)) {
      text = format(index);
    } else if (_underscore2.default.isString(format)) {
      var fmt = (0, _d3TimeFormat.timeFormat)(format);
      text = fmt(index.begin());
    } else {
      text = index.toString();
    }
    return _react2.default.createElement("text", {
      x: 0,
      y: 0,
      dy: "1.2em",
      style: textStyle
    }, text);
  };
  EventIndex.propTypes = {
    index: _propTypes2.default.instanceOf(_pondjs.Index),
    format: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string])
  };
  var EventMarker = function (_React$Component) {
    _inherits(EventMarker, _React$Component);
    function EventMarker() {
      _classCallCheck(this, EventMarker);
      return _possibleConstructorReturn(this, (EventMarker.__proto__ || Object.getPrototypeOf(EventMarker)).apply(this, arguments));
    }
    _createClass(EventMarker, [{
      key: "renderTime",
      value: function renderTime(event) {
        if (event instanceof _pondjs.TimeEvent) {
          return _react2.default.createElement(EventTime, {
            time: event.timestamp(),
            format: this.props.infoTimeFormat
          });
        } else if (event instanceof _pondjs.IndexedEvent) {
          return _react2.default.createElement(EventIndex, {
            index: event.index(),
            format: this.props.infoTimeFormat
          });
        } else if (event instanceof _pondjs.TimeRangeEvent) {
          return _react2.default.createElement(EventTimeRange, {
            timerange: event.timerange(),
            format: this.props.infoTimeFormat
          });
        }
        return _react2.default.createElement("g", null);
      }
    }, {
      key: "renderMarker",
      value: function renderMarker(event, column, info) {
        var t = void 0;
        if (event instanceof _pondjs.TimeEvent) {
          t = event.timestamp();
        } else {
          t = new Date(event.begin().getTime() + (event.end().getTime() - event.begin().getTime()) / 2);
        }
        var value = void 0;
        if (this.props.yValueFunc) {
          value = this.props.yValueFunc(event, column);
        } else {
          value = event.get(column);
        }
        var posx = this.props.timeScale(t) + this.props.offsetX;
        var posy = this.props.yScale(value) - this.props.offsetY;
        var infoBoxProps = {
          align: "left",
          style: this.props.infoStyle,
          width: this.props.infoWidth,
          height: this.props.infoHeight
        };
        var w = this.props.infoWidth;
        var lineBottom = posy - 10;
        var verticalStem = void 0;
        var horizontalStem = void 0;
        var dot = void 0;
        var infoBox = void 0;
        var transform = void 0;
        var label = void 0;
        if (info) {
          if (_underscore2.default.isString(this.props.info)) {
            infoBox = _react2.default.createElement(_Label2.default, _extends({}, infoBoxProps, { label: info }));
          } else {
            infoBox = _react2.default.createElement(_ValueList2.default, _extends({}, infoBoxProps, { values: info }));
          }
        }
        if (this.props.type === "point") {
          var textDefaultStyle = {
            fontSize: 11,
            pointerEvents: "none",
            paintOrder: "stroke",
            fill: "#b0b0b0",
            strokeWidth: 2,
            strokeLinecap: "butt",
            strokeLinejoin: "miter",
            fontWeight: 800
          };
          var dx = 0;
          var dy = 0;
          switch (this.props.markerLabelAlign) {
            case "left":
              dx = 5;
              textDefaultStyle.textAnchor = "start";
              textDefaultStyle.alignmentBaseline = "central";
              break;
            case "right":
              dx = -5;
              textDefaultStyle.textAnchor = "end";
              textDefaultStyle.alignmentBaseline = "central";
              break;
            case "top":
              dy = -5;
              textDefaultStyle.textAnchor = "middle";
              textDefaultStyle.alignmentBaseline = "bottom";
              break;
            case "bottom":
              dy = 5;
              textDefaultStyle.textAnchor = "middle";
              textDefaultStyle.alignmentBaseline = "hanging";
              break;
            default:
          }
          var tstyle = (0, _merge2.default)(true, textDefaultStyle, this.props.markerLabelStyle);
          dot = _react2.default.createElement("circle", {
            cx: posx,
            cy: posy,
            r: this.props.markerRadius,
            pointerEvents: "none",
            style: this.props.markerStyle
          });
          label = _react2.default.createElement("text", {
            x: posx,
            y: posy,
            dx: dx,
            dy: dy,
            style: tstyle
          }, this.props.markerLabel);
          return _react2.default.createElement("g", null, dot, label);
        } else {
          if (posx + 10 + w < this.props.width * 3 / 4) {
            if (info) {
              verticalStem = _react2.default.createElement("line", {
                pointerEvents: "none",
                style: this.props.stemStyle,
                x1: -10,
                y1: lineBottom,
                x2: -10,
                y2: 20
              });
              horizontalStem = _react2.default.createElement("line", {
                pointerEvents: "none",
                style: this.props.stemStyle,
                x1: -10,
                y1: 20,
                x2: -2,
                y2: 20
              });
            }
            dot = _react2.default.createElement("circle", {
              cx: -10,
              cy: lineBottom,
              r: this.props.markerRadius,
              pointerEvents: "none",
              style: this.props.markerStyle
            });
            transform = "translate(" + (posx + 10) + "," + 10 + ")";
          } else {
            if (info) {
              verticalStem = _react2.default.createElement("line", {
                pointerEvents: "none",
                style: this.props.stemStyle,
                x1: w + 10,
                y1: lineBottom,
                x2: w + 10,
                y2: 20
              });
              horizontalStem = _react2.default.createElement("line", {
                pointerEvents: "none",
                style: this.props.stemStyle,
                x1: w + 10,
                y1: 20,
                x2: w + 2,
                y2: 20
              });
            }
            dot = _react2.default.createElement("circle", {
              cx: w + 10,
              cy: lineBottom,
              r: this.props.markerRadius,
              pointerEvents: "none",
              style: this.props.markerStyle
            });
            transform = "translate(" + (posx - w - 10) + "," + 10 + ")";
          }
          return _react2.default.createElement("g", { transform: transform }, verticalStem, horizontalStem, dot, this.renderTime(event), _react2.default.createElement("g", { transform: "translate(0," + 20 + ")" }, infoBox));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _props = this.props,
            event = _props.event,
            column = _props.column,
            info = _props.info;
        if (!event) {
          return _react2.default.createElement("g", null);
        }
        return _react2.default.createElement("g", null, this.renderMarker(event, column, info));
      }
    }]);
    return EventMarker;
  }(_react2.default.Component);
  exports.default = EventMarker;
  EventMarker.propTypes = {
    type: _propTypes2.default.oneOf(["point", "flag"]),
    event: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(_pondjs.TimeEvent), _propTypes2.default.instanceOf(_pondjs.IndexedEvent), _propTypes2.default.instanceOf(_pondjs.TimeRangeEvent)]),
    column: _propTypes2.default.string,
    info: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    }))]),
    infoStyle: _propTypes2.default.object,
    infoWidth: _propTypes2.default.number,
    infoHeight: _propTypes2.default.number,
    infoTimeFormat: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),
    markerLabelAlign: _propTypes2.default.oneOf(["left", "right", "top", "bottom"]),
    markerRadius: _propTypes2.default.number,
    markerStyle: _propTypes2.default.object,
    yValueFunc: _propTypes2.default.func,
    offsetX: _propTypes2.default.number,
    offsetY: _propTypes2.default.number,
    timeScale: _propTypes2.default.func,
    yScale: _propTypes2.default.func,
    width: _propTypes2.default.number
  };
  EventMarker.defaultProps = {
    type: "flag",
    column: "value",
    infoWidth: 90,
    infoHeight: 25,
    infoStyle: {
      fill: "white",
      opacity: 0.90,
      stroke: "#999",
      pointerEvents: "none"
    },
    stemStyle: {
      stroke: "#999",
      cursor: "crosshair",
      pointerEvents: "none"
    },
    markerStyle: { fill: "#999" },
    markerRadius: 2,
    markerLabelAlign: "left",
    markerLabelStyle: { fill: "#999" },
    offsetX: 0,
    offsetY: 0
  };
});
$__System.registerDynamic("181", ["122", "123", "1c", "50", "4c", "19", "126", "11f", "120"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _pondjs = $__require("19");
  var _EventMarker = $__require("126");
  var _EventMarker2 = _interopRequireDefault(_EventMarker);
  var _util = $__require("11f");
  var _styler = $__require("120");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var defaultStyle = {
    normal: {
      fill: "steelblue",
      opacity: 0.8
    },
    highlighted: {
      fill: "steelblue",
      opacity: 1.0
    },
    selected: {
      fill: "steelblue",
      opacity: 1.0
    },
    muted: {
      fill: "steelblue",
      opacity: 0.4
    }
  };
  var ScatterChart = function (_React$Component) {
    _inherits(ScatterChart, _React$Component);
    function ScatterChart(props) {
      _classCallCheck(this, ScatterChart);
      var _this = _possibleConstructorReturn(this, (ScatterChart.__proto__ || Object.getPrototypeOf(ScatterChart)).call(this, props));
      _this.handleHover = _this.handleHover.bind(_this);
      _this.handleHoverLeave = _this.handleHoverLeave.bind(_this);
      return _this;
    }
    _createClass(ScatterChart, [{
      key: "getOffsetMousePosition",
      value: function getOffsetMousePosition(e) {
        var offset = (0, _util.getElementOffset)(this.eventrect);
        var x = e.pageX - offset.left;
        var y = e.pageY - offset.top;
        return [Math.round(x), Math.round(y)];
      }
    }, {
      key: "handleClick",
      value: function handleClick(e, event, column) {
        var point = {
          event: event,
          column: column
        };
        if (this.props.onSelectionChange) {
          this.props.onSelectionChange(point);
        }
      }
    }, {
      key: "handleHover",
      value: function handleHover(e) {
        var _getOffsetMousePositi = this.getOffsetMousePosition(e),
            _getOffsetMousePositi2 = _slicedToArray(_getOffsetMousePositi, 2),
            x = _getOffsetMousePositi2[0],
            y = _getOffsetMousePositi2[1];
        var point = void 0;
        var minDistance = Infinity;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = this.props.columns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var column = _step.value;
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;
            try {
              for (var _iterator2 = this.props.series.events()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var event = _step2.value;
                var t = event.timestamp();
                var value = event.get(column);
                var px = this.props.timeScale(t);
                var py = this.props.yScale(value);
                var distance = Math.sqrt((px - x) * (px - x) + (py - y) * (py - y));
                if (distance < minDistance) {
                  point = {
                    event: event,
                    column: column
                  };
                  minDistance = distance;
                }
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        if (this.props.onMouseNear) {
          this.props.onMouseNear(point);
        }
      }
    }, {
      key: "handleHoverLeave",
      value: function handleHoverLeave() {
        if (this.props.onMouseNear) {
          this.props.onMouseNear(null);
        }
      }
    }, {
      key: "providedStyleMap",
      value: function providedStyleMap(column, event) {
        var style = {};
        if (this.props.style) {
          if (this.props.style instanceof _styler.Styler) {
            style = this.props.style.scatterChartStyle()[column];
          } else if (_underscore2.default.isFunction(this.props.style)) {
            style = this.props.style(column, event);
          } else if (_underscore2.default.isObject(this.props.style)) {
            style = this.props.style ? this.props.style[column] : defaultStyle;
          }
        }
        return style;
      }
    }, {
      key: "style",
      value: function style(column, event) {
        var style = void 0;
        var styleMap = this.providedStyleMap(column, event);
        var isHighlighted = this.props.highlight && column === this.props.highlight.column && _pondjs.Event.is(this.props.highlight.event, event);
        var isSelected = this.props.selected && column === this.props.selected.column && _pondjs.Event.is(this.props.selected.event, event);
        if (this.props.selected) {
          if (isSelected) {
            style = (0, _merge2.default)(true, defaultStyle.selected, styleMap.selected ? styleMap.selected : {});
          } else if (isHighlighted) {
            style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
          } else {
            style = (0, _merge2.default)(true, defaultStyle.muted, styleMap.muted ? styleMap.muted : {});
          }
        } else if (isHighlighted) {
          style = (0, _merge2.default)(true, defaultStyle.highlighted, styleMap.highlighted ? styleMap.highlighted : {});
        } else {
          style = (0, _merge2.default)(true, defaultStyle.normal, styleMap.normal ? styleMap.normal : {});
        }
        return style;
      }
    }, {
      key: "renderScatter",
      value: function renderScatter() {
        var _this2 = this;
        var _props = this.props,
            series = _props.series,
            timeScale = _props.timeScale,
            yScale = _props.yScale;
        var points = [];
        var hoverOverlay = void 0;
        var pointerEvents = this.props.onSelectionChange ? "auto" : "none";
        this.props.columns.forEach(function (column) {
          var key = 1;
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;
          try {
            var _loop = function _loop() {
              var event = _step3.value;
              var t = new Date(event.begin().getTime() + (event.end().getTime() - event.begin().getTime()) / 2);
              var value = event.get(column);
              var style = _this2.style(column, event);
              var x = timeScale(t);
              var y = yScale(value);
              var radius = _underscore2.default.isFunction(_this2.props.radius) ? _this2.props.radius(event, column) : +_this2.props.radius;
              var isHighlighted = _this2.props.highlight && _pondjs.Event.is(_this2.props.highlight.event, event) && column === _this2.props.highlight.column;
              if (isHighlighted && _this2.props.info) {
                hoverOverlay = _react2.default.createElement(_EventMarker2.default, _extends({}, _this2.props, {
                  event: event,
                  column: column,
                  marker: "circle",
                  markerRadius: 0
                }));
              }
              points.push(_react2.default.createElement("circle", {
                key: column + "-" + key,
                cx: x,
                cy: y,
                r: radius,
                style: style,
                pointerEvents: pointerEvents,
                onMouseMove: _this2.handleHover,
                onClick: function onClick(e) {
                  return _this2.handleClick(e, event, column);
                }
              }));
              key += 1;
            };
            for (var _iterator3 = series.events()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              _loop();
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        });
        return _react2.default.createElement("g", null, points, hoverOverlay);
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;
        return _react2.default.createElement("g", null, _react2.default.createElement("rect", {
          key: "scatter-hit-rect",
          ref: function ref(c) {
            _this3.eventrect = c;
          },
          style: { opacity: 0.0 },
          x: 0,
          y: 0,
          width: this.props.width,
          height: this.props.height,
          onMouseMove: this.handleHover,
          onMouseLeave: this.handleHoverLeave
        }), this.renderScatter());
      }
    }]);
    return ScatterChart;
  }(_react2.default.Component);
  exports.default = ScatterChart;
  ScatterChart.propTypes = {
    series: _propTypes2.default.instanceOf(_pondjs.TimeSeries).isRequired,
    columns: _propTypes2.default.arrayOf(_propTypes2.default.string),
    axis: _propTypes2.default.string.isRequired,
    radius: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func, _propTypes2.default.instanceOf(_styler.Styler)]),
    style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),
    infoStyle: _propTypes2.default.shape({
      line: _propTypes2.default.object,
      box: _propTypes2.default.object
    }),
    infoWidth: _propTypes2.default.number,
    infoHeight: _propTypes2.default.number,
    info: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    })),
    selected: _propTypes2.default.arrayOf(_propTypes2.default.shape({
      event: _propTypes2.default.instanceOf(_pondjs.Event),
      column: _propTypes2.default.string
    })),
    onSelectionChange: _propTypes2.default.func,
    highlight: _propTypes2.default.shape({
      event: _propTypes2.default.instanceOf(_pondjs.Event),
      column: _propTypes2.default.string
    }),
    onMouseNear: _propTypes2.default.func,
    timeScale: _propTypes2.default.func,
    yScale: _propTypes2.default.func,
    width: _propTypes2.default.number,
    height: _propTypes2.default.number
  };
  ScatterChart.defaultProps = {
    columns: ["value"],
    radius: 2.0,
    infoStyle: {
      stroke: "#999",
      fill: "white",
      opacity: 0.90,
      pointerEvents: "none"
    },
    stemStyle: {
      stroke: "#999",
      cursor: "crosshair",
      pointerEvents: "none"
    },
    markerStyle: { fill: "#999" },
    infoWidth: 90,
    infoHeight: 30
  };
});
$__System.registerDynamic("182", [], true, function ($__require, exports, module) {
    /* */
    "format cjs";
    // This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).
    // JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt

    var global = this || self,
        GLOBAL = global;
    !function () {

        var colorbrewer = { YlGn: {
                3: ["#f7fcb9", "#addd8e", "#31a354"],
                4: ["#ffffcc", "#c2e699", "#78c679", "#238443"],
                5: ["#ffffcc", "#c2e699", "#78c679", "#31a354", "#006837"],
                6: ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#31a354", "#006837"],
                7: ["#ffffcc", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"],
                8: ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#005a32"],
                9: ["#ffffe5", "#f7fcb9", "#d9f0a3", "#addd8e", "#78c679", "#41ab5d", "#238443", "#006837", "#004529"]
            }, YlGnBu: {
                3: ["#edf8b1", "#7fcdbb", "#2c7fb8"],
                4: ["#ffffcc", "#a1dab4", "#41b6c4", "#225ea8"],
                5: ["#ffffcc", "#a1dab4", "#41b6c4", "#2c7fb8", "#253494"],
                6: ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#2c7fb8", "#253494"],
                7: ["#ffffcc", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"],
                8: ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#0c2c84"],
                9: ["#ffffd9", "#edf8b1", "#c7e9b4", "#7fcdbb", "#41b6c4", "#1d91c0", "#225ea8", "#253494", "#081d58"]
            }, GnBu: {
                3: ["#e0f3db", "#a8ddb5", "#43a2ca"],
                4: ["#f0f9e8", "#bae4bc", "#7bccc4", "#2b8cbe"],
                5: ["#f0f9e8", "#bae4bc", "#7bccc4", "#43a2ca", "#0868ac"],
                6: ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#43a2ca", "#0868ac"],
                7: ["#f0f9e8", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#08589e"],
                8: ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#08589e"],
                9: ["#f7fcf0", "#e0f3db", "#ccebc5", "#a8ddb5", "#7bccc4", "#4eb3d3", "#2b8cbe", "#0868ac", "#084081"]
            }, BuGn: {
                3: ["#e5f5f9", "#99d8c9", "#2ca25f"],
                4: ["#edf8fb", "#b2e2e2", "#66c2a4", "#238b45"],
                5: ["#edf8fb", "#b2e2e2", "#66c2a4", "#2ca25f", "#006d2c"],
                6: ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#2ca25f", "#006d2c"],
                7: ["#edf8fb", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"],
                8: ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#005824"],
                9: ["#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b"]
            }, PuBuGn: {
                3: ["#ece2f0", "#a6bddb", "#1c9099"],
                4: ["#f6eff7", "#bdc9e1", "#67a9cf", "#02818a"],
                5: ["#f6eff7", "#bdc9e1", "#67a9cf", "#1c9099", "#016c59"],
                6: ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#1c9099", "#016c59"],
                7: ["#f6eff7", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"],
                8: ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016450"],
                9: ["#fff7fb", "#ece2f0", "#d0d1e6", "#a6bddb", "#67a9cf", "#3690c0", "#02818a", "#016c59", "#014636"]
            }, PuBu: {
                3: ["#ece7f2", "#a6bddb", "#2b8cbe"],
                4: ["#f1eef6", "#bdc9e1", "#74a9cf", "#0570b0"],
                5: ["#f1eef6", "#bdc9e1", "#74a9cf", "#2b8cbe", "#045a8d"],
                6: ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#2b8cbe", "#045a8d"],
                7: ["#f1eef6", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#034e7b"],
                8: ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#034e7b"],
                9: ["#fff7fb", "#ece7f2", "#d0d1e6", "#a6bddb", "#74a9cf", "#3690c0", "#0570b0", "#045a8d", "#023858"]
            }, BuPu: {
                3: ["#e0ecf4", "#9ebcda", "#8856a7"],
                4: ["#edf8fb", "#b3cde3", "#8c96c6", "#88419d"],
                5: ["#edf8fb", "#b3cde3", "#8c96c6", "#8856a7", "#810f7c"],
                6: ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c"],
                7: ["#edf8fb", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"],
                8: ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#6e016b"],
                9: ["#f7fcfd", "#e0ecf4", "#bfd3e6", "#9ebcda", "#8c96c6", "#8c6bb1", "#88419d", "#810f7c", "#4d004b"]
            }, RdPu: {
                3: ["#fde0dd", "#fa9fb5", "#c51b8a"],
                4: ["#feebe2", "#fbb4b9", "#f768a1", "#ae017e"],
                5: ["#feebe2", "#fbb4b9", "#f768a1", "#c51b8a", "#7a0177"],
                6: ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#c51b8a", "#7a0177"],
                7: ["#feebe2", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"],
                8: ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177"],
                9: ["#fff7f3", "#fde0dd", "#fcc5c0", "#fa9fb5", "#f768a1", "#dd3497", "#ae017e", "#7a0177", "#49006a"]
            }, PuRd: {
                3: ["#e7e1ef", "#c994c7", "#dd1c77"],
                4: ["#f1eef6", "#d7b5d8", "#df65b0", "#ce1256"],
                5: ["#f1eef6", "#d7b5d8", "#df65b0", "#dd1c77", "#980043"],
                6: ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#dd1c77", "#980043"],
                7: ["#f1eef6", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"],
                8: ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#91003f"],
                9: ["#f7f4f9", "#e7e1ef", "#d4b9da", "#c994c7", "#df65b0", "#e7298a", "#ce1256", "#980043", "#67001f"]
            }, OrRd: {
                3: ["#fee8c8", "#fdbb84", "#e34a33"],
                4: ["#fef0d9", "#fdcc8a", "#fc8d59", "#d7301f"],
                5: ["#fef0d9", "#fdcc8a", "#fc8d59", "#e34a33", "#b30000"],
                6: ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#e34a33", "#b30000"],
                7: ["#fef0d9", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"],
                8: ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#990000"],
                9: ["#fff7ec", "#fee8c8", "#fdd49e", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f", "#b30000", "#7f0000"]
            }, YlOrRd: {
                3: ["#ffeda0", "#feb24c", "#f03b20"],
                4: ["#ffffb2", "#fecc5c", "#fd8d3c", "#e31a1c"],
                5: ["#ffffb2", "#fecc5c", "#fd8d3c", "#f03b20", "#bd0026"],
                6: ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#f03b20", "#bd0026"],
                7: ["#ffffb2", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"],
                8: ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026"],
                9: ["#ffffcc", "#ffeda0", "#fed976", "#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"]
            }, YlOrBr: {
                3: ["#fff7bc", "#fec44f", "#d95f0e"],
                4: ["#ffffd4", "#fed98e", "#fe9929", "#cc4c02"],
                5: ["#ffffd4", "#fed98e", "#fe9929", "#d95f0e", "#993404"],
                6: ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#d95f0e", "#993404"],
                7: ["#ffffd4", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"],
                8: ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#8c2d04"],
                9: ["#ffffe5", "#fff7bc", "#fee391", "#fec44f", "#fe9929", "#ec7014", "#cc4c02", "#993404", "#662506"]
            }, Purples: {
                3: ["#efedf5", "#bcbddc", "#756bb1"],
                4: ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"],
                5: ["#f2f0f7", "#cbc9e2", "#9e9ac8", "#756bb1", "#54278f"],
                6: ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#756bb1", "#54278f"],
                7: ["#f2f0f7", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"],
                8: ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#4a1486"],
                9: ["#fcfbfd", "#efedf5", "#dadaeb", "#bcbddc", "#9e9ac8", "#807dba", "#6a51a3", "#54278f", "#3f007d"]
            }, Blues: {
                3: ["#deebf7", "#9ecae1", "#3182bd"],
                4: ["#eff3ff", "#bdd7e7", "#6baed6", "#2171b5"],
                5: ["#eff3ff", "#bdd7e7", "#6baed6", "#3182bd", "#08519c"],
                6: ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#3182bd", "#08519c"],
                7: ["#eff3ff", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"],
                8: ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#084594"],
                9: ["#f7fbff", "#deebf7", "#c6dbef", "#9ecae1", "#6baed6", "#4292c6", "#2171b5", "#08519c", "#08306b"]
            }, Greens: {
                3: ["#e5f5e0", "#a1d99b", "#31a354"],
                4: ["#edf8e9", "#bae4b3", "#74c476", "#238b45"],
                5: ["#edf8e9", "#bae4b3", "#74c476", "#31a354", "#006d2c"],
                6: ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#31a354", "#006d2c"],
                7: ["#edf8e9", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"],
                8: ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#005a32"],
                9: ["#f7fcf5", "#e5f5e0", "#c7e9c0", "#a1d99b", "#74c476", "#41ab5d", "#238b45", "#006d2c", "#00441b"]
            }, Oranges: {
                3: ["#fee6ce", "#fdae6b", "#e6550d"],
                4: ["#feedde", "#fdbe85", "#fd8d3c", "#d94701"],
                5: ["#feedde", "#fdbe85", "#fd8d3c", "#e6550d", "#a63603"],
                6: ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#e6550d", "#a63603"],
                7: ["#feedde", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"],
                8: ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#8c2d04"],
                9: ["#fff5eb", "#fee6ce", "#fdd0a2", "#fdae6b", "#fd8d3c", "#f16913", "#d94801", "#a63603", "#7f2704"]
            }, Reds: {
                3: ["#fee0d2", "#fc9272", "#de2d26"],
                4: ["#fee5d9", "#fcae91", "#fb6a4a", "#cb181d"],
                5: ["#fee5d9", "#fcae91", "#fb6a4a", "#de2d26", "#a50f15"],
                6: ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#de2d26", "#a50f15"],
                7: ["#fee5d9", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"],
                8: ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#99000d"],
                9: ["#fff5f0", "#fee0d2", "#fcbba1", "#fc9272", "#fb6a4a", "#ef3b2c", "#cb181d", "#a50f15", "#67000d"]
            }, Greys: {
                3: ["#f0f0f0", "#bdbdbd", "#636363"],
                4: ["#f7f7f7", "#cccccc", "#969696", "#525252"],
                5: ["#f7f7f7", "#cccccc", "#969696", "#636363", "#252525"],
                6: ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#636363", "#252525"],
                7: ["#f7f7f7", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525"],
                8: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525"],
                9: ["#ffffff", "#f0f0f0", "#d9d9d9", "#bdbdbd", "#969696", "#737373", "#525252", "#252525", "#000000"]
            }, PuOr: {
                3: ["#f1a340", "#f7f7f7", "#998ec3"],
                4: ["#e66101", "#fdb863", "#b2abd2", "#5e3c99"],
                5: ["#e66101", "#fdb863", "#f7f7f7", "#b2abd2", "#5e3c99"],
                6: ["#b35806", "#f1a340", "#fee0b6", "#d8daeb", "#998ec3", "#542788"],
                7: ["#b35806", "#f1a340", "#fee0b6", "#f7f7f7", "#d8daeb", "#998ec3", "#542788"],
                8: ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788"],
                9: ["#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788"],
                10: ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"],
                11: ["#7f3b08", "#b35806", "#e08214", "#fdb863", "#fee0b6", "#f7f7f7", "#d8daeb", "#b2abd2", "#8073ac", "#542788", "#2d004b"]
            }, BrBG: {
                3: ["#d8b365", "#f5f5f5", "#5ab4ac"],
                4: ["#a6611a", "#dfc27d", "#80cdc1", "#018571"],
                5: ["#a6611a", "#dfc27d", "#f5f5f5", "#80cdc1", "#018571"],
                6: ["#8c510a", "#d8b365", "#f6e8c3", "#c7eae5", "#5ab4ac", "#01665e"],
                7: ["#8c510a", "#d8b365", "#f6e8c3", "#f5f5f5", "#c7eae5", "#5ab4ac", "#01665e"],
                8: ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e"],
                9: ["#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e"],
                10: ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"],
                11: ["#543005", "#8c510a", "#bf812d", "#dfc27d", "#f6e8c3", "#f5f5f5", "#c7eae5", "#80cdc1", "#35978f", "#01665e", "#003c30"]
            }, PRGn: {
                3: ["#af8dc3", "#f7f7f7", "#7fbf7b"],
                4: ["#7b3294", "#c2a5cf", "#a6dba0", "#008837"],
                5: ["#7b3294", "#c2a5cf", "#f7f7f7", "#a6dba0", "#008837"],
                6: ["#762a83", "#af8dc3", "#e7d4e8", "#d9f0d3", "#7fbf7b", "#1b7837"],
                7: ["#762a83", "#af8dc3", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#7fbf7b", "#1b7837"],
                8: ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"],
                9: ["#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837"],
                10: ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"],
                11: ["#40004b", "#762a83", "#9970ab", "#c2a5cf", "#e7d4e8", "#f7f7f7", "#d9f0d3", "#a6dba0", "#5aae61", "#1b7837", "#00441b"]
            }, PiYG: {
                3: ["#e9a3c9", "#f7f7f7", "#a1d76a"],
                4: ["#d01c8b", "#f1b6da", "#b8e186", "#4dac26"],
                5: ["#d01c8b", "#f1b6da", "#f7f7f7", "#b8e186", "#4dac26"],
                6: ["#c51b7d", "#e9a3c9", "#fde0ef", "#e6f5d0", "#a1d76a", "#4d9221"],
                7: ["#c51b7d", "#e9a3c9", "#fde0ef", "#f7f7f7", "#e6f5d0", "#a1d76a", "#4d9221"],
                8: ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"],
                9: ["#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221"],
                10: ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"],
                11: ["#8e0152", "#c51b7d", "#de77ae", "#f1b6da", "#fde0ef", "#f7f7f7", "#e6f5d0", "#b8e186", "#7fbc41", "#4d9221", "#276419"]
            }, RdBu: {
                3: ["#ef8a62", "#f7f7f7", "#67a9cf"],
                4: ["#ca0020", "#f4a582", "#92c5de", "#0571b0"],
                5: ["#ca0020", "#f4a582", "#f7f7f7", "#92c5de", "#0571b0"],
                6: ["#b2182b", "#ef8a62", "#fddbc7", "#d1e5f0", "#67a9cf", "#2166ac"],
                7: ["#b2182b", "#ef8a62", "#fddbc7", "#f7f7f7", "#d1e5f0", "#67a9cf", "#2166ac"],
                8: ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"],
                9: ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac"],
                10: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"],
                11: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#f7f7f7", "#d1e5f0", "#92c5de", "#4393c3", "#2166ac", "#053061"]
            }, RdGy: {
                3: ["#ef8a62", "#ffffff", "#999999"],
                4: ["#ca0020", "#f4a582", "#bababa", "#404040"],
                5: ["#ca0020", "#f4a582", "#ffffff", "#bababa", "#404040"],
                6: ["#b2182b", "#ef8a62", "#fddbc7", "#e0e0e0", "#999999", "#4d4d4d"],
                7: ["#b2182b", "#ef8a62", "#fddbc7", "#ffffff", "#e0e0e0", "#999999", "#4d4d4d"],
                8: ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"],
                9: ["#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d"],
                10: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"],
                11: ["#67001f", "#b2182b", "#d6604d", "#f4a582", "#fddbc7", "#ffffff", "#e0e0e0", "#bababa", "#878787", "#4d4d4d", "#1a1a1a"]
            }, RdYlBu: {
                3: ["#fc8d59", "#ffffbf", "#91bfdb"],
                4: ["#d7191c", "#fdae61", "#abd9e9", "#2c7bb6"],
                5: ["#d7191c", "#fdae61", "#ffffbf", "#abd9e9", "#2c7bb6"],
                6: ["#d73027", "#fc8d59", "#fee090", "#e0f3f8", "#91bfdb", "#4575b4"],
                7: ["#d73027", "#fc8d59", "#fee090", "#ffffbf", "#e0f3f8", "#91bfdb", "#4575b4"],
                8: ["#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"],
                9: ["#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4"],
                10: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"],
                11: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee090", "#ffffbf", "#e0f3f8", "#abd9e9", "#74add1", "#4575b4", "#313695"]
            }, Spectral: {
                3: ["#fc8d59", "#ffffbf", "#99d594"],
                4: ["#d7191c", "#fdae61", "#abdda4", "#2b83ba"],
                5: ["#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"],
                6: ["#d53e4f", "#fc8d59", "#fee08b", "#e6f598", "#99d594", "#3288bd"],
                7: ["#d53e4f", "#fc8d59", "#fee08b", "#ffffbf", "#e6f598", "#99d594", "#3288bd"],
                8: ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"],
                9: ["#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd"],
                10: ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"],
                11: ["#9e0142", "#d53e4f", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#e6f598", "#abdda4", "#66c2a5", "#3288bd", "#5e4fa2"]
            }, RdYlGn: {
                3: ["#fc8d59", "#ffffbf", "#91cf60"],
                4: ["#d7191c", "#fdae61", "#a6d96a", "#1a9641"],
                5: ["#d7191c", "#fdae61", "#ffffbf", "#a6d96a", "#1a9641"],
                6: ["#d73027", "#fc8d59", "#fee08b", "#d9ef8b", "#91cf60", "#1a9850"],
                7: ["#d73027", "#fc8d59", "#fee08b", "#ffffbf", "#d9ef8b", "#91cf60", "#1a9850"],
                8: ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"],
                9: ["#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850"],
                10: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"],
                11: ["#a50026", "#d73027", "#f46d43", "#fdae61", "#fee08b", "#ffffbf", "#d9ef8b", "#a6d96a", "#66bd63", "#1a9850", "#006837"]
            }, Accent: {
                3: ["#7fc97f", "#beaed4", "#fdc086"],
                4: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99"],
                5: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0"],
                6: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f"],
                7: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17"],
                8: ["#7fc97f", "#beaed4", "#fdc086", "#ffff99", "#386cb0", "#f0027f", "#bf5b17", "#666666"]
            }, Dark2: {
                3: ["#1b9e77", "#d95f02", "#7570b3"],
                4: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a"],
                5: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e"],
                6: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02"],
                7: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d"],
                8: ["#1b9e77", "#d95f02", "#7570b3", "#e7298a", "#66a61e", "#e6ab02", "#a6761d", "#666666"]
            }, Paired: {
                3: ["#a6cee3", "#1f78b4", "#b2df8a"],
                4: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c"],
                5: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99"],
                6: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c"],
                7: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f"],
                8: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00"],
                9: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6"],
                10: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a"],
                11: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99"],
                12: ["#a6cee3", "#1f78b4", "#b2df8a", "#33a02c", "#fb9a99", "#e31a1c", "#fdbf6f", "#ff7f00", "#cab2d6", "#6a3d9a", "#ffff99", "#b15928"]
            }, Pastel1: {
                3: ["#fbb4ae", "#b3cde3", "#ccebc5"],
                4: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4"],
                5: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6"],
                6: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc"],
                7: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd"],
                8: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec"],
                9: ["#fbb4ae", "#b3cde3", "#ccebc5", "#decbe4", "#fed9a6", "#ffffcc", "#e5d8bd", "#fddaec", "#f2f2f2"]
            }, Pastel2: {
                3: ["#b3e2cd", "#fdcdac", "#cbd5e8"],
                4: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4"],
                5: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9"],
                6: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae"],
                7: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc"],
                8: ["#b3e2cd", "#fdcdac", "#cbd5e8", "#f4cae4", "#e6f5c9", "#fff2ae", "#f1e2cc", "#cccccc"]
            }, Set1: {
                3: ["#e41a1c", "#377eb8", "#4daf4a"],
                4: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3"],
                5: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00"],
                6: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33"],
                7: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628"],
                8: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf"],
                9: ["#e41a1c", "#377eb8", "#4daf4a", "#984ea3", "#ff7f00", "#ffff33", "#a65628", "#f781bf", "#999999"]
            }, Set2: {
                3: ["#66c2a5", "#fc8d62", "#8da0cb"],
                4: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"],
                5: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"],
                6: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f"],
                7: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494"],
                8: ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854", "#ffd92f", "#e5c494", "#b3b3b3"]
            }, Set3: {
                3: ["#8dd3c7", "#ffffb3", "#bebada"],
                4: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072"],
                5: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3"],
                6: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462"],
                7: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69"],
                8: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5"],
                9: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9"],
                10: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd"],
                11: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5"],
                12: ["#8dd3c7", "#ffffb3", "#bebada", "#fb8072", "#80b1d3", "#fdb462", "#b3de69", "#fccde5", "#d9d9d9", "#bc80bd", "#ccebc5", "#ffed6f"]
            } };

        if (typeof undefined === "function" && define.amd) {
            define(colorbrewer);
        } else if (typeof module === "object" && module.exports) {
            module.exports = colorbrewer;
        } else {
            this.colorbrewer = colorbrewer;
        }
    }();
});
$__System.registerDynamic("183", ["182"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("182");
});
$__System.registerDynamic("120", ["122", "183"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Styler = undefined;

    var _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }(); /**
opyright (c) 2016, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         *  LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         */

    exports.default = styler;

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    var _colorbrewer = $__require("183");

    var _colorbrewer2 = _interopRequireDefault(_colorbrewer);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _objectWithoutProperties(obj, keys) {
        var target = {};
        for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
        }
        return target;
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    /**
     * For our Style we want to represent two things:
     *
     *   1. The overall style of an AreaChart should be consistent across a site
     *   2. The specific style of a columnName (e.g. "pressure") should be consistent
     *
     * The overall style is implemented with methods specific to
     * each chart type or entity:
     *
     *   - lineChartStyle()
     *   - areaChartStyle()
     *   - legendStyle()
     *   - etc
     *
     * These will render out an object that can be passed into the
     * charts themselves and will control the visual appearance,
     * keyed by columnName. This abstracts away the SVG details of the
     * underlying DOM elements.
     *
     * For the specific style we define here three out of the box parameters
     * by which one column can be different from another when rendered:
     *   - color
     *   - width (of a line)
     *   - dashed or not
     *
     */
    var Styler = exports.Styler = function () {
        /**
        * The columns define the style associated with a particular
        * quantity, such as "inTraffic" or "temperature". The columns
        * are an array, with each element being either a string, or
        * and object defining the style.
        *
        *  * Using a string makes the assumption that you want to use a
        * color scheme, so you need to define that if you don't want the
        * default. A color will be then assigned to each column based
        * on the scheme. The string is the column name.
        *
        *  * In the second case of providing an object, you define properties
        * of the style yourself. Each object should contain a "key" property
        * which is the column name and optionally the `width` and `dashed`
        * property. If you don't supply the color, then the color
        * will come from the scheme.
        *
        */
        function Styler(columns) {
            var _this = this;

            var scheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Paired";

            _classCallCheck(this, Styler);

            this.columnStyles = {};
            if (_underscore2.default.isArray(columns)) {
                columns.forEach(function (column) {
                    if (_underscore2.default.isString(column)) {
                        _this.columnStyles[column] = { key: column };
                    } else if (_underscore2.default.isObject(column)) {
                        var key = column.key,
                            style = _objectWithoutProperties(column, ["key"]);

                        _this.columnStyles[key] = style;
                    }
                });
            }
            this.columnNames = _underscore2.default.map(columns, function (c) {
                var cc = _underscore2.default.isString(c) ? c : c.key;
                return cc;
            });

            if (scheme && !_underscore2.default.has(_colorbrewer2.default, scheme)) {
                throw new Error("Unknown scheme '" + scheme + "' supplied to Style constructor");
            }
            this.colorScheme = scheme;
        }

        _createClass(Styler, [{
            key: "numColumns",
            value: function numColumns() {
                return this.columnNames.length;
            }

            /**
            * Returns the color scheme with the appropiate number of colors.
            * If there are more columns than the largest set in the scheme then
            * just the largest scheme set will be returned.
            * @param  {number} columnCount The number of columns to apply the scheme to
            * @return {array}              An array with the scheme colors in it.
            */
        }, {
            key: "colorLookup",
            value: function colorLookup(columnCount) {
                var maxSchemeSize = _underscore2.default.max(_underscore2.default.keys(_colorbrewer2.default[this.colorScheme]));
                var colorLookupSize = columnCount > maxSchemeSize ? maxSchemeSize : columnCount;
                return this.colorScheme ? _colorbrewer2.default[this.colorScheme][colorLookupSize] : [];
            }

            /**
            */
        }, {
            key: "legendStyle",
            value: function legendStyle(column, type) {
                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);
                var i = _underscore2.default.indexOf(this.columnNames, column);
                var columnName = this.columnNames[i];
                var _columnStyles$columnN = this.columnStyles[columnName],
                    color = _columnStyles$columnN.color,
                    _columnStyles$columnN2 = _columnStyles$columnN.width,
                    width = _columnStyles$columnN2 === undefined ? 1 : _columnStyles$columnN2,
                    _columnStyles$columnN3 = _columnStyles$columnN.dashed,
                    dashed = _columnStyles$columnN3 === undefined ? false : _columnStyles$columnN3;

                var c = color || colorLookup[i % colorLookup.length];

                var styleSymbol = {};
                if (type === "swatch" || type === "dot") {
                    styleSymbol = {
                        fill: c,
                        opacity: 0.9,
                        stroke: c,
                        cursor: "pointer"
                    };
                } else if (type === "line") {
                    styleSymbol = {
                        opacity: 0.9,
                        stroke: c,
                        strokeWidth: width,
                        cursor: "pointer"
                    };
                    if (dashed) {
                        styleSymbol.strokeDasharray = "4,2";
                    }
                }

                var labelStyle = {
                    fontSize: "normal",
                    color: "#333",
                    paddingRight: 10,
                    cursor: "pointer"
                };
                var valueStyle = {
                    fontSize: "smaller",
                    color: "#999",
                    cursor: "pointer"
                };
                var legendStyle = {
                    symbol: {
                        normal: _extends({}, styleSymbol, { opacity: 0.7 }),
                        highlighted: _extends({}, styleSymbol, { opacity: 0.8 }),
                        selected: _extends({}, styleSymbol, { opacity: 0.8 }),
                        muted: _extends({}, styleSymbol, { opacity: 0.2 })
                    },
                    label: {
                        normal: _extends({}, labelStyle, { opacity: 0.7 }),
                        highlighted: _extends({}, labelStyle, { opacity: 0.8 }),
                        selected: _extends({}, labelStyle, { opacity: 0.8 }),
                        muted: _extends({}, labelStyle, { opacity: 0.5 })
                    },
                    value: {
                        normal: _extends({}, valueStyle, { opacity: 0.7 }),
                        highlighted: _extends({}, valueStyle, { opacity: 0.8 }),
                        selected: _extends({}, valueStyle, { opacity: 0.8 }),
                        muted: _extends({}, valueStyle, { opacity: 0.5 })
                    }
                };
                return legendStyle;
            }
        }, {
            key: "areaChartStyle",
            value: function areaChartStyle() {
                var style = {};

                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);

                var i = 0;
                _underscore2.default.forEach(this.columnStyles, function (_ref, column) {
                    var color = _ref.color,
                        selected = _ref.selected,
                        _ref$width = _ref.width,
                        width = _ref$width === undefined ? 1 : _ref$width,
                        _ref$dashed = _ref.dashed,
                        dashed = _ref$dashed === undefined ? false : _ref$dashed;

                    var c = color || colorLookup[i % colorLookup.length];
                    var styleLine = {
                        stroke: c,
                        fill: "none",
                        strokeWidth: width
                    };
                    var styleSelectedLine = {
                        stroke: selected || color,
                        fill: "none",
                        strokeWidth: width
                    };
                    if (dashed) {
                        styleLine.strokeDasharray = "4,2";
                    }
                    var styleArea = {
                        fill: c,
                        stroke: "none"
                    };
                    var styleSelectedArea = {
                        fill: selected || color,
                        stroke: "none"
                    };
                    style[column] = {
                        line: {
                            normal: _extends({}, styleLine, { opacity: 0.9 }),
                            highlighted: _extends({}, styleLine, { opacity: 1.0 }),
                            selected: _extends({}, styleSelectedLine, { opacity: 1.0 }),
                            muted: _extends({}, styleLine, { opacity: 0.4 })
                        },
                        area: {
                            normal: _extends({}, styleArea, { opacity: 0.7 }),
                            highlighted: _extends({}, styleArea, { opacity: 0.8 }),
                            selected: _extends({}, styleSelectedArea, { opacity: 0.8 }),
                            muted: _extends({}, styleArea, { opacity: 0.2 })
                        }
                    };
                    i += 1;
                });
                return style;
            }
        }, {
            key: "lineChartStyle",
            value: function lineChartStyle() {
                var _this2 = this;

                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);
                var style = {};
                _underscore2.default.forEach(this.columnStyles, function (_ref2, column) {
                    var color = _ref2.color,
                        selected = _ref2.selected,
                        _ref2$width = _ref2.width,
                        width = _ref2$width === undefined ? 1 : _ref2$width,
                        _ref2$dashed = _ref2.dashed,
                        dashed = _ref2$dashed === undefined ? false : _ref2$dashed;

                    var i = _underscore2.default.indexOf(_this2.columnNames, column);
                    var c = color || colorLookup[i % colorLookup.length];
                    var styleLine = {
                        stroke: c,
                        strokeWidth: width,
                        fill: "none"
                    };
                    var styleSelectedLine = {
                        stroke: selected || c,
                        strokeWidth: width,
                        fill: "none"
                    };

                    if (dashed) {
                        styleLine.strokeDasharray = "4,2";
                    }
                    style[column] = {
                        normal: _extends({}, styleLine, { opacity: 0.8, strokeWidth: width }),
                        highlighted: _extends({}, styleLine, { opacity: 1.0, strokeWidth: width }),
                        selected: _extends({}, styleSelectedLine, {
                            opacity: 1.0,
                            strokeWidth: width
                        }),
                        muted: _extends({}, styleLine, { opacity: 0.2, strokeWidth: width })
                    };
                });
                return style;
            }
        }, {
            key: "barChartStyle",
            value: function barChartStyle() {
                var _this3 = this;

                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);
                var style = {};
                _underscore2.default.forEach(this.columnStyles, function (_ref3, column) {
                    var color = _ref3.color,
                        selected = _ref3.selected;

                    var i = _underscore2.default.indexOf(_this3.columnNames, column);
                    var c = color || colorLookup[i % colorLookup.length];
                    var fillStyle = {
                        fill: c
                    };
                    var selectedStyle = {
                        fill: selected || c
                    };
                    style[column] = {
                        normal: _extends({}, fillStyle, { opacity: 0.8 }),
                        highlighted: _extends({}, fillStyle, { opacity: 1.0 }),
                        selected: _extends({}, selectedStyle, { opacity: 1.0 }),
                        muted: _extends({}, fillStyle, { opacity: 0.2 })
                    };
                });
                return style;
            }
        }, {
            key: "scatterChartStyle",
            value: function scatterChartStyle() {
                var _this4 = this;

                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);
                var style = {};
                _underscore2.default.forEach(this.columnStyles, function (_ref4, column) {
                    var color = _ref4.color,
                        selected = _ref4.selected;

                    var i = _underscore2.default.indexOf(_this4.columnNames, column);
                    var c = color || colorLookup[i % colorLookup.length];
                    var fillStyle = {
                        fill: c
                    };
                    var selectedStyle = {
                        fill: selected || c
                    };
                    style[column] = {
                        normal: _extends({}, fillStyle, { opacity: 0.8 }),
                        highlighted: _extends({}, fillStyle, { opacity: 1.0 }),
                        selected: _extends({}, selectedStyle, { opacity: 1.0 }),
                        muted: _extends({}, fillStyle, { opacity: 0.2 })
                    };
                });
                return style;
            }
        }, {
            key: "axisStyle",
            value: function axisStyle(column) {
                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);
                var i = _underscore2.default.indexOf(this.columnNames, column);
                var columnName = this.columnNames[i];
                var color = this.columnStyles[columnName].color;

                var c = color || colorLookup[i % colorLookup.length];
                return {
                    labelColor: c
                };
            }
        }, {
            key: "boxChartStyle",
            value: function boxChartStyle() {
                var style = {};

                var numColumns = this.numColumns();
                var colorLookup = this.colorLookup(numColumns);

                var i = 0;
                _underscore2.default.forEach(this.columnStyles, function (_ref5, column) {
                    var color = _ref5.color,
                        selected = _ref5.selected;

                    var c = color || colorLookup[i % colorLookup.length];
                    var styleArea = {
                        fill: c,
                        stroke: "none"
                    };
                    var styleSelectedArea = {
                        fill: selected || color,
                        stroke: "none"
                    };
                    style[column] = [{
                        normal: _extends({}, styleArea, { opacity: 0.2 }),
                        highlighted: _extends({}, styleArea, { opacity: 0.3 }),
                        selected: _extends({}, styleSelectedArea, { opacity: 0.3 }),
                        muted: _extends({}, styleArea, { opacity: 0.1 })
                    }, {
                        normal: _extends({}, styleArea, { opacity: 0.5 }),
                        highlighted: _extends({}, styleArea, { opacity: 0.6 }),
                        selected: _extends({}, styleSelectedArea, { opacity: 0.6 }),
                        muted: _extends({}, styleArea, { opacity: 0.2 })
                    }, {
                        normal: _extends({}, styleArea, { opacity: 0.9 }),
                        highlighted: _extends({}, styleArea, { opacity: 1.0 }),
                        selected: _extends({}, styleSelectedArea, { opacity: 1.0 }),
                        muted: _extends({}, styleArea, { opacity: 0.2 })
                    }];
                    i += 1;
                });
                return style;
            }
        }]);

        return Styler;
    }();

    function styler(columns, scheme) {
        return new Styler(columns, scheme);
    }
});
$__System.registerDynamic("12f", ["122", "123", "e", "1c", "4c", "50", "184", "185", "138", "13b", "186"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    var _merge = $__require("123");

    var _merge2 = _interopRequireDefault(_merge);

    var _moment = $__require("e");

    var _moment2 = _interopRequireDefault(_moment);

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _reactDom = $__require("4c");

    var _reactDom2 = _interopRequireDefault(_reactDom);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _d3Axis = $__require("184");

    var _d3Selection = $__require("185");

    var _d3Time = $__require("138");

    var _d3TimeFormat = $__require("13b");

    $__require("186");

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *  Copyright (c) 2015-present, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree.


    // eslint-disable-line

    function scaleAsString(scale) {
        return scale.domain().toString() + "-" + scale.range().toString();
    }

    var defaultStyle = {
        labels: {
            labelColor: "#8B7E7E", // Default label color
            labelWeight: 100,
            labelSize: 11
        },
        axis: {
            axisColor: "#C0C0C0"
        }
    };

    /**
     * Renders a horizontal time axis. This is used internally by the ChartContainer
     * as a result of you specifying the timerange for the chart. Please see the API
     * docs for ChartContainer for more information.
     */

    var TimeAxis = function (_React$Component) {
        _inherits(TimeAxis, _React$Component);

        function TimeAxis() {
            _classCallCheck(this, TimeAxis);

            return _possibleConstructorReturn(this, (TimeAxis.__proto__ || Object.getPrototypeOf(TimeAxis)).apply(this, arguments));
        }

        _createClass(TimeAxis, [{
            key: "componentDidMount",
            value: function componentDidMount() {
                this.renderTimeAxis(this.props.scale, this.props.format);
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                var scale = nextProps.scale,
                    utc = nextProps.utc,
                    format = nextProps.format;

                if (scaleAsString(this.props.scale) !== scaleAsString(scale) || this.props.utc !== utc) {
                    this.renderTimeAxis(scale, format);
                }
            }

            // Force the component not to update because d3 will control the
            // DOM from this point down.
        }, {
            key: "shouldComponentUpdate",
            value: function shouldComponentUpdate() {
                // eslint-disable-line
                return false;
            }
        }, {
            key: "renderTimeAxis",
            value: function renderTimeAxis(scale, format) {
                var axis = void 0;

                var tickSize = this.props.showGrid ? -this.props.gridHeight : 10;
                var utc = this.props.utc;

                if (format === "day") {
                    axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcDay : _d3Time.timeDay, 1]).tickFormat((0, _d3TimeFormat.timeFormat)("%d")).tickSizeOuter(0);
                } else if (format === "month") {
                    axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcMonth : _d3Time.timeMonth, 1]).tickFormat((0, _d3TimeFormat.timeFormat)("%B")).tickSizeOuter(0);
                } else if (format === "year") {
                    axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcYear : _d3Time.timeYear, 1]).tickFormat((0, _d3TimeFormat.timeFormat)("%Y")).tickSizeOuter(0);
                } else if (format === "relative") {
                    axis = (0, _d3Axis.axisBottom)(scale).tickFormat(function (d) {
                        return _moment2.default.duration(+d).format();
                    }).tickSizeOuter(0);
                } else if (_underscore2.default.isString(format)) {
                    axis = (0, _d3Axis.axisBottom)(scale).tickFormat((0, _d3TimeFormat.timeFormat)(format)).tickSizeOuter(0);
                } else if (_underscore2.default.isFunction(format)) {
                    axis = (0, _d3Axis.axisBottom)(scale).tickFormat(format).tickSizeOuter(0);
                } else {
                    axis = (0, _d3Axis.axisBottom)(scale).tickSize(0);
                }

                // Style

                var labelStyle = (0, _merge2.default)(true, defaultStyle.labels, this.props.style.labels ? this.props.style.labels : {});
                var axisStyle = (0, _merge2.default)(true, defaultStyle.axis, this.props.style.axis ? this.props.style.axis : {});
                var axisColor = axisStyle.axisColor;
                var labelColor = labelStyle.labelColor,
                    labelWeight = labelStyle.labelWeight,
                    labelSize = labelStyle.labelSize;

                // Remove the old axis from under this DOM node

                (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).selectAll("*").remove(); // eslint-disable-line
                //
                // Draw the new axis
                //
                (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line
                .append("g").attr("class", "x axis").style("stroke", "none").style("fill", labelColor).style("font-weight", labelWeight).style("font-size", labelSize).call(axis.tickSize(tickSize));
                (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line
                .select("g").selectAll(".tick").select("text").style("fill", labelColor).style("stroke", "none");
                (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line
                .select("g").selectAll(".tick").select("line").style("stroke", axisColor);
                (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").select("path").remove(); // eslint-disable-line
            }
        }, {
            key: "render",
            value: function render() {
                // eslint-disable-line
                return _react2.default.createElement("g", null);
            }
        }]);

        return TimeAxis;
    }(_react2.default.Component);

    exports.default = TimeAxis;

    TimeAxis.defaultProps = {
        showGrid: false,
        style: defaultStyle
    };

    TimeAxis.propTypes = {
        scale: _propTypes2.default.func.isRequired,
        showGrid: _propTypes2.default.bool,
        gridHeight: _propTypes2.default.number,
        format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
        utc: _propTypes2.default.bool,
        style: _propTypes2.default.shape({
            labels: _propTypes2.default.object, // eslint-disable-line
            axis: _propTypes2.default.object // eslint-disable-line
        })
    };
});
$__System.registerDynamic('187', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-time/ Version 1.0.8. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var t0 = new Date();
    var t1 = new Date();

    function newInterval(floori, offseti, count, field) {

      function interval(date) {
        return floori(date = new Date(+date)), date;
      }

      interval.floor = interval;

      interval.ceil = function (date) {
        return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
      };

      interval.round = function (date) {
        var d0 = interval(date),
            d1 = interval.ceil(date);
        return date - d0 < d1 - date ? d0 : d1;
      };

      interval.offset = function (date, step) {
        return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
      };

      interval.range = function (start, stop, step) {
        var range = [],
            previous;
        start = interval.ceil(start);
        step = step == null ? 1 : Math.floor(step);
        if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
        do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);
        return range;
      };

      interval.filter = function (test) {
        return newInterval(function (date) {
          if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
        }, function (date, step) {
          if (date >= date) {
            if (step < 0) while (++step <= 0) {
              while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
            } else while (--step >= 0) {
              while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
            }
          }
        });
      };

      if (count) {
        interval.count = function (start, end) {
          t0.setTime(+start), t1.setTime(+end);
          floori(t0), floori(t1);
          return Math.floor(count(t0, t1));
        };

        interval.every = function (step) {
          step = Math.floor(step);
          return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
            return field(d) % step === 0;
          } : function (d) {
            return interval.count(0, d) % step === 0;
          });
        };
      }

      return interval;
    }

    var millisecond = newInterval(function () {
      // noop
    }, function (date, step) {
      date.setTime(+date + step);
    }, function (start, end) {
      return end - start;
    });

    // An optimized implementation for this simple case.
    millisecond.every = function (k) {
      k = Math.floor(k);
      if (!isFinite(k) || !(k > 0)) return null;
      if (!(k > 1)) return millisecond;
      return newInterval(function (date) {
        date.setTime(Math.floor(date / k) * k);
      }, function (date, step) {
        date.setTime(+date + step * k);
      }, function (start, end) {
        return (end - start) / k;
      });
    };

    var milliseconds = millisecond.range;

    var durationSecond = 1e3;
    var durationMinute = 6e4;
    var durationHour = 36e5;
    var durationDay = 864e5;
    var durationWeek = 6048e5;

    var second = newInterval(function (date) {
      date.setTime(Math.floor(date / durationSecond) * durationSecond);
    }, function (date, step) {
      date.setTime(+date + step * durationSecond);
    }, function (start, end) {
      return (end - start) / durationSecond;
    }, function (date) {
      return date.getUTCSeconds();
    });

    var seconds = second.range;

    var minute = newInterval(function (date) {
      date.setTime(Math.floor(date / durationMinute) * durationMinute);
    }, function (date, step) {
      date.setTime(+date + step * durationMinute);
    }, function (start, end) {
      return (end - start) / durationMinute;
    }, function (date) {
      return date.getMinutes();
    });

    var minutes = minute.range;

    var hour = newInterval(function (date) {
      var offset = date.getTimezoneOffset() * durationMinute % durationHour;
      if (offset < 0) offset += durationHour;
      date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);
    }, function (date, step) {
      date.setTime(+date + step * durationHour);
    }, function (start, end) {
      return (end - start) / durationHour;
    }, function (date) {
      return date.getHours();
    });

    var hours = hour.range;

    var day = newInterval(function (date) {
      date.setHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setDate(date.getDate() + step);
    }, function (start, end) {
      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
    }, function (date) {
      return date.getDate() - 1;
    });

    var days = day.range;

    function weekday(i) {
      return newInterval(function (date) {
        date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
        date.setHours(0, 0, 0, 0);
      }, function (date, step) {
        date.setDate(date.getDate() + step * 7);
      }, function (start, end) {
        return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
      });
    }

    var sunday = weekday(0);
    var monday = weekday(1);
    var tuesday = weekday(2);
    var wednesday = weekday(3);
    var thursday = weekday(4);
    var friday = weekday(5);
    var saturday = weekday(6);

    var sundays = sunday.range;
    var mondays = monday.range;
    var tuesdays = tuesday.range;
    var wednesdays = wednesday.range;
    var thursdays = thursday.range;
    var fridays = friday.range;
    var saturdays = saturday.range;

    var month = newInterval(function (date) {
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setMonth(date.getMonth() + step);
    }, function (start, end) {
      return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
    }, function (date) {
      return date.getMonth();
    });

    var months = month.range;

    var year = newInterval(function (date) {
      date.setMonth(0, 1);
      date.setHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setFullYear(date.getFullYear() + step);
    }, function (start, end) {
      return end.getFullYear() - start.getFullYear();
    }, function (date) {
      return date.getFullYear();
    });

    // An optimized implementation for this simple case.
    year.every = function (k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {
        date.setFullYear(Math.floor(date.getFullYear() / k) * k);
        date.setMonth(0, 1);
        date.setHours(0, 0, 0, 0);
      }, function (date, step) {
        date.setFullYear(date.getFullYear() + step * k);
      });
    };

    var years = year.range;

    var utcMinute = newInterval(function (date) {
      date.setUTCSeconds(0, 0);
    }, function (date, step) {
      date.setTime(+date + step * durationMinute);
    }, function (start, end) {
      return (end - start) / durationMinute;
    }, function (date) {
      return date.getUTCMinutes();
    });

    var utcMinutes = utcMinute.range;

    var utcHour = newInterval(function (date) {
      date.setUTCMinutes(0, 0, 0);
    }, function (date, step) {
      date.setTime(+date + step * durationHour);
    }, function (start, end) {
      return (end - start) / durationHour;
    }, function (date) {
      return date.getUTCHours();
    });

    var utcHours = utcHour.range;

    var utcDay = newInterval(function (date) {
      date.setUTCHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setUTCDate(date.getUTCDate() + step);
    }, function (start, end) {
      return (end - start) / durationDay;
    }, function (date) {
      return date.getUTCDate() - 1;
    });

    var utcDays = utcDay.range;

    function utcWeekday(i) {
      return newInterval(function (date) {
        date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
        date.setUTCHours(0, 0, 0, 0);
      }, function (date, step) {
        date.setUTCDate(date.getUTCDate() + step * 7);
      }, function (start, end) {
        return (end - start) / durationWeek;
      });
    }

    var utcSunday = utcWeekday(0);
    var utcMonday = utcWeekday(1);
    var utcTuesday = utcWeekday(2);
    var utcWednesday = utcWeekday(3);
    var utcThursday = utcWeekday(4);
    var utcFriday = utcWeekday(5);
    var utcSaturday = utcWeekday(6);

    var utcSundays = utcSunday.range;
    var utcMondays = utcMonday.range;
    var utcTuesdays = utcTuesday.range;
    var utcWednesdays = utcWednesday.range;
    var utcThursdays = utcThursday.range;
    var utcFridays = utcFriday.range;
    var utcSaturdays = utcSaturday.range;

    var utcMonth = newInterval(function (date) {
      date.setUTCDate(1);
      date.setUTCHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setUTCMonth(date.getUTCMonth() + step);
    }, function (start, end) {
      return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
    }, function (date) {
      return date.getUTCMonth();
    });

    var utcMonths = utcMonth.range;

    var utcYear = newInterval(function (date) {
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
    }, function (date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step);
    }, function (start, end) {
      return end.getUTCFullYear() - start.getUTCFullYear();
    }, function (date) {
      return date.getUTCFullYear();
    });

    // An optimized implementation for this simple case.
    utcYear.every = function (k) {
      return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function (date) {
        date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
        date.setUTCMonth(0, 1);
        date.setUTCHours(0, 0, 0, 0);
      }, function (date, step) {
        date.setUTCFullYear(date.getUTCFullYear() + step * k);
      });
    };

    var utcYears = utcYear.range;

    exports.timeInterval = newInterval;
    exports.timeMillisecond = millisecond;
    exports.timeMilliseconds = milliseconds;
    exports.utcMillisecond = millisecond;
    exports.utcMilliseconds = milliseconds;
    exports.timeSecond = second;
    exports.timeSeconds = seconds;
    exports.utcSecond = second;
    exports.utcSeconds = seconds;
    exports.timeMinute = minute;
    exports.timeMinutes = minutes;
    exports.timeHour = hour;
    exports.timeHours = hours;
    exports.timeDay = day;
    exports.timeDays = days;
    exports.timeWeek = sunday;
    exports.timeWeeks = sundays;
    exports.timeSunday = sunday;
    exports.timeSundays = sundays;
    exports.timeMonday = monday;
    exports.timeMondays = mondays;
    exports.timeTuesday = tuesday;
    exports.timeTuesdays = tuesdays;
    exports.timeWednesday = wednesday;
    exports.timeWednesdays = wednesdays;
    exports.timeThursday = thursday;
    exports.timeThursdays = thursdays;
    exports.timeFriday = friday;
    exports.timeFridays = fridays;
    exports.timeSaturday = saturday;
    exports.timeSaturdays = saturdays;
    exports.timeMonth = month;
    exports.timeMonths = months;
    exports.timeYear = year;
    exports.timeYears = years;
    exports.utcMinute = utcMinute;
    exports.utcMinutes = utcMinutes;
    exports.utcHour = utcHour;
    exports.utcHours = utcHours;
    exports.utcDay = utcDay;
    exports.utcDays = utcDays;
    exports.utcWeek = utcSunday;
    exports.utcWeeks = utcSundays;
    exports.utcSunday = utcSunday;
    exports.utcSundays = utcSundays;
    exports.utcMonday = utcMonday;
    exports.utcMondays = utcMondays;
    exports.utcTuesday = utcTuesday;
    exports.utcTuesdays = utcTuesdays;
    exports.utcWednesday = utcWednesday;
    exports.utcWednesdays = utcWednesdays;
    exports.utcThursday = utcThursday;
    exports.utcThursdays = utcThursdays;
    exports.utcFriday = utcFriday;
    exports.utcFridays = utcFridays;
    exports.utcSaturday = utcSaturday;
    exports.utcSaturdays = utcSaturdays;
    exports.utcMonth = utcMonth;
    exports.utcMonths = utcMonths;
    exports.utcYear = utcYear;
    exports.utcYears = utcYears;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("138", ["187"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("187");
});
$__System.registerDynamic('188', ['138'], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-time-format/ Version 2.1.1. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('138')) : typeof undefined === 'function' && define.amd ? define(['exports', 'd3-time'], factory) : factory(global.d3 = global.d3 || {}, global.d3);
  })(this, function (exports, d3Time) {
    'use strict';

    function localDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
        date.setFullYear(d.y);
        return date;
      }
      return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
    }

    function utcDate(d) {
      if (0 <= d.y && d.y < 100) {
        var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
        date.setUTCFullYear(d.y);
        return date;
      }
      return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
    }

    function newYear(y) {
      return { y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0 };
    }

    function formatLocale(locale) {
      var locale_dateTime = locale.dateTime,
          locale_date = locale.date,
          locale_time = locale.time,
          locale_periods = locale.periods,
          locale_weekdays = locale.days,
          locale_shortWeekdays = locale.shortDays,
          locale_months = locale.months,
          locale_shortMonths = locale.shortMonths;

      var periodRe = formatRe(locale_periods),
          periodLookup = formatLookup(locale_periods),
          weekdayRe = formatRe(locale_weekdays),
          weekdayLookup = formatLookup(locale_weekdays),
          shortWeekdayRe = formatRe(locale_shortWeekdays),
          shortWeekdayLookup = formatLookup(locale_shortWeekdays),
          monthRe = formatRe(locale_months),
          monthLookup = formatLookup(locale_months),
          shortMonthRe = formatRe(locale_shortMonths),
          shortMonthLookup = formatLookup(locale_shortMonths);

      var formats = {
        "a": formatShortWeekday,
        "A": formatWeekday,
        "b": formatShortMonth,
        "B": formatMonth,
        "c": null,
        "d": formatDayOfMonth,
        "e": formatDayOfMonth,
        "f": formatMicroseconds,
        "H": formatHour24,
        "I": formatHour12,
        "j": formatDayOfYear,
        "L": formatMilliseconds,
        "m": formatMonthNumber,
        "M": formatMinutes,
        "p": formatPeriod,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatSeconds,
        "u": formatWeekdayNumberMonday,
        "U": formatWeekNumberSunday,
        "V": formatWeekNumberISO,
        "w": formatWeekdayNumberSunday,
        "W": formatWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatYear,
        "Y": formatFullYear,
        "Z": formatZone,
        "%": formatLiteralPercent
      };

      var utcFormats = {
        "a": formatUTCShortWeekday,
        "A": formatUTCWeekday,
        "b": formatUTCShortMonth,
        "B": formatUTCMonth,
        "c": null,
        "d": formatUTCDayOfMonth,
        "e": formatUTCDayOfMonth,
        "f": formatUTCMicroseconds,
        "H": formatUTCHour24,
        "I": formatUTCHour12,
        "j": formatUTCDayOfYear,
        "L": formatUTCMilliseconds,
        "m": formatUTCMonthNumber,
        "M": formatUTCMinutes,
        "p": formatUTCPeriod,
        "Q": formatUnixTimestamp,
        "s": formatUnixTimestampSeconds,
        "S": formatUTCSeconds,
        "u": formatUTCWeekdayNumberMonday,
        "U": formatUTCWeekNumberSunday,
        "V": formatUTCWeekNumberISO,
        "w": formatUTCWeekdayNumberSunday,
        "W": formatUTCWeekNumberMonday,
        "x": null,
        "X": null,
        "y": formatUTCYear,
        "Y": formatUTCFullYear,
        "Z": formatUTCZone,
        "%": formatLiteralPercent
      };

      var parses = {
        "a": parseShortWeekday,
        "A": parseWeekday,
        "b": parseShortMonth,
        "B": parseMonth,
        "c": parseLocaleDateTime,
        "d": parseDayOfMonth,
        "e": parseDayOfMonth,
        "f": parseMicroseconds,
        "H": parseHour24,
        "I": parseHour24,
        "j": parseDayOfYear,
        "L": parseMilliseconds,
        "m": parseMonthNumber,
        "M": parseMinutes,
        "p": parsePeriod,
        "Q": parseUnixTimestamp,
        "s": parseUnixTimestampSeconds,
        "S": parseSeconds,
        "u": parseWeekdayNumberMonday,
        "U": parseWeekNumberSunday,
        "V": parseWeekNumberISO,
        "w": parseWeekdayNumberSunday,
        "W": parseWeekNumberMonday,
        "x": parseLocaleDate,
        "X": parseLocaleTime,
        "y": parseYear,
        "Y": parseFullYear,
        "Z": parseZone,
        "%": parseLiteralPercent
      };

      // These recursive directive definitions must be deferred.
      formats.x = newFormat(locale_date, formats);
      formats.X = newFormat(locale_time, formats);
      formats.c = newFormat(locale_dateTime, formats);
      utcFormats.x = newFormat(locale_date, utcFormats);
      utcFormats.X = newFormat(locale_time, utcFormats);
      utcFormats.c = newFormat(locale_dateTime, utcFormats);

      function newFormat(specifier, formats) {
        return function (date) {
          var string = [],
              i = -1,
              j = 0,
              n = specifier.length,
              c,
              pad,
              format;

          if (!(date instanceof Date)) date = new Date(+date);

          while (++i < n) {
            if (specifier.charCodeAt(i) === 37) {
              string.push(specifier.slice(j, i));
              if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
              if (format = formats[c]) c = format(date, pad);
              string.push(c);
              j = i + 1;
            }
          }

          string.push(specifier.slice(j, i));
          return string.join("");
        };
      }

      function newParse(specifier, newDate) {
        return function (string) {
          var d = newYear(1900),
              i = parseSpecifier(d, specifier, string += "", 0),
              week,
              day;
          if (i != string.length) return null;

          // If a UNIX timestamp is specified, return it.
          if ("Q" in d) return new Date(d.Q);

          // The am-pm flag is 0 for AM, and 1 for PM.
          if ("p" in d) d.H = d.H % 12 + d.p * 12;

          // Convert day-of-week and week-of-year to day-of-year.
          if ("V" in d) {
            if (d.V < 1 || d.V > 53) return null;
            if (!("w" in d)) d.w = 1;
            if ("Z" in d) {
              week = utcDate(newYear(d.y)), day = week.getUTCDay();
              week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);
              week = d3Time.utcDay.offset(week, (d.V - 1) * 7);
              d.y = week.getUTCFullYear();
              d.m = week.getUTCMonth();
              d.d = week.getUTCDate() + (d.w + 6) % 7;
            } else {
              week = newDate(newYear(d.y)), day = week.getDay();
              week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);
              week = d3Time.timeDay.offset(week, (d.V - 1) * 7);
              d.y = week.getFullYear();
              d.m = week.getMonth();
              d.d = week.getDate() + (d.w + 6) % 7;
            }
          } else if ("W" in d || "U" in d) {
            if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
            day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
            d.m = 0;
            d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
          }

          // If a time zone is specified, all fields are interpreted as UTC and then
          // offset according to the specified time zone.
          if ("Z" in d) {
            d.H += d.Z / 100 | 0;
            d.M += d.Z % 100;
            return utcDate(d);
          }

          // Otherwise, all fields are in local time.
          return newDate(d);
        };
      }

      function parseSpecifier(d, specifier, string, j) {
        var i = 0,
            n = specifier.length,
            m = string.length,
            c,
            parse;

        while (i < n) {
          if (j >= m) return -1;
          c = specifier.charCodeAt(i++);
          if (c === 37) {
            c = specifier.charAt(i++);
            parse = parses[c in pads ? specifier.charAt(i++) : c];
            if (!parse || (j = parse(d, string, j)) < 0) return -1;
          } else if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }

        return j;
      }

      function parsePeriod(d, string, i) {
        var n = periodRe.exec(string.slice(i));
        return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseShortWeekday(d, string, i) {
        var n = shortWeekdayRe.exec(string.slice(i));
        return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseWeekday(d, string, i) {
        var n = weekdayRe.exec(string.slice(i));
        return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseShortMonth(d, string, i) {
        var n = shortMonthRe.exec(string.slice(i));
        return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseMonth(d, string, i) {
        var n = monthRe.exec(string.slice(i));
        return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
      }

      function parseLocaleDateTime(d, string, i) {
        return parseSpecifier(d, locale_dateTime, string, i);
      }

      function parseLocaleDate(d, string, i) {
        return parseSpecifier(d, locale_date, string, i);
      }

      function parseLocaleTime(d, string, i) {
        return parseSpecifier(d, locale_time, string, i);
      }

      function formatShortWeekday(d) {
        return locale_shortWeekdays[d.getDay()];
      }

      function formatWeekday(d) {
        return locale_weekdays[d.getDay()];
      }

      function formatShortMonth(d) {
        return locale_shortMonths[d.getMonth()];
      }

      function formatMonth(d) {
        return locale_months[d.getMonth()];
      }

      function formatPeriod(d) {
        return locale_periods[+(d.getHours() >= 12)];
      }

      function formatUTCShortWeekday(d) {
        return locale_shortWeekdays[d.getUTCDay()];
      }

      function formatUTCWeekday(d) {
        return locale_weekdays[d.getUTCDay()];
      }

      function formatUTCShortMonth(d) {
        return locale_shortMonths[d.getUTCMonth()];
      }

      function formatUTCMonth(d) {
        return locale_months[d.getUTCMonth()];
      }

      function formatUTCPeriod(d) {
        return locale_periods[+(d.getUTCHours() >= 12)];
      }

      return {
        format: function (specifier) {
          var f = newFormat(specifier += "", formats);
          f.toString = function () {
            return specifier;
          };
          return f;
        },
        parse: function (specifier) {
          var p = newParse(specifier += "", localDate);
          p.toString = function () {
            return specifier;
          };
          return p;
        },
        utcFormat: function (specifier) {
          var f = newFormat(specifier += "", utcFormats);
          f.toString = function () {
            return specifier;
          };
          return f;
        },
        utcParse: function (specifier) {
          var p = newParse(specifier, utcDate);
          p.toString = function () {
            return specifier;
          };
          return p;
        }
      };
    }

    var pads = { "-": "", "_": " ", "0": "0" };
    var numberRe = /^\s*\d+/;
    var percentRe = /^%/;
    var requoteRe = /[\\^$*+?|[\]().{}]/g;

    function pad(value, fill, width) {
      var sign = value < 0 ? "-" : "",
          string = (sign ? -value : value) + "",
          length = string.length;
      return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
    }

    function requote(s) {
      return s.replace(requoteRe, "\\$&");
    }

    function formatRe(names) {
      return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
    }

    function formatLookup(names) {
      var map = {},
          i = -1,
          n = names.length;
      while (++i < n) map[names[i].toLowerCase()] = i;
      return map;
    }

    function parseWeekdayNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.w = +n[0], i + n[0].length) : -1;
    }

    function parseWeekdayNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 1));
      return n ? (d.u = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberSunday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.U = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberISO(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.V = +n[0], i + n[0].length) : -1;
    }

    function parseWeekNumberMonday(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.W = +n[0], i + n[0].length) : -1;
    }

    function parseFullYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 4));
      return n ? (d.y = +n[0], i + n[0].length) : -1;
    }

    function parseYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
    }

    function parseZone(d, string, i) {
      var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
      return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
    }

    function parseMonthNumber(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
    }

    function parseDayOfMonth(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.d = +n[0], i + n[0].length) : -1;
    }

    function parseDayOfYear(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
    }

    function parseHour24(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.H = +n[0], i + n[0].length) : -1;
    }

    function parseMinutes(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.M = +n[0], i + n[0].length) : -1;
    }

    function parseSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 2));
      return n ? (d.S = +n[0], i + n[0].length) : -1;
    }

    function parseMilliseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 3));
      return n ? (d.L = +n[0], i + n[0].length) : -1;
    }

    function parseMicroseconds(d, string, i) {
      var n = numberRe.exec(string.slice(i, i + 6));
      return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
    }

    function parseLiteralPercent(d, string, i) {
      var n = percentRe.exec(string.slice(i, i + 1));
      return n ? i + n[0].length : -1;
    }

    function parseUnixTimestamp(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.Q = +n[0], i + n[0].length) : -1;
    }

    function parseUnixTimestampSeconds(d, string, i) {
      var n = numberRe.exec(string.slice(i));
      return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;
    }

    function formatDayOfMonth(d, p) {
      return pad(d.getDate(), p, 2);
    }

    function formatHour24(d, p) {
      return pad(d.getHours(), p, 2);
    }

    function formatHour12(d, p) {
      return pad(d.getHours() % 12 || 12, p, 2);
    }

    function formatDayOfYear(d, p) {
      return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);
    }

    function formatMilliseconds(d, p) {
      return pad(d.getMilliseconds(), p, 3);
    }

    function formatMicroseconds(d, p) {
      return formatMilliseconds(d, p) + "000";
    }

    function formatMonthNumber(d, p) {
      return pad(d.getMonth() + 1, p, 2);
    }

    function formatMinutes(d, p) {
      return pad(d.getMinutes(), p, 2);
    }

    function formatSeconds(d, p) {
      return pad(d.getSeconds(), p, 2);
    }

    function formatWeekdayNumberMonday(d) {
      var day = d.getDay();
      return day === 0 ? 7 : day;
    }

    function formatWeekNumberSunday(d, p) {
      return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);
    }

    function formatWeekNumberISO(d, p) {
      var day = d.getDay();
      d = day >= 4 || day === 0 ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);
      return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);
    }

    function formatWeekdayNumberSunday(d) {
      return d.getDay();
    }

    function formatWeekNumberMonday(d, p) {
      return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);
    }

    function formatYear(d, p) {
      return pad(d.getFullYear() % 100, p, 2);
    }

    function formatFullYear(d, p) {
      return pad(d.getFullYear() % 10000, p, 4);
    }

    function formatZone(d) {
      var z = d.getTimezoneOffset();
      return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
    }

    function formatUTCDayOfMonth(d, p) {
      return pad(d.getUTCDate(), p, 2);
    }

    function formatUTCHour24(d, p) {
      return pad(d.getUTCHours(), p, 2);
    }

    function formatUTCHour12(d, p) {
      return pad(d.getUTCHours() % 12 || 12, p, 2);
    }

    function formatUTCDayOfYear(d, p) {
      return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);
    }

    function formatUTCMilliseconds(d, p) {
      return pad(d.getUTCMilliseconds(), p, 3);
    }

    function formatUTCMicroseconds(d, p) {
      return formatUTCMilliseconds(d, p) + "000";
    }

    function formatUTCMonthNumber(d, p) {
      return pad(d.getUTCMonth() + 1, p, 2);
    }

    function formatUTCMinutes(d, p) {
      return pad(d.getUTCMinutes(), p, 2);
    }

    function formatUTCSeconds(d, p) {
      return pad(d.getUTCSeconds(), p, 2);
    }

    function formatUTCWeekdayNumberMonday(d) {
      var dow = d.getUTCDay();
      return dow === 0 ? 7 : dow;
    }

    function formatUTCWeekNumberSunday(d, p) {
      return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);
    }

    function formatUTCWeekNumberISO(d, p) {
      var day = d.getUTCDay();
      d = day >= 4 || day === 0 ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);
      return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);
    }

    function formatUTCWeekdayNumberSunday(d) {
      return d.getUTCDay();
    }

    function formatUTCWeekNumberMonday(d, p) {
      return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);
    }

    function formatUTCYear(d, p) {
      return pad(d.getUTCFullYear() % 100, p, 2);
    }

    function formatUTCFullYear(d, p) {
      return pad(d.getUTCFullYear() % 10000, p, 4);
    }

    function formatUTCZone() {
      return "+0000";
    }

    function formatLiteralPercent() {
      return "%";
    }

    function formatUnixTimestamp(d) {
      return +d;
    }

    function formatUnixTimestampSeconds(d) {
      return Math.floor(+d / 1000);
    }

    var locale;

    defaultLocale({
      dateTime: "%x, %X",
      date: "%-m/%-d/%Y",
      time: "%-I:%M:%S %p",
      periods: ["AM", "PM"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
    });

    function defaultLocale(definition) {
      locale = formatLocale(definition);
      exports.timeFormat = locale.format;
      exports.timeParse = locale.parse;
      exports.utcFormat = locale.utcFormat;
      exports.utcParse = locale.utcParse;
      return locale;
    }

    var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

    function formatIsoNative(date) {
      return date.toISOString();
    }

    var formatIso = Date.prototype.toISOString ? formatIsoNative : exports.utcFormat(isoSpecifier);

    function parseIsoNative(string) {
      var date = new Date(string);
      return isNaN(date) ? null : date;
    }

    var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : exports.utcParse(isoSpecifier);

    exports.timeFormatDefaultLocale = defaultLocale;
    exports.timeFormatLocale = formatLocale;
    exports.isoFormat = formatIso;
    exports.isoParse = parseIso;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("13b", ["188"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("188");
});
$__System.registerDynamic("189", ["e"], true, function ($__require, exports, module) {
	var global = this || self,
	    GLOBAL = global;
	/*! Moment Duration Format v1.3.0
  *  https://github.com/jsmreese/moment-duration-format 
  *  Date: 2014-07-15
  *
  *  Duration format plugin function for the Moment.js library
  *  http://momentjs.com/
  *
  *  Copyright 2014 John Madhavan-Reese
  *  Released under the MIT license
  */

	(function (root, undefined) {

		// repeatZero(qty)
		// returns "0" repeated qty times
		function repeatZero(qty) {
			var result = "";

			// exit early
			// if qty is 0 or a negative number
			// or doesn't coerce to an integer
			qty = parseInt(qty, 10);
			if (!qty || qty < 1) {
				return result;
			}

			while (qty) {
				result += "0";
				qty -= 1;
			}

			return result;
		}

		// padZero(str, len [, isRight])
		// pads a string with zeros up to a specified length
		// will not pad a string if its length is aready
		// greater than or equal to the specified length
		// default output pads with zeros on the left
		// set isRight to `true` to pad with zeros on the right
		function padZero(str, len, isRight) {
			if (str == null) {
				str = "";
			}
			str = "" + str;

			return (isRight ? str : "") + repeatZero(len - str.length) + (isRight ? "" : str);
		}

		// isArray
		function isArray(array) {
			return Object.prototype.toString.call(array) === "[object Array]";
		}

		// isObject
		function isObject(obj) {
			return Object.prototype.toString.call(obj) === "[object Object]";
		}

		// findLast
		function findLast(array, callback) {
			var index = array.length;

			while (index -= 1) {
				if (callback(array[index])) {
					return array[index];
				}
			}
		}

		// find
		function find(array, callback) {
			var index = 0,
			    max = array.length,
			    match;

			if (typeof callback !== "function") {
				match = callback;
				callback = function (item) {
					return item === match;
				};
			}

			while (index < max) {
				if (callback(array[index])) {
					return array[index];
				}
				index += 1;
			}
		}

		// each
		function each(array, callback) {
			var index = 0,
			    max = array.length;

			if (!array || !max) {
				return;
			}

			while (index < max) {
				if (callback(array[index], index) === false) {
					return;
				}
				index += 1;
			}
		}

		// map
		function map(array, callback) {
			var index = 0,
			    max = array.length,
			    ret = [];

			if (!array || !max) {
				return ret;
			}

			while (index < max) {
				ret[index] = callback(array[index], index);
				index += 1;
			}

			return ret;
		}

		// pluck
		function pluck(array, prop) {
			return map(array, function (item) {
				return item[prop];
			});
		}

		// compact
		function compact(array) {
			var ret = [];

			each(array, function (item) {
				if (item) {
					ret.push(item);
				}
			});

			return ret;
		}

		// unique
		function unique(array) {
			var ret = [];

			each(array, function (_a) {
				if (!find(ret, _a)) {
					ret.push(_a);
				}
			});

			return ret;
		}

		// intersection
		function intersection(a, b) {
			var ret = [];

			each(a, function (_a) {
				each(b, function (_b) {
					if (_a === _b) {
						ret.push(_a);
					}
				});
			});

			return unique(ret);
		}

		// rest
		function rest(array, callback) {
			var ret = [];

			each(array, function (item, index) {
				if (!callback(item)) {
					ret = array.slice(index);
					return false;
				}
			});

			return ret;
		}

		// initial
		function initial(array, callback) {
			var reversed = array.slice().reverse();

			return rest(reversed, callback).reverse();
		}

		// extend
		function extend(a, b) {
			for (var key in b) {
				if (b.hasOwnProperty(key)) {
					a[key] = b[key];
				}
			}

			return a;
		}

		// define internal moment reference
		var moment;

		if (typeof $__require === "function") {
			try {
				moment = $__require("e");
			} catch (e) {}
		}

		if (!moment && root.moment) {
			moment = root.moment;
		}

		if (!moment) {
			throw "Moment Duration Format cannot find Moment.js";
		}

		// moment.duration.format([template] [, precision] [, settings])
		moment.duration.fn.format = function () {

			var tokenizer,
			    tokens,
			    types,
			    typeMap,
			    momentTypes,
			    foundFirst,
			    trimIndex,
			    args = [].slice.call(arguments),
			    settings = extend({}, this.format.defaults),

			// keep a shadow copy of this moment for calculating remainders
			remainder = moment.duration(this);

			// add a reference to this duration object to the settings for use
			// in a template function
			settings.duration = this;

			// parse arguments
			each(args, function (arg) {
				if (typeof arg === "string" || typeof arg === "function") {
					settings.template = arg;
					return;
				}

				if (typeof arg === "number") {
					settings.precision = arg;
					return;
				}

				if (isObject(arg)) {
					extend(settings, arg);
				}
			});

			// types
			types = settings.types = isArray(settings.types) ? settings.types : settings.types.split(" ");

			// template
			if (typeof settings.template === "function") {
				settings.template = settings.template.apply(settings);
			}

			// tokenizer regexp
			tokenizer = new RegExp(map(types, function (type) {
				return settings[type].source;
			}).join("|"), "g");

			// token type map function
			typeMap = function (token) {
				return find(types, function (type) {
					return settings[type].test(token);
				});
			};

			// tokens array
			tokens = map(settings.template.match(tokenizer), function (token, index) {
				var type = typeMap(token),
				    length = token.length;

				return {
					index: index,
					length: length,

					// replace escaped tokens with the non-escaped token text
					token: type === "escape" ? token.replace(settings.escape, "$1") : token,

					// ignore type on non-moment tokens
					type: type === "escape" || type === "general" ? null : type

					// calculate base value for all moment tokens
					//baseValue: ((type === "escape" || type === "general") ? null : this.as(type))
				};
			}, this);

			// unique moment token types in the template (in order of descending magnitude)
			momentTypes = intersection(types, unique(compact(pluck(tokens, "type"))));

			// exit early if there are no momentTypes
			if (!momentTypes.length) {
				return pluck(tokens, "token").join("");
			}

			// calculate values for each token type in the template
			each(momentTypes, function (momentType, index) {
				var value, wholeValue, decimalValue, isLeast, isMost;

				// calculate integer and decimal value portions
				value = remainder.as(momentType);
				wholeValue = value > 0 ? Math.floor(value) : Math.ceil(value);
				decimalValue = value - wholeValue;

				// is this the least-significant moment token found?
				isLeast = index + 1 === momentTypes.length;

				// is this the most-significant moment token found?
				isMost = !index;

				// update tokens array
				// using this algorithm to not assume anything about
				// the order or frequency of any tokens
				each(tokens, function (token) {
					if (token.type === momentType) {
						extend(token, {
							value: value,
							wholeValue: wholeValue,
							decimalValue: decimalValue,
							isLeast: isLeast,
							isMost: isMost
						});

						if (isMost) {
							// note the length of the most-significant moment token:
							// if it is greater than one and forceLength is not set, default forceLength to `true`
							if (settings.forceLength == null && token.length > 1) {
								settings.forceLength = true;
							}

							// rationale is this:
							// if the template is "h:mm:ss" and the moment value is 5 minutes, the user-friendly output is "5:00", not "05:00"
							// shouldn't pad the `minutes` token even though it has length of two
							// if the template is "hh:mm:ss", the user clearly wanted everything padded so we should output "05:00"
							// if the user wanted the full padded output, they can set `{ trim: false }` to get "00:05:00"
						}
					}
				});

				// update remainder
				remainder.subtract(wholeValue, momentType);
			});

			// trim tokens array
			if (settings.trim) {
				tokens = (settings.trim === "left" ? rest : initial)(tokens, function (token) {
					// return `true` if:
					// the token is not the least moment token (don't trim the least moment token)
					// the token is a moment token that does not have a value (don't trim moment tokens that have a whole value)
					return !(token.isLeast || token.type != null && token.wholeValue);
				});
			}

			// build output

			// the first moment token can have special handling
			foundFirst = false;

			// run the map in reverse order if trimming from the right
			if (settings.trim === "right") {
				tokens.reverse();
			}

			tokens = map(tokens, function (token) {
				var val, decVal;

				if (!token.type) {
					// if it is not a moment token, use the token as its own value
					return token.token;
				}

				// apply negative precision formatting to the least-significant moment token
				if (token.isLeast && settings.precision < 0) {
					val = (Math.floor(token.wholeValue * Math.pow(10, settings.precision)) * Math.pow(10, -settings.precision)).toString();
				} else {
					val = token.wholeValue.toString();
				}

				// remove negative sign from the beginning
				val = val.replace(/^\-/, "");

				// apply token length formatting
				// special handling for the first moment token that is not the most significant in a trimmed template
				if (token.length > 1 && (foundFirst || token.isMost || settings.forceLength)) {
					val = padZero(val, token.length);
				}

				// add decimal value if precision > 0
				if (token.isLeast && settings.precision > 0) {
					decVal = token.decimalValue.toString().replace(/^\-/, "").split(/\.|e\-/);
					switch (decVal.length) {
						case 1:
							val += "." + padZero(decVal[0], settings.precision, true).slice(0, settings.precision);
							break;

						case 2:
							val += "." + padZero(decVal[1], settings.precision, true).slice(0, settings.precision);
							break;

						case 3:
							val += "." + padZero(repeatZero(+decVal[2] - 1) + (decVal[0] || "0") + decVal[1], settings.precision, true).slice(0, settings.precision);
							break;

						default:
							throw "Moment Duration Format: unable to parse token decimal value.";
					}
				}

				// add a negative sign if the value is negative and token is most significant
				if (token.isMost && token.value < 0) {
					val = "-" + val;
				}

				foundFirst = true;

				return val;
			});

			// undo the reverse if trimming from the right
			if (settings.trim === "right") {
				tokens.reverse();
			}

			return tokens.join("");
		};

		moment.duration.fn.format.defaults = {
			// token definitions
			escape: /\[(.+?)\]/,
			years: /[Yy]+/,
			months: /M+/,
			weeks: /[Ww]+/,
			days: /[Dd]+/,
			hours: /[Hh]+/,
			minutes: /m+/,
			seconds: /s+/,
			milliseconds: /S+/,
			general: /.+?/,

			// token type names
			// in order of descending magnitude
			// can be a space-separated token name list or an array of token names
			types: "escape years months weeks days hours minutes seconds milliseconds general",

			// format options

			// trim
			// "left" - template tokens are trimmed from the left until the first moment token that has a value >= 1
			// "right" - template tokens are trimmed from the right until the first moment token that has a value >= 1
			// (the final moment token is not trimmed, regardless of value)
			// `false` - template tokens are not trimmed
			trim: "left",

			// precision
			// number of decimal digits to include after (to the right of) the decimal point (positive integer)
			// or the number of digits to truncate to 0 before (to the left of) the decimal point (negative integer)
			precision: 0,

			// force first moment token with a value to render at full length even when template is trimmed and first moment token has length of 1
			forceLength: null,

			// template used to format duration
			// may be a function or a string
			// template functions are executed with the `this` binding of the settings object
			// so that template strings may be dynamically generated based on the duration object
			// (accessible via `this.duration`)
			// or any of the other settings
			template: function () {
				var types = this.types,
				    dur = this.duration,
				    lastType = findLast(types, function (type) {
					return dur._data[type];
				});

				// default template strings for each duration dimension type
				switch (lastType) {
					case "seconds":
						return "h:mm:ss";
					case "minutes":
						return "d[d] h:mm";
					case "hours":
						return "d[d] h[h]";
					case "days":
						return "M[m] d[d]";
					case "weeks":
						return "y[y] w[w]";
					case "months":
						return "y[y] M[m]";
					case "years":
						return "y[y]";
					default:
						return "y[y] M[m] d[d] h:mm:ss";
				}
			}
		};
	})(this);
});
$__System.registerDynamic("186", ["189"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("189");
});
$__System.registerDynamic("180", ["1c", "50"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    /**
     * Renders a simple label surrounded by a box within in svg
     *
     *      +----------------+
     *      | My label       |
     *      |                |
     *      +----------------+
     */

    /**
     *  Copyright (c) 2016, The Regents of the University of California,
     *  through Lawrence Berkeley National Laboratory (subject to receipt
     *  of any required approvals from the U.S. Dept. of Energy).
     *  All rights reserved.
     *
     *  This source code is licensed under the BSD-style license found in the
     *  LICENSE file in the root directory of this source tree.
     */

    var Label = function Label(_ref) {
        var label = _ref.label,
            style = _ref.style,
            align = _ref.align,
            width = _ref.width,
            height = _ref.height;

        var textStyle = {
            fontSize: 11,
            textAnchor: "left",
            fill: "#b0b0b0",
            pointerEvents: "none"
        };

        var textStyleCentered = {
            fontSize: 11,
            textAnchor: "middle",
            fill: "#bdbdbd",
            pointerEvents: "none"
        };

        var tstyle = align === "center" ? textStyleCentered : textStyle;
        var posx = align === "center" ? parseInt(width / 2, 10) : 10;

        var text = _react2.default.createElement("text", { x: posx, y: 5, dy: "1.2em", style: tstyle }, label);

        var box = _react2.default.createElement("rect", {
            x: 0,
            y: 0,
            style: style,
            width: width,
            height: height
        });

        return _react2.default.createElement("g", null, box, text);
    };

    Label.defaultProps = {
        align: "center",
        width: 100,
        height: 100,
        pointerEvents: "none",
        style: { fill: "#FEFEFE", stroke: "#DDD", opacity: 0.8 }
    };

    Label.propTypes = {
        align: _propTypes2.default.oneOf(["center", "left"]),
        /**
        * The label to render
        */
        label: _propTypes2.default.string.isRequired,
        /**
        * The style of the label. This is the inline CSS applied directly
        * to the label box
        */
        style: _propTypes2.default.object, // eslint-disable-line
        /**
        * The width of the rectangle to render into
        */
        width: _propTypes2.default.number,
        /**
        * The height of the rectangle to render into
        */
        height: _propTypes2.default.number
    };

    exports.default = Label;
});
$__System.registerDynamic("130", ["122", "e", "1c", "50", "13b", "186", "141", "180"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _moment = $__require("e");
  var _moment2 = _interopRequireDefault(_moment);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _d3TimeFormat = $__require("13b");
  $__require("186");
  var _ValueList = $__require("141");
  var _ValueList2 = _interopRequireDefault(_ValueList);
  var _Label = $__require("180");
  var _Label2 = _interopRequireDefault(_Label);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var TimeMarker = function (_React$Component) {
    _inherits(TimeMarker, _React$Component);
    function TimeMarker() {
      _classCallCheck(this, TimeMarker);
      return _possibleConstructorReturn(this, (TimeMarker.__proto__ || Object.getPrototypeOf(TimeMarker)).apply(this, arguments));
    }
    _createClass(TimeMarker, [{
      key: "renderLine",
      value: function renderLine(posx) {
        return _react2.default.createElement("line", {
          style: this.props.infoStyle.line,
          x1: posx,
          y1: 0,
          x2: posx,
          y2: this.props.height
        });
      }
    }, {
      key: "renderTimeMarker",
      value: function renderTimeMarker(d) {
        var textStyle = {
          fontSize: 11,
          textAnchor: "left",
          fill: "#bdbdbd"
        };
        var dateStr = "" + d;
        if (this.props.timeFormat === "day") {
          var formatter = (0, _d3TimeFormat.timeFormat)("%d");
          dateStr = formatter(d);
        } else if (this.props.timeFormat === "month") {
          var _formatter = (0, _d3TimeFormat.timeFormat)("%B");
          dateStr = _formatter(d);
        } else if (this.props.timeFormat === "year") {
          var _formatter2 = (0, _d3TimeFormat.timeFormat)("%Y");
          dateStr = _formatter2(d);
        } else if (this.props.timeFormat === "relative") {
          dateStr = _moment2.default.duration(+d).format();
        } else if (_underscore2.default.isString(this.props.timeFormat)) {
          var _formatter3 = (0, _d3TimeFormat.timeFormat)(this.props.timeFormat);
          dateStr = _formatter3(d);
        } else if (_underscore2.default.isFunction(this.props.timeFormat)) {
          dateStr = this.props.timeFormat(d);
        }
        return _react2.default.createElement("text", {
          x: 0,
          y: 0,
          dy: "1.2em",
          style: textStyle
        }, dateStr);
      }
    }, {
      key: "renderInfoBox",
      value: function renderInfoBox(posx) {
        var w = this.props.infoWidth;
        var infoBoxProps = {
          align: "left",
          style: this.props.infoStyle.box,
          width: this.props.infoWidth,
          height: this.props.infoHeight
        };
        if (this.props.infoValues) {
          var infoBox = _underscore2.default.isString(this.props.infoValues) ? _react2.default.createElement(_Label2.default, _extends({}, infoBoxProps, { label: this.props.infoValues })) : _react2.default.createElement(_ValueList2.default, _extends({}, infoBoxProps, { values: this.props.infoValues }));
          if (posx + 10 + w < this.props.width - 50) {
            return _react2.default.createElement("g", { transform: "translate(" + (posx + 10) + "," + 5 + ")" }, this.props.showTime ? this.renderTimeMarker(this.props.time) : null, _react2.default.createElement("g", { transform: "translate(0," + (this.props.showTime ? 20 : 0) + ")" }, infoBox));
          }
          return _react2.default.createElement("g", { transform: "translate(" + (posx - w - 10) + "," + 5 + ")" }, this.props.showTime ? this.renderTimeMarker(this.props.time) : null, _react2.default.createElement("g", { transform: "translate(0," + (this.props.showTime ? 20 : 0) + ")" }, infoBox));
        }
        return _react2.default.createElement("g", null);
      }
    }, {
      key: "render",
      value: function render() {
        var posx = this.props.timeScale(this.props.time);
        if (posx) {
          return _react2.default.createElement("g", null, this.props.showLine ? this.renderLine(posx) : null, this.props.showInfoBox ? this.renderInfoBox(posx) : null);
        }
        return null;
      }
    }]);
    return TimeMarker;
  }(_react2.default.Component);
  exports.default = TimeMarker;
  TimeMarker.propTypes = {
    time: _propTypes2.default.instanceOf(Date),
    infoValues: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.shape({
      label: _propTypes2.default.string,
      value: _propTypes2.default.string
    }))]),
    infoStyle: _propTypes2.default.shape({
      line: _propTypes2.default.object,
      box: _propTypes2.default.object,
      dot: _propTypes2.default.object
    }),
    infoWidth: _propTypes2.default.number,
    infoHeight: _propTypes2.default.number,
    showInfoBox: _propTypes2.default.bool,
    showLine: _propTypes2.default.bool,
    showTime: _propTypes2.default.bool,
    timeFormat: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
    timeScale: _propTypes2.default.func,
    width: _propTypes2.default.number,
    height: _propTypes2.default.number
  };
  TimeMarker.defaultProps = {
    showInfoBox: true,
    showLine: true,
    showTime: true,
    infoStyle: {
      line: {
        stroke: "#999",
        cursor: "crosshair",
        pointerEvents: "none"
      },
      box: {
        fill: "white",
        opacity: 0.9,
        stroke: "#999",
        pointerEvents: "none"
      },
      dot: { fill: "#999" }
    },
    infoWidth: 90,
    infoHeight: 25
  };
});
$__System.registerDynamic("18a", ["f7"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _from = $__require("f7");
  var _from2 = _interopRequireDefault(_from);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function (arr) {
    return Array.isArray(arr) ? arr : (0, _from2.default)(arr);
  };
});
$__System.registerDynamic("71", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function (obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  };
});
$__System.registerDynamic('18b', ['115', '18c', '117', '18d', '18e', '18f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var getKeys = $__require('115');
  var gOPS = $__require('18c');
  var pIE = $__require('117');
  var toObject = $__require('18d');
  var IObject = $__require('18e');
  var $assign = Object.assign;
  module.exports = !$assign || $__require('18f')(function () {
    var A = {};
    var B = {};
    var S = Symbol();
    var K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    var T = toObject(target);
    var aLen = arguments.length;
    var index = 1;
    var getSymbols = gOPS.f;
    var isEnum = pIE.f;
    while (aLen > index) {
      var S = IObject(arguments[index++]);
      var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
      var length = keys.length;
      var j = 0;
      var key;
      while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
    }
    return T;
  } : $assign;
});
$__System.registerDynamic('190', ['fc', '18b'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  $export($export.S + $export.F, 'Object', { assign: $__require('18b') });
});
$__System.registerDynamic('191', ['190', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('190');
  module.exports = $__require('ff').Object.assign;
});
$__System.registerDynamic("ed", ["191"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("191"), __esModule: true };
});
$__System.registerDynamic("67", ["ed"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _assign = $__require("ed");
  var _assign2 = _interopRequireDefault(_assign);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = _assign2.default || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
});
$__System.registerDynamic("192", ["198", "199", "68", "19a", "69", "19b", "6a", "122", "193", "194", "195", "196", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _keys = $__require("198");
    var _keys2 = _interopRequireDefault(_keys);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _get2 = $__require("19b");
    var _get3 = _interopRequireDefault(_get2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _collector = $__require("194");
    var _collector2 = _interopRequireDefault(_collector);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Aggregator = function (_Processor) {
      (0, _inherits3.default)(Aggregator, _Processor);
      function Aggregator(arg1, options) {
        (0, _classCallCheck3.default)(this, Aggregator);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Aggregator.__proto__ || (0, _getPrototypeOf2.default)(Aggregator)).call(this, arg1, options));
        if (arg1 instanceof Aggregator) {
          var other = arg1;
          _this._fields = other._fields;
          _this._windowType = other._windowType;
          _this._windowDuration = other._windowDuration;
          _this._groupBy = other._groupBy;
          _this._emitOn = other._emitOn;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          var pipeline = arg1;
          _this._windowType = pipeline.getWindowType();
          _this._windowDuration = pipeline.getWindowDuration();
          _this._groupBy = pipeline.getGroupBy();
          _this._emitOn = pipeline.getEmitOn();
          if (!_underscore2.default.has(options, "fields")) {
            throw new Error("Aggregator: constructor needs an aggregator field mapping");
          }
          _underscore2.default.forEach(options.fields, function (operator, field) {
            if (!_underscore2.default.isString(field) && !_underscore2.default.isArray(field)) {
              throw new Error("Aggregator: field of unknown type: " + field);
            }
          });
          if (pipeline.mode() === "stream") {
            if (!pipeline.getWindowType() || !pipeline.getWindowDuration()) {
              throw new Error("Unable to aggregate because no windowing strategy was specified in pipeline");
            }
          }
          _this._fields = options.fields;
        } else {
          throw new Error("Unknown arg to Filter constructor", arg1);
        }
        _this._collector = new _collector2.default({
          windowType: _this._windowType,
          windowDuration: _this._windowDuration,
          groupBy: _this._groupBy,
          emitOn: _this._emitOn
        }, function (collection, windowKey, groupByKey) {
          return _this.handleTrigger(collection, windowKey, groupByKey);
        });
        return _this;
      }
      (0, _createClass3.default)(Aggregator, [{
        key: "clone",
        value: function clone() {
          return new Aggregator(this);
        }
      }, {
        key: "handleTrigger",
        value: function handleTrigger(collection, windowKey) {
          var d = {};
          _underscore2.default.each(this._fields, function (f, fieldName) {
            var keys = (0, _keys2.default)(f);
            if (keys.length !== 1) {
              throw new Error("Fields should contain exactly one field", f);
            }
            var field = keys[0];
            var operator = f[field];
            d[fieldName] = collection.aggregate(operator, field);
          });
          var event = void 0;
          if (windowKey === "global") {
            event = new _timerangeevent2.default(collection.range(), d);
          } else {
            var utc = this._windowType === "fixed";
            event = new _indexedevent2.default(windowKey, d, utc);
          }
          this.emit(event);
        }
      }, {
        key: "flush",
        value: function flush() {
          this._collector.flushCollections();
          (0, _get3.default)(Aggregator.prototype.__proto__ || (0, _getPrototypeOf2.default)(Aggregator.prototype), "flush", this).call(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            this._collector.addEvent(event);
          }
        }
      }]);
      return Aggregator;
    }(_processor2.default);
    exports.default = Aggregator;
  })($__require("16"));
});
$__System.registerDynamic('19c', ['19d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('19d');
  var floor = Math.floor;
  module.exports = function isInteger(it) {
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };
});
$__System.registerDynamic('19e', ['fc', '19c'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  $export($export.S, 'Number', { isInteger: $__require('19c') });
});
$__System.registerDynamic('19f', ['19e', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('19e');
  module.exports = $__require('ff').Number.isInteger;
});
$__System.registerDynamic("1a0", ["19f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("19f"), __esModule: true };
});
$__System.registerDynamic("1a1", ["1a0", "199", "68", "19a", "69", "6a", "122", "1a6", "1a2", "195", "193", "1a3", "1a4", "196", "197", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _isInteger = $__require("1a0");
    var _isInteger2 = _interopRequireDefault(_isInteger);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _index = $__require("1a2");
    var _index2 = _interopRequireDefault(_index);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _timeevent = $__require("1a3");
    var _timeevent2 = _interopRequireDefault(_timeevent);
    var _timerange = $__require("1a4");
    var _timerange2 = _interopRequireDefault(_timerange);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _pipeline = $__require("197");
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Aligner = function (_Processor) {
      (0, _inherits3.default)(Aligner, _Processor);
      function Aligner(arg1, options) {
        (0, _classCallCheck3.default)(this, Aligner);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Aligner.__proto__ || (0, _getPrototypeOf2.default)(Aligner)).call(this, arg1, options));
        if (arg1 instanceof Aligner) {
          var other = arg1;
          _this._fieldSpec = other._fieldSpec;
          _this._window = other._window;
          _this._method = other._method;
          _this._limit = other._limit;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          var fieldSpec = options.fieldSpec,
              window = options.window,
              _options$method = options.method,
              method = _options$method === undefined ? "hold" : _options$method,
              _options$limit = options.limit,
              limit = _options$limit === undefined ? null : _options$limit;
          _this._fieldSpec = fieldSpec;
          _this._window = window;
          _this._method = method;
          _this._limit = limit;
        } else {
          throw new Error("Unknown arg to Aligner constructor", arg1);
        }
        _this._previous = null;
        if (_underscore2.default.isString(_this._fieldSpec)) {
          _this._fieldSpec = [_this._fieldSpec];
        }
        if (!_underscore2.default.contains(["linear", "hold"], _this._method)) {
          throw new Error("Unknown method '" + _this._method + "' passed to Aligner");
        }
        if (_this._limit && !(0, _isInteger2.default)(_this._limit)) {
          throw new Error("Limit passed to Aligner is not an integer");
        }
        return _this;
      }
      (0, _createClass3.default)(Aligner, [{
        key: "clone",
        value: function clone() {
          return new Aligner(this);
        }
      }, {
        key: "isAligned",
        value: function isAligned(event) {
          var bound = _index2.default.getIndexString(this._window, event.timestamp());
          return this.getBoundaryTime(bound) === event.timestamp().getTime();
        }
      }, {
        key: "getBoundaries",
        value: function getBoundaries(event) {
          var prevIndex = _index2.default.getIndexString(this._window, this._previous.timestamp());
          var currentIndex = _index2.default.getIndexString(this._window, event.timestamp());
          if (prevIndex !== currentIndex) {
            var range = new _timerange2.default(this._previous.timestamp(), event.timestamp());
            return _index2.default.getIndexStringList(this._window, range).slice(1);
          } else {
            return [];
          }
        }
      }, {
        key: "getBoundaryTime",
        value: function getBoundaryTime(boundaryIndex) {
          var index = new _index2.default(boundaryIndex);
          return index.begin().getTime();
        }
      }, {
        key: "interpolateHold",
        value: function interpolateHold(boundary) {
          var _this2 = this;
          var setNone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var d = new _immutable2.default.Map();
          var t = this.getBoundaryTime(boundary);
          this._fieldSpec.forEach(function (path) {
            var fieldPath = _util2.default.fieldPathToArray(path);
            if (!setNone) {
              d = d.setIn(fieldPath, _this2._previous.get(fieldPath));
            } else {
              d = d.setIn(fieldPath, null);
            }
          });
          return new _timeevent2.default(t, d);
        }
      }, {
        key: "interpolateLinear",
        value: function interpolateLinear(boundary, event) {
          var _this3 = this;
          var d = new _immutable2.default.Map();
          var previousTime = this._previous.timestamp().getTime();
          var boundaryTime = this.getBoundaryTime(boundary);
          var currentTime = event.timestamp().getTime();
          var f = (boundaryTime - previousTime) / (currentTime - previousTime);
          this._fieldSpec.forEach(function (path) {
            var fieldPath = _util2.default.fieldPathToArray(path);
            var previousVal = _this3._previous.get(fieldPath);
            var currentVal = event.get(fieldPath);
            var interpolatedVal = null;
            if (!_underscore2.default.isNumber(previousVal) || !_underscore2.default.isNumber(currentVal)) {
              console.warn("Path " + fieldPath + " contains a non-numeric value or does not exist");
            } else {
              interpolatedVal = previousVal + f * (currentVal - previousVal);
            }
            d = d.setIn(fieldPath, interpolatedVal);
          });
          return new _timeevent2.default(boundaryTime, d);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          var _this4 = this;
          if (event instanceof _timerangeevent2.default || event instanceof _indexedevent2.default) {
            throw new Error("TimeRangeEvent and IndexedEvent series can not be aligned.");
          }
          if (this.hasObservers()) {
            if (!this._previous) {
              this._previous = event;
              if (this.isAligned(event)) {
                this.emit(event);
              }
              return;
            }
            var boundaries = this.getBoundaries(event);
            var count = boundaries.length;
            boundaries.forEach(function (boundary) {
              var outputEvent = void 0;
              if (_this4._limit && count > _this4._limit) {
                outputEvent = _this4.interpolateHold(boundary, true);
              } else {
                if (_this4._method === "linear") {
                  outputEvent = _this4.interpolateLinear(boundary, event);
                } else {
                  outputEvent = _this4.interpolateHold(boundary);
                }
              }
              _this4.emit(outputEvent);
            });
            this._previous = event;
          }
        }
      }]);
      return Aligner;
    }(_processor2.default);
    exports.default = Aligner;
  })($__require("16"));
});
$__System.registerDynamic("1a7", ["199", "68", "19a", "69", "6a", "193", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Collapser = function (_Processor) {
      (0, _inherits3.default)(Collapser, _Processor);
      function Collapser(arg1, options) {
        (0, _classCallCheck3.default)(this, Collapser);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Collapser.__proto__ || (0, _getPrototypeOf2.default)(Collapser)).call(this, arg1, options));
        if (arg1 instanceof Collapser) {
          var other = arg1;
          _this._fieldSpecList = other._fieldSpecList;
          _this._name = other._name;
          _this._reducer = other._reducer;
          _this._append = other._append;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          _this._fieldSpecList = options.fieldSpecList;
          _this._name = options.name;
          _this._reducer = options.reducer;
          _this._append = options.append;
        } else {
          throw new Error("Unknown arg to Collapser constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Collapser, [{
        key: "clone",
        value: function clone() {
          return new Collapser(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            this.emit(event.collapse(this._fieldSpecList, this._name, this._reducer, this._append));
          }
        }
      }]);
      return Collapser;
    }(_processor2.default);
    exports.default = Collapser;
  })($__require("16"));
});
$__System.registerDynamic("1a3", ["1a9", "1aa", "199", "68", "19a", "69", "6a", "122", "1a6", "1a8", "1a5"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _stringify = $__require("1a9");
  var _stringify2 = _interopRequireDefault(_stringify);
  var _toConsumableArray2 = $__require("1aa");
  var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _immutable = $__require("1a6");
  var _immutable2 = _interopRequireDefault(_immutable);
  var _event = $__require("1a8");
  var _event2 = _interopRequireDefault(_event);
  var _util = $__require("1a5");
  var _util2 = _interopRequireDefault(_util);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var TimeEvent = function (_Event) {
    (0, _inherits3.default)(TimeEvent, _Event);
    function TimeEvent(arg1, arg2) {
      (0, _classCallCheck3.default)(this, TimeEvent);
      var _this = (0, _possibleConstructorReturn3.default)(this, (TimeEvent.__proto__ || (0, _getPrototypeOf2.default)(TimeEvent)).call(this));
      if (arg1 instanceof TimeEvent) {
        var other = arg1;
        _this._d = other._d;
        return (0, _possibleConstructorReturn3.default)(_this);
      } else if (arg1 instanceof _immutable2.default.Map && arg1.has("time") && arg1.has("data")) {
        _this._d = arg1;
        return (0, _possibleConstructorReturn3.default)(_this);
      }
      var time = _util2.default.timestampFromArg(arg1);
      var data = _util2.default.dataFromArg(arg2);
      _this._d = new _immutable2.default.Map({
        time: time,
        data: data
      });
      return _this;
    }
    (0, _createClass3.default)(TimeEvent, [{
      key: "key",
      value: function key() {
        return this.timestamp().getTime();
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return {
          time: this.timestamp().getTime(),
          data: this.data().toJSON()
        };
      }
    }, {
      key: "toPoint",
      value: function toPoint() {
        return [this.timestamp().getTime()].concat((0, _toConsumableArray3.default)(_underscore2.default.values(this.data().toJSON())));
      }
    }, {
      key: "timestampAsUTCString",
      value: function timestampAsUTCString() {
        return this.timestamp().toUTCString();
      }
    }, {
      key: "timestampAsLocalString",
      value: function timestampAsLocalString() {
        return this.timestamp().toString();
      }
    }, {
      key: "timestamp",
      value: function timestamp() {
        return this._d.get("time");
      }
    }, {
      key: "begin",
      value: function begin() {
        return this.timestamp();
      }
    }, {
      key: "end",
      value: function end() {
        return this.timestamp();
      }
    }, {
      key: "stringify",
      value: function stringify() {
        return (0, _stringify2.default)(this.data());
      }
    }]);
    return TimeEvent;
  }(_event2.default);
  exports.default = TimeEvent;
});
$__System.registerDynamic("1ab", ["199", "68", "19a", "69", "6a", "122", "193", "1a2", "1a3", "195", "1a4", "196", "197", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _index = $__require("1a2");
    var _index2 = _interopRequireDefault(_index);
    var _timeevent = $__require("1a3");
    var _timeevent2 = _interopRequireDefault(_timeevent);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _timerange = $__require("1a4");
    var _timerange2 = _interopRequireDefault(_timerange);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _pipeline = $__require("197");
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isSubclass(Base, X) {
      return Base === X || X.prototype === Base;
    }
    var Converter = function (_Processor) {
      (0, _inherits3.default)(Converter, _Processor);
      function Converter(arg1, options) {
        (0, _classCallCheck3.default)(this, Converter);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Converter.__proto__ || (0, _getPrototypeOf2.default)(Converter)).call(this, arg1, options));
        if (arg1 instanceof Converter) {
          var other = arg1;
          _this._convertTo = other._convertTo;
          _this._duration = other._duration;
          _this._durationString = other._durationString;
          _this._alignment = other._alignment;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          if (!_underscore2.default.has(options, "type")) {
            throw new Error("Converter: constructor needs 'type' in options");
          }
          if (isSubclass(_timeevent2.default, options.type)) {
            _this._convertTo = options.type;
          } else if (isSubclass(_timerangeevent2.default, options.type) || isSubclass(_indexedevent2.default, options.type)) {
            _this._convertTo = options.type;
            if (options.duration && _underscore2.default.isString(options.duration)) {
              _this._duration = _util2.default.windowDuration(options.duration);
              _this._durationString = options.duration;
            }
          } else {
            throw Error("Unable to interpret type argument passed to Converter constructor");
          }
          _this._alignment = options.alignment || "center";
        } else {
          throw new Error("Unknown arg to Converter constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Converter, [{
        key: "clone",
        value: function clone() {
          return new Converter(this);
        }
      }, {
        key: "convertEvent",
        value: function convertEvent(event) {
          var T = this._convertTo;
          if (isSubclass(_timeevent2.default, T)) {
            return event;
          } else if (isSubclass(_timerangeevent2.default, T)) {
            var alignment = this._alignment;
            var begin = void 0,
                end = void 0;
            if (!this._duration) {
              throw new Error("Duration expected in converter");
            }
            switch (alignment) {
              case "front":
                begin = event.timestamp();
                end = new Date(+event.timestamp() + this._duration);
                break;
              case "center":
                begin = new Date(+event.timestamp() - parseInt(this._duration / 2, 10));
                end = new Date(+event.timestamp() + parseInt(this._duration / 2, 10));
                break;
              case "behind":
                end = event.timestamp();
                begin = new Date(+event.timestamp() - this._duration);
                break;
              default:
                throw new Error("Unknown alignment of converter");
            }
            var timeRange = new _timerange2.default([begin, end]);
            return new T(timeRange, event.data());
          } else if (isSubclass(_indexedevent2.default, T)) {
            var timestamp = event.timestamp();
            var indexString = _index2.default.getIndexString(this._durationString, timestamp);
            return new this._convertTo(indexString, event.data(), null);
          }
        }
      }, {
        key: "convertTimeRangeEvent",
        value: function convertTimeRangeEvent(event) {
          var T = this._convertTo;
          if (isSubclass(_timerangeevent2.default, T)) {
            return event;
          }
          if (isSubclass(_timeevent2.default, T)) {
            var alignment = this._alignment;
            var beginTime = event.begin();
            var endTime = event.end();
            var timestamp = void 0;
            switch (alignment) {
              case "lag":
                timestamp = beginTime;
                break;
              case "center":
                timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));
                break;
              case "lead":
                timestamp = endTime;
                break;
            }
            return new T(timestamp, event.data());
          }
          if (isSubclass(_indexedevent2.default, T)) {
            throw new Error("Cannot convert TimeRangeEvent to an IndexedEvent");
          }
        }
      }, {
        key: "convertIndexedEvent",
        value: function convertIndexedEvent(event) {
          var T = this._convertTo;
          if (isSubclass(_indexedevent2.default, T)) {
            return event;
          }
          if (isSubclass(_timeevent2.default, T)) {
            var alignment = this._alignment;
            var beginTime = event.begin();
            var endTime = event.end();
            var timestamp = void 0;
            switch (alignment) {
              case "lag":
                timestamp = beginTime;
                break;
              case "center":
                timestamp = new Date(parseInt((beginTime.getTime() + endTime.getTime()) / 2, 10));
                break;
              case "lead":
                timestamp = endTime;
                break;
            }
            return new T(timestamp, event.data());
          }
          if (isSubclass(_timerangeevent2.default, T)) {
            return new T(event.timerange(), event.data());
          }
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            var outputEvent = void 0;
            if (event instanceof _timerangeevent2.default) {
              outputEvent = this.convertTimeRangeEvent(event);
            } else if (event instanceof _indexedevent2.default) {
              outputEvent = this.convertIndexedEvent(event);
            } else if (event instanceof _timeevent2.default) {
              outputEvent = this.convertEvent(event);
            } else {
              throw new Error("Unknown event type received");
            }
            this.emit(outputEvent);
          }
        }
      }]);
      return Converter;
    }(_processor2.default);
    exports.default = Converter;
  })($__require("16"));
});
$__System.registerDynamic("195", ["1aa", "199", "68", "19a", "69", "6a", "122", "1a6", "1a8", "1a5"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _toConsumableArray2 = $__require("1aa");
  var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _immutable = $__require("1a6");
  var _immutable2 = _interopRequireDefault(_immutable);
  var _event = $__require("1a8");
  var _event2 = _interopRequireDefault(_event);
  var _util = $__require("1a5");
  var _util2 = _interopRequireDefault(_util);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var IndexedEvent = function (_Event) {
    (0, _inherits3.default)(IndexedEvent, _Event);
    function IndexedEvent(arg1, arg2, arg3) {
      (0, _classCallCheck3.default)(this, IndexedEvent);
      var _this = (0, _possibleConstructorReturn3.default)(this, (IndexedEvent.__proto__ || (0, _getPrototypeOf2.default)(IndexedEvent)).call(this));
      if (arg1 instanceof IndexedEvent) {
        var other = arg1;
        _this._d = other._d;
        return (0, _possibleConstructorReturn3.default)(_this);
      } else if (arg1 instanceof _immutable2.default.Map) {
        _this._d = arg1;
        return (0, _possibleConstructorReturn3.default)(_this);
      }
      var index = _util2.default.indexFromArgs(arg1, arg3);
      var data = _util2.default.dataFromArg(arg2);
      _this._d = new _immutable2.default.Map({
        index: index,
        data: data
      });
      return _this;
    }
    (0, _createClass3.default)(IndexedEvent, [{
      key: "key",
      value: function key() {
        return this.indexAsString();
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        return {
          index: this.indexAsString(),
          data: this.data().toJSON()
        };
      }
    }, {
      key: "toPoint",
      value: function toPoint() {
        return [this.indexAsString()].concat((0, _toConsumableArray3.default)(_underscore2.default.values(this.data().toJSON())));
      }
    }, {
      key: "index",
      value: function index() {
        return this._d.get("index");
      }
    }, {
      key: "indexAsString",
      value: function indexAsString() {
        return this.index().asString();
      }
    }, {
      key: "timerangeAsUTCString",
      value: function timerangeAsUTCString() {
        return this.timerange().toUTCString();
      }
    }, {
      key: "timerangeAsLocalString",
      value: function timerangeAsLocalString() {
        return this.timerange().toLocalString();
      }
    }, {
      key: "timerange",
      value: function timerange() {
        return this.index().asTimerange();
      }
    }, {
      key: "begin",
      value: function begin() {
        return this.timerange().begin();
      }
    }, {
      key: "end",
      value: function end() {
        return this.timerange().end();
      }
    }, {
      key: "timestamp",
      value: function timestamp() {
        return this.begin();
      }
    }], [{
      key: "keySchema",
      value: function keySchema() {
        return {
          name: "index",
          type: "string"
        };
      }
    }]);
    return IndexedEvent;
  }(_event2.default);
  exports.default = IndexedEvent;
});
$__System.registerDynamic("196", ["1aa", "199", "68", "19a", "69", "6a", "122", "1a6", "1a8", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _toConsumableArray2 = $__require("1aa");
    var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _event = $__require("1a8");
    var _event2 = _interopRequireDefault(_event);
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var TimeRangeEvent = function (_Event) {
      (0, _inherits3.default)(TimeRangeEvent, _Event);
      function TimeRangeEvent(arg1, arg2) {
        (0, _classCallCheck3.default)(this, TimeRangeEvent);
        var _this = (0, _possibleConstructorReturn3.default)(this, (TimeRangeEvent.__proto__ || (0, _getPrototypeOf2.default)(TimeRangeEvent)).call(this));
        if (arg1 instanceof TimeRangeEvent) {
          var other = arg1;
          _this._d = other._d;
          return (0, _possibleConstructorReturn3.default)(_this);
        } else if (arg1 instanceof _immutable2.default.Map) {
          _this._d = arg1;
          return (0, _possibleConstructorReturn3.default)(_this);
        }
        var range = _util2.default.timeRangeFromArg(arg1);
        var data = _util2.default.dataFromArg(arg2);
        _this._d = new _immutable2.default.Map({
          range: range,
          data: data
        });
        return _this;
      }
      (0, _createClass3.default)(TimeRangeEvent, [{
        key: "key",
        value: function key() {
          return +this.timerange().begin() + "," + +this.timerange().end();
        }
      }, {
        key: "toJSON",
        value: function toJSON() {
          return {
            timerange: this.timerange().toJSON(),
            data: this.data().toJSON()
          };
        }
      }, {
        key: "toPoint",
        value: function toPoint() {
          return [this.timerange().toJSON()].concat((0, _toConsumableArray3.default)(_underscore2.default.values(this.data().toJSON())));
        }
      }, {
        key: "timerange",
        value: function timerange() {
          return this._d.get("range");
        }
      }, {
        key: "timerangeAsUTCString",
        value: function timerangeAsUTCString() {
          return this.timerange().toUTCString();
        }
      }, {
        key: "timerangeAsLocalString",
        value: function timerangeAsLocalString() {
          return this.timerange().toLocalString();
        }
      }, {
        key: "begin",
        value: function begin() {
          return this.timerange().begin();
        }
      }, {
        key: "end",
        value: function end() {
          return this.timerange().end();
        }
      }, {
        key: "timestamp",
        value: function timestamp() {
          return this.begin();
        }
      }, {
        key: "humanizeDuration",
        value: function humanizeDuration() {
          return this.timerange().humanizeDuration();
        }
      }]);
      return TimeRangeEvent;
    }(_event2.default);
    exports.default = TimeRangeEvent;
  })($__require("16"));
});
$__System.registerDynamic("1ac", ["199", "68", "19a", "69", "6a", "122", "1a6", "193", "195", "196", "197", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _pipeline = $__require("197");
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Derivator = function (_Processor) {
      (0, _inherits3.default)(Derivator, _Processor);
      function Derivator(arg1, options) {
        (0, _classCallCheck3.default)(this, Derivator);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Derivator.__proto__ || (0, _getPrototypeOf2.default)(Derivator)).call(this, arg1, options));
        if (arg1 instanceof Derivator) {
          var other = arg1;
          _this._fieldSpec = other._fieldSpec;
          _this._allowNegative = other._allowNegative;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          var fieldSpec = options.fieldSpec,
              allowNegative = options.allowNegative;
          _this._fieldSpec = fieldSpec;
          _this._allowNegative = allowNegative;
        } else {
          throw new Error("Unknown arg to Derivator constructor", arg1);
        }
        _this._previous = null;
        if (_underscore2.default.isString(_this._fieldSpec)) {
          _this._fieldSpec = [_this._fieldSpec];
        } else if (!_this._fieldSpec) {
          _this._fieldSpec = ["value"];
        }
        return _this;
      }
      (0, _createClass3.default)(Derivator, [{
        key: "clone",
        value: function clone() {
          return new Derivator(this);
        }
      }, {
        key: "getRate",
        value: function getRate(event) {
          var _this2 = this;
          var d = new _immutable2.default.Map();
          var previousTime = this._previous.timestamp().getTime();
          var currentTime = event.timestamp().getTime();
          var deltaTime = (currentTime - previousTime) / 1000;
          this._fieldSpec.forEach(function (path) {
            var fieldPath = _util2.default.fieldPathToArray(path);
            var ratePath = fieldPath.slice();
            ratePath[ratePath.length - 1] += "_rate";
            var previousVal = _this2._previous.get(fieldPath);
            var currentVal = event.get(fieldPath);
            var rate = null;
            if (!_underscore2.default.isNumber(previousVal) || !_underscore2.default.isNumber(currentVal)) {
              console.warn("Path " + fieldPath + " contains a non-numeric value or does not exist");
            } else {
              rate = (currentVal - previousVal) / deltaTime;
            }
            if (_this2._allowNegative === false && rate < 0) {
              d = d.setIn(ratePath, null);
            } else {
              d = d.setIn(ratePath, rate);
            }
          });
          return new _timerangeevent2.default([previousTime, currentTime], d);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (event instanceof _timerangeevent2.default || event instanceof _indexedevent2.default) {
            throw new Error("TimeRangeEvent and IndexedEvent series can not be aligned.");
          }
          if (this.hasObservers()) {
            if (!this._previous) {
              this._previous = event;
              return;
            }
            var outputEvent = this.getRate(event);
            this.emit(outputEvent);
            this._previous = event;
          }
        }
      }]);
      return Derivator;
    }(_processor2.default);
    exports.default = Derivator;
  })($__require("16"));
});
$__System.registerDynamic("1ad", ["1aa", "1ae", "199", "68", "19a", "69", "19b", "6a", "122", "193", "197", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _toConsumableArray2 = $__require("1aa");
    var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
    var _getIterator2 = $__require("1ae");
    var _getIterator3 = _interopRequireDefault(_getIterator2);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _get2 = $__require("19b");
    var _get3 = _interopRequireDefault(_get2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _pipeline = $__require("197");
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Filler = function (_Processor) {
      (0, _inherits3.default)(Filler, _Processor);
      function Filler(arg1, options) {
        (0, _classCallCheck3.default)(this, Filler);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Filler.__proto__ || (0, _getPrototypeOf2.default)(Filler)).call(this, arg1, options));
        if (arg1 instanceof Filler) {
          var other = arg1;
          _this._fieldSpec = other._fieldSpec;
          _this._method = other._method;
          _this._limit = other._limit;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          var _options$fieldSpec = options.fieldSpec,
              fieldSpec = _options$fieldSpec === undefined ? null : _options$fieldSpec,
              _options$method = options.method,
              method = _options$method === undefined ? "zero" : _options$method,
              _options$limit = options.limit,
              limit = _options$limit === undefined ? null : _options$limit;
          _this._fieldSpec = fieldSpec;
          _this._method = method;
          _this._limit = limit;
        } else {
          throw new Error("Unknown arg to Filler constructor", arg1);
        }
        _this._previousEvent = null;
        _this._keyCount = {};
        _this._lastGoodLinear = null;
        _this._linearFillCache = [];
        if (!_underscore2.default.contains(["zero", "pad", "linear"], _this._method)) {
          throw new Error("Unknown method " + _this._method + " passed to Filler");
        }
        if (_this._limit && !_underscore2.default.isNumber(_this._limit)) {
          throw new Error("Limit supplied to fill() should be a number");
        }
        if (_underscore2.default.isString(_this._fieldSpec)) {
          _this._fieldSpec = [_this._fieldSpec];
        } else if (_underscore2.default.isNull(_this._fieldSpec)) {
          _this._fieldSpec = ["value"];
        }
        if (_this._method === "linear" && _this._fieldSpec.length > 1) {
          throw new Error("Linear fill takes a path to a single column");
        }
        return _this;
      }
      (0, _createClass3.default)(Filler, [{
        key: "clone",
        value: function clone() {
          return new Filler(this);
        }
      }, {
        key: "constFill",
        value: function constFill(data) {
          var newData = data;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = (0, _getIterator3.default)(this._fieldSpec), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var path = _step.value;
              var fieldPath = _util2.default.fieldPathToArray(path);
              var pathKey = fieldPath.join(":");
              if (!_underscore2.default.has(this._keyCount, pathKey)) {
                this._keyCount[pathKey] = 0;
              }
              if (!newData.hasIn(fieldPath)) {
                continue;
              }
              var val = newData.getIn(fieldPath);
              if (_util2.default.isMissing(val)) {
                if (this._limit && this._keyCount[pathKey] >= this._limit) {
                  continue;
                }
                if (this._method === "zero") {
                  newData = newData.setIn(fieldPath, 0);
                  this._keyCount[pathKey]++;
                } else if (this._method === "pad") {
                  if (!_underscore2.default.isNull(this._previousEvent)) {
                    var prevVal = this._previousEvent.data().getIn(fieldPath);
                    if (!_util2.default.isMissing(prevVal)) {
                      newData = newData.setIn(fieldPath, prevVal);
                      this._keyCount[pathKey]++;
                    }
                  }
                } else if (this._method === "linear") {}
              } else {
                this._keyCount[pathKey] = 0;
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return newData;
        }
      }, {
        key: "isValidLinearEvent",
        value: function isValidLinearEvent(event) {
          var valid = true;
          var fieldPath = _util2.default.fieldPathToArray(this._fieldSpec[0]);
          if (!event.data().hasIn(fieldPath)) {
            console.warn("path does not exist: " + fieldPath);
            return valid;
          }
          var val = event.data().getIn(fieldPath);
          if (_util2.default.isMissing(val) || !_underscore2.default.isNumber(val)) {
            valid = false;
          }
          return valid;
        }
      }, {
        key: "linearFill",
        value: function linearFill(event) {
          var _this2 = this;
          var isValidEvent = this.isValidLinearEvent(event);
          var events = [];
          if (isValidEvent && !this._linearFillCache.length) {
            this._lastGoodLinear = event;
            events.push(event);
          } else if (!isValidEvent && !_underscore2.default.isNull(this._lastGoodLinear)) {
            this._linearFillCache.push(event);
            if (!_underscore2.default.isNull(this._limit) && this._linearFillCache.length >= this._limit) {
              this._linearFillCache.forEach(function (e) {
                _this2.emit(e);
              });
              this._linearFillCache = [];
              this._lastGoodLinear = null;
            }
          } else if (!isValidEvent && _underscore2.default.isNull(this._lastGoodLinear)) {
            events.push(event);
          } else if (isValidEvent && this._linearFillCache) {
            var eventList = [this._lastGoodLinear].concat((0, _toConsumableArray3.default)(this._linearFillCache), [event]);
            var interpolatedEvents = this.interpolateEventList(eventList);
            interpolatedEvents.slice(1).forEach(function (e) {
              events.push(e);
            });
            this._linearFillCache = [];
            this._lastGoodLinear = event;
          }
          return events;
        }
      }, {
        key: "interpolateEventList",
        value: function interpolateEventList(events) {
          var prevValue = void 0;
          var prevTime = void 0;
          var newEvents = [];
          var fieldPath = _util2.default.fieldPathToArray(this._fieldSpec[0]);
          for (var i = 0; i < events.length; i++) {
            var e = events[i];
            if (i === 0) {
              prevValue = e.get(fieldPath);
              prevTime = e.timestamp().getTime();
              newEvents.push(e);
              continue;
            }
            if (i === events.length - 1) {
              newEvents.push(e);
              continue;
            }
            if (!_util2.default.isMissing(e.get(fieldPath)) && !_underscore2.default.isNumber(e.get(fieldPath))) {
              console.warn("linear requires numeric values - skipping this field_spec");
              return events;
            }
            if (_util2.default.isMissing(e.get(fieldPath))) {
              var ii = i + 1;
              var nextValue = null;
              var nextTime = null;
              while (_underscore2.default.isNull(nextValue) && ii < events.length) {
                var val = events[ii].get(fieldPath);
                if (!_util2.default.isMissing(val)) {
                  nextValue = val;
                  nextTime = events[ii].timestamp().getTime();
                }
                ii++;
              }
              if (!_underscore2.default.isNull(prevValue) && ~_underscore2.default.isNull(nextValue)) {
                var currentTime = e.timestamp().getTime();
                if (nextTime === prevTime) {
                  var newValue = (prevValue + nextValue) / 2;
                  newEvents.push(e.setData(newValue));
                } else {
                  var f = (currentTime - prevTime) / (nextTime - prevTime);
                  var _newValue = prevValue + f * (nextValue - prevValue);
                  var d = e.data().setIn(fieldPath, _newValue);
                  newEvents.push(e.setData(d));
                }
              } else {
                newEvents.push(e);
              }
            } else {
              newEvents.push(e);
            }
          }
          return newEvents;
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            var emitList = [];
            var d = event.data();
            if (this._method === "zero" || this._method === "pad") {
              var dd = this.constFill(d);
              var e = event.setData(dd);
              emitList.push(e);
              this._previousEvent = e;
            } else if (this._method === "linear") {
              this.linearFill(event).forEach(function (e) {
                emitList.push(e);
              });
            }
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;
            try {
              for (var _iterator2 = (0, _getIterator3.default)(emitList), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var _event = _step2.value;
                this.emit(_event);
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                  _iterator2.return();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }
        }
      }, {
        key: "flush",
        value: function flush() {
          if (this.hasObservers() && this._method == "linear") {
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;
            try {
              for (var _iterator3 = (0, _getIterator3.default)(this._linearFillCache), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var event = _step3.value;
                this.emit(event);
              }
            } catch (err) {
              _didIteratorError3 = true;
              _iteratorError3 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                  _iterator3.return();
                }
              } finally {
                if (_didIteratorError3) {
                  throw _iteratorError3;
                }
              }
            }
          }
          (0, _get3.default)(Filler.prototype.__proto__ || (0, _getPrototypeOf2.default)(Filler.prototype), "flush", this).call(this);
        }
      }]);
      return Filler;
    }(_processor2.default);
    exports.default = Filler;
  })($__require("16"));
});
$__System.registerDynamic("1af", ["199", "68", "19a", "69", "6a", "193", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Filter = function (_Processor) {
      (0, _inherits3.default)(Filter, _Processor);
      function Filter(arg1, options) {
        (0, _classCallCheck3.default)(this, Filter);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Filter.__proto__ || (0, _getPrototypeOf2.default)(Filter)).call(this, arg1, options));
        if (arg1 instanceof Filter) {
          var other = arg1;
          _this._op = other._op;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          _this._op = options.op;
        } else {
          throw new Error("Unknown arg to Filter constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Filter, [{
        key: "clone",
        value: function clone() {
          return new Filter(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            if (this._op(event)) {
              this.emit(event);
            }
          }
        }
      }]);
      return Filter;
    }(_processor2.default);
    exports.default = Filter;
  })($__require("16"));
});
$__System.registerDynamic("1b0", ["199", "68", "19a", "69", "6a", "193", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Mapper = function (_Processor) {
      (0, _inherits3.default)(Mapper, _Processor);
      function Mapper(arg1, options) {
        (0, _classCallCheck3.default)(this, Mapper);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Mapper.__proto__ || (0, _getPrototypeOf2.default)(Mapper)).call(this, arg1, options));
        if (arg1 instanceof Mapper) {
          var other = arg1;
          _this._op = other._op;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          _this._op = options.op;
        } else {
          throw new Error("Unknown arg to Mapper constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Mapper, [{
        key: "clone",
        value: function clone() {
          return new Mapper(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            this.emit(this._op(event));
          }
        }
      }]);
      return Mapper;
    }(_processor2.default);
    exports.default = Mapper;
  })($__require("16"));
});
$__System.registerDynamic("1b1", ["199", "68", "19a", "69", "6a", "122", "193", "1a8", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _event = $__require("1a8");
    var _event2 = _interopRequireDefault(_event);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Offset = function (_Processor) {
      (0, _inherits3.default)(Offset, _Processor);
      function Offset(arg1, options) {
        (0, _classCallCheck3.default)(this, Offset);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Offset.__proto__ || (0, _getPrototypeOf2.default)(Offset)).call(this, arg1, options));
        if (arg1 instanceof Offset) {
          var other = arg1;
          _this._by = other._by;
          _this._fieldSpec = other._fieldSpec;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          _this._by = options.by || 1;
          _this._fieldSpec = options.fieldSpec;
        } else {
          throw new Error("Unknown arg to Offset constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Offset, [{
        key: "clone",
        value: function clone() {
          return new Offset(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          var _this2 = this;
          if (this.hasObservers()) {
            var selected = _event2.default.selector(event, this._fieldSpec);
            var data = {};
            _underscore2.default.each(selected.data().toJSON(), function (value, key) {
              var offsetValue = value + _this2._by;
              data[key] = offsetValue;
            });
            var outputEvent = event.setData(data);
            this.emit(outputEvent);
          }
        }
      }]);
      return Offset;
    }(_processor2.default);
    exports.default = Offset;
  })($__require("16"));
});
$__System.registerDynamic("1b2", ["199", "68", "19a", "69", "6a", "193", "1a8", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _event = $__require("1a8");
    var _event2 = _interopRequireDefault(_event);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Selector = function (_Processor) {
      (0, _inherits3.default)(Selector, _Processor);
      function Selector(arg1, options) {
        (0, _classCallCheck3.default)(this, Selector);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Selector.__proto__ || (0, _getPrototypeOf2.default)(Selector)).call(this, arg1, options));
        if (arg1 instanceof Selector) {
          var other = arg1;
          _this._fieldSpec = other._fieldSpec;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          _this._fieldSpec = options.fieldSpec;
        } else {
          throw new Error("Unknown arg to filter constructor", arg1);
        }
        return _this;
      }
      (0, _createClass3.default)(Selector, [{
        key: "clone",
        value: function clone() {
          return new Selector(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            this.emit(_event2.default.selector(event, this._fieldSpec));
          }
        }
      }]);
      return Selector;
    }(_processor2.default);
    exports.default = Selector;
  })($__require("16"));
});
$__System.registerDynamic('1b3', ['116', '1b4', '1b5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('116');
  var $getOwnPropertyDescriptor = $__require('1b4').f;
  $__require('1b5')('getOwnPropertyDescriptor', function () {
    return function getOwnPropertyDescriptor(it, key) {
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });
});
$__System.registerDynamic('1b6', ['1b3', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1b3');
  var $Object = $__require('ff').Object;
  module.exports = function getOwnPropertyDescriptor(it, key) {
    return $Object.getOwnPropertyDescriptor(it, key);
  };
});
$__System.registerDynamic("1b7", ["1b6"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1b6"), __esModule: true };
});
$__System.registerDynamic('19b', ['199', '1b7'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _getPrototypeOf = $__require('199');
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _getOwnPropertyDescriptor = $__require('1b7');
  var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function get(object, property, receiver) {
    if (object === null) object = Function.prototype;
    var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);
    if (desc === undefined) {
      var parent = (0, _getPrototypeOf2.default)(object);
      if (parent === null) {
        return undefined;
      } else {
        return get(parent, property, receiver);
      }
    } else if ("value" in desc) {
      return desc.value;
    } else {
      var getter = desc.get;
      if (getter === undefined) {
        return undefined;
      }
      return getter.call(receiver);
    }
  };
});
$__System.registerDynamic("193", ["199", "68", "19a", "69", "19b", "6a", "1b8", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _get2 = $__require("19b");
    var _get3 = _interopRequireDefault(_get2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _observable = $__require("1b8");
    var _observable2 = _interopRequireDefault(_observable);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function addPrevToChain(n, chain) {
      chain.push(n);
      if ((0, _pipeline.isPipeline)(n.prev())) {
        chain.push(n.prev().in());
        return chain;
      } else {
        return addPrevToChain(n.prev(), chain);
      }
    }
    var Processor = function (_Observable) {
      (0, _inherits3.default)(Processor, _Observable);
      function Processor(arg1, options) {
        (0, _classCallCheck3.default)(this, Processor);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Processor.__proto__ || (0, _getPrototypeOf2.default)(Processor)).call(this));
        if ((0, _pipeline.isPipeline)(arg1)) {
          _this._pipeline = arg1;
          _this._prev = options.prev;
        }
        return _this;
      }
      (0, _createClass3.default)(Processor, [{
        key: "prev",
        value: function prev() {
          return this._prev;
        }
      }, {
        key: "pipeline",
        value: function pipeline() {
          return this._pipeline;
        }
      }, {
        key: "chain",
        value: function chain() {
          var chain = [this];
          if ((0, _pipeline.isPipeline)(this.prev())) {
            chain.push(this.prev().in());
            return chain;
          } else {
            return addPrevToChain(this.prev(), chain);
          }
        }
      }, {
        key: "flush",
        value: function flush() {
          (0, _get3.default)(Processor.prototype.__proto__ || (0, _getPrototypeOf2.default)(Processor.prototype), "flush", this).call(this);
        }
      }]);
      return Processor;
    }(_observable2.default);
    exports.default = Processor;
  })($__require("16"));
});
$__System.registerDynamic("1b9", ["199", "68", "19a", "69", "19b", "6a", "122", "193", "1a2", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _get2 = $__require("19b");
    var _get3 = _interopRequireDefault(_get2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _index = $__require("1a2");
    var _index2 = _interopRequireDefault(_index);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Taker = function (_Processor) {
      (0, _inherits3.default)(Taker, _Processor);
      function Taker(arg1, options) {
        (0, _classCallCheck3.default)(this, Taker);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Taker.__proto__ || (0, _getPrototypeOf2.default)(Taker)).call(this, arg1, options));
        if (arg1 instanceof Taker) {
          var other = arg1;
          _this._limit = other._limit;
          _this._windowType = other._windowType;
          _this._windowDuration = other._windowDuration;
          _this._groupBy = other._groupBy;
        } else if ((0, _pipeline.isPipeline)(arg1)) {
          var pipeline = arg1;
          _this._limit = options.limit;
          _this._windowType = pipeline.getWindowType();
          _this._windowDuration = pipeline.getWindowDuration();
          _this._groupBy = pipeline.getGroupBy();
        } else {
          throw new Error("Unknown arg to Taker constructor", arg1);
        }
        _this._count = {};
        return _this;
      }
      (0, _createClass3.default)(Taker, [{
        key: "clone",
        value: function clone() {
          return new Taker(this);
        }
      }, {
        key: "flush",
        value: function flush() {
          (0, _get3.default)(Taker.prototype.__proto__ || (0, _getPrototypeOf2.default)(Taker.prototype), "flush", this).call(this);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          if (this.hasObservers()) {
            var timestamp = event.timestamp();
            var windowType = this._windowType;
            var windowKey = void 0;
            if (windowType === "fixed") {
              windowKey = _index2.default.getIndexString(this._windowDuration, timestamp);
            } else {
              windowKey = windowType;
            }
            var groupByKey = this._groupBy(event);
            var collectionKey = groupByKey ? windowKey + "::" + groupByKey : windowKey;
            if (!_underscore2.default.has(this._count, collectionKey)) {
              this._count[collectionKey] = 0;
            }
            if (this._count[collectionKey] < this._limit) {
              this.emit(event);
            }
            this._count[collectionKey]++;
          }
        }
      }]);
      return Taker;
    }(_processor2.default);
    exports.default = Taker;
  })($__require("16"));
});
$__System.registerDynamic("197", ["67", "1ae", "68", "19a", "1a6", "122", "1a3", "195", "196", "1ba", "1bb", "1bc", "1bd", "1be", "192", "1a1", "1a7", "1ab", "1ac", "1ad", "1af", "1b0", "1b1", "193", "1b2", "1b9", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isPipeline = exports.Pipeline = undefined;
    var _extends2 = $__require("67");
    var _extends3 = _interopRequireDefault(_extends2);
    var _getIterator2 = $__require("1ae");
    var _getIterator3 = _interopRequireDefault(_getIterator2);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _timeevent = $__require("1a3");
    var _timeevent2 = _interopRequireDefault(_timeevent);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _timeseries = $__require("1ba");
    var _timeseries2 = _interopRequireDefault(_timeseries);
    var _bounded = $__require("1bb");
    var _bounded2 = _interopRequireDefault(_bounded);
    var _collectionout = $__require("1bc");
    var _collectionout2 = _interopRequireDefault(_collectionout);
    var _eventout = $__require("1bd");
    var _eventout2 = _interopRequireDefault(_eventout);
    var _stream = $__require("1be");
    var _stream2 = _interopRequireDefault(_stream);
    var _aggregator = $__require("192");
    var _aggregator2 = _interopRequireDefault(_aggregator);
    var _aligner = $__require("1a1");
    var _aligner2 = _interopRequireDefault(_aligner);
    var _collapser = $__require("1a7");
    var _collapser2 = _interopRequireDefault(_collapser);
    var _converter = $__require("1ab");
    var _converter2 = _interopRequireDefault(_converter);
    var _derivator = $__require("1ac");
    var _derivator2 = _interopRequireDefault(_derivator);
    var _filler = $__require("1ad");
    var _filler2 = _interopRequireDefault(_filler);
    var _filter = $__require("1af");
    var _filter2 = _interopRequireDefault(_filter);
    var _mapper = $__require("1b0");
    var _mapper2 = _interopRequireDefault(_mapper);
    var _offset = $__require("1b1");
    var _offset2 = _interopRequireDefault(_offset);
    var _processor = $__require("193");
    var _processor2 = _interopRequireDefault(_processor);
    var _selector = $__require("1b2");
    var _selector2 = _interopRequireDefault(_selector);
    var _taker = $__require("1b9");
    var _taker2 = _interopRequireDefault(_taker);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Runner = function () {
      function Runner(pipeline, output) {
        var _this = this;
        (0, _classCallCheck3.default)(this, Runner);
        this._output = output;
        this._pipeline = pipeline;
        var processChain = [];
        if (pipeline.last()) {
          processChain = pipeline.last().chain();
          this._input = processChain[0].pipeline().in();
        } else {
          this._input = pipeline.in();
        }
        this._executionChain = [this._output];
        var prev = this._output;
        processChain.forEach(function (p) {
          if (p instanceof _processor2.default) {
            var processor = p.clone();
            if (prev) processor.addObserver(prev);
            _this._executionChain.push(processor);
            prev = processor;
          }
        });
      }
      (0, _createClass3.default)(Runner, [{
        key: "start",
        value: function start() {
          var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
          this._pipeline.clearResults();
          var head = this._executionChain.pop();
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = (0, _getIterator3.default)(this._input.events()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              head.addEvent(e);
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          if (force) {
            head.flush();
          }
        }
      }]);
      return Runner;
    }();
    var Pipeline = function () {
      function Pipeline(arg) {
        (0, _classCallCheck3.default)(this, Pipeline);
        if (arg instanceof Pipeline) {
          var other = arg;
          this._d = other._d;
        } else if (arg instanceof _immutable2.default.Map) {
          this._d = arg;
        } else {
          this._d = new _immutable2.default.Map({
            type: null,
            in: null,
            first: null,
            last: null,
            groupBy: function groupBy() {
              return "";
            },
            windowType: "global",
            windowDuration: null,
            emitOn: "eachEvent"
          });
        }
        this._results = [];
      }
      (0, _createClass3.default)(Pipeline, [{
        key: "in",
        value: function _in() {
          return this._d.get("in");
        }
      }, {
        key: "mode",
        value: function mode() {
          return this._d.get("mode");
        }
      }, {
        key: "first",
        value: function first() {
          return this._d.get("first");
        }
      }, {
        key: "last",
        value: function last() {
          return this._d.get("last");
        }
      }, {
        key: "getWindowType",
        value: function getWindowType() {
          return this._d.get("windowType");
        }
      }, {
        key: "getWindowDuration",
        value: function getWindowDuration() {
          return this._d.get("windowDuration");
        }
      }, {
        key: "getGroupBy",
        value: function getGroupBy() {
          return this._d.get("groupBy");
        }
      }, {
        key: "getEmitOn",
        value: function getEmitOn() {
          return this._d.get("emitOn");
        }
      }, {
        key: "clearResults",
        value: function clearResults() {
          this._resultsDone = false;
          this._results = null;
        }
      }, {
        key: "addResult",
        value: function addResult(arg1, arg2) {
          if (!this._results) {
            if (_underscore2.default.isString(arg1) && arg2) {
              this._results = {};
            } else {
              this._results = [];
            }
          }
          if (_underscore2.default.isString(arg1) && arg2) {
            this._results[arg1] = arg2;
          } else {
            this._results.push(arg1);
          }
          this._resultsDone = false;
        }
      }, {
        key: "resultsDone",
        value: function resultsDone() {
          this._resultsDone = true;
        }
      }, {
        key: "_setIn",
        value: function _setIn(input) {
          var mode = void 0;
          var source = input;
          if (input instanceof _timeseries2.default) {
            mode = "batch";
            source = input.collection();
          } else if (input instanceof _bounded2.default) {
            mode = "batch";
          } else if (input instanceof _stream2.default) {
            mode = "stream";
          } else {
            throw new Error("Unknown input type", input);
          }
          var d = this._d.withMutations(function (map) {
            map.set("in", source).set("mode", mode);
          });
          return new Pipeline(d);
        }
      }, {
        key: "_setFirst",
        value: function _setFirst(n) {
          var d = this._d.set("first", n);
          return new Pipeline(d);
        }
      }, {
        key: "_setLast",
        value: function _setLast(n) {
          var d = this._d.set("last", n);
          return new Pipeline(d);
        }
      }, {
        key: "_append",
        value: function _append(processor) {
          var first = this.first();
          var last = this.last();
          if (!first) first = processor;
          if (last) last.addObserver(processor);
          last = processor;
          var d = this._d.withMutations(function (map) {
            map.set("first", first).set("last", last);
          });
          return new Pipeline(d);
        }
      }, {
        key: "_chainPrev",
        value: function _chainPrev() {
          return this.last() || this;
        }
      }, {
        key: "windowBy",
        value: function windowBy(w) {
          var type = void 0,
              duration = void 0;
          if (_underscore2.default.isString(w)) {
            if (w === "daily" || w === "monthly" || w === "yearly") {
              type = w;
            } else {
              type = "fixed";
              duration = w;
            }
          } else if (_underscore2.default.isObject(w)) {
            type = w.type;
            duration = w.duration;
          } else {
            type = "global";
            duration = null;
          }
          var d = this._d.withMutations(function (map) {
            map.set("windowType", type).set("windowDuration", duration);
          });
          return new Pipeline(d);
        }
      }, {
        key: "clearWindow",
        value: function clearWindow() {
          return this.windowBy();
        }
      }, {
        key: "groupBy",
        value: function groupBy(k) {
          var grp = void 0;
          var groupBy = k || "value";
          if (_underscore2.default.isFunction(groupBy)) {
            grp = groupBy;
          } else if (_underscore2.default.isArray(groupBy)) {
            grp = function grp(e) {
              return _underscore2.default.map(groupBy, function (c) {
                return "" + e.get(c);
              }).join("::");
            };
          } else if (_underscore2.default.isString(groupBy)) {
            grp = function grp(e) {
              return "" + e.get(groupBy);
            };
          } else {
            grp = function grp() {
              return "";
            };
          }
          var d = this._d.withMutations(function (map) {
            map.set("groupBy", grp);
          });
          return new Pipeline(d);
        }
      }, {
        key: "clearGroupBy",
        value: function clearGroupBy() {
          return this.groupBy();
        }
      }, {
        key: "emitOn",
        value: function emitOn(trigger) {
          var d = this._d.set("emitOn", trigger);
          return new Pipeline(d);
        }
      }, {
        key: "from",
        value: function from(src) {
          return this._setIn(src);
        }
      }, {
        key: "toEventList",
        value: function toEventList() {
          return this.to(_eventout2.default);
        }
      }, {
        key: "toKeyedCollections",
        value: function toKeyedCollections() {
          var result = this.to(_collectionout2.default);
          if (result) {
            return result;
          } else {
            return {};
          }
        }
      }, {
        key: "to",
        value: function to(arg1, arg2, arg3) {
          var Out = arg1;
          var observer = void 0;
          var options = {};
          if (_underscore2.default.isFunction(arg2)) {
            observer = arg2;
          } else if (_underscore2.default.isObject(arg2)) {
            options = arg2;
            observer = arg3;
          }
          if (!this.in()) {
            throw new Error("Tried to eval pipeline without a In. Missing from() in chain?");
          }
          var out = new Out(this, options, observer);
          if (this.mode() === "batch") {
            var runner = new Runner(this, out);
            runner.start(true);
            if (this._resultsDone && !observer) {
              return this._results;
            }
          } else if (this.mode() === "stream") {
            var _out = new Out(this, options, observer);
            if (this.first()) {
              this.in().addObserver(this.first());
            }
            if (this.last()) {
              this.last().addObserver(_out);
            } else {
              this.in().addObserver(_out);
            }
          }
          return this;
        }
      }, {
        key: "count",
        value: function count(observer) {
          var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          return this.to(_collectionout2.default, function (collection, windowKey, groupByKey) {
            observer(collection.size(), windowKey, groupByKey);
          }, force);
        }
      }, {
        key: "offsetBy",
        value: function offsetBy(by, fieldSpec) {
          var p = new _offset2.default(this, {
            by: by,
            fieldSpec: fieldSpec,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "aggregate",
        value: function aggregate(fields) {
          var p = new _aggregator2.default(this, {
            fields: fields,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "asTimeEvents",
        value: function asTimeEvents(options) {
          var type = _timeevent2.default;
          var p = new _converter2.default(this, (0, _extends3.default)({ type: type }, options, { prev: this._chainPrev() }));
          return this._append(p);
        }
      }, {
        key: "map",
        value: function map(op) {
          var p = new _mapper2.default(this, {
            op: op,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "filter",
        value: function filter(op) {
          var p = new _filter2.default(this, {
            op: op,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "select",
        value: function select(fieldSpec) {
          var p = new _selector2.default(this, {
            fieldSpec: fieldSpec,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "collapse",
        value: function collapse(fieldSpecList, name, reducer, append) {
          var p = new _collapser2.default(this, {
            fieldSpecList: fieldSpecList,
            name: name,
            reducer: reducer,
            append: append,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "fill",
        value: function fill(_ref) {
          var _ref$fieldSpec = _ref.fieldSpec,
              fieldSpec = _ref$fieldSpec === undefined ? null : _ref$fieldSpec,
              _ref$method = _ref.method,
              method = _ref$method === undefined ? "linear" : _ref$method,
              _ref$limit = _ref.limit,
              limit = _ref$limit === undefined ? null : _ref$limit;
          var prev = this._chainPrev();
          return this._append(new _filler2.default(this, {
            fieldSpec: fieldSpec,
            method: method,
            limit: limit,
            prev: prev
          }));
        }
      }, {
        key: "align",
        value: function align(fieldSpec, window, method, limit) {
          var prev = this._chainPrev();
          return this._append(new _aligner2.default(this, {
            fieldSpec: fieldSpec,
            window: window,
            method: method,
            limit: limit,
            prev: prev
          }));
        }
      }, {
        key: "rate",
        value: function rate(fieldSpec) {
          var allowNegative = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
          var p = new _derivator2.default(this, {
            fieldSpec: fieldSpec,
            allowNegative: allowNegative,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "take",
        value: function take(limit) {
          var p = new _taker2.default(this, {
            limit: limit,
            prev: this._chainPrev()
          });
          return this._append(p);
        }
      }, {
        key: "asTimeRangeEvents",
        value: function asTimeRangeEvents(options) {
          var type = _timerangeevent2.default;
          var p = new _converter2.default(this, (0, _extends3.default)({ type: type }, options, { prev: this._chainPrev() }));
          return this._append(p);
        }
      }, {
        key: "asIndexedEvents",
        value: function asIndexedEvents(options) {
          var type = _indexedevent2.default;
          var p = new _converter2.default(this, (0, _extends3.default)({ type: type }, options, { prev: this._chainPrev() }));
          return this._append(p);
        }
      }]);
      return Pipeline;
    }();
    function pipeline(args) {
      return new Pipeline(args);
    }
    function is(p) {
      return p instanceof Pipeline;
    }
    exports.Pipeline = pipeline;
    exports.isPipeline = is;
  })($__require("16"));
});
$__System.registerDynamic("1ba", ["67", "1c0", "1a9", "1ae", "1aa", "18a", "71", "68", "19a", "122", "1a6", "1bf", "1a2", "1a8", "1a3", "196", "195", "197", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _extends2 = $__require("67");
    var _extends3 = _interopRequireDefault(_extends2);
    var _regenerator = $__require("1c0");
    var _regenerator2 = _interopRequireDefault(_regenerator);
    var _stringify = $__require("1a9");
    var _stringify2 = _interopRequireDefault(_stringify);
    var _getIterator2 = $__require("1ae");
    var _getIterator3 = _interopRequireDefault(_getIterator2);
    var _toConsumableArray2 = $__require("1aa");
    var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
    var _toArray2 = $__require("18a");
    var _toArray3 = _interopRequireDefault(_toArray2);
    var _objectWithoutProperties2 = $__require("71");
    var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _collection = $__require("1bf");
    var _collection2 = _interopRequireDefault(_collection);
    var _index = $__require("1a2");
    var _index2 = _interopRequireDefault(_index);
    var _event = $__require("1a8");
    var _event2 = _interopRequireDefault(_event);
    var _timeevent = $__require("1a3");
    var _timeevent2 = _interopRequireDefault(_timeevent);
    var _timerangeevent = $__require("196");
    var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
    var _indexedevent = $__require("195");
    var _indexedevent2 = _interopRequireDefault(_indexedevent);
    var _pipeline = $__require("197");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function buildMetaData(meta) {
      var d = meta ? meta : {};
      d.name = meta.name ? meta.name : "";
      if (meta.index) {
        if (_underscore2.default.isString(meta.index)) {
          d.index = new _index2.default(meta.index);
        } else if (meta.index instanceof _index2.default) {
          d.index = meta.index;
        }
      }
      d.utc = true;
      if (_underscore2.default.isBoolean(meta.utc)) {
        d.utc = meta.utc;
      }
      return new _immutable2.default.Map(d);
    }
    var TimeSeries = function () {
      function TimeSeries(arg) {
        (0, _classCallCheck3.default)(this, TimeSeries);
        this._collection = null;
        this._data = null;
        if (arg instanceof TimeSeries) {
          var other = arg;
          this._data = other._data;
          this._collection = other._collection;
        } else if (_underscore2.default.isObject(arg)) {
          var obj = arg;
          if (_underscore2.default.has(obj, "events")) {
            var events = obj.events,
                meta1 = (0, _objectWithoutProperties3.default)(obj, ["events"]);
            this._collection = new _collection2.default(events);
            this._data = buildMetaData(meta1);
          } else if (_underscore2.default.has(obj, "collection")) {
            var collection = obj.collection,
                meta3 = (0, _objectWithoutProperties3.default)(obj, ["collection"]);
            this._collection = collection;
            this._data = buildMetaData(meta3);
          } else if (_underscore2.default.has(obj, "columns") && _underscore2.default.has(obj, "points")) {
            var columns = obj.columns,
                points = obj.points,
                _obj$utc = obj.utc,
                utc = _obj$utc === undefined ? true : _obj$utc,
                meta2 = (0, _objectWithoutProperties3.default)(obj, ["columns", "points", "utc"]);
            var _columns = (0, _toArray3.default)(columns),
                eventKey = _columns[0],
                eventFields = _columns.slice(1);
            var _events = points.map(function (point) {
              var _point = (0, _toArray3.default)(point),
                  t = _point[0],
                  eventValues = _point.slice(1);
              var d = _underscore2.default.object(eventFields, eventValues);
              var options = utc;
              switch (eventKey) {
                case "time":
                  return new _timeevent2.default(t, d, options);
                case "index":
                  return new _indexedevent2.default(t, d, options);
                case "timerange":
                  return new _timerangeevent2.default(t, d, options);
                default:
                  throw new Error("Unknown event type");
              }
            });
            this._collection = new _collection2.default(_events);
            this._data = buildMetaData(meta2);
          }
          if (!this._collection.isChronological()) {
            throw new Error("TimeSeries was passed non-chronological events");
          }
        }
      }
      (0, _createClass3.default)(TimeSeries, [{
        key: "toJSON",
        value: function toJSON() {
          var e = this.atFirst();
          if (!e) {
            return;
          }
          var columns = void 0;
          if (e instanceof _timeevent2.default) {
            columns = ["time"].concat((0, _toConsumableArray3.default)(this.columns()));
          } else if (e instanceof _timerangeevent2.default) {
            columns = ["timerange"].concat((0, _toConsumableArray3.default)(this.columns()));
          } else if (e instanceof _indexedevent2.default) {
            columns = ["index"].concat((0, _toConsumableArray3.default)(this.columns()));
          }
          var points = [];
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = (0, _getIterator3.default)(this._collection.events()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _e = _step.value;
              points.push(_e.toPoint());
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return _underscore2.default.extend(this._data.toJSON(), {
            columns: columns,
            points: points
          });
        }
      }, {
        key: "toString",
        value: function toString() {
          return (0, _stringify2.default)(this.toJSON());
        }
      }, {
        key: "timerange",
        value: function timerange() {
          return this._collection.range();
        }
      }, {
        key: "range",
        value: function range() {
          return this.timerange();
        }
      }, {
        key: "begin",
        value: function begin() {
          return this.range().begin();
        }
      }, {
        key: "end",
        value: function end() {
          return this.range().end();
        }
      }, {
        key: "at",
        value: function at(pos) {
          return this._collection.at(pos);
        }
      }, {
        key: "atTime",
        value: function atTime(time) {
          var pos = this.bisect(time);
          if (pos >= 0 && pos < this.size()) {
            return this.at(pos);
          }
        }
      }, {
        key: "atFirst",
        value: function atFirst() {
          return this._collection.atFirst();
        }
      }, {
        key: "atLast",
        value: function atLast() {
          return this._collection.atLast();
        }
      }, {
        key: "events",
        value: _regenerator2.default.mark(function events() {
          var i;
          return _regenerator2.default.wrap(function events$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  i = 0;
                case 1:
                  if (!(i < this.size())) {
                    _context.next = 7;
                    break;
                  }
                  _context.next = 4;
                  return this.at(i);
                case 4:
                  i++;
                  _context.next = 1;
                  break;
                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, events, this);
        })
      }, {
        key: "setCollection",
        value: function setCollection(collection) {
          var isChronological = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          if (!isChronological && !collection.isChronological()) {
            throw new Error("Collection supplied is not chronological");
          }
          var result = new TimeSeries(this);
          if (collection) {
            result._collection = collection;
          } else {
            result._collection = new _collection2.default();
          }
          return result;
        }
      }, {
        key: "bisect",
        value: function bisect(t, b) {
          var tms = t.getTime();
          var size = this.size();
          var i = b || 0;
          if (!size) {
            return undefined;
          }
          for (; i < size; i++) {
            var ts = this.at(i).timestamp().getTime();
            if (ts > tms) {
              return i - 1 >= 0 ? i - 1 : 0;
            } else if (ts === tms) {
              return i;
            }
          }
          return i - 1;
        }
      }, {
        key: "slice",
        value: function slice(begin, end) {
          var sliced = this._collection.slice(begin, end);
          return this.setCollection(sliced, true);
        }
      }, {
        key: "crop",
        value: function crop(timerange) {
          var beginPos = this.bisect(timerange.begin());
          var endPos = this.bisect(timerange.end(), beginPos);
          return this.slice(beginPos, endPos);
        }
      }, {
        key: "clean",
        value: function clean(fieldSpec) {
          var cleaned = this._collection.clean(fieldSpec);
          return this.setCollection(cleaned, true);
        }
      }, {
        key: "events",
        value: _regenerator2.default.mark(function events() {
          var i;
          return _regenerator2.default.wrap(function events$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  i = 0;
                case 1:
                  if (!(i < this.size())) {
                    _context2.next = 7;
                    break;
                  }
                  _context2.next = 4;
                  return this.at(i);
                case 4:
                  i++;
                  _context2.next = 1;
                  break;
                case 7:
                case "end":
                  return _context2.stop();
              }
            }
          }, events, this);
        })
      }, {
        key: "name",
        value: function name() {
          return this._data.get("name");
        }
      }, {
        key: "setName",
        value: function setName(name) {
          return this.setMeta("name", name);
        }
      }, {
        key: "index",
        value: function index() {
          return this._data.get("index");
        }
      }, {
        key: "indexAsString",
        value: function indexAsString() {
          return this.index() ? this.index().asString() : undefined;
        }
      }, {
        key: "indexAsRange",
        value: function indexAsRange() {
          return this.index() ? this.index().asTimerange() : undefined;
        }
      }, {
        key: "isUTC",
        value: function isUTC() {
          return this._data.get("utc");
        }
      }, {
        key: "columns",
        value: function columns() {
          var c = {};
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;
          try {
            for (var _iterator2 = (0, _getIterator3.default)(this._collection.events()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var e = _step2.value;
              var d = e.toJSON().data;
              _underscore2.default.each(d, function (val, key) {
                c[key] = true;
              });
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return _underscore2.default.keys(c);
        }
      }, {
        key: "collection",
        value: function collection() {
          return this._collection;
        }
      }, {
        key: "meta",
        value: function meta(key) {
          if (!key) {
            return this._data.toJSON();
          } else {
            return this._data.get(key);
          }
        }
      }, {
        key: "setMeta",
        value: function setMeta(key, value) {
          var newTimeSeries = new TimeSeries(this);
          var d = newTimeSeries._data;
          var dd = d.set(key, value);
          newTimeSeries._data = dd;
          return newTimeSeries;
        }
      }, {
        key: "size",
        value: function size() {
          return this._collection ? this._collection.size() : 0;
        }
      }, {
        key: "sizeValid",
        value: function sizeValid(fieldSpec) {
          return this._collection.sizeValid(fieldSpec);
        }
      }, {
        key: "count",
        value: function count() {
          return this.size();
        }
      }, {
        key: "sum",
        value: function sum(fieldPath, filter) {
          return this._collection.sum(fieldPath, filter);
        }
      }, {
        key: "max",
        value: function max(fieldPath, filter) {
          return this._collection.max(fieldPath, filter);
        }
      }, {
        key: "min",
        value: function min(fieldPath, filter) {
          return this._collection.min(fieldPath, filter);
        }
      }, {
        key: "avg",
        value: function avg(fieldPath, filter) {
          return this._collection.avg(fieldPath, filter);
        }
      }, {
        key: "mean",
        value: function mean(fieldPath, filter) {
          return this._collection.mean(fieldPath, filter);
        }
      }, {
        key: "median",
        value: function median(fieldPath, filter) {
          return this._collection.median(fieldPath, filter);
        }
      }, {
        key: "stdev",
        value: function stdev(fieldPath, filter) {
          return this._collection.stdev(fieldPath, filter);
        }
      }, {
        key: "percentile",
        value: function percentile(q, fieldPath) {
          var interp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "linear";
          var filter = arguments[3];
          return this._collection.percentile(q, fieldPath, interp, filter);
        }
      }, {
        key: "aggregate",
        value: function aggregate(func, fieldPath) {
          return this._collection.aggregate(func, fieldPath);
        }
      }, {
        key: "quantile",
        value: function quantile(quantity) {
          var fieldPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "value";
          var interp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "linear";
          return this._collection.quantile(quantity, fieldPath, interp);
        }
      }, {
        key: "pipeline",
        value: function pipeline() {
          return new _pipeline.Pipeline().from(this._collection);
        }
      }, {
        key: "map",
        value: function map(op) {
          var collections = this.pipeline().map(op).toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "select",
        value: function select(options) {
          var fieldSpec = options.fieldSpec;
          var collections = this.pipeline().select(fieldSpec).toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "collapse",
        value: function collapse(options) {
          var fieldSpecList = options.fieldSpecList,
              name = options.name,
              reducer = options.reducer,
              append = options.append;
          var collections = this.pipeline().collapse(fieldSpecList, name, reducer, append).toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "renameColumns",
        value: function renameColumns(options) {
          var renameMap = options.renameMap;
          return this.map(function (event) {
            var eventType = event.type();
            var d = event.data().mapKeys(function (key) {
              return renameMap[key] || key;
            });
            return new eventType(event.key(), d);
          });
        }
      }, {
        key: "fill",
        value: function fill(options) {
          var _options$fieldSpec = options.fieldSpec,
              fieldSpec = _options$fieldSpec === undefined ? null : _options$fieldSpec,
              _options$method = options.method,
              method = _options$method === undefined ? "zero" : _options$method,
              _options$limit = options.limit,
              limit = _options$limit === undefined ? null : _options$limit;
          var pipeline = this.pipeline();
          if (method === "zero" || method === "pad") {
            pipeline = pipeline.fill({
              fieldSpec: fieldSpec,
              method: method,
              limit: limit
            });
          } else if (method === "linear" && _underscore2.default.isArray(fieldSpec)) {
            fieldSpec.forEach(function (fieldPath) {
              pipeline = pipeline.fill({
                fieldSpec: fieldPath,
                method: method,
                limit: limit
              });
            });
          } else {
            throw new Error("Invalid fill method:", method);
          }
          var collections = pipeline.toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "align",
        value: function align(options) {
          var _options$fieldSpec2 = options.fieldSpec,
              fieldSpec = _options$fieldSpec2 === undefined ? "value" : _options$fieldSpec2,
              _options$period = options.period,
              period = _options$period === undefined ? "5m" : _options$period,
              _options$method2 = options.method,
              method = _options$method2 === undefined ? "linear" : _options$method2,
              _options$limit2 = options.limit,
              limit = _options$limit2 === undefined ? null : _options$limit2;
          var collection = this.pipeline().align(fieldSpec, period, method, limit).toKeyedCollections();
          return this.setCollection(collection["all"], true);
        }
      }, {
        key: "rate",
        value: function rate() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          var _options$fieldSpec3 = options.fieldSpec,
              fieldSpec = _options$fieldSpec3 === undefined ? "value" : _options$fieldSpec3,
              _options$allowNegativ = options.allowNegative,
              allowNegative = _options$allowNegativ === undefined ? true : _options$allowNegativ;
          var collection = this.pipeline().rate(fieldSpec, allowNegative).toKeyedCollections();
          return this.setCollection(collection["all"], true);
        }
      }, {
        key: "fixedWindowRollup",
        value: function fixedWindowRollup(options) {
          var windowSize = options.windowSize,
              aggregation = options.aggregation,
              _options$toTimeEvents = options.toTimeEvents,
              toTimeEvents = _options$toTimeEvents === undefined ? false : _options$toTimeEvents;
          if (!windowSize) {
            throw new Error("windowSize must be supplied, for example '5m' for five minute rollups");
          }
          if (!aggregation || !_underscore2.default.isObject(aggregation)) {
            throw new Error("aggregation object must be supplied, for example: {value: {value: avg()}}");
          }
          var aggregatorPipeline = this.pipeline().windowBy(windowSize).emitOn("discard").aggregate(aggregation);
          var eventTypePipeline = toTimeEvents ? aggregatorPipeline.asTimeEvents() : aggregatorPipeline;
          var collections = eventTypePipeline.clearWindow().toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "hourlyRollup",
        value: function hourlyRollup(options) {
          var aggregation = options.aggregation,
              _options$toTimeEvents2 = options.toTimeEvents,
              toTimeEvents = _options$toTimeEvents2 === undefined ? false : _options$toTimeEvents2;
          if (!aggregation || !_underscore2.default.isObject(aggregation)) {
            throw new Error("aggregation object must be supplied, for example: {value: {value: avg()}}");
          }
          return this.fixedWindowRollup("1h", aggregation, toTimeEvents);
        }
      }, {
        key: "dailyRollup",
        value: function dailyRollup(options) {
          var aggregation = options.aggregation,
              _options$toTimeEvents3 = options.toTimeEvents,
              toTimeEvents = _options$toTimeEvents3 === undefined ? false : _options$toTimeEvents3;
          if (!aggregation || !_underscore2.default.isObject(aggregation)) {
            throw new Error("aggregation object must be supplied, for example: {value: {value: avg()}}");
          }
          return this._rollup("daily", aggregation, toTimeEvents);
        }
      }, {
        key: "monthlyRollup",
        value: function monthlyRollup(options) {
          var aggregation = options.aggregation,
              _options$toTimeEvents4 = options.toTimeEvents,
              toTimeEvents = _options$toTimeEvents4 === undefined ? false : _options$toTimeEvents4;
          if (!aggregation || !_underscore2.default.isObject(aggregation)) {
            throw new Error("aggregation object must be supplied, for example: {value: {value: avg()}}");
          }
          return this._rollup("monthly", aggregation, toTimeEvents);
        }
      }, {
        key: "yearlyRollup",
        value: function yearlyRollup(options) {
          var aggregation = options.aggregation,
              _options$toTimeEvents5 = options.toTimeEvents,
              toTimeEvents = _options$toTimeEvents5 === undefined ? false : _options$toTimeEvents5;
          if (!aggregation || !_underscore2.default.isObject(aggregation)) {
            throw new Error("aggregation object must be supplied, for example: {value: {value: avg()}}");
          }
          return this._rollup("yearly", aggregation, toTimeEvents);
        }
      }, {
        key: "_rollup",
        value: function _rollup(type, aggregation) {
          var toTimeEvents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
          var aggregatorPipeline = this.pipeline().windowBy(type).emitOn("discard").aggregate(aggregation);
          var eventTypePipeline = toTimeEvents ? aggregatorPipeline.asTimeEvents() : aggregatorPipeline;
          var collections = eventTypePipeline.clearWindow().toKeyedCollections();
          return this.setCollection(collections["all"], true);
        }
      }, {
        key: "collectByFixedWindow",
        value: function collectByFixedWindow(_ref) {
          var windowSize = _ref.windowSize;
          return this.pipeline().windowBy(windowSize).emitOn("discard").toKeyedCollections();
        }
      }], [{
        key: "event",
        value: function event(eventKey) {
          switch (eventKey) {
            case "time":
              return _timeevent2.default;
            case "timerange":
              return _timerangeevent2.default;
            case "index":
              return _indexedevent2.default;
            default:
              throw new Error("Unknown event type: " + eventKey);
          }
        }
      }, {
        key: "equal",
        value: function equal(series1, series2) {
          return series1._data === series2._data && series1._collection === series2._collection;
        }
      }, {
        key: "is",
        value: function is(series1, series2) {
          return _immutable2.default.is(series1._data, series2._data) && _collection2.default.is(series1._collection, series2._collection);
        }
      }, {
        key: "timeSeriesListReduce",
        value: function timeSeriesListReduce(options) {
          var fieldSpec = options.fieldSpec,
              reducer = options.reducer,
              data = (0, _objectWithoutProperties3.default)(options, ["fieldSpec", "reducer"]);
          var combiner = _event2.default.combiner(fieldSpec, reducer);
          return TimeSeries.timeSeriesListEventReduce((0, _extends3.default)({
            fieldSpec: fieldSpec,
            reducer: combiner
          }, data));
        }
      }, {
        key: "timeSeriesListMerge",
        value: function timeSeriesListMerge(options) {
          var fieldSpec = options.fieldSpec,
              data = (0, _objectWithoutProperties3.default)(options, ["fieldSpec"]);
          var merger = _event2.default.merger(fieldSpec);
          return TimeSeries.timeSeriesListEventReduce((0, _extends3.default)({
            fieldSpec: fieldSpec,
            reducer: merger
          }, data));
        }
      }, {
        key: "timeSeriesListEventReduce",
        value: function timeSeriesListEventReduce(options) {
          var seriesList = options.seriesList,
              fieldSpec = options.fieldSpec,
              reducer = options.reducer,
              data = (0, _objectWithoutProperties3.default)(options, ["seriesList", "fieldSpec", "reducer"]);
          if (!seriesList || !_underscore2.default.isArray(seriesList)) {
            throw new Error("A list of TimeSeries must be supplied to reduce");
          }
          if (!reducer || !_underscore2.default.isFunction(reducer)) {
            throw new Error("reducer function must be supplied, for example avg()");
          }
          var eventList = [];
          seriesList.forEach(function (series) {
            var _iteratorNormalCompletion3 = true;
            var _didIteratorError3 = false;
            var _iteratorError3 = undefined;
            try {
              for (var _iterator3 = (0, _getIterator3.default)(series.events()), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                var event = _step3.value;
                eventList.push(event);
              }
            } catch (err) {
              _didIteratorError3 = true;
              _iteratorError3 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion3 && _iterator3.return) {
                  _iterator3.return();
                }
              } finally {
                if (_didIteratorError3) {
                  throw _iteratorError3;
                }
              }
            }
          });
          var events = reducer(eventList, fieldSpec);
          var collection = new _collection2.default(events);
          if (!collection.isChronological()) {
            collection = collection.sortByTime();
          }
          var timeseries = new TimeSeries((0, _extends3.default)({}, data, { collection: collection }));
          return timeseries;
        }
      }]);
      return TimeSeries;
    }();
    exports.default = TimeSeries;
  })($__require("16"));
});
$__System.registerDynamic("1be", ["1c0", "199", "68", "19a", "69", "6a", "1c1", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _regenerator = $__require("1c0");
    var _regenerator2 = _interopRequireDefault(_regenerator);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _pipelinein = $__require("1c1");
    var _pipelinein2 = _interopRequireDefault(_pipelinein);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Stream = function (_PipelineIn) {
      (0, _inherits3.default)(Stream, _PipelineIn);
      function Stream() {
        (0, _classCallCheck3.default)(this, Stream);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Stream.__proto__ || (0, _getPrototypeOf2.default)(Stream)).call(this));
        _this._running = true;
        return _this;
      }
      (0, _createClass3.default)(Stream, [{
        key: "start",
        value: function start() {
          this._running = true;
        }
      }, {
        key: "stop",
        value: function stop() {
          this._running = false;
          this.flush();
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          this._check(event);
          if (this.hasObservers() && this._running) {
            this.emit(event);
          }
        }
      }, {
        key: "events",
        value: _regenerator2.default.mark(function events() {
          return _regenerator2.default.wrap(function events$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  throw new Error("Iteration across unbounded sources is not supported.");
                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, events, this);
        })
      }]);
      return Stream;
    }(_pipelinein2.default);
    exports.default = Stream;
  })($__require("16"));
});
$__System.registerDynamic("1bd", ["199", "68", "19a", "69", "6a", "1c2"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _pipelineout = $__require("1c2");
  var _pipelineout2 = _interopRequireDefault(_pipelineout);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var EventOut = function (_PipelineOut) {
    (0, _inherits3.default)(EventOut, _PipelineOut);
    function EventOut(pipeline, options, callback) {
      (0, _classCallCheck3.default)(this, EventOut);
      var _this = (0, _possibleConstructorReturn3.default)(this, (EventOut.__proto__ || (0, _getPrototypeOf2.default)(EventOut)).call(this, pipeline));
      _this._callback = callback;
      return _this;
    }
    (0, _createClass3.default)(EventOut, [{
      key: "addEvent",
      value: function addEvent(event) {
        if (this._callback) {
          this._callback(event);
        } else {
          this._pipeline.addResult(event);
        }
      }
    }, {
      key: "onEmit",
      value: function onEmit(cb) {
        this._callback = cb;
      }
    }, {
      key: "flush",
      value: function flush() {
        if (!this._callback) {
          this._pipeline.resultsDone();
        }
      }
    }]);
    return EventOut;
  }(_pipelineout2.default);
  exports.default = EventOut;
});
$__System.registerDynamic('1c3', ['18d', '1c4', '1b5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toObject = $__require('18d');
  var $getPrototypeOf = $__require('1c4');
  $__require('1b5')('getPrototypeOf', function () {
    return function getPrototypeOf(it) {
      return $getPrototypeOf(toObject(it));
    };
  });
});
$__System.registerDynamic('1c5', ['1c3', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1c3');
  module.exports = $__require('ff').Object.getPrototypeOf;
});
$__System.registerDynamic("199", ["1c5"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1c5"), __esModule: true };
});
$__System.registerDynamic("69", ["dd"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _typeof2 = $__require("dd");
  var _typeof3 = _interopRequireDefault(_typeof2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
  };
});
$__System.registerDynamic('1c6', ['19d', '1c7', '1c8', '1b4'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('19d');
  var anObject = $__require('1c7');
  var check = function (O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {
      try {
        set = $__require('1c8')(Function.call, $__require('1b4').f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };
});
$__System.registerDynamic('1c9', ['fc', '1c6'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  $export($export.S, 'Object', { setPrototypeOf: $__require('1c6').set });
});
$__System.registerDynamic('1ca', ['1c9', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1c9');
  module.exports = $__require('ff').Object.setPrototypeOf;
});
$__System.registerDynamic("1cb", ["1ca"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1ca"), __esModule: true };
});
$__System.registerDynamic('1cc', ['fc', '1cd'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  $export($export.S, 'Object', { create: $__require('1cd') });
});
$__System.registerDynamic('1ce', ['1cc', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1cc');
  var $Object = $__require('ff').Object;
  module.exports = function create(P, D) {
    return $Object.create(P, D);
  };
});
$__System.registerDynamic("1cf", ["1ce"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1ce"), __esModule: true };
});
$__System.registerDynamic('1d0', ['1d1', '1d2', '1d3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1d1');
  $__require('1d2');
  module.exports = $__require('1d3').f('iterator');
});
$__System.registerDynamic("1d4", ["1d0"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1d0"), __esModule: true };
});
$__System.registerDynamic('1d5', ['1d6', '19d', '1d7', '1d8', '18f'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var META = $__require('1d6')('meta');
  var isObject = $__require('19d');
  var has = $__require('1d7');
  var setDesc = $__require('1d8').f;
  var id = 0;
  var isExtensible = Object.isExtensible || function () {
    return true;
  };
  var FREEZE = !$__require('18f')(function () {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function (it) {
    setDesc(it, META, { value: {
        i: 'O' + ++id,
        w: {}
      } });
  };
  var fastKey = function (it, create) {
    if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!has(it, META)) {
      if (!isExtensible(it)) return 'F';
      if (!create) return 'E';
      setMeta(it);
    }
    return it[META].i;
  };
  var getWeak = function (it, create) {
    if (!has(it, META)) {
      if (!isExtensible(it)) return true;
      if (!create) return false;
      setMeta(it);
    }
    return it[META].w;
  };
  var onFreeze = function (it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };
});
$__System.registerDynamic('1d9', ['115', '18c', '117'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var getKeys = $__require('115');
  var gOPS = $__require('18c');
  var pIE = $__require('117');
  module.exports = function (it) {
    var result = getKeys(it);
    var getSymbols = gOPS.f;
    if (getSymbols) {
      var symbols = getSymbols(it);
      var isEnum = pIE.f;
      var i = 0;
      var key;
      while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
    }
    return result;
  };
});
$__System.registerDynamic('1da', ['1db'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('1db');
  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };
});
$__System.registerDynamic('1dc', ['116', '1dd'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('116');
  var gOPN = $__require('1dd').f;
  var toString = {}.toString;
  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames = function (it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };
  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };
});
$__System.registerDynamic('1b4', ['117', '1de', '116', '1df', '1d7', '1e0', '1e1'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var pIE = $__require('117');
  var createDesc = $__require('1de');
  var toIObject = $__require('116');
  var toPrimitive = $__require('1df');
  var has = $__require('1d7');
  var IE8_DOM_DEFINE = $__require('1e0');
  var gOPD = Object.getOwnPropertyDescriptor;
  exports.f = $__require('1e1') ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE) try {
      return gOPD(O, P);
    } catch (e) {}
    if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
  };
});
$__System.registerDynamic('1dd', ['1e2', '1e3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $keys = $__require('1e2');
  var hiddenKeys = $__require('1e3').concat('length', 'prototype');
  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };
});
$__System.registerDynamic("117", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  exports.f = {}.propertyIsEnumerable;
});
$__System.registerDynamic("18c", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  exports.f = Object.getOwnPropertySymbols;
});
$__System.registerDynamic('1e4', ['1e5', '1d7', '1e1', 'fc', '1e6', '1d5', '18f', '1e7', '1e8', '1d6', '1e9', '1d3', '1ea', '1d9', '1da', '1c7', '116', '1df', '1de', '1cd', '1dc', '1b4', '1d8', '115', '1dd', '117', '18c', '1eb', '1ec'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var global = $__require('1e5');
  var has = $__require('1d7');
  var DESCRIPTORS = $__require('1e1');
  var $export = $__require('fc');
  var redefine = $__require('1e6');
  var META = $__require('1d5').KEY;
  var $fails = $__require('18f');
  var shared = $__require('1e7');
  var setToStringTag = $__require('1e8');
  var uid = $__require('1d6');
  var wks = $__require('1e9');
  var wksExt = $__require('1d3');
  var wksDefine = $__require('1ea');
  var enumKeys = $__require('1d9');
  var isArray = $__require('1da');
  var anObject = $__require('1c7');
  var toIObject = $__require('116');
  var toPrimitive = $__require('1df');
  var createDesc = $__require('1de');
  var _create = $__require('1cd');
  var gOPNExt = $__require('1dc');
  var $GOPD = $__require('1b4');
  var $DP = $__require('1d8');
  var $keys = $__require('115');
  var gOPD = $GOPD.f;
  var dP = $DP.f;
  var gOPN = gOPNExt.f;
  var $Symbol = global.Symbol;
  var $JSON = global.JSON;
  var _stringify = $JSON && $JSON.stringify;
  var PROTOTYPE = 'prototype';
  var HIDDEN = wks('_hidden');
  var TO_PRIMITIVE = wks('toPrimitive');
  var isEnum = {}.propertyIsEnumerable;
  var SymbolRegistry = shared('symbol-registry');
  var AllSymbols = shared('symbols');
  var OPSymbols = shared('op-symbols');
  var ObjectProto = Object[PROTOTYPE];
  var USE_NATIVE = typeof $Symbol == 'function';
  var QObject = global.QObject;
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(dP({}, 'a', { get: function () {
        return dP(this, 'a', { value: 7 }).a;
      } })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
  } : dP;
  var wrap = function (tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };
  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };
  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, { enumerable: createDesc(0, false) });
      }
      return setSymbolDesc(it, key, D);
    }
    return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P));
    var i = 0;
    var l = keys.length;
    var key;
    while (l > i) $defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }
    return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto;
    var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
    }
    return result;
  };
  if (!USE_NATIVE) {
    $Symbol = function Symbol() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function (value) {
        if (this === ObjectProto) $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {
        configurable: true,
        set: $set
      });
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });
    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    $__require('1dd').f = gOPNExt.f = $getOwnPropertyNames;
    $__require('117').f = $propertyIsEnumerable;
    $__require('18c').f = $getOwnPropertySymbols;
    if (DESCRIPTORS && !$__require('1eb')) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }
    wksExt.f = function (name) {
      return wrap(wks(name));
    };
  }
  $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });
  for (var es6Symbols = 'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) wks(es6Symbols[j++]);
  for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);
  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    'for': function (key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
      for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
    },
    useSetter: function () {
      setter = true;
    },
    useSimple: function () {
      setter = false;
    }
  });
  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    create: $create,
    defineProperty: $defineProperty,
    defineProperties: $defineProperties,
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    getOwnPropertyNames: $getOwnPropertyNames,
    getOwnPropertySymbols: $getOwnPropertySymbols
  });
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
    var S = $Symbol();
    return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', { stringify: function stringify(it) {
      if (it === undefined || isSymbol(it)) return;
      var args = [it];
      var i = 1;
      var replacer, $replacer;
      while (arguments.length > i) args.push(arguments[i++]);
      replacer = args[1];
      if (typeof replacer == 'function') $replacer = replacer;
      if ($replacer || !isArray(replacer)) replacer = function (key, value) {
        if ($replacer) value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    } });
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || $__require('1ec')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  setToStringTag($Symbol, 'Symbol');
  setToStringTag(Math, 'Math', true);
  setToStringTag(global.JSON, 'JSON', true);
});
$__System.registerDynamic("1ed", [], true, function ($__require, exports, module) {
  /* */
  "format cjs";

  var global = this || self,
      GLOBAL = global;
});
$__System.registerDynamic('1ee', ['1ea'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1ea')('asyncIterator');
});
$__System.registerDynamic('1d3', ['1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  exports.f = $__require('1e9');
});
$__System.registerDynamic('1ea', ['1e5', 'ff', '1eb', '1d3', '1d8'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('1e5');
  var core = $__require('ff');
  var LIBRARY = $__require('1eb');
  var wksExt = $__require('1d3');
  var defineProperty = $__require('1d8').f;
  module.exports = function (name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
  };
});
$__System.registerDynamic('1ef', ['1ea'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1ea')('observable');
});
$__System.registerDynamic('1f0', ['1e4', '1ed', '1ee', '1ef', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1e4');
  $__require('1ed');
  $__require('1ee');
  $__require('1ef');
  module.exports = $__require('ff').Symbol;
});
$__System.registerDynamic('1f1', ['1f0'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('1f0');
});
$__System.registerDynamic("1f2", ["1f1"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1f1"), __esModule: true };
});
$__System.registerDynamic('dd', ['1d4', '1f2'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _iterator = $__require('1d4');
  var _iterator2 = _interopRequireDefault(_iterator);
  var _symbol = $__require('1f2');
  var _symbol2 = _interopRequireDefault(_symbol);
  var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj;
  };
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };
});
$__System.registerDynamic('6a', ['1cb', '1cf', 'dd'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _setPrototypeOf = $__require('1cb');
  var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);
  var _create = $__require('1cf');
  var _create2 = _interopRequireDefault(_create);
  var _typeof2 = $__require('dd');
  var _typeof3 = _interopRequireDefault(_typeof2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }
    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };
});
$__System.registerDynamic("1b8", ["68", "19a", "122", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Observable = function () {
      function Observable() {
        (0, _classCallCheck3.default)(this, Observable);
        this._id = _underscore2.default.uniqueId("id-");
        this._observers = [];
      }
      (0, _createClass3.default)(Observable, [{
        key: "emit",
        value: function emit(event) {
          this._observers.forEach(function (observer) {
            observer.addEvent(event);
          });
        }
      }, {
        key: "flush",
        value: function flush() {
          this._observers.forEach(function (observer) {
            observer.flush();
          });
        }
      }, {
        key: "addObserver",
        value: function addObserver(observer) {
          var shouldAdd = true;
          this._observers.forEach(function (o) {
            if (o === observer) {
              shouldAdd = false;
            }
          });
          if (shouldAdd) this._observers.push(observer);
        }
      }, {
        key: "hasObservers",
        value: function hasObservers() {
          return this._observers.length > 0;
        }
      }]);
      return Observable;
    }();
    exports.default = Observable;
  })($__require("16"));
});
$__System.registerDynamic("1c1", ["199", "68", "19a", "69", "6a", "122", "1b8"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _observable = $__require("1b8");
  var _observable2 = _interopRequireDefault(_observable);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var PipelineIn = function (_Observable) {
    (0, _inherits3.default)(PipelineIn, _Observable);
    function PipelineIn() {
      (0, _classCallCheck3.default)(this, PipelineIn);
      var _this = (0, _possibleConstructorReturn3.default)(this, (PipelineIn.__proto__ || (0, _getPrototypeOf2.default)(PipelineIn)).call(this));
      _this._id = _underscore2.default.uniqueId("in-");
      _this._type = null;
      return _this;
    }
    (0, _createClass3.default)(PipelineIn, [{
      key: "_check",
      value: function _check(e) {
        if (!this._type) {
          this._type = e.type();
        } else {
          if (!(e instanceof this._type)) {
            throw new Error("Homogeneous events expected.");
          }
        }
      }
    }]);
    return PipelineIn;
  }(_observable2.default);
  exports.default = PipelineIn;
});
$__System.registerDynamic("1bb", ["199", "68", "19a", "69", "6a", "1c1"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _pipelinein = $__require("1c1");
  var _pipelinein2 = _interopRequireDefault(_pipelinein);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Bounded = function (_PipelineIn) {
    (0, _inherits3.default)(Bounded, _PipelineIn);
    function Bounded() {
      (0, _classCallCheck3.default)(this, Bounded);
      return (0, _possibleConstructorReturn3.default)(this, (Bounded.__proto__ || (0, _getPrototypeOf2.default)(Bounded)).call(this));
    }
    (0, _createClass3.default)(Bounded, [{
      key: "start",
      value: function start() {
        throw new Error("start() not supported on bounded source.");
      }
    }, {
      key: "stop",
      value: function stop() {
        throw new Error("stop() not supported on bounded source.");
      }
    }, {
      key: "onEmit",
      value: function onEmit() {
        throw new Error("You can not setup a listener to a bounded source.");
      }
    }]);
    return Bounded;
  }(_pipelinein2.default);
  exports.default = Bounded;
});
$__System.registerDynamic("1a8", ["1a9", "68", "19a", "122", "1a6", "1a5"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _stringify = $__require("1a9");
  var _stringify2 = _interopRequireDefault(_stringify);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _immutable = $__require("1a6");
  var _immutable2 = _interopRequireDefault(_immutable);
  var _util = $__require("1a5");
  var _util2 = _interopRequireDefault(_util);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Event = function () {
    function Event() {
      (0, _classCallCheck3.default)(this, Event);
      if (this.constructor.name === "Event") {
        throw new TypeError("Cannot construct Event instances directly");
      }
    }
    (0, _createClass3.default)(Event, [{
      key: "toString",
      value: function toString() {
        if (this.toJSON === undefined) {
          throw new TypeError("Must implement toJSON()");
        }
        return (0, _stringify2.default)(this.toJSON());
      }
    }, {
      key: "type",
      value: function type() {
        return this.constructor;
      }
    }, {
      key: "setData",
      value: function setData(data) {
        var eventType = this.type();
        var d = this._d.set("data", _util2.default.dataFromArg(data));
        return new eventType(d);
      }
    }, {
      key: "data",
      value: function data() {
        return this._d.get("data");
      }
    }, {
      key: "get",
      value: function get() {
        var fieldSpec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ["value"];
        var v = void 0;
        if (_underscore2.default.isArray(fieldSpec)) {
          v = this.data().getIn(fieldSpec);
        } else if (_underscore2.default.isString(fieldSpec)) {
          var searchKeyPath = fieldSpec.split(".");
          v = this.data().getIn(searchKeyPath);
        }
        if (v instanceof _immutable2.default.Map || v instanceof _immutable2.default.List) {
          return v.toJS();
        }
        return v;
      }
    }, {
      key: "value",
      value: function value() {
        var fieldSpec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ["value"];
        return this.get(fieldSpec);
      }
    }, {
      key: "collapse",
      value: function collapse(fieldSpecList, name, reducer) {
        var _this = this;
        var append = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var data = append ? this.data().toJS() : {};
        var d = fieldSpecList.map(function (fs) {
          return _this.get(fs);
        });
        data[name] = reducer(d);
        return this.setData(data);
      }
    }], [{
      key: "is",
      value: function is(event1, event2) {
        return event1.key() === event2.key() && _immutable2.default.is(event1._d.get("data"), event2._d.get("data"));
      }
    }, {
      key: "isDuplicate",
      value: function isDuplicate(event1, event2) {
        var ignoreValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        if (ignoreValues) {
          return event1.type() === event2.type() && event1.key() === event2.key();
        } else {
          return event1.type() === event2.type() && Event.is(event1, event2);
        }
      }
    }, {
      key: "isValidValue",
      value: function isValidValue(event, fieldPath) {
        var v = event.value(fieldPath);
        var invalid = _underscore2.default.isUndefined(v) || _underscore2.default.isNaN(v) || _underscore2.default.isNull(v);
        return !invalid;
      }
    }, {
      key: "selector",
      value: function selector(event, fieldPath) {
        var data = {};
        if (_underscore2.default.isString(fieldPath)) {
          var fieldName = fieldPath;
          var value = event.get(fieldName);
          data[fieldName] = value;
        } else if (_underscore2.default.isArray(fieldPath)) {
          _underscore2.default.each(fieldPath, function (fieldName) {
            var value = event.get(fieldName);
            data[fieldName] = value;
          });
        } else {
          return event;
        }
        return event.setData(data);
      }
    }, {
      key: "merge",
      value: function merge(events, deep) {
        if (events instanceof _immutable2.default.List && events.size === 0 || _underscore2.default.isArray(events) && events.length === 0) {
          return [];
        }
        var eventMap = {};
        var typeMap = {};
        events.forEach(function (e) {
          var type = e.type();
          var key = e.key();
          if (!_underscore2.default.has(eventMap, key)) {
            eventMap[key] = [];
          }
          eventMap[key].push(e);
          if (!_underscore2.default.has(typeMap, key)) {
            typeMap[key] = type;
          } else {
            if (typeMap[key] !== type) {
              throw new Error("Events for time " + key + " are not homogeneous");
            }
          }
        });
        var outEvents = [];
        _underscore2.default.each(eventMap, function (events, key) {
          var data = _immutable2.default.Map();
          events.forEach(function (event) {
            data = deep ? data.mergeDeep(event.data()) : data.merge(event.data());
          });
          var type = typeMap[key];
          outEvents.push(new type(key, data));
        });
        if (events instanceof _immutable2.default.List) {
          return _immutable2.default.List(outEvents);
        }
        return outEvents;
      }
    }, {
      key: "combine",
      value: function combine(events, reducer, fieldSpec) {
        if (events instanceof _immutable2.default.List && events.size === 0 || _underscore2.default.isArray(events) && events.length === 0) {
          return [];
        }
        var fieldNames = void 0;
        if (_underscore2.default.isString(fieldSpec)) {
          fieldNames = [fieldSpec];
        } else if (_underscore2.default.isArray(fieldSpec)) {
          fieldNames = fieldSpec;
        }
        var eventMap = {};
        var typeMap = {};
        events.forEach(function (e) {
          var type = e.type();
          var key = e.key();
          if (!_underscore2.default.has(eventMap, key)) {
            eventMap[key] = [];
          }
          eventMap[key].push(e);
          if (!_underscore2.default.has(typeMap, key)) {
            typeMap[key] = type;
          } else {
            if (typeMap[key] !== type) {
              throw new Error("Events for time " + key + " are not homogeneous");
            }
          }
        });
        var outEvents = [];
        _underscore2.default.each(eventMap, function (events, key) {
          var mapEvent = {};
          events.forEach(function (event) {
            var fields = fieldNames;
            if (!fieldNames) {
              fields = _underscore2.default.map(event.data().toJSON(), function (value, fieldName) {
                return fieldName;
              });
            }
            fields.forEach(function (fieldName) {
              if (!mapEvent[fieldName]) {
                mapEvent[fieldName] = [];
              }
              mapEvent[fieldName].push(event.data().get(fieldName));
            });
          });
          var data = {};
          _underscore2.default.map(mapEvent, function (values, fieldName) {
            data[fieldName] = reducer(values);
          });
          var type = typeMap[key];
          outEvents.push(new type(key, data));
        });
        if (events instanceof _immutable2.default.List) {
          return _immutable2.default.List(outEvents);
        }
        return outEvents;
      }
    }, {
      key: "combiner",
      value: function combiner(fieldSpec, reducer) {
        return function (events) {
          return Event.combine(events, reducer, fieldSpec);
        };
      }
    }, {
      key: "merger",
      value: function merger(fieldSpec) {
        return function (events) {
          return Event.merge(events, fieldSpec);
        };
      }
    }, {
      key: "map",
      value: function map(evts) {
        var multiFieldSpec = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "value";
        var result = {};
        var events = void 0;
        if (evts instanceof _immutable2.default.List) {
          events = evts;
        } else if (_underscore2.default.isArray(evts)) {
          events = new _immutable2.default.List(evts);
        } else {
          throw new Error("Unknown event list type. Should be an array or Immutable List");
        }
        if (_underscore2.default.isString(multiFieldSpec)) {
          var fieldSpec = multiFieldSpec;
          events.forEach(function (event) {
            if (!_underscore2.default.has(result, fieldSpec)) {
              result[fieldSpec] = [];
            }
            var value = event.get(fieldSpec);
            result[fieldSpec].push(value);
          });
        } else if (_underscore2.default.isArray(multiFieldSpec)) {
          _underscore2.default.each(multiFieldSpec, function (fieldSpec) {
            events.forEach(function (event) {
              if (!_underscore2.default.has(result, fieldSpec)) {
                result[fieldSpec] = [];
              }
              result[fieldSpec].push(event.get(fieldSpec));
            });
          });
        } else if (_underscore2.default.isFunction(multiFieldSpec)) {
          events.forEach(function (event) {
            var pair = multiFieldSpec(event);
            _underscore2.default.each(pair, function (value, key) {
              if (!_underscore2.default.has(result, key)) {
                result[key] = [];
              }
              result[key].push(value);
            });
          });
        } else {
          events.forEach(function (event) {
            _underscore2.default.each(event.data().toJSON(), function (value, key) {
              if (!_underscore2.default.has(result, key)) {
                result[key] = [];
              }
              result[key].push(value);
            });
          });
        }
        return result;
      }
    }, {
      key: "reduce",
      value: function reduce(mapped, reducer) {
        var result = {};
        _underscore2.default.each(mapped, function (valueList, key) {
          result[key] = reducer(valueList);
        });
        return result;
      }
    }, {
      key: "mapReduce",
      value: function mapReduce(events, multiFieldSpec, reducer) {
        return Event.reduce(this.map(events, multiFieldSpec), reducer);
      }
    }]);
    return Event;
  }();
  exports.default = Event;
});
$__System.registerDynamic("1f3", ["122", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.filter = undefined;
    exports.keep = keep;
    exports.sum = sum;
    exports.avg = avg;
    exports.max = max;
    exports.min = min;
    exports.count = count;
    exports.first = first;
    exports.last = last;
    exports.difference = difference;
    exports.median = median;
    exports.stdev = stdev;
    exports.percentile = percentile;
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function isValid(v) {
      return !(_underscore2.default.isUndefined(v) || _underscore2.default.isNaN(v) || _underscore2.default.isNull(v));
    }
    var keepMissing = function keepMissing(values) {
      return values;
    };
    var ignoreMissing = function ignoreMissing(values) {
      return values.filter(isValid);
    };
    var zeroMissing = function zeroMissing(values) {
      return values.map(function (v) {
        return isValid(v) ? v : 0;
      });
    };
    var propagateMissing = function propagateMissing(values) {
      return ignoreMissing(values).length === values.length ? values : null;
    };
    var noneIfEmpty = function noneIfEmpty(values) {
      return values.length === 0 ? null : values;
    };
    var filter = exports.filter = {
      keepMissing: keepMissing,
      ignoreMissing: ignoreMissing,
      zeroMissing: zeroMissing,
      propagateMissing: propagateMissing,
      noneIfEmpty: noneIfEmpty
    };
    function keep() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var result = first()(cleanValues);
        cleanValues.forEach(function (v) {
          if (v !== result) {
            return null;
          }
        });
        return result;
      };
    }
    function sum() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        return _underscore2.default.reduce(cleanValues, function (a, b) {
          return a + b;
        }, 0);
      };
    }
    function avg() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var sum = _underscore2.default.reduce(cleanValues, function (a, b) {
          return a + b;
        }, 0);
        return sum / cleanValues.length;
      };
    }
    function max() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var max = _underscore2.default.max(cleanValues);
        if (_underscore2.default.isFinite(max)) {
          return max;
        }
      };
    }
    function min() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var min = _underscore2.default.min(cleanValues);
        if (_underscore2.default.isFinite(min)) {
          return min;
        }
      };
    }
    function count() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        return cleanValues.length;
      };
    }
    function first() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        return cleanValues.length ? cleanValues[0] : undefined;
      };
    }
    function last() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        return cleanValues.length ? cleanValues[cleanValues.length - 1] : undefined;
      };
    }
    function difference() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        return _underscore2.default.max(cleanValues) - _underscore2.default.min(cleanValues);
      };
    }
    function median() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var sorted = cleanValues.sort();
        var i = Math.floor(sorted.length / 2);
        if (sorted.length % 2 === 0) {
          var a = sorted[i];
          var b = sorted[i - 1];
          return (a + b) / 2;
        } else {
          return sorted[i];
        }
      };
    }
    function stdev() {
      var clean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var sums = 0;
        var mean = avg(clean)(cleanValues);
        cleanValues.forEach(function (v) {
          return sums += Math.pow(v - mean, 2);
        });
        return Math.sqrt(sums / values.length);
      };
    }
    function percentile(q) {
      var interp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "linear";
      var clean = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : filter.ignoreMissing;
      return function (values) {
        var cleanValues = clean(values);
        if (!cleanValues) return null;
        var v = void 0;
        var sorted = cleanValues.slice().sort(function (a, b) {
          return a - b;
        });
        var size = sorted.length;
        if (q < 0 || q > 100) {
          throw new Error("Percentile q must be between 0 and 100");
        }
        var i = q / 100;
        var index = Math.floor((sorted.length - 1) * i);
        if (size === 1 || q === 0) {
          return sorted[0];
        }
        if (q === 100) {
          return sorted[size - 1];
        }
        if (index < size - 1) {
          var fraction = (size - 1) * i - index;
          var v0 = sorted[index];
          var v1 = sorted[index + 1];
          if (interp === "lower" || fraction === 0) {
            v = v0;
          } else if (interp === "linear") {
            v = v0 + (v1 - v0) * fraction;
          } else if (interp === "higher") {
            v = v1;
          } else if (interp === "nearest") {
            v = fraction < 0.5 ? v0 : v1;
          } else if (interp === "midpoint") {
            v = (v0 + v1) / 2;
          }
        }
        return v;
      };
    }
  })($__require("16"));
});
$__System.registerDynamic("1bf", ["1c0", "1ae", "1a9", "199", "68", "19a", "69", "6a", "122", "1a6", "1bb", "1a8", "1a4", "1a5", "1f3", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _regenerator = $__require("1c0");
    var _regenerator2 = _interopRequireDefault(_regenerator);
    var _getIterator2 = $__require("1ae");
    var _getIterator3 = _interopRequireDefault(_getIterator2);
    var _stringify = $__require("1a9");
    var _stringify2 = _interopRequireDefault(_stringify);
    var _getPrototypeOf = $__require("199");
    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _possibleConstructorReturn2 = $__require("69");
    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
    var _inherits2 = $__require("6a");
    var _inherits3 = _interopRequireDefault(_inherits2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _bounded = $__require("1bb");
    var _bounded2 = _interopRequireDefault(_bounded);
    var _event = $__require("1a8");
    var _event2 = _interopRequireDefault(_event);
    var _timerange = $__require("1a4");
    var _timerange2 = _interopRequireDefault(_timerange);
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    var _functions = $__require("1f3");
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Collection = function (_Bounded) {
      (0, _inherits3.default)(Collection, _Bounded);
      function Collection(arg1, arg2) {
        (0, _classCallCheck3.default)(this, Collection);
        var _this = (0, _possibleConstructorReturn3.default)(this, (Collection.__proto__ || (0, _getPrototypeOf2.default)(Collection)).call(this));
        _this._id = _underscore2.default.uniqueId("collection-");
        _this._eventList = null;
        _this._type = null;
        if (!arg1) {
          _this._eventList = new _immutable2.default.List();
        } else if (arg1 instanceof Collection) {
          var other = arg1;
          var copyEvents = arg2 || true;
          if (_underscore2.default.isUndefined(copyEvents) || copyEvents === true) {
            _this._eventList = other._eventList;
            _this._type = other._type;
          } else {
            _this._eventList = new _immutable2.default.List();
          }
        } else if (_underscore2.default.isArray(arg1)) {
          var events = [];
          arg1.forEach(function (e) {
            _this._check(e);
            events.push(e._d);
          });
          _this._eventList = new _immutable2.default.List(events);
        } else if (_immutable2.default.List.isList(arg1)) {
          var type = arg2;
          if (!type) {
            throw new Error("No type supplied to Collection constructor");
          }
          _this._type = type;
          _this._eventList = arg1;
        }
        return _this;
      }
      (0, _createClass3.default)(Collection, [{
        key: "toJSON",
        value: function toJSON() {
          return this._eventList.toJS();
        }
      }, {
        key: "toString",
        value: function toString() {
          return (0, _stringify2.default)(this.toJSON());
        }
      }, {
        key: "type",
        value: function type() {
          return this._type;
        }
      }, {
        key: "size",
        value: function size() {
          return this._eventList.size;
        }
      }, {
        key: "sizeValid",
        value: function sizeValid() {
          var fieldPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "value";
          var count = 0;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;
          try {
            for (var _iterator = (0, _getIterator3.default)(this.events()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var e = _step.value;
              if (_event2.default.isValidValue(e, fieldPath)) count++;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
          return count;
        }
      }, {
        key: "at",
        value: function at(pos) {
          if (this._eventList.size > 0) {
            var event = new this._type(this._eventList.get(pos));
            return event;
          }
        }
      }, {
        key: "atKey",
        value: function atKey(k) {
          var result = [];
          var key = void 0;
          if (k instanceof Date) {
            key = k.getTime();
          } else if (_underscore2.default.isString(k)) {
            key = k;
          } else if (k instanceof _timerange2.default) {
            key = this.timerange().begin() + "," + this.timerange().end();
          }
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;
          try {
            for (var _iterator2 = (0, _getIterator3.default)(this.events()), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var e = _step2.value;
              if (e.key() === key) {
                result.push(e);
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
          return result;
        }
      }, {
        key: "atFirst",
        value: function atFirst() {
          if (this.size()) {
            return this.at(0);
          }
        }
      }, {
        key: "atLast",
        value: function atLast() {
          if (this.size()) {
            return this.at(this.size() - 1);
          }
        }
      }, {
        key: "events",
        value: _regenerator2.default.mark(function events() {
          var i;
          return _regenerator2.default.wrap(function events$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  i = 0;
                case 1:
                  if (!(i < this.size())) {
                    _context.next = 7;
                    break;
                  }
                  _context.next = 4;
                  return this.at(i);
                case 4:
                  i++;
                  _context.next = 1;
                  break;
                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, events, this);
        })
      }, {
        key: "setEvents",
        value: function setEvents(events) {
          var result = new Collection(this);
          result._eventList = events;
          return result;
        }
      }, {
        key: "eventList",
        value: function eventList() {
          return this._eventList;
        }
      }, {
        key: "eventListAsArray",
        value: function eventListAsArray() {
          var events = [];
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;
          try {
            for (var _iterator3 = (0, _getIterator3.default)(this.events()), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var e = _step3.value;
              events.push(e);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
          return events;
        }
      }, {
        key: "eventListAsMap",
        value: function eventListAsMap() {
          var events = {};
          var _iteratorNormalCompletion4 = true;
          var _didIteratorError4 = false;
          var _iteratorError4 = undefined;
          try {
            for (var _iterator4 = (0, _getIterator3.default)(this.events()), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
              var e = _step4.value;
              var key = e.key();
              if (!_underscore2.default.has(events, key)) {
                events[key] = [];
              }
              events[key].push(e);
            }
          } catch (err) {
            _didIteratorError4 = true;
            _iteratorError4 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion4 && _iterator4.return) {
                _iterator4.return();
              }
            } finally {
              if (_didIteratorError4) {
                throw _iteratorError4;
              }
            }
          }
          return events;
        }
      }, {
        key: "dedup",
        value: function dedup() {
          var events = _event2.default.merge(this.eventListAsArray());
          return new Collection(events);
        }
      }, {
        key: "sortByTime",
        value: function sortByTime() {
          var _this2 = this;
          var sorted = this._eventList.sortBy(function (event) {
            var e = new _this2._type(event);
            return e.timestamp().getTime();
          });
          return this.setEvents(sorted);
        }
      }, {
        key: "sort",
        value: function sort(fieldPath) {
          var _this3 = this;
          var fs = _util2.default.fieldPathToArray(fieldPath);
          var sorted = this._eventList.sortBy(function (event) {
            var e = new _this3._type(event);
            return e.get(fs);
          });
          return this.setEvents(sorted);
        }
      }, {
        key: "range",
        value: function range() {
          var min = void 0;
          var max = void 0;
          var _iteratorNormalCompletion5 = true;
          var _didIteratorError5 = false;
          var _iteratorError5 = undefined;
          try {
            for (var _iterator5 = (0, _getIterator3.default)(this.events()), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
              var e = _step5.value;
              if (!min || e.begin() < min) min = e.begin();
              if (!max || e.end() > max) max = e.end();
            }
          } catch (err) {
            _didIteratorError5 = true;
            _iteratorError5 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion5 && _iterator5.return) {
                _iterator5.return();
              }
            } finally {
              if (_didIteratorError5) {
                throw _iteratorError5;
              }
            }
          }
          if (min && max) return new _timerange2.default(min, max);
        }
      }, {
        key: "addEvent",
        value: function addEvent(event) {
          this._check(event);
          var result = new Collection(this);
          result._eventList = this._eventList.push(event._d);
          return result;
        }
      }, {
        key: "slice",
        value: function slice(begin, end) {
          return new Collection(this._eventList.slice(begin, end), this._type);
        }
      }, {
        key: "filter",
        value: function filter(filterFunc) {
          var filteredEventList = [];
          var _iteratorNormalCompletion6 = true;
          var _didIteratorError6 = false;
          var _iteratorError6 = undefined;
          try {
            for (var _iterator6 = (0, _getIterator3.default)(this.events()), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
              var e = _step6.value;
              if (filterFunc(e)) {
                filteredEventList.push(e);
              }
            }
          } catch (err) {
            _didIteratorError6 = true;
            _iteratorError6 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion6 && _iterator6.return) {
                _iterator6.return();
              }
            } finally {
              if (_didIteratorError6) {
                throw _iteratorError6;
              }
            }
          }
          return new Collection(filteredEventList);
        }
      }, {
        key: "map",
        value: function map(mapFunc) {
          var result = [];
          var _iteratorNormalCompletion7 = true;
          var _didIteratorError7 = false;
          var _iteratorError7 = undefined;
          try {
            for (var _iterator7 = (0, _getIterator3.default)(this.events()), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
              var e = _step7.value;
              result.push(mapFunc(e));
            }
          } catch (err) {
            _didIteratorError7 = true;
            _iteratorError7 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion7 && _iterator7.return) {
                _iterator7.return();
              }
            } finally {
              if (_didIteratorError7) {
                throw _iteratorError7;
              }
            }
          }
          return new Collection(result);
        }
      }, {
        key: "clean",
        value: function clean(fieldPath) {
          var fs = _util2.default.fieldPathToArray(fieldPath);
          var filteredEvents = [];
          var _iteratorNormalCompletion8 = true;
          var _didIteratorError8 = false;
          var _iteratorError8 = undefined;
          try {
            for (var _iterator8 = (0, _getIterator3.default)(this.events()), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
              var e = _step8.value;
              if (_event2.default.isValidValue(e, fs)) {
                filteredEvents.push(e);
              }
            }
          } catch (err) {
            _didIteratorError8 = true;
            _iteratorError8 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion8 && _iterator8.return) {
                _iterator8.return();
              }
            } finally {
              if (_didIteratorError8) {
                throw _iteratorError8;
              }
            }
          }
          return new Collection(filteredEvents);
        }
      }, {
        key: "count",
        value: function count() {
          return this.size();
        }
      }, {
        key: "first",
        value: function first(fieldPath, filter) {
          return this.aggregate((0, _functions.first)(filter), fieldPath);
        }
      }, {
        key: "last",
        value: function last(fieldPath, filter) {
          return this.aggregate((0, _functions.last)(filter), fieldPath);
        }
      }, {
        key: "sum",
        value: function sum(fieldPath, filter) {
          return this.aggregate((0, _functions.sum)(filter), fieldPath);
        }
      }, {
        key: "avg",
        value: function avg(fieldPath, filter) {
          return this.aggregate((0, _functions.avg)(filter), fieldPath);
        }
      }, {
        key: "max",
        value: function max(fieldPath, filter) {
          return this.aggregate((0, _functions.max)(filter), fieldPath);
        }
      }, {
        key: "min",
        value: function min(fieldPath, filter) {
          return this.aggregate((0, _functions.min)(filter), fieldPath);
        }
      }, {
        key: "mean",
        value: function mean(fieldPath, filter) {
          return this.avg(fieldPath, filter);
        }
      }, {
        key: "median",
        value: function median(fieldPath, filter) {
          return this.aggregate((0, _functions.median)(filter), fieldPath);
        }
      }, {
        key: "stdev",
        value: function stdev(fieldPath, filter) {
          return this.aggregate((0, _functions.stdev)(filter), fieldPath);
        }
      }, {
        key: "percentile",
        value: function percentile(q, fieldPath) {
          var interp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "linear";
          var filter = arguments[3];
          return this.aggregate((0, _functions.percentile)(q, interp, filter), fieldPath);
        }
      }, {
        key: "aggregate",
        value: function aggregate(func, fieldPath) {
          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
          var fpath = void 0;
          if (!_underscore2.default.isFunction(func)) {
            throw new Error("First arg to aggregate() must be a function");
          }
          if (_underscore2.default.isString(fieldPath)) {
            fpath = fieldPath;
          } else if (_underscore2.default.isArray(fieldPath)) {
            fpath = fieldPath.split(".");
          } else if (_underscore2.default.isUndefined(fieldPath)) {
            fpath = "value";
          } else {
            throw new Error("Collection.aggregate() takes a string/array fieldPath");
          }
          var result = _event2.default.mapReduce(this.eventListAsArray(), fpath, func, options);
          return result[fpath];
        }
      }, {
        key: "quantile",
        value: function quantile(n) {
          var column = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "value";
          var interp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "linear";
          var results = [];
          var sorted = this.sort(column);
          var subsets = 1.0 / n;
          if (n > this.length) {
            throw new Error("Subset n is greater than the Collection length");
          }
          for (var i = subsets; i < 1; i += subsets) {
            var index = Math.floor((sorted.size() - 1) * i);
            if (index < sorted.size() - 1) {
              var fraction = (sorted.size() - 1) * i - index;
              var v0 = sorted.at(index).get(column);
              var v1 = sorted.at(index + 1).get(column);
              var v = void 0;
              if (interp === "lower" || fraction === 0) {
                v = v0;
              } else if (interp === "linear") {
                v = v0 + (v1 - v0) * fraction;
              } else if (interp === "higher") {
                v = v1;
              } else if (interp === "nearest") {
                v = fraction < 0.5 ? v0 : v1;
              } else if (interp === "midpoint") {
                v = (v0 + v1) / 2;
              }
              results.push(v);
            }
          }
          return results;
        }
      }, {
        key: "isChronological",
        value: function isChronological() {
          var result = true;
          var t = void 0;
          var _iteratorNormalCompletion9 = true;
          var _didIteratorError9 = false;
          var _iteratorError9 = undefined;
          try {
            for (var _iterator9 = (0, _getIterator3.default)(this.events()), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
              var e = _step9.value;
              if (!t) {
                t = e.timestamp().getTime();
              } else {
                if (e.timestamp() < t) {
                  result = false;
                }
                t = e.timestamp();
              }
            }
          } catch (err) {
            _didIteratorError9 = true;
            _iteratorError9 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion9 && _iterator9.return) {
                _iterator9.return();
              }
            } finally {
              if (_didIteratorError9) {
                throw _iteratorError9;
              }
            }
          }
          return result;
        }
      }], [{
        key: "equal",
        value: function equal(collection1, collection2) {
          return collection1._type === collection2._type && collection1._eventList === collection2._eventList;
        }
      }, {
        key: "is",
        value: function is(collection1, collection2) {
          return collection1._type === collection2._type && _immutable2.default.is(collection1._eventList, collection2._eventList);
        }
      }]);
      return Collection;
    }(_bounded2.default);
    exports.default = Collection;
  })($__require("16"));
});
$__System.registerDynamic('1f4', ['1f5', '1e9', '1f6', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var classof = $__require('1f5');
  var ITERATOR = $__require('1e9')('iterator');
  var Iterators = $__require('1f6');
  module.exports = $__require('ff').isIterable = function (it) {
    var O = Object(it);
    return O[ITERATOR] !== undefined || '@@iterator' in O || Iterators.hasOwnProperty(classof(O));
  };
});
$__System.registerDynamic('1f7', ['1d2', '1d1', '1f4'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1d2');
  $__require('1d1');
  module.exports = $__require('1f4');
});
$__System.registerDynamic("1f8", ["1f7"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("1f7"), __esModule: true };
});
$__System.registerDynamic('1f9', ['1f8', '1ae'], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _isIterable2 = $__require('1f8');
  var _isIterable3 = _interopRequireDefault(_isIterable2);
  var _getIterator2 = $__require('1ae');
  var _getIterator3 = _interopRequireDefault(_getIterator2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;
      try {
        for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if ((0, _isIterable3.default)(Object(arr))) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();
});
$__System.registerDynamic("1fa", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /**
   * Copyright (c) 2014, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
   * additional grant of patent rights can be found in the PATENTS file in
   * the same directory.
   */

  !function (global) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    var inModule = typeof module === "object";
    var runtime = global.regeneratorRuntime;
    if (runtime) {
      if (inModule) {
        // If regeneratorRuntime is defined globally and we're in a module,
        // make the exports object identical to regeneratorRuntime.
        module.exports = runtime;
      }
      // Don't bother evaluating the rest of this file if the runtime was
      // already defined globally.
      return;
    }

    // Define the runtime globally (as expected by generated code) as either
    // module.exports (if we're in a module) or a new, empty object.
    runtime = global.regeneratorRuntime = inModule ? module.exports : {};

    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);

      // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.
      generator._invoke = makeInvokeMethod(innerFn, self, context);

      return generator;
    }
    runtime.wrap = wrap;

    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
      try {
        return { type: "normal", arg: fn.call(obj, arg) };
      } catch (err) {
        return { type: "throw", arg: err };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";

    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};

    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}

    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    runtime.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction ||
      // For the native GeneratorFunction constructor, the best we can
      // do is to check its .name property.
      (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    runtime.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    runtime.awrap = function (arg) {
      return { __await: arg };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function (unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration. If the Promise is rejected, however, the
            // result for this iteration will be rejected with the same
            // reason. Note that rejections of yielded Promises are not
            // thrown back into the generator function, as is the case
            // when an awaited Promise is rejected. This difference in
            // behavior between yield and await is important, because it
            // allows the consumer to decide what to do with the yielded
            // rejection (swallow it and continue, manually .throw it back
            // into the generator, abandon iteration, whatever). With
            // await, by contrast, there is no opportunity to examine the
            // rejection reason outside the generator function, so the
            // only option is to throw it from the await expression, and
            // let the generator function handle the exception.
            result.value = unwrapped;
            resolve(result);
          }, reject);
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
        // Avoid propagating failures to Promises returned by later
        // invocations of the iterator.
        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).
      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);
    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };
    runtime.AsyncIterator = AsyncIterator;

    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    runtime.async = function (innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));

      return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;

      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          // Be forgiving, per 25.3.3.3.3 of the spec:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;

          var record = tryCatch(innerFn, self, context);
          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            // Dispatch the exception by looping back around to the
            // context.dispatchException(context.arg) call above.
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];
      if (method === undefined) {
        // A .throw or .return when the delegate iterator has no .throw
        // method always terminates the yield* loop.
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator.return) {
            // If the delegate iterator has a return method, give it a
            // chance to clean up.
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              // If maybeInvokeDelegate(context) changed context.method from
              // "return" to "throw", let that override the TypeError below.
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        // Assign the result of the finished delegate to the temporary
        // variable specified by delegate.resultName (see delegateYield).
        context[delegate.resultName] = info.value;

        // Resume execution at the desired location (see delegateYield).
        context.next = delegate.nextLoc;

        // If context.method was "throw" but the delegate handled the
        // exception, let the outer generator proceed normally. If
        // context.method was "next", forget context.arg since it has been
        // "consumed" by the delegate iterator. If context.method was
        // "return", allow the original .return call to continue in the
        // outer generator.
        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        // Re-yield the result returned by the delegate method.
        return info;
      }

      // The delegate iterator is finished, so forget it and continue with
      // the outer generator.
      context.delegate = null;
      return ContinueSentinel;
    }

    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);

    Gp[toStringTagSymbol] = "Generator";

    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = { tryLoc: locs[0] };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{ tryLoc: "root" }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    runtime.keys = function (object) {
      var keys = [];
      for (var key in object) {
        keys.push(key);
      }
      keys.reverse();

      // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.
      return function next() {
        while (keys.length) {
          var key = keys.pop();
          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.
        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;

            return next;
          };

          return next.next = next;
        }
      }

      // Return an iterator with no values.
      return { next: doneResult };
    }
    runtime.values = values;

    function doneResult() {
      return { value: undefined, done: true };
    }

    Context.prototype = {
      constructor: Context,

      reset: function (skipTempReset) {
        this.prev = 0;
        this.next = 0;
        // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;

        this.method = "next";
        this.arg = undefined;

        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },

      stop: function () {
        this.done = true;

        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },

      dispatchException: function (exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },

      abrupt: function (type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },

      complete: function (record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },

      finish: function (finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },

      "catch": function (tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }

        // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.
        throw new Error("illegal catch attempt");
      },

      delegateYield: function (iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          // Deliberately forget the last sent value so that we don't
          // accidentally pass it on to the delegate.
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
  }(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  function () {
    return this;
  }() || Function("return this")());
});
$__System.registerDynamic("1fb", ["1fa"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var g = function () {
    return this;
  }() || Function("return this")();
  var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;
  var oldRuntime = hadRuntime && g.regeneratorRuntime;
  g.regeneratorRuntime = undefined;
  module.exports = $__require("1fa");
  if (hadRuntime) {
    g.regeneratorRuntime = oldRuntime;
  } else {
    try {
      delete g.regeneratorRuntime;
    } catch (e) {
      g.regeneratorRuntime = undefined;
    }
  }
});
$__System.registerDynamic("1fc", ["1fb"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("1fb");
});
$__System.registerDynamic("1fd", ["1fc"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require("1fc");
});
$__System.registerDynamic('1c0', ['1fd'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('1fd');
});
$__System.registerDynamic('1fe', ['1c7'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('1c7');
  module.exports = function (iterator, fn, value, entries) {
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    } catch (e) {
      var ret = iterator['return'];
      if (ret !== undefined) anObject(ret.call(iterator));
      throw e;
    }
  };
});
$__System.registerDynamic('1ff', ['1f6', '1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var Iterators = $__require('1f6');
  var ITERATOR = $__require('1e9')('iterator');
  var ArrayProto = Array.prototype;
  module.exports = function (it) {
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };
});
$__System.registerDynamic('200', ['1d8', '1de'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $defineProperty = $__require('1d8');
  var createDesc = $__require('1de');
  module.exports = function (object, index, value) {
    if (index in object) $defineProperty.f(object, index, createDesc(0, value));else object[index] = value;
  };
});
$__System.registerDynamic('201', ['1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var ITERATOR = $__require('1e9')('iterator');
  var SAFE_CLOSING = false;
  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function () {
      SAFE_CLOSING = true;
    };
    Array.from(riter, function () {
      throw 2;
    });
  } catch (e) {}
  module.exports = function (exec, skipClosing) {
    if (!skipClosing && !SAFE_CLOSING) return false;
    var safe = false;
    try {
      var arr = [7];
      var iter = arr[ITERATOR]();
      iter.next = function () {
        return { done: safe = true };
      };
      arr[ITERATOR] = function () {
        return iter;
      };
      exec(arr);
    } catch (e) {}
    return safe;
  };
});
$__System.registerDynamic('202', ['1c8', 'fc', '18d', '1fe', '1ff', '203', '200', '204', '201'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ctx = $__require('1c8');
  var $export = $__require('fc');
  var toObject = $__require('18d');
  var call = $__require('1fe');
  var isArrayIter = $__require('1ff');
  var toLength = $__require('203');
  var createProperty = $__require('200');
  var getIterFn = $__require('204');
  $export($export.S + $export.F * !$__require('201')(function (iter) {
    Array.from(iter);
  }), 'Array', { from: function from(arrayLike) {
      var O = toObject(arrayLike);
      var C = typeof this == 'function' ? this : Array;
      var aLen = arguments.length;
      var mapfn = aLen > 1 ? arguments[1] : undefined;
      var mapping = mapfn !== undefined;
      var index = 0;
      var iterFn = getIterFn(O);
      var length, result, step, iterator;
      if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
      if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
        for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
        }
      } else {
        length = toLength(O.length);
        for (result = new C(length); length > index; index++) {
          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
      }
      result.length = index;
      return result;
    } });
});
$__System.registerDynamic('205', ['1d1', '202', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1d1');
  $__require('202');
  module.exports = $__require('ff').Array.from;
});
$__System.registerDynamic("f7", ["205"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("205"), __esModule: true };
});
$__System.registerDynamic("1aa", ["f7"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _from = $__require("f7");
  var _from2 = _interopRequireDefault(_from);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function (arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    } else {
      return (0, _from2.default)(arr);
    }
  };
});
$__System.registerDynamic('1b5', ['fc', 'ff', '18f'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  var core = $__require('ff');
  var fails = $__require('18f');
  module.exports = function (KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function () {
      fn(1);
    }), 'Object', exp);
  };
});
$__System.registerDynamic('206', ['18d', '115', '1b5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toObject = $__require('18d');
  var $keys = $__require('115');
  $__require('1b5')('keys', function () {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });
});
$__System.registerDynamic('207', ['206', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('206');
  module.exports = $__require('ff').Object.keys;
});
$__System.registerDynamic("198", ["207"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("207"), __esModule: true };
});
$__System.registerDynamic("208", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function () {/* empty */};
});
$__System.registerDynamic("209", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };
});
$__System.registerDynamic('20a', ['208', '209', '1f6', '116', '20b'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var addToUnscopables = $__require('208');
  var step = $__require('209');
  var Iterators = $__require('1f6');
  var toIObject = $__require('116');
  module.exports = $__require('20b')(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated);
    this._i = 0;
    this._k = kind;
  }, function () {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');
  Iterators.Arguments = Iterators.Array;
  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');
});
$__System.registerDynamic('1d2', ['20a', '1e5', '1ec', '1f6', '1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('20a');
  var global = $__require('1e5');
  var hide = $__require('1ec');
  var Iterators = $__require('1f6');
  var TO_STRING_TAG = $__require('1e9')('toStringTag');
  var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');
  for (var i = 0; i < DOMIterables.length; i++) {
    var NAME = DOMIterables[i];
    var Collection = global[NAME];
    var proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }
});
$__System.registerDynamic('20c', ['20d', '20e'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('20d');
  var defined = $__require('20e');
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that));
      var i = toInteger(pos);
      var l = s.length;
      var a, b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };
});
$__System.registerDynamic("1eb", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = true;
});
$__System.registerDynamic('1e6', ['1ec'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = $__require('1ec');
});
$__System.registerDynamic('18e', ['1db'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('1db');
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };
});
$__System.registerDynamic('116', ['18e', '20e'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var IObject = $__require('18e');
  var defined = $__require('20e');
  module.exports = function (it) {
    return IObject(defined(it));
  };
});
$__System.registerDynamic('203', ['20d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('20d');
  var min = Math.min;
  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;
  };
});
$__System.registerDynamic("20d", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.1.4 ToInteger
  var ceil = Math.ceil;
  var floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };
});
$__System.registerDynamic('20f', ['20d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toInteger = $__require('20d');
  var max = Math.max;
  var min = Math.min;
  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };
});
$__System.registerDynamic('210', ['116', '203', '20f'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toIObject = $__require('116');
  var toLength = $__require('203');
  var toAbsoluteIndex = $__require('20f');
  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this);
      var length = toLength(O.length);
      var index = toAbsoluteIndex(fromIndex, length);
      var value;
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        if (value != value) return true;
      } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
        if (O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
});
$__System.registerDynamic('1e2', ['1d7', '116', '210', '211'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var has = $__require('1d7');
  var toIObject = $__require('116');
  var arrayIndexOf = $__require('210')(false);
  var IE_PROTO = $__require('211')('IE_PROTO');
  module.exports = function (object, names) {
    var O = toIObject(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
    while (names.length > i) if (has(O, key = names[i++])) {
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };
});
$__System.registerDynamic('115', ['1e2', '1e3'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $keys = $__require('1e2');
  var enumBugKeys = $__require('1e3');
  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };
});
$__System.registerDynamic('212', ['1d8', '1c7', '115', '1e1'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var dP = $__require('1d8');
  var anObject = $__require('1c7');
  var getKeys = $__require('115');
  module.exports = $__require('1e1') ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties);
    var length = keys.length;
    var i = 0;
    var P;
    while (length > i) dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };
});
$__System.registerDynamic('1e3', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // IE 8- don't enum bug keys
  module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');
});
$__System.registerDynamic('213', ['1e5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var document = $__require('1e5').document;
  module.exports = document && document.documentElement;
});
$__System.registerDynamic('1cd', ['1c7', '212', '1e3', '211', '214', '213'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('1c7');
  var dPs = $__require('212');
  var enumBugKeys = $__require('1e3');
  var IE_PROTO = $__require('211')('IE_PROTO');
  var Empty = function () {};
  var PROTOTYPE = 'prototype';
  var createDict = function () {
    var iframe = $__require('214')('iframe');
    var i = enumBugKeys.length;
    var lt = '<';
    var gt = '>';
    var iframeDocument;
    iframe.style.display = 'none';
    $__require('213').appendChild(iframe);
    iframe.src = 'javascript:';
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };
  module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty();
      Empty[PROTOTYPE] = null;
      result[IE_PROTO] = O;
    } else result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };
});
$__System.registerDynamic('215', ['1cd', '1de', '1e8', '1ec', '1e9'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var create = $__require('1cd');
  var descriptor = $__require('1de');
  var setToStringTag = $__require('1e8');
  var IteratorPrototype = {};
  $__require('1ec')(IteratorPrototype, $__require('1e9')('iterator'), function () {
    return this;
  });
  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };
});
$__System.registerDynamic('1e8', ['1d8', '1d7', '1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var def = $__require('1d8').f;
  var has = $__require('1d7');
  var TAG = $__require('1e9')('toStringTag');
  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {
      configurable: true,
      value: tag
    });
  };
});
$__System.registerDynamic("1d7", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };
});
$__System.registerDynamic("20e", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };
});
$__System.registerDynamic('18d', ['20e'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var defined = $__require('20e');
  module.exports = function (it) {
    return Object(defined(it));
  };
});
$__System.registerDynamic('211', ['1e7', '1d6'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var shared = $__require('1e7')('keys');
  var uid = $__require('1d6');
  module.exports = function (key) {
    return shared[key] || (shared[key] = uid(key));
  };
});
$__System.registerDynamic('1c4', ['1d7', '18d', '211'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var has = $__require('1d7');
  var toObject = $__require('18d');
  var IE_PROTO = $__require('211')('IE_PROTO');
  var ObjectProto = Object.prototype;
  module.exports = Object.getPrototypeOf || function (O) {
    O = toObject(O);
    if (has(O, IE_PROTO)) return O[IE_PROTO];
    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }
    return O instanceof Object ? ObjectProto : null;
  };
});
$__System.registerDynamic('20b', ['1eb', 'fc', '1e6', '1ec', '1d7', '1f6', '215', '1e8', '1c4', '1e9'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var LIBRARY = $__require('1eb');
  var $export = $__require('fc');
  var redefine = $__require('1e6');
  var hide = $__require('1ec');
  var has = $__require('1d7');
  var Iterators = $__require('1f6');
  var $iterCreate = $__require('215');
  var setToStringTag = $__require('1e8');
  var getPrototypeOf = $__require('1c4');
  var ITERATOR = $__require('1e9')('iterator');
  var BUGGY = !([].keys && 'next' in [].keys());
  var FF_ITERATOR = '@@iterator';
  var KEYS = 'keys';
  var VALUES = 'values';
  var returnThis = function () {
    return this;
  };
  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function (kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }
      return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator';
    var DEF_VALUES = DEFAULT == VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype;
    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
        setToStringTag(IteratorPrototype, TAG, true);
        if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;
      $default = function values() {
        return $native.call(this);
      };
    }
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };
});
$__System.registerDynamic('1d1', ['20c', '20b'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var $at = $__require('20c')(true);
  $__require('20b')(String, 'String', function (iterated) {
    this._t = String(iterated);
    this._i = 0;
  }, function () {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return {
      value: undefined,
      done: true
    };
    point = $at(O, index);
    this._i += point.length;
    return {
      value: point,
      done: false
    };
  });
});
$__System.registerDynamic("1db", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };
});
$__System.registerDynamic('1f5', ['1db', '1e9'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var cof = $__require('1db');
  var TAG = $__require('1e9')('toStringTag');
  var ARG = cof(function () {
    return arguments;
  }()) == 'Arguments';
  var tryGet = function (it, key) {
    try {
      return it[key];
    } catch (e) {}
  };
  module.exports = function (it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };
});
$__System.registerDynamic('1e7', ['1e5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('1e5');
  var SHARED = '__core-js_shared__';
  var store = global[SHARED] || (global[SHARED] = {});
  module.exports = function (key) {
    return store[key] || (store[key] = {});
  };
});
$__System.registerDynamic('1d6', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var id = 0;
  var px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };
});
$__System.registerDynamic('1e9', ['1e7', '1d6', '1e5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var store = $__require('1e7')('wks');
  var uid = $__require('1d6');
  var Symbol = $__require('1e5').Symbol;
  var USE_SYMBOL = typeof Symbol == 'function';
  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };
  $exports.store = store;
});
$__System.registerDynamic("1f6", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = {};
});
$__System.registerDynamic('204', ['1f5', '1e9', '1f6', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var classof = $__require('1f5');
  var ITERATOR = $__require('1e9')('iterator');
  var Iterators = $__require('1f6');
  module.exports = $__require('ff').getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };
});
$__System.registerDynamic('216', ['1c7', '204', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('1c7');
  var get = $__require('204');
  module.exports = $__require('ff').getIterator = function (it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };
});
$__System.registerDynamic('217', ['1d2', '1d1', '216'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('1d2');
  $__require('1d1');
  module.exports = $__require('216');
});
$__System.registerDynamic("1ae", ["217"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("217"), __esModule: true };
});
$__System.registerDynamic('218', ['ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var core = $__require('ff');
  var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
  module.exports = function stringify(it) {
    return $JSON.stringify.apply($JSON, arguments);
  };
});
$__System.registerDynamic("1a9", ["218"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("218"), __esModule: true };
});
$__System.registerDynamic('219', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };
});
$__System.registerDynamic('1c8', ['219'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var aFunction = $__require('219');
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () {
      return fn.apply(that, arguments);
    };
  };
});
$__System.registerDynamic("1de", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
});
$__System.registerDynamic('1ec', ['1d8', '1de', '1e1'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var dP = $__require('1d8');
  var createDesc = $__require('1de');
  module.exports = $__require('1e1') ? function (object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
});
$__System.registerDynamic('fc', ['1e5', 'ff', '1c8', '1ec'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var global = $__require('1e5');
  var core = $__require('ff');
  var ctx = $__require('1c8');
  var hide = $__require('1ec');
  var PROTOTYPE = 'prototype';
  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && key in exports) continue;
      out = own ? target[key] : source[key];
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] : IS_BIND && own ? ctx(out, global) : IS_WRAP && target[key] == out ? function (C) {
        var F = function (a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C();
              case 1:
                return new C(a);
              case 2:
                return new C(a, b);
            }
            return new C(a, b, c);
          }
          return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
      }
    }
  };
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  $export.U = 64;
  $export.R = 128;
  module.exports = $export;
});
$__System.registerDynamic('1c7', ['19d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('19d');
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };
});
$__System.registerDynamic('1e5', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});
$__System.registerDynamic('214', ['19d', '1e5'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('19d');
  var document = $__require('1e5').document;
  var is = isObject(document) && isObject(document.createElement);
  module.exports = function (it) {
    return is ? document.createElement(it) : {};
  };
});
$__System.registerDynamic('1e0', ['1e1', '18f', '214'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = !$__require('1e1') && !$__require('18f')(function () {
    return Object.defineProperty($__require('214')('div'), 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
$__System.registerDynamic('19d', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };
});
$__System.registerDynamic('1df', ['19d'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var isObject = $__require('19d');
  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };
});
$__System.registerDynamic("18f", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };
});
$__System.registerDynamic('1e1', ['18f'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = !$__require('18f')(function () {
    return Object.defineProperty({}, 'a', { get: function () {
        return 7;
      } }).a != 7;
  });
});
$__System.registerDynamic('1d8', ['1c7', '1e0', '1df', '1e1'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var anObject = $__require('1c7');
  var IE8_DOM_DEFINE = $__require('1e0');
  var toPrimitive = $__require('1df');
  var dP = Object.defineProperty;
  exports.f = $__require('1e1') ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE) try {
      return dP(O, P, Attributes);
    } catch (e) {}
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
});
$__System.registerDynamic('21a', ['fc', '1e1', '1d8'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var $export = $__require('fc');
  $export($export.S + $export.F * !$__require('1e1'), 'Object', { defineProperty: $__require('1d8').f });
});
$__System.registerDynamic('ff', [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  var core = module.exports = { version: '2.5.1' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
$__System.registerDynamic('21b', ['21a', 'ff'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  $__require('21a');
  var $Object = $__require('ff').Object;
  module.exports = function defineProperty(it, key, desc) {
    return $Object.defineProperty(it, key, desc);
  };
});
$__System.registerDynamic("21c", ["21b"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = { "default": $__require("21b"), __esModule: true };
});
$__System.registerDynamic("19a", ["21c"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;
  var _defineProperty = $__require("21c");
  var _defineProperty2 = _interopRequireDefault(_defineProperty);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.default = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
});
(function() {
var define = $__System.amdDefine;
"format amd";
;
(function(global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define("21d", [], factory) : global.moment = factory();
}(this, (function() {
  'use strict';
  var hookCallback;
  function hooks() {
    return hookCallback.apply(null, arguments);
  }
  function setHookCallback(callback) {
    hookCallback = callback;
  }
  function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
  }
  function isObject(input) {
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
  }
  function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
      return (Object.getOwnPropertyNames(obj).length === 0);
    } else {
      var k;
      for (k in obj) {
        if (obj.hasOwnProperty(k)) {
          return false;
        }
      }
      return true;
    }
  }
  function isUndefined(input) {
    return input === void 0;
  }
  function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
  }
  function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
  }
  function map(arr, fn) {
    var res = [],
        i;
    for (i = 0; i < arr.length; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }
  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }
  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }
    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }
    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }
    return a;
  }
  function createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
  }
  function defaultParsingFlags() {
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false,
      parsedDateParts: [],
      meridiem: null,
      rfc2822: false,
      weekdayMismatch: false
    };
  }
  function getParsingFlags(m) {
    if (m._pf == null) {
      m._pf = defaultParsingFlags();
    }
    return m._pf;
  }
  var some;
  if (Array.prototype.some) {
    some = Array.prototype.some;
  } else {
    some = function(fun) {
      var t = Object(this);
      var len = t.length >>> 0;
      for (var i = 0; i < len; i++) {
        if (i in t && fun.call(this, t[i], i, t)) {
          return true;
        }
      }
      return false;
    };
  }
  function isValid(m) {
    if (m._isValid == null) {
      var flags = getParsingFlags(m);
      var parsedParts = some.call(flags.parsedDateParts, function(i) {
        return i != null;
      });
      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || (flags.meridiem && parsedParts));
      if (m._strict) {
        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
      }
      if (Object.isFrozen == null || !Object.isFrozen(m)) {
        m._isValid = isNowValid;
      } else {
        return isNowValid;
      }
    }
    return m._isValid;
  }
  function createInvalid(flags) {
    var m = createUTC(NaN);
    if (flags != null) {
      extend(getParsingFlags(m), flags);
    } else {
      getParsingFlags(m).userInvalidated = true;
    }
    return m;
  }
  var momentProperties = hooks.momentProperties = [];
  function copyConfig(to, from) {
    var i,
        prop,
        val;
    if (!isUndefined(from._isAMomentObject)) {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
      to._i = from._i;
    }
    if (!isUndefined(from._f)) {
      to._f = from._f;
    }
    if (!isUndefined(from._l)) {
      to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
      to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
      to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
      to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
      to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
      to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
      to._locale = from._locale;
    }
    if (momentProperties.length > 0) {
      for (i = 0; i < momentProperties.length; i++) {
        prop = momentProperties[i];
        val = from[prop];
        if (!isUndefined(val)) {
          to[prop] = val;
        }
      }
    }
    return to;
  }
  var updateInProgress = false;
  function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
      this._d = new Date(NaN);
    }
    if (updateInProgress === false) {
      updateInProgress = true;
      hooks.updateOffset(this);
      updateInProgress = false;
    }
  }
  function isMoment(obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
  }
  function absFloor(number) {
    if (number < 0) {
      return Math.ceil(number) || 0;
    } else {
      return Math.floor(number);
    }
  }
  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;
    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      value = absFloor(coercedNumber);
    }
    return value;
  }
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
      if ((dontConvert && array1[i] !== array2[i]) || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }
  function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false && (typeof console !== 'undefined') && console.warn) {
      console.warn('Deprecation warning: ' + msg);
    }
  }
  function deprecate(msg, fn) {
    var firstTime = true;
    return extend(function() {
      if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(null, msg);
      }
      if (firstTime) {
        var args = [];
        var arg;
        for (var i = 0; i < arguments.length; i++) {
          arg = '';
          if (typeof arguments[i] === 'object') {
            arg += '\n[' + i + '] ';
            for (var key in arguments[0]) {
              arg += key + ': ' + arguments[0][key] + ', ';
            }
            arg = arg.slice(0, -2);
          } else {
            arg = arguments[i];
          }
          args.push(arg);
        }
        warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }
  var deprecations = {};
  function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
      warn(msg);
      deprecations[name] = true;
    }
  }
  hooks.suppressDeprecationWarnings = false;
  hooks.deprecationHandler = null;
  function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
  }
  function set(config) {
    var prop,
        i;
    for (i in config) {
      prop = config[i];
      if (isFunction(prop)) {
        this[i] = prop;
      } else {
        this['_' + i] = prop;
      }
    }
    this._config = config;
    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + (/\d{1,2}/).source);
  }
  function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig),
        prop;
    for (prop in childConfig) {
      if (hasOwnProp(childConfig, prop)) {
        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
          res[prop] = {};
          extend(res[prop], parentConfig[prop]);
          extend(res[prop], childConfig[prop]);
        } else if (childConfig[prop] != null) {
          res[prop] = childConfig[prop];
        } else {
          delete res[prop];
        }
      }
    }
    for (prop in parentConfig) {
      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
        res[prop] = extend({}, res[prop]);
      }
    }
    return res;
  }
  function Locale(config) {
    if (config != null) {
      this.set(config);
    }
  }
  var keys;
  if (Object.keys) {
    keys = Object.keys;
  } else {
    keys = function(obj) {
      var i,
          res = [];
      for (i in obj) {
        if (hasOwnProp(obj, i)) {
          res.push(i);
        }
      }
      return res;
    };
  }
  var defaultCalendar = {
    sameDay: '[Today at] LT',
    nextDay: '[Tomorrow at] LT',
    nextWeek: 'dddd [at] LT',
    lastDay: '[Yesterday at] LT',
    lastWeek: '[Last] dddd [at] LT',
    sameElse: 'L'
  };
  function calendar(key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
  }
  var defaultLongDateFormat = {
    LTS: 'h:mm:ss A',
    LT: 'h:mm A',
    L: 'MM/DD/YYYY',
    LL: 'MMMM D, YYYY',
    LLL: 'MMMM D, YYYY h:mm A',
    LLLL: 'dddd, MMMM D, YYYY h:mm A'
  };
  function longDateFormat(key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];
    if (format || !formatUpper) {
      return format;
    }
    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val) {
      return val.slice(1);
    });
    return this._longDateFormat[key];
  }
  var defaultInvalidDate = 'Invalid date';
  function invalidDate() {
    return this._invalidDate;
  }
  var defaultOrdinal = '%d';
  var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
  function ordinal(number) {
    return this._ordinal.replace('%d', number);
  }
  var defaultRelativeTime = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    ss: '%d seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years'
  };
  function relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
  }
  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
  }
  var aliases = {};
  function addUnitAlias(unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }
  function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
  }
  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;
    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }
    return normalizedInput;
  }
  var priorities = {};
  function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
  }
  function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
      units.push({
        unit: u,
        priority: priorities[u]
      });
    }
    units.sort(function(a, b) {
      return a.priority - b.priority;
    });
    return units;
  }
  function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
  }
  var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
  var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
  var formatFunctions = {};
  var formatTokenFunctions = {};
  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
      func = function() {
        return this[callback]();
      };
    }
    if (token) {
      formatTokenFunctions[token] = func;
    }
    if (padded) {
      formatTokenFunctions[padded[0]] = function() {
        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
      };
    }
    if (ordinal) {
      formatTokenFunctions[ordinal] = function() {
        return this.localeData().ordinal(func.apply(this, arguments), token);
      };
    }
  }
  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }
  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
        i,
        length;
    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }
    return function(mom) {
      var output = '',
          i;
      for (i = 0; i < length; i++) {
        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }
    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
    return formatFunctions[format](m);
  }
  function expandFormat(format, locale) {
    var i = 5;
    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }
    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }
    return format;
  }
  var match1 = /\d/;
  var match2 = /\d\d/;
  var match3 = /\d{3}/;
  var match4 = /\d{4}/;
  var match6 = /[+-]?\d{6}/;
  var match1to2 = /\d\d?/;
  var match3to4 = /\d\d\d\d?/;
  var match5to6 = /\d\d\d\d\d\d?/;
  var match1to3 = /\d{1,3}/;
  var match1to4 = /\d{1,4}/;
  var match1to6 = /[+-]?\d{1,6}/;
  var matchUnsigned = /\d+/;
  var matchSigned = /[+-]?\d+/;
  var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
  var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
  var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
  var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
  var regexes = {};
  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {
      return (isStrict && strictRegex) ? strictRegex : regex;
    };
  }
  function getParseRegexForToken(token, config) {
    if (!hasOwnProp(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }
    return regexes[token](config._strict, config._locale);
  }
  function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    }));
  }
  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }
  var tokens = {};
  function addParseToken(token, callback) {
    var i,
        func = callback;
    if (typeof token === 'string') {
      token = [token];
    }
    if (isNumber(callback)) {
      func = function(input, array) {
        array[callback] = toInt(input);
      };
    }
    for (i = 0; i < token.length; i++) {
      tokens[token[i]] = func;
    }
  }
  function addWeekParseToken(token, callback) {
    addParseToken(token, function(input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }
  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }
  var YEAR = 0;
  var MONTH = 1;
  var DATE = 2;
  var HOUR = 3;
  var MINUTE = 4;
  var SECOND = 5;
  var MILLISECOND = 6;
  var WEEK = 7;
  var WEEKDAY = 8;
  addFormatToken('Y', 0, 0, function() {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
  });
  addFormatToken(0, ['YY', 2], 0, function() {
    return this.year() % 100;
  });
  addFormatToken(0, ['YYYY', 4], 0, 'year');
  addFormatToken(0, ['YYYYY', 5], 0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
  addUnitAlias('year', 'y');
  addUnitPriority('year', 1);
  addRegexToken('Y', matchSigned);
  addRegexToken('YY', match1to2, match2);
  addRegexToken('YYYY', match1to4, match4);
  addRegexToken('YYYYY', match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);
  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function(input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function(input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
  });
  addParseToken('Y', function(input, array) {
    array[YEAR] = parseInt(input, 10);
  });
  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }
  function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
  }
  hooks.parseTwoDigitYear = function(input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };
  var getSetYear = makeGetSet('FullYear', true);
  function getIsLeapYear() {
    return isLeapYear(this.year());
  }
  function makeGetSet(unit, keepTime) {
    return function(value) {
      if (value != null) {
        set$1(this, unit, value);
        hooks.updateOffset(this, keepTime);
        return this;
      } else {
        return get(this, unit);
      }
    };
  }
  function get(mom, unit) {
    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
  }
  function set$1(mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
      } else {
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
      }
    }
  }
  function stringGet(units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units]();
    }
    return this;
  }
  function stringSet(units, value) {
    if (typeof units === 'object') {
      units = normalizeObjectUnits(units);
      var prioritized = getPrioritizedUnits(units);
      for (var i = 0; i < prioritized.length; i++) {
        this[prioritized[i].unit](units[prioritized[i].unit]);
      }
    } else {
      units = normalizeUnits(units);
      if (isFunction(this[units])) {
        return this[units](value);
      }
    }
    return this;
  }
  function mod(n, x) {
    return ((n % x) + x) % x;
  }
  var indexOf;
  if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
  } else {
    indexOf = function(o) {
      var i;
      for (i = 0; i < this.length; ++i) {
        if (this[i] === o) {
          return i;
        }
      }
      return -1;
    };
  }
  function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
      return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
  }
  addFormatToken('M', ['MM', 2], 'Mo', function() {
    return this.month() + 1;
  });
  addFormatToken('MMM', 0, 0, function(format) {
    return this.localeData().monthsShort(this, format);
  });
  addFormatToken('MMMM', 0, 0, function(format) {
    return this.localeData().months(this, format);
  });
  addUnitAlias('month', 'M');
  addUnitPriority('month', 8);
  addRegexToken('M', match1to2);
  addRegexToken('MM', match1to2, match2);
  addRegexToken('MMM', function(isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
  });
  addRegexToken('MMMM', function(isStrict, locale) {
    return locale.monthsRegex(isStrict);
  });
  addParseToken(['M', 'MM'], function(input, array) {
    array[MONTH] = toInt(input) - 1;
  });
  addParseToken(['MMM', 'MMMM'], function(input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    if (month != null) {
      array[MONTH] = month;
    } else {
      getParsingFlags(config).invalidMonth = input;
    }
  });
  var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
  function localeMonths(m, format) {
    if (!m) {
      return isArray(this._months) ? this._months : this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
  }
  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
  function localeMonthsShort(m, format) {
    if (!m) {
      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
  }
  function handleStrictParse(monthName, format, strict) {
    var i,
        ii,
        mom,
        llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
      for (i = 0; i < 12; ++i) {
        mom = createUTC([2000, i]);
        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
      }
    }
    if (strict) {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'MMM') {
        ii = indexOf.call(this._shortMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._longMonthsParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._longMonthsParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortMonthsParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }
  function localeMonthsParse(monthName, format, strict) {
    var i,
        mom,
        regex;
    if (this._monthsParseExact) {
      return handleStrictParse.call(this, monthName, format, strict);
    }
    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
    }
    for (i = 0; i < 12; i++) {
      mom = createUTC([2000, i]);
      if (strict && !this._longMonthsParse[i]) {
        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
      }
      if (!strict && !this._monthsParse[i]) {
        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
        return i;
      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
        return i;
      } else if (!strict && this._monthsParse[i].test(monthName)) {
        return i;
      }
    }
  }
  function setMonth(mom, value) {
    var dayOfMonth;
    if (!mom.isValid()) {
      return mom;
    }
    if (typeof value === 'string') {
      if (/^\d+$/.test(value)) {
        value = toInt(value);
      } else {
        value = mom.localeData().monthsParse(value);
        if (!isNumber(value)) {
          return mom;
        }
      }
    }
    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }
  function getSetMonth(value) {
    if (value != null) {
      setMonth(this, value);
      hooks.updateOffset(this, true);
      return this;
    } else {
      return get(this, 'Month');
    }
  }
  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month());
  }
  var defaultMonthsShortRegex = matchWord;
  function monthsShortRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsShortStrictRegex;
      } else {
        return this._monthsShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsShortRegex')) {
        this._monthsShortRegex = defaultMonthsShortRegex;
      }
      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
    }
  }
  var defaultMonthsRegex = matchWord;
  function monthsRegex(isStrict) {
    if (this._monthsParseExact) {
      if (!hasOwnProp(this, '_monthsRegex')) {
        computeMonthsParse.call(this);
      }
      if (isStrict) {
        return this._monthsStrictRegex;
      } else {
        return this._monthsRegex;
      }
    } else {
      if (!hasOwnProp(this, '_monthsRegex')) {
        this._monthsRegex = defaultMonthsRegex;
      }
      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
    }
  }
  function computeMonthsParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }
    var shortPieces = [],
        longPieces = [],
        mixedPieces = [],
        i,
        mom;
    for (i = 0; i < 12; i++) {
      mom = createUTC([2000, i]);
      shortPieces.push(this.monthsShort(mom, ''));
      longPieces.push(this.months(mom, ''));
      mixedPieces.push(this.months(mom, ''));
      mixedPieces.push(this.monthsShort(mom, ''));
    }
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }
    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
  }
  function createDate(y, m, d, h, M, s, ms) {
    var date = new Date(y, m, d, h, M, s, ms);
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
      date.setFullYear(y);
    }
    return date;
  }
  function createUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y);
    }
    return date;
  }
  function firstWeekOffset(year, dow, doy) {
    var fwd = 7 + dow - doy,
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
    return -fwdlw + fwd - 1;
  }
  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear,
        resDayOfYear;
    if (dayOfYear <= 0) {
      resYear = year - 1;
      resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
      resYear = year + 1;
      resDayOfYear = dayOfYear - daysInYear(year);
    } else {
      resYear = year;
      resDayOfYear = dayOfYear;
    }
    return {
      year: resYear,
      dayOfYear: resDayOfYear
    };
  }
  function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek,
        resYear;
    if (week < 1) {
      resYear = mom.year() - 1;
      resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
      resWeek = week - weeksInYear(mom.year(), dow, doy);
      resYear = mom.year() + 1;
    } else {
      resYear = mom.year();
      resWeek = week;
    }
    return {
      week: resWeek,
      year: resYear
    };
  }
  function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
  }
  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');
  addUnitPriority('week', 5);
  addUnitPriority('isoWeek', 5);
  addRegexToken('w', match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W', match1to2);
  addRegexToken('WW', match1to2, match2);
  addWeekParseToken(['w', 'ww', 'W', 'WW'], function(input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
  });
  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }
  var defaultLocaleWeek = {
    dow: 0,
    doy: 6
  };
  function localeFirstDayOfWeek() {
    return this._week.dow;
  }
  function localeFirstDayOfYear() {
    return this._week.doy;
  }
  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
  }
  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
  }
  addFormatToken('d', 0, 'do', 'day');
  addFormatToken('dd', 0, 0, function(format) {
    return this.localeData().weekdaysMin(this, format);
  });
  addFormatToken('ddd', 0, 0, function(format) {
    return this.localeData().weekdaysShort(this, format);
  });
  addFormatToken('dddd', 0, 0, function(format) {
    return this.localeData().weekdays(this, format);
  });
  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');
  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');
  addUnitPriority('day', 11);
  addUnitPriority('weekday', 11);
  addUnitPriority('isoWeekday', 11);
  addRegexToken('d', match1to2);
  addRegexToken('e', match1to2);
  addRegexToken('E', match1to2);
  addRegexToken('dd', function(isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
  });
  addRegexToken('ddd', function(isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
  });
  addRegexToken('dddd', function(isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
  });
  addWeekParseToken(['dd', 'ddd', 'dddd'], function(input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    if (weekday != null) {
      week.d = weekday;
    } else {
      getParsingFlags(config).invalidWeekday = input;
    }
  });
  addWeekParseToken(['d', 'e', 'E'], function(input, week, config, token) {
    week[token] = toInt(input);
  });
  function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
      return input;
    }
    if (!isNaN(input)) {
      return parseInt(input, 10);
    }
    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
      return input;
    }
    return null;
  }
  function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
      return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
  }
  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
  function localeWeekdays(m, format) {
    if (!m) {
      return isArray(this._weekdays) ? this._weekdays : this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] : this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
  }
  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
  function localeWeekdaysShort(m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
  }
  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
  function localeWeekdaysMin(m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
  }
  function handleStrictParse$1(weekdayName, format, strict) {
    var i,
        ii,
        mom,
        llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._minWeekdaysParse = [];
      for (i = 0; i < 7; ++i) {
        mom = createUTC([2000, 1]).day(i);
        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
      }
    }
    if (strict) {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    } else {
      if (format === 'dddd') {
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else if (format === 'ddd') {
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._minWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      } else {
        ii = indexOf.call(this._minWeekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._weekdaysParse, llc);
        if (ii !== -1) {
          return ii;
        }
        ii = indexOf.call(this._shortWeekdaysParse, llc);
        return ii !== -1 ? ii : null;
      }
    }
  }
  function localeWeekdaysParse(weekdayName, format, strict) {
    var i,
        mom,
        regex;
    if (this._weekdaysParseExact) {
      return handleStrictParse$1.call(this, weekdayName, format, strict);
    }
    if (!this._weekdaysParse) {
      this._weekdaysParse = [];
      this._minWeekdaysParse = [];
      this._shortWeekdaysParse = [];
      this._fullWeekdaysParse = [];
    }
    for (i = 0; i < 7; i++) {
      mom = createUTC([2000, 1]).day(i);
      if (strict && !this._fullWeekdaysParse[i]) {
        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
      }
      if (!this._weekdaysParse[i]) {
        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
        return i;
      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
        return i;
      }
    }
  }
  function getSetDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
      input = parseWeekday(input, this.localeData());
      return this.add(input - day, 'd');
    } else {
      return day;
    }
  }
  function getSetLocaleDayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
  }
  function getSetISODayOfWeek(input) {
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      var weekday = parseIsoWeekday(input, this.localeData());
      return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
      return this.day() || 7;
    }
  }
  var defaultWeekdaysRegex = matchWord;
  function weekdaysRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysStrictRegex;
      } else {
        return this._weekdaysRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        this._weekdaysRegex = defaultWeekdaysRegex;
      }
      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
    }
  }
  var defaultWeekdaysShortRegex = matchWord;
  function weekdaysShortRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysShortStrictRegex;
      } else {
        return this._weekdaysShortRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysShortRegex')) {
        this._weekdaysShortRegex = defaultWeekdaysShortRegex;
      }
      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
  }
  var defaultWeekdaysMinRegex = matchWord;
  function weekdaysMinRegex(isStrict) {
    if (this._weekdaysParseExact) {
      if (!hasOwnProp(this, '_weekdaysRegex')) {
        computeWeekdaysParse.call(this);
      }
      if (isStrict) {
        return this._weekdaysMinStrictRegex;
      } else {
        return this._weekdaysMinRegex;
      }
    } else {
      if (!hasOwnProp(this, '_weekdaysMinRegex')) {
        this._weekdaysMinRegex = defaultWeekdaysMinRegex;
      }
      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
  }
  function computeWeekdaysParse() {
    function cmpLenRev(a, b) {
      return b.length - a.length;
    }
    var minPieces = [],
        shortPieces = [],
        longPieces = [],
        mixedPieces = [],
        i,
        mom,
        minp,
        shortp,
        longp;
    for (i = 0; i < 7; i++) {
      mom = createUTC([2000, 1]).day(i);
      minp = this.weekdaysMin(mom, '');
      shortp = this.weekdaysShort(mom, '');
      longp = this.weekdays(mom, '');
      minPieces.push(minp);
      shortPieces.push(shortp);
      longPieces.push(longp);
      mixedPieces.push(minp);
      mixedPieces.push(shortp);
      mixedPieces.push(longp);
    }
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
      shortPieces[i] = regexEscape(shortPieces[i]);
      longPieces[i] = regexEscape(longPieces[i]);
      mixedPieces[i] = regexEscape(mixedPieces[i]);
    }
    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;
    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
  }
  function hFormat() {
    return this.hours() % 12 || 12;
  }
  function kFormat() {
    return this.hours() || 24;
  }
  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, hFormat);
  addFormatToken('k', ['kk', 2], 0, kFormat);
  addFormatToken('hmm', 0, 0, function() {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
  });
  addFormatToken('hmmss', 0, 0, function() {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
  });
  addFormatToken('Hmm', 0, 0, function() {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
  });
  addFormatToken('Hmmss', 0, 0, function() {
    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
  });
  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function() {
      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
  }
  meridiem('a', true);
  meridiem('A', false);
  addUnitAlias('hour', 'h');
  addUnitPriority('hour', 13);
  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse;
  }
  addRegexToken('a', matchMeridiem);
  addRegexToken('A', matchMeridiem);
  addRegexToken('H', match1to2);
  addRegexToken('h', match1to2);
  addRegexToken('k', match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);
  addRegexToken('kk', match1to2, match2);
  addRegexToken('hmm', match3to4);
  addRegexToken('hmmss', match5to6);
  addRegexToken('Hmm', match3to4);
  addRegexToken('Hmmss', match5to6);
  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['k', 'kk'], function(input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
  });
  addParseToken(['a', 'A'], function(input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function(input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmm', function(input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmmss', function(input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
  });
  addParseToken('Hmm', function(input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
  });
  addParseToken('Hmmss', function(input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
  });
  function localeIsPM(input) {
    return ((input + '').toLowerCase().charAt(0) === 'p');
  }
  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
  function localeMeridiem(hours, minutes, isLower) {
    if (hours > 11) {
      return isLower ? 'pm' : 'PM';
    } else {
      return isLower ? 'am' : 'AM';
    }
  }
  var getSetHour = makeGetSet('Hours', true);
  var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,
    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,
    week: defaultLocaleWeek,
    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,
    meridiemParse: defaultLocaleMeridiemParse
  };
  var locales = {};
  var localeFamilies = {};
  var globalLocale;
  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }
  function chooseLocale(names) {
    var i = 0,
        j,
        next,
        locale,
        split;
    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
          break;
        }
        j--;
      }
      i++;
    }
    return null;
  }
  function loadLocale(name) {
    var oldLocale = null;
    if (!locales[name] && (typeof module !== 'undefined') && module && module.exports) {
      try {
        oldLocale = globalLocale._abbr;
        var aliasedRequire = require;
        aliasedRequire('./locale/' + name);
        getSetGlobalLocale(oldLocale);
      } catch (e) {}
    }
    return locales[name];
  }
  function getSetGlobalLocale(key, values) {
    var data;
    if (key) {
      if (isUndefined(values)) {
        data = getLocale(key);
      } else {
        data = defineLocale(key, values);
      }
      if (data) {
        globalLocale = data;
      }
    }
    return globalLocale._abbr;
  }
  function defineLocale(name, config) {
    if (config !== null) {
      var parentConfig = baseConfig;
      config.abbr = name;
      if (locales[name] != null) {
        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
        parentConfig = locales[name]._config;
      } else if (config.parentLocale != null) {
        if (locales[config.parentLocale] != null) {
          parentConfig = locales[config.parentLocale]._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name: name,
            config: config
          });
          return null;
        }
      }
      locales[name] = new Locale(mergeConfigs(parentConfig, config));
      if (localeFamilies[name]) {
        localeFamilies[name].forEach(function(x) {
          defineLocale(x.name, x.config);
        });
      }
      getSetGlobalLocale(name);
      return locales[name];
    } else {
      delete locales[name];
      return null;
    }
  }
  function updateLocale(name, config) {
    if (config != null) {
      var locale,
          tmpLocale,
          parentConfig = baseConfig;
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config = mergeConfigs(parentConfig, config);
      locale = new Locale(config);
      locale.parentLocale = locales[name];
      locales[name] = locale;
      getSetGlobalLocale(name);
    } else {
      if (locales[name] != null) {
        if (locales[name].parentLocale != null) {
          locales[name] = locales[name].parentLocale;
        } else if (locales[name] != null) {
          delete locales[name];
        }
      }
    }
    return locales[name];
  }
  function getLocale(key) {
    var locale;
    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }
    if (!key) {
      return globalLocale;
    }
    if (!isArray(key)) {
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }
    return chooseLocale(key);
  }
  function listLocales() {
    return keys(locales);
  }
  function checkOverflow(m) {
    var overflow;
    var a = m._a;
    if (a && getParsingFlags(m).overflow === -2) {
      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;
      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
        overflow = DATE;
      }
      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
        overflow = WEEK;
      }
      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
        overflow = WEEKDAY;
      }
      getParsingFlags(m).overflow = overflow;
    }
    return m;
  }
  function defaults(a, b, c) {
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return c;
  }
  function currentDateArray(config) {
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
  }
  function configFromArray(config) {
    var i,
        date,
        input = [],
        currentDate,
        yearToUse;
    if (config._d) {
      return;
    }
    currentDate = currentDateArray(config);
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }
    if (config._dayOfYear != null) {
      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
        getParsingFlags(config)._overflowDayOfYear = true;
      }
      date = createUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }
    for (; i < 7; i++) {
      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }
    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }
    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }
    if (config._nextDay) {
      config._a[HOUR] = 24;
    }
    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== config._d.getDay()) {
      getParsingFlags(config).weekdayMismatch = true;
    }
  }
  function dayOfYearFromWeekInfo(config) {
    var w,
        weekYear,
        week,
        weekday,
        dow,
        doy,
        temp,
        weekdayOverflow;
    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;
      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
      week = defaults(w.W, 1);
      weekday = defaults(w.E, 1);
      if (weekday < 1 || weekday > 7) {
        weekdayOverflow = true;
      }
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;
      var curWeek = weekOfYear(createLocal(), dow, doy);
      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
      week = defaults(w.w, curWeek.week);
      if (w.d != null) {
        weekday = w.d;
        if (weekday < 0 || weekday > 6) {
          weekdayOverflow = true;
        }
      } else if (w.e != null) {
        weekday = w.e + dow;
        if (w.e < 0 || w.e > 6) {
          weekdayOverflow = true;
        }
      } else {
        weekday = dow;
      }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
      getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
      getParsingFlags(config)._overflowWeekday = true;
    } else {
      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
      config._a[YEAR] = temp.year;
      config._dayOfYear = temp.dayOfYear;
    }
  }
  var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
  var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
  var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
  var isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/]];
  var isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]];
  var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
  function configFromISO(config) {
    var i,
        l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime,
        dateFormat,
        timeFormat,
        tzFormat;
    if (match) {
      getParsingFlags(config).iso = true;
      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(match[1])) {
          dateFormat = isoDates[i][0];
          allowTime = isoDates[i][2] !== false;
          break;
        }
      }
      if (dateFormat == null) {
        config._isValid = false;
        return;
      }
      if (match[3]) {
        for (i = 0, l = isoTimes.length; i < l; i++) {
          if (isoTimes[i][1].exec(match[3])) {
            timeFormat = (match[2] || ' ') + isoTimes[i][0];
            break;
          }
        }
        if (timeFormat == null) {
          config._isValid = false;
          return;
        }
      }
      if (!allowTime && timeFormat != null) {
        config._isValid = false;
        return;
      }
      if (match[4]) {
        if (tzRegex.exec(match[4])) {
          tzFormat = 'Z';
        } else {
          config._isValid = false;
          return;
        }
      }
      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
      configFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }
  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];
    if (secondStr) {
      result.push(parseInt(secondStr, 10));
    }
    return result;
  }
  function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
      return 2000 + year;
    } else if (year <= 999) {
      return 1900 + year;
    }
    return year;
  }
  function preprocessRFC2822(s) {
    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
  }
  function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
      if (weekdayProvided !== weekdayActual) {
        getParsingFlags(config).weekdayMismatch = true;
        config._isValid = false;
        return false;
      }
    }
    return true;
  }
  var obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60
  };
  function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
      return obsOffsets[obsOffset];
    } else if (militaryOffset) {
      return 0;
    } else {
      var hm = parseInt(numOffset, 10);
      var m = hm % 100,
          h = (hm - m) / 100;
      return h * 60 + m;
    }
  }
  function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i));
    if (match) {
      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
      if (!checkWeekday(match[1], parsedArray, config)) {
        return;
      }
      config._a = parsedArray;
      config._tzm = calculateOffset(match[8], match[9], match[10]);
      config._d = createUTCDate.apply(null, config._a);
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
      getParsingFlags(config).rfc2822 = true;
    } else {
      config._isValid = false;
    }
  }
  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);
    if (matched !== null) {
      config._d = new Date(+matched[1]);
      return;
    }
    configFromISO(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }
    configFromRFC2822(config);
    if (config._isValid === false) {
      delete config._isValid;
    } else {
      return;
    }
    hooks.createFromInputFallback(config);
  }
  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function(config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });
  hooks.ISO_8601 = function() {};
  hooks.RFC_2822 = function() {};
  function configFromStringAndFormat(config) {
    if (config._f === hooks.ISO_8601) {
      configFromISO(config);
      return;
    }
    if (config._f === hooks.RFC_2822) {
      configFromRFC2822(config);
      return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;
    var string = '' + config._i,
        i,
        parsedInput,
        tokens,
        token,
        skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;
    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          getParsingFlags(config).unusedInput.push(skipped);
        }
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
        totalParsedInputLength += parsedInput.length;
      }
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          getParsingFlags(config).empty = false;
        } else {
          getParsingFlags(config).unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        getParsingFlags(config).unusedTokens.push(token);
      }
    }
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
      getParsingFlags(config).unusedInput.push(string);
    }
    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
      getParsingFlags(config).bigHour = undefined;
    }
    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
    configFromArray(config);
    checkOverflow(config);
  }
  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;
    if (meridiem == null) {
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      return hour;
    }
  }
  function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,
        scoreToBeat,
        i,
        currentScore;
    if (config._f.length === 0) {
      getParsingFlags(config).invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }
    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._f = config._f[i];
      configFromStringAndFormat(tempConfig);
      if (!isValid(tempConfig)) {
        continue;
      }
      currentScore += getParsingFlags(tempConfig).charsLeftOver;
      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
      getParsingFlags(tempConfig).score = currentScore;
      if (scoreToBeat == null || currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
    extend(config, bestMoment || tempConfig);
  }
  function configFromObject(config) {
    if (config._d) {
      return;
    }
    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function(obj) {
      return obj && parseInt(obj, 10);
    });
    configFromArray(config);
  }
  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
      res.add(1, 'd');
      res._nextDay = undefined;
    }
    return res;
  }
  function prepareConfig(config) {
    var input = config._i,
        format = config._f;
    config._locale = config._locale || getLocale(config._l);
    if (input === null || (format === undefined && input === '')) {
      return createInvalid({nullInput: true});
    }
    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }
    if (isMoment(input)) {
      return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
      config._d = input;
    } else if (isArray(format)) {
      configFromStringAndArray(config);
    } else if (format) {
      configFromStringAndFormat(config);
    } else {
      configFromInput(config);
    }
    if (!isValid(config)) {
      config._d = null;
    }
    return config;
  }
  function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
      config._d = new Date(hooks.now());
    } else if (isDate(input)) {
      config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
      configFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function(obj) {
        return parseInt(obj, 10);
      });
      configFromArray(config);
    } else if (isObject(input)) {
      configFromObject(config);
    } else if (isNumber(input)) {
      config._d = new Date(input);
    } else {
      hooks.createFromInputFallback(config);
    }
  }
  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};
    if (locale === true || locale === false) {
      strict = locale;
      locale = undefined;
    }
    if ((isObject(input) && isObjectEmpty(input)) || (isArray(input) && input.length === 0)) {
      input = undefined;
    }
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;
    return createFromConfig(c);
  }
  function createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
  }
  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  });
  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  });
  function pickBy(fn, moments) {
    var res,
        i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (!moments[i].isValid() || moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }
  function min() {
    var args = [].slice.call(arguments, 0);
    return pickBy('isBefore', args);
  }
  function max() {
    var args = [].slice.call(arguments, 0);
    return pickBy('isAfter', args);
  }
  var now = function() {
    return Date.now ? Date.now() : +(new Date());
  };
  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
  function isDurationValid(m) {
    for (var key in m) {
      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
        return false;
      }
    }
    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
      if (m[ordering[i]]) {
        if (unitHasDecimal) {
          return false;
        }
        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
          unitHasDecimal = true;
        }
      }
    }
    return true;
  }
  function isValid$1() {
    return this._isValid;
  }
  function createInvalid$1() {
    return createDuration(NaN);
  }
  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;
    this._isValid = isDurationValid(normalizedInput);
    this._milliseconds = +milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 1000 * 60 * 60;
    this._days = +days + weeks * 7;
    this._months = +months + quarters * 3 + years * 12;
    this._data = {};
    this._locale = getLocale();
    this._bubble();
  }
  function isDuration(obj) {
    return obj instanceof Duration;
  }
  function absRound(number) {
    if (number < 0) {
      return Math.round(-1 * number) * -1;
    } else {
      return Math.round(number);
    }
  }
  function offset(token, separator) {
    addFormatToken(token, 0, 0, function() {
      var offset = this.utcOffset();
      var sign = '+';
      if (offset < 0) {
        offset = -offset;
        sign = '-';
      }
      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
  }
  offset('Z', ':');
  offset('ZZ', '');
  addRegexToken('Z', matchShortOffset);
  addRegexToken('ZZ', matchShortOffset);
  addParseToken(['Z', 'ZZ'], function(input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
  });
  var chunkOffset = /([\+\-]|\d\d)/gi;
  function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);
    if (matches === null) {
      return null;
    }
    var chunk = matches[matches.length - 1] || [];
    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);
    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
  }
  function cloneWithOffset(input, model) {
    var res,
        diff;
    if (model._isUTC) {
      res = model.clone();
      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
      res._d.setTime(res._d.valueOf() + diff);
      hooks.updateOffset(res, false);
      return res;
    } else {
      return createLocal(input).local();
    }
  }
  function getDateOffset(m) {
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
  }
  hooks.updateOffset = function() {};
  function getSetOffset(input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
      return input != null ? this : NaN;
    }
    if (input != null) {
      if (typeof input === 'string') {
        input = offsetFromString(matchShortOffset, input);
        if (input === null) {
          return this;
        }
      } else if (Math.abs(input) < 16 && !keepMinutes) {
        input = input * 60;
      }
      if (!this._isUTC && keepLocalTime) {
        localAdjust = getDateOffset(this);
      }
      this._offset = input;
      this._isUTC = true;
      if (localAdjust != null) {
        this.add(localAdjust, 'm');
      }
      if (offset !== input) {
        if (!keepLocalTime || this._changeInProgress) {
          addSubtract(this, createDuration(input - offset, 'm'), 1, false);
        } else if (!this._changeInProgress) {
          this._changeInProgress = true;
          hooks.updateOffset(this, true);
          this._changeInProgress = null;
        }
      }
      return this;
    } else {
      return this._isUTC ? offset : getDateOffset(this);
    }
  }
  function getSetZone(input, keepLocalTime) {
    if (input != null) {
      if (typeof input !== 'string') {
        input = -input;
      }
      this.utcOffset(input, keepLocalTime);
      return this;
    } else {
      return -this.utcOffset();
    }
  }
  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
  }
  function setOffsetToLocal(keepLocalTime) {
    if (this._isUTC) {
      this.utcOffset(0, keepLocalTime);
      this._isUTC = false;
      if (keepLocalTime) {
        this.subtract(getDateOffset(this), 'm');
      }
    }
    return this;
  }
  function setOffsetToParsedOffset() {
    if (this._tzm != null) {
      this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
      var tZone = offsetFromString(matchOffset, this._i);
      if (tZone != null) {
        this.utcOffset(tZone);
      } else {
        this.utcOffset(0, true);
      }
    }
    return this;
  }
  function hasAlignedHourOffset(input) {
    if (!this.isValid()) {
      return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;
    return (this.utcOffset() - input) % 60 === 0;
  }
  function isDaylightSavingTime() {
    return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset());
  }
  function isDaylightSavingTimeShifted() {
    if (!isUndefined(this._isDSTShifted)) {
      return this._isDSTShifted;
    }
    var c = {};
    copyConfig(c, this);
    c = prepareConfig(c);
    if (c._a) {
      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
    } else {
      this._isDSTShifted = false;
    }
    return this._isDSTShifted;
  }
  function isLocal() {
    return this.isValid() ? !this._isUTC : false;
  }
  function isUtcOffset() {
    return this.isValid() ? this._isUTC : false;
  }
  function isUtc() {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
  }
  var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
  var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
  function createDuration(input, key) {
    var duration = input,
        match = null,
        sign,
        ret,
        diffRes;
    if (isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months
      };
    } else if (isNumber(input)) {
      duration = {};
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (!!(match = aspNetRegex.exec(input))) {
      sign = (match[1] === '-') ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign
      };
    } else if (!!(match = isoRegex.exec(input))) {
      sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
      duration = {
        y: parseIso(match[2], sign),
        M: parseIso(match[3], sign),
        w: parseIso(match[4], sign),
        d: parseIso(match[5], sign),
        h: parseIso(match[6], sign),
        m: parseIso(match[7], sign),
        s: parseIso(match[8], sign)
      };
    } else if (duration == null) {
      duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }
    ret = new Duration(duration);
    if (isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }
    return ret;
  }
  createDuration.fn = Duration.prototype;
  createDuration.invalid = createInvalid$1;
  function parseIso(inp, sign) {
    var res = inp && parseFloat(inp.replace(',', '.'));
    return (isNaN(res) ? 0 : res) * sign;
  }
  function positiveMomentsDifference(base, other) {
    var res = {
      milliseconds: 0,
      months: 0
    };
    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }
    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
    return res;
  }
  function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
      return {
        milliseconds: 0,
        months: 0
      };
    }
    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }
    return res;
  }
  function createAdder(direction, name) {
    return function(val, period) {
      var dur,
          tmp;
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
        tmp = val;
        val = period;
        period = tmp;
      }
      val = typeof val === 'string' ? +val : val;
      dur = createDuration(val, period);
      addSubtract(this, dur, direction);
      return this;
    };
  }
  function addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);
    if (!mom.isValid()) {
      return;
    }
    updateOffset = updateOffset == null ? true : updateOffset;
    if (months) {
      setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
      hooks.updateOffset(mom, days || months);
    }
  }
  var add = createAdder(1, 'add');
  var subtract = createAdder(-1, 'subtract');
  function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
  }
  function calendar$1(time, formats) {
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';
    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
  }
  function clone() {
    return new Moment(this);
  }
  function isAfter(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() > localInput.valueOf();
    } else {
      return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
  }
  function isBefore(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() < localInput.valueOf();
    } else {
      return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
  }
  function isBetween(from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) && (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
  }
  function isSame(input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
      return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
      return this.valueOf() === localInput.valueOf();
    } else {
      inputMs = localInput.valueOf();
      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
  }
  function isSameOrAfter(input, units) {
    return this.isSame(input, units) || this.isAfter(input, units);
  }
  function isSameOrBefore(input, units) {
    return this.isSame(input, units) || this.isBefore(input, units);
  }
  function diff(input, units, asFloat) {
    var that,
        zoneDelta,
        delta,
        output;
    if (!this.isValid()) {
      return NaN;
    }
    that = cloneWithOffset(input, this);
    if (!that.isValid()) {
      return NaN;
    }
    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
    units = normalizeUnits(units);
    switch (units) {
      case 'year':
        output = monthDiff(this, that) / 12;
        break;
      case 'month':
        output = monthDiff(this, that);
        break;
      case 'quarter':
        output = monthDiff(this, that) / 3;
        break;
      case 'second':
        output = (this - that) / 1e3;
        break;
      case 'minute':
        output = (this - that) / 6e4;
        break;
      case 'hour':
        output = (this - that) / 36e5;
        break;
      case 'day':
        output = (this - that - zoneDelta) / 864e5;
        break;
      case 'week':
        output = (this - that - zoneDelta) / 6048e5;
        break;
      default:
        output = this - that;
    }
    return asFloat ? output : absFloor(output);
  }
  function monthDiff(a, b) {
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2,
        adjust;
    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      adjust = (b - anchor) / (anchor2 - anchor);
    }
    return -(wholeMonthDiff + adjust) || 0;
  }
  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
  function toString() {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }
  function toISOString() {
    if (!this.isValid()) {
      return null;
    }
    var m = this.clone().utc();
    if (m.year() < 0 || m.year() > 9999) {
      return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
    if (isFunction(Date.prototype.toISOString)) {
      return this.toDate().toISOString();
    }
    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
  }
  function inspect() {
    if (!this.isValid()) {
      return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
      zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';
    return this.format(prefix + year + datetime + suffix);
  }
  function format(inputString) {
    if (!inputString) {
      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
  }
  function from(time, withoutSuffix) {
    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
      return createDuration({
        to: this,
        from: time
      }).locale(this.locale()).humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }
  function fromNow(withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
  }
  function to(time, withoutSuffix) {
    if (this.isValid() && ((isMoment(time) && time.isValid()) || createLocal(time).isValid())) {
      return createDuration({
        from: this,
        to: time
      }).locale(this.locale()).humanize(!withoutSuffix);
    } else {
      return this.localeData().invalidDate();
    }
  }
  function toNow(withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
  }
  function locale(key) {
    var newLocaleData;
    if (key === undefined) {
      return this._locale._abbr;
    } else {
      newLocaleData = getLocale(key);
      if (newLocaleData != null) {
        this._locale = newLocaleData;
      }
      return this;
    }
  }
  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function(key) {
    if (key === undefined) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  });
  function localeData() {
    return this._locale;
  }
  function startOf(units) {
    units = normalizeUnits(units);
    switch (units) {
      case 'year':
        this.month(0);
      case 'quarter':
      case 'month':
        this.date(1);
      case 'week':
      case 'isoWeek':
      case 'day':
      case 'date':
        this.hours(0);
      case 'hour':
        this.minutes(0);
      case 'minute':
        this.seconds(0);
      case 'second':
        this.milliseconds(0);
    }
    if (units === 'week') {
      this.weekday(0);
    }
    if (units === 'isoWeek') {
      this.isoWeekday(1);
    }
    if (units === 'quarter') {
      this.month(Math.floor(this.month() / 3) * 3);
    }
    return this;
  }
  function endOf(units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
      return this;
    }
    if (units === 'date') {
      units = 'day';
    }
    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
  }
  function valueOf() {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
  }
  function unix() {
    return Math.floor(this.valueOf() / 1000);
  }
  function toDate() {
    return new Date(this.valueOf());
  }
  function toArray() {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
  }
  function toObject() {
    var m = this;
    return {
      years: m.year(),
      months: m.month(),
      date: m.date(),
      hours: m.hours(),
      minutes: m.minutes(),
      seconds: m.seconds(),
      milliseconds: m.milliseconds()
    };
  }
  function toJSON() {
    return this.isValid() ? this.toISOString() : null;
  }
  function isValid$2() {
    return isValid(this);
  }
  function parsingFlags() {
    return extend({}, getParsingFlags(this));
  }
  function invalidAt() {
    return getParsingFlags(this).overflow;
  }
  function creationData() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict
    };
  }
  addFormatToken(0, ['gg', 2], 0, function() {
    return this.weekYear() % 100;
  });
  addFormatToken(0, ['GG', 2], 0, function() {
    return this.isoWeekYear() % 100;
  });
  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
  }
  addWeekYearFormatToken('gggg', 'weekYear');
  addWeekYearFormatToken('ggggg', 'weekYear');
  addWeekYearFormatToken('GGGG', 'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');
  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');
  addUnitPriority('weekYear', 1);
  addUnitPriority('isoWeekYear', 1);
  addRegexToken('G', matchSigned);
  addRegexToken('g', matchSigned);
  addRegexToken('GG', match1to2, match2);
  addRegexToken('gg', match1to2, match2);
  addRegexToken('GGGG', match1to4, match4);
  addRegexToken('gggg', match1to4, match4);
  addRegexToken('GGGGG', match1to6, match6);
  addRegexToken('ggggg', match1to6, match6);
  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function(input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
  });
  addWeekParseToken(['gg', 'GG'], function(input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
  });
  function getSetWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
  }
  function getSetISOWeekYear(input) {
    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
  }
  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4);
  }
  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }
  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
      return weekOfYear(this, dow, doy).year;
    } else {
      weeksTarget = weeksInYear(input, dow, doy);
      if (week > weeksTarget) {
        week = weeksTarget;
      }
      return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
  }
  function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
  }
  addFormatToken('Q', 0, 'Qo', 'quarter');
  addUnitAlias('quarter', 'Q');
  addUnitPriority('quarter', 7);
  addRegexToken('Q', match1);
  addParseToken('Q', function(input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
  });
  function getSetQuarter(input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
  }
  addFormatToken('D', ['DD', 2], 'Do', 'date');
  addUnitAlias('date', 'D');
  addUnitPriority('date', 9);
  addRegexToken('D', match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function(isStrict, locale) {
    return isStrict ? (locale._dayOfMonthOrdinalParse || locale._ordinalParse) : locale._dayOfMonthOrdinalParseLenient;
  });
  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function(input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
  });
  var getSetDayOfMonth = makeGetSet('Date', true);
  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
  addUnitAlias('dayOfYear', 'DDD');
  addUnitPriority('dayOfYear', 4);
  addRegexToken('DDD', match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function(input, array, config) {
    config._dayOfYear = toInt(input);
  });
  function getSetDayOfYear(input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
  }
  addFormatToken('m', ['mm', 2], 0, 'minute');
  addUnitAlias('minute', 'm');
  addUnitPriority('minute', 14);
  addRegexToken('m', match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);
  var getSetMinute = makeGetSet('Minutes', false);
  addFormatToken('s', ['ss', 2], 0, 'second');
  addUnitAlias('second', 's');
  addUnitPriority('second', 15);
  addRegexToken('s', match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);
  var getSetSecond = makeGetSet('Seconds', false);
  addFormatToken('S', 0, 0, function() {
    return ~~(this.millisecond() / 100);
  });
  addFormatToken(0, ['SS', 2], 0, function() {
    return ~~(this.millisecond() / 10);
  });
  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function() {
    return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function() {
    return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function() {
    return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function() {
    return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function() {
    return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function() {
    return this.millisecond() * 1000000;
  });
  addUnitAlias('millisecond', 'ms');
  addUnitPriority('millisecond', 16);
  addRegexToken('S', match1to3, match1);
  addRegexToken('SS', match1to3, match2);
  addRegexToken('SSS', match1to3, match3);
  var token;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
  }
  function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }
  for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
  }
  var getSetMillisecond = makeGetSet('Milliseconds', false);
  addFormatToken('z', 0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');
  function getZoneAbbr() {
    return this._isUTC ? 'UTC' : '';
  }
  function getZoneName() {
    return this._isUTC ? 'Coordinated Universal Time' : '';
  }
  var proto = Moment.prototype;
  proto.add = add;
  proto.calendar = calendar$1;
  proto.clone = clone;
  proto.diff = diff;
  proto.endOf = endOf;
  proto.format = format;
  proto.from = from;
  proto.fromNow = fromNow;
  proto.to = to;
  proto.toNow = toNow;
  proto.get = stringGet;
  proto.invalidAt = invalidAt;
  proto.isAfter = isAfter;
  proto.isBefore = isBefore;
  proto.isBetween = isBetween;
  proto.isSame = isSame;
  proto.isSameOrAfter = isSameOrAfter;
  proto.isSameOrBefore = isSameOrBefore;
  proto.isValid = isValid$2;
  proto.lang = lang;
  proto.locale = locale;
  proto.localeData = localeData;
  proto.max = prototypeMax;
  proto.min = prototypeMin;
  proto.parsingFlags = parsingFlags;
  proto.set = stringSet;
  proto.startOf = startOf;
  proto.subtract = subtract;
  proto.toArray = toArray;
  proto.toObject = toObject;
  proto.toDate = toDate;
  proto.toISOString = toISOString;
  proto.inspect = inspect;
  proto.toJSON = toJSON;
  proto.toString = toString;
  proto.unix = unix;
  proto.valueOf = valueOf;
  proto.creationData = creationData;
  proto.year = getSetYear;
  proto.isLeapYear = getIsLeapYear;
  proto.weekYear = getSetWeekYear;
  proto.isoWeekYear = getSetISOWeekYear;
  proto.quarter = proto.quarters = getSetQuarter;
  proto.month = getSetMonth;
  proto.daysInMonth = getDaysInMonth;
  proto.week = proto.weeks = getSetWeek;
  proto.isoWeek = proto.isoWeeks = getSetISOWeek;
  proto.weeksInYear = getWeeksInYear;
  proto.isoWeeksInYear = getISOWeeksInYear;
  proto.date = getSetDayOfMonth;
  proto.day = proto.days = getSetDayOfWeek;
  proto.weekday = getSetLocaleDayOfWeek;
  proto.isoWeekday = getSetISODayOfWeek;
  proto.dayOfYear = getSetDayOfYear;
  proto.hour = proto.hours = getSetHour;
  proto.minute = proto.minutes = getSetMinute;
  proto.second = proto.seconds = getSetSecond;
  proto.millisecond = proto.milliseconds = getSetMillisecond;
  proto.utcOffset = getSetOffset;
  proto.utc = setOffsetToUTC;
  proto.local = setOffsetToLocal;
  proto.parseZone = setOffsetToParsedOffset;
  proto.hasAlignedHourOffset = hasAlignedHourOffset;
  proto.isDST = isDaylightSavingTime;
  proto.isLocal = isLocal;
  proto.isUtcOffset = isUtcOffset;
  proto.isUtc = isUtc;
  proto.isUTC = isUtc;
  proto.zoneAbbr = getZoneAbbr;
  proto.zoneName = getZoneName;
  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
  function createUnix(input) {
    return createLocal(input * 1000);
  }
  function createInZone() {
    return createLocal.apply(null, arguments).parseZone();
  }
  function preParsePostFormat(string) {
    return string;
  }
  var proto$1 = Locale.prototype;
  proto$1.calendar = calendar;
  proto$1.longDateFormat = longDateFormat;
  proto$1.invalidDate = invalidDate;
  proto$1.ordinal = ordinal;
  proto$1.preparse = preParsePostFormat;
  proto$1.postformat = preParsePostFormat;
  proto$1.relativeTime = relativeTime;
  proto$1.pastFuture = pastFuture;
  proto$1.set = set;
  proto$1.months = localeMonths;
  proto$1.monthsShort = localeMonthsShort;
  proto$1.monthsParse = localeMonthsParse;
  proto$1.monthsRegex = monthsRegex;
  proto$1.monthsShortRegex = monthsShortRegex;
  proto$1.week = localeWeek;
  proto$1.firstDayOfYear = localeFirstDayOfYear;
  proto$1.firstDayOfWeek = localeFirstDayOfWeek;
  proto$1.weekdays = localeWeekdays;
  proto$1.weekdaysMin = localeWeekdaysMin;
  proto$1.weekdaysShort = localeWeekdaysShort;
  proto$1.weekdaysParse = localeWeekdaysParse;
  proto$1.weekdaysRegex = weekdaysRegex;
  proto$1.weekdaysShortRegex = weekdaysShortRegex;
  proto$1.weekdaysMinRegex = weekdaysMinRegex;
  proto$1.isPM = localeIsPM;
  proto$1.meridiem = localeMeridiem;
  function get$1(format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
  }
  function listMonthsImpl(format, index, field) {
    if (isNumber(format)) {
      index = format;
      format = undefined;
    }
    format = format || '';
    if (index != null) {
      return get$1(format, index, field, 'month');
    }
    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
      out[i] = get$1(format, i, field, 'month');
    }
    return out;
  }
  function listWeekdaysImpl(localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }
      format = format || '';
    } else {
      format = localeSorted;
      index = format;
      localeSorted = false;
      if (isNumber(format)) {
        index = format;
        format = undefined;
      }
      format = format || '';
    }
    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;
    if (index != null) {
      return get$1(format, (index + shift) % 7, field, 'day');
    }
    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
      out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
  }
  function listMonths(format, index) {
    return listMonthsImpl(format, index, 'months');
  }
  function listMonthsShort(format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
  }
  function listWeekdays(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
  }
  function listWeekdaysShort(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
  }
  function listWeekdaysMin(localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
  }
  getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function(number) {
      var b = number % 10,
          output = (toInt(number % 100 / 10) === 1) ? 'th' : (b === 1) ? 'st' : (b === 2) ? 'nd' : (b === 3) ? 'rd' : 'th';
      return number + output;
    }
  });
  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
  var mathAbs = Math.abs;
  function abs() {
    var data = this._data;
    this._milliseconds = mathAbs(this._milliseconds);
    this._days = mathAbs(this._days);
    this._months = mathAbs(this._months);
    data.milliseconds = mathAbs(data.milliseconds);
    data.seconds = mathAbs(data.seconds);
    data.minutes = mathAbs(data.minutes);
    data.hours = mathAbs(data.hours);
    data.months = mathAbs(data.months);
    data.years = mathAbs(data.years);
    return this;
  }
  function addSubtract$1(duration, input, value, direction) {
    var other = createDuration(input, value);
    duration._milliseconds += direction * other._milliseconds;
    duration._days += direction * other._days;
    duration._months += direction * other._months;
    return duration._bubble();
  }
  function add$1(input, value) {
    return addSubtract$1(this, input, value, 1);
  }
  function subtract$1(input, value) {
    return addSubtract$1(this, input, value, -1);
  }
  function absCeil(number) {
    if (number < 0) {
      return Math.floor(number);
    } else {
      return Math.ceil(number);
    }
  }
  function bubble() {
    var milliseconds = this._milliseconds;
    var days = this._days;
    var months = this._months;
    var data = this._data;
    var seconds,
        minutes,
        hours,
        years,
        monthsFromDays;
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) || (milliseconds <= 0 && days <= 0 && months <= 0))) {
      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
      days = 0;
      months = 0;
    }
    data.milliseconds = milliseconds % 1000;
    seconds = absFloor(milliseconds / 1000);
    data.seconds = seconds % 60;
    minutes = absFloor(seconds / 60);
    data.minutes = minutes % 60;
    hours = absFloor(minutes / 60);
    data.hours = hours % 24;
    days += absFloor(hours / 24);
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));
    years = absFloor(months / 12);
    months %= 12;
    data.days = days;
    data.months = months;
    data.years = years;
    return this;
  }
  function daysToMonths(days) {
    return days * 4800 / 146097;
  }
  function monthsToDays(months) {
    return months * 146097 / 4800;
  }
  function as(units) {
    if (!this.isValid()) {
      return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;
    units = normalizeUnits(units);
    if (units === 'month' || units === 'year') {
      days = this._days + milliseconds / 864e5;
      months = this._months + daysToMonths(days);
      return units === 'month' ? months : months / 12;
    } else {
      days = this._days + Math.round(monthsToDays(this._months));
      switch (units) {
        case 'week':
          return days / 7 + milliseconds / 6048e5;
        case 'day':
          return days + milliseconds / 864e5;
        case 'hour':
          return days * 24 + milliseconds / 36e5;
        case 'minute':
          return days * 1440 + milliseconds / 6e4;
        case 'second':
          return days * 86400 + milliseconds / 1000;
        case 'millisecond':
          return Math.floor(days * 864e5) + milliseconds;
        default:
          throw new Error('Unknown unit ' + units);
      }
    }
  }
  function valueOf$1() {
    if (!this.isValid()) {
      return NaN;
    }
    return (this._milliseconds + this._days * 864e5 + (this._months % 12) * 2592e6 + toInt(this._months / 12) * 31536e6);
  }
  function makeAs(alias) {
    return function() {
      return this.as(alias);
    };
  }
  var asMilliseconds = makeAs('ms');
  var asSeconds = makeAs('s');
  var asMinutes = makeAs('m');
  var asHours = makeAs('h');
  var asDays = makeAs('d');
  var asWeeks = makeAs('w');
  var asMonths = makeAs('M');
  var asYears = makeAs('y');
  function clone$1() {
    return createDuration(this);
  }
  function get$2(units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
  }
  function makeGetter(name) {
    return function() {
      return this.isValid() ? this._data[name] : NaN;
    };
  }
  var milliseconds = makeGetter('milliseconds');
  var seconds = makeGetter('seconds');
  var minutes = makeGetter('minutes');
  var hours = makeGetter('hours');
  var days = makeGetter('days');
  var months = makeGetter('months');
  var years = makeGetter('years');
  function weeks() {
    return absFloor(this.days() / 7);
  }
  var round = Math.round;
  var thresholds = {
    ss: 44,
    s: 45,
    m: 45,
    h: 22,
    d: 26,
    M: 11
  };
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }
  function relativeTime$1(posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds = round(duration.as('s'));
    var minutes = round(duration.as('m'));
    var hours = round(duration.as('h'));
    var days = round(duration.as('d'));
    var months = round(duration.as('M'));
    var years = round(duration.as('y'));
    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];
    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
  }
  function getSetRelativeTimeRounding(roundingFunction) {
    if (roundingFunction === undefined) {
      return round;
    }
    if (typeof(roundingFunction) === 'function') {
      round = roundingFunction;
      return true;
    }
    return false;
  }
  function getSetRelativeTimeThreshold(threshold, limit) {
    if (thresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
      thresholds.ss = limit - 1;
    }
    return true;
  }
  function humanize(withSuffix) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);
    if (withSuffix) {
      output = locale.pastFuture(+this, output);
    }
    return locale.postformat(output);
  }
  var abs$1 = Math.abs;
  function sign(x) {
    return ((x > 0) - (x < 0)) || +x;
  }
  function toISOString$1() {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    var seconds = abs$1(this._milliseconds) / 1000;
    var days = abs$1(this._days);
    var months = abs$1(this._months);
    var minutes,
        hours,
        years;
    minutes = absFloor(seconds / 60);
    hours = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;
    years = absFloor(months / 12);
    months %= 12;
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
    var total = this.asSeconds();
    if (!total) {
      return 'P0D';
    }
    var totalSign = total < 0 ? '-' : '';
    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + ((h || m || s) ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');
  }
  var proto$2 = Duration.prototype;
  proto$2.isValid = isValid$1;
  proto$2.abs = abs;
  proto$2.add = add$1;
  proto$2.subtract = subtract$1;
  proto$2.as = as;
  proto$2.asMilliseconds = asMilliseconds;
  proto$2.asSeconds = asSeconds;
  proto$2.asMinutes = asMinutes;
  proto$2.asHours = asHours;
  proto$2.asDays = asDays;
  proto$2.asWeeks = asWeeks;
  proto$2.asMonths = asMonths;
  proto$2.asYears = asYears;
  proto$2.valueOf = valueOf$1;
  proto$2._bubble = bubble;
  proto$2.clone = clone$1;
  proto$2.get = get$2;
  proto$2.milliseconds = milliseconds;
  proto$2.seconds = seconds;
  proto$2.minutes = minutes;
  proto$2.hours = hours;
  proto$2.days = days;
  proto$2.weeks = weeks;
  proto$2.months = months;
  proto$2.years = years;
  proto$2.humanize = humanize;
  proto$2.toISOString = toISOString$1;
  proto$2.toString = toISOString$1;
  proto$2.toJSON = toISOString$1;
  proto$2.locale = locale;
  proto$2.localeData = localeData;
  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
  proto$2.lang = lang;
  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');
  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function(input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
  });
  addParseToken('x', function(input, array, config) {
    config._d = new Date(toInt(input));
  });
  hooks.version = '2.19.3';
  setHookCallback(createLocal);
  hooks.fn = proto;
  hooks.min = min;
  hooks.max = max;
  hooks.now = now;
  hooks.utc = createUTC;
  hooks.unix = createUnix;
  hooks.months = listMonths;
  hooks.isDate = isDate;
  hooks.locale = getSetGlobalLocale;
  hooks.invalid = createInvalid;
  hooks.duration = createDuration;
  hooks.isMoment = isMoment;
  hooks.weekdays = listWeekdays;
  hooks.parseZone = createInZone;
  hooks.localeData = getLocale;
  hooks.isDuration = isDuration;
  hooks.monthsShort = listMonthsShort;
  hooks.weekdaysMin = listWeekdaysMin;
  hooks.defineLocale = defineLocale;
  hooks.updateLocale = updateLocale;
  hooks.locales = listLocales;
  hooks.weekdaysShort = listWeekdaysShort;
  hooks.normalizeUnits = normalizeUnits;
  hooks.relativeTimeRounding = getSetRelativeTimeRounding;
  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
  hooks.calendarFormat = getCalendarFormat;
  hooks.prototype = proto;
  return hooks;
})));

})();
(function() {
var define = $__System.amdDefine;
define("e", ["21d"], function(main) {
  return main;
});

})();
$__System.registerDynamic("1a4", ["1a9", "68", "19a", "122", "1a6", "e"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _stringify = $__require("1a9");

    var _stringify2 = _interopRequireDefault(_stringify);

    var _classCallCheck2 = $__require("68");

    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

    var _createClass2 = $__require("19a");

    var _createClass3 = _interopRequireDefault(_createClass2);

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    var _immutable = $__require("1a6");

    var _immutable2 = _interopRequireDefault(_immutable);

    var _moment = $__require("e");

    var _moment2 = _interopRequireDefault(_moment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    /**
    A time range is a simple representation of a begin and end time, used
    to maintain consistency across an application.
    
    ### Construction
    
    You can define a TimeRange with moments, Javascript Date objects
    or ms since UNIX epoch. Here we construct one with two moments:
    
    ```js
    var fmt = "YYYY-MM-DD HH:mm";
    var beginTime = moment("2012-01-11 11:11", fmt);
    var endTime =   moment("2012-02-22 12:12", fmt);
    var range = new TimeRange(beginTime, endTime);
    ```
    
    or with ms times:
    
    ```js
    var range = new TimeRange([1326309060000, 1329941520000]);
    ```
    
     */
    var TimeRange = function () {
        /**
         * Builds a new TimeRange which may be of several different formats:
         *   - Another TimeRange (copy constructor)
         *   - An Immutable.List containing two Dates.
         *   - A Javascript array containing two Date or ms timestamps
         *   - Two arguments, begin and end, each of which may be a Data,
         *     a Moment, or a ms timestamp.
         */
        function TimeRange(arg1, arg2) {
            (0, _classCallCheck3.default)(this, TimeRange);

            if (arg1 instanceof TimeRange) {
                var other = arg1;
                this._range = other._range;
            } else if (arg1 instanceof _immutable2.default.List) {
                var rangeList = arg1;
                this._range = rangeList;
            } else if (_underscore2.default.isArray(arg1)) {
                var rangeArray = arg1;
                this._range = new _immutable2.default.List([new Date(rangeArray[0]), new Date(rangeArray[1])]);
            } else {
                var b = arg1;
                var e = arg2;
                if (_underscore2.default.isDate(b) && _underscore2.default.isDate(e)) {
                    this._range = new _immutable2.default.List([new Date(b.getTime()), new Date(e.getTime())]);
                } else if (_moment2.default.isMoment(b) && _moment2.default.isMoment(e)) {
                    this._range = new _immutable2.default.List([new Date(b.valueOf()), new Date(e.valueOf())]);
                } else if (_underscore2.default.isNumber(b) && _underscore2.default.isNumber(e)) {
                    this._range = new _immutable2.default.List([new Date(b), new Date(e)]);
                }
            }
        }

        /**
         * Returns the internal range, which is an Immutable List containing
         * begin and end times.
         *
         * @return {Immutable.List} List containing the begin and end of the time range.
         */

        (0, _createClass3.default)(TimeRange, [{
            key: "range",
            value: function range() {
                return this._range;
            }

            //
            // Serialize
            //
            /**
             * Returns the TimeRange as JSON, which will be a Javascript array
             * of two ms timestamps.
             *
             * @return {number[]} JSON representation of the TimeRange
             */

        }, {
            key: "toJSON",
            value: function toJSON() {
                return [this.begin().getTime(), this.end().getTime()];
            }

            /**
             * Returns the TimeRange as a string, useful for serialization.
             *
             * @return {string} String representation of the TimeRange
             */

        }, {
            key: "toString",
            value: function toString() {
                return (0, _stringify2.default)(this.toJSON());
            }

            /**
             * Returns the TimeRange as a string expressed in local time
             *
             * @return {string} String representation of the TimeRange
             */

        }, {
            key: "toLocalString",
            value: function toLocalString() {
                return "[" + this.begin() + ", " + this.end() + "]";
            }

            /**
             * Returns the TimeRange as a string expressed in UTC time
             *
             * @return {string} String representation of the TimeRange
             */

        }, {
            key: "toUTCString",
            value: function toUTCString() {
                return "[" + this.begin().toUTCString() + ", " + this.end().toUTCString() + "]";
            }

            /**
             * Returns a human friendly version of the TimeRange, e.g.
             * "Aug 1, 2014 05:19:59 am to Aug 1, 2014 07:41:06 am"
             *
             * @return {string} Human friendly string representation of the TimeRange
             */

        }, {
            key: "humanize",
            value: function humanize() {
                var begin = (0, _moment2.default)(this.begin());
                var end = (0, _moment2.default)(this.end());
                var beginStr = begin.format("MMM D, YYYY hh:mm:ss a");
                var endStr = end.format("MMM D, YYYY hh:mm:ss a");

                return beginStr + " to " + endStr;
            }

            /**
             * Returns a human friendly version of the TimeRange
             * @example
             * "a few seconds ago to a month ago"
             *
             * @return {string} Human friendly string representation of the TimeRange
             */

        }, {
            key: "relativeString",
            value: function relativeString() {
                var begin = (0, _moment2.default)(this.begin());
                var end = (0, _moment2.default)(this.end());
                return begin.fromNow() + " to " + end.fromNow();
            }

            /**
             * Returns the begin time of the TimeRange.
             *
             * @return {Date} The begin time of the TimeRange
             */

        }, {
            key: "begin",
            value: function begin() {
                return this._range.get(0);
            }

            /**
             * Returns the end time of the TimeRange.
             *
             * @return {Date} The end time of the TimeRange
             */

        }, {
            key: "end",
            value: function end() {
                return this._range.get(1);
            }

            /**
             * Sets a new begin time on the TimeRange. The result will be
             * a new TimeRange.
             *
             * @param {Date} t Time to set the begin time to
             * @return {TimeRange} The new mutated TimeRange
             */

        }, {
            key: "setBegin",
            value: function setBegin(t) {
                return new TimeRange(this._range.set(0, t));
            }

            /**
             * Sets a new end time on the TimeRange. The result will be
             * a new TimeRange.
             *
             * @param {Date} t Time to set the end time to
             * @return {TimeRange} The new mutated TimeRange
             */

        }, {
            key: "setEnd",
            value: function setEnd(t) {
                return new TimeRange(this._range.set(1, t));
            }

            /**
             * Returns if the two TimeRanges can be considered equal,
             * in that they have the same times.
             *
             * @param {TimeRange} other The TimeRange to compare to
             * @return {boolean} Result
             */

        }, {
            key: "equals",
            value: function equals(other) {
                return this.begin().getTime() === other.begin().getTime() && this.end().getTime() === other.end().getTime();
            }

            /**
             * Returns true if other is completely inside this.
             *
             * @param {TimeRange} other The TimeRange to compare to
             * @return {boolean} Result
             */

        }, {
            key: "contains",
            value: function contains(other) {
                if (_underscore2.default.isDate(other)) {
                    return this.begin() <= other && this.end() >= other;
                } else {
                    return this.begin() <= other.begin() && this.end() >= other.end();
                }
                return false;
            }

            /**
             * Returns true if this TimeRange is completely within the supplied
             * other TimeRange.
             *
             * @param {TimeRange} other The TimeRange to compare to
             * @return {boolean} Result
             */

        }, {
            key: "within",
            value: function within(other) {
                return this.begin() >= other.begin() && this.end() <= other.end();
            }

            /**
             * Returns true if the passed in other TimeRange overlaps this time Range.
             *
             * @param {TimeRange} other The TimeRange to compare to
             * @return {boolean} Result
             */

        }, {
            key: "overlaps",
            value: function overlaps(other) {
                if (this.contains(other.begin()) && !this.contains(other.end()) || this.contains(other.end()) && !this.contains(other.begin())) {
                    return true;
                } else {
                    return false;
                }
            }

            /**
             * Returns true if the passed in other Range in no way
             * overlaps this time Range.
             *
             * @param {TimeRange} other The TimeRange to compare to
             * @return {boolean} Result
             */

        }, {
            key: "disjoint",
            value: function disjoint(other) {
                return this.end() < other.begin() || this.begin() > other.end();
            }

            /**
             * @param {TimeRange} other The TimeRange to extend with
             * @return {TimeRange} a new Timerange which covers the extents of this and
             * other combined.
             */

        }, {
            key: "extents",
            value: function extents(other) {
                var b = this.begin() < other.begin() ? this.begin() : other.begin();
                var e = this.end() > other.end() ? this.end() : other.end();
                return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
            }

            /**
             * @param {TimeRange} other The TimeRange to intersect with
             * @return {TimeRange} A new TimeRange which represents the intersection
             * (overlapping) part of this and other.
             */

        }, {
            key: "intersection",
            value: function intersection(other) {
                if (this.disjoint(other)) {
                    return undefined;
                }
                var b = this.begin() > other.begin() ? this.begin() : other.begin();
                var e = this.end() < other.end() ? this.end() : other.end();
                return new TimeRange(new Date(b.getTime()), new Date(e.getTime()));
            }

            /**
             * @return {number} The duration of the TimeRange in milliseconds
             */

        }, {
            key: "duration",
            value: function duration() {
                return this.end().getTime() - this.begin().getTime();
            }

            /**
             * @return {string} A user friendly version of the duration.
             */

        }, {
            key: "humanizeDuration",
            value: function humanizeDuration() {
                return _moment2.default.duration(this.duration()).humanize();
            }

            //
            // Static TimeRange creators
            //
            /**
             * @return {TimeRange} The last day, as a TimeRange
             */

        }], [{
            key: "lastDay",
            value: function lastDay() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(24, "hours");
                return new TimeRange(beginTime, endTime);
            }

            /**
             * @return {TimeRange} The last seven days, as a TimeRange
             */

        }, {
            key: "lastSevenDays",
            value: function lastSevenDays() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(7, "days");
                return new TimeRange(beginTime, endTime);
            }

            /**
             * @return {TimeRange} The last thirty days, as a TimeRange
             */

        }, {
            key: "lastThirtyDays",
            value: function lastThirtyDays() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(30, "days");
                return new TimeRange(beginTime, endTime);
            }

            /**
             * @return {TimeRange} The last month, as a TimeRange
             */

        }, {
            key: "lastMonth",
            value: function lastMonth() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(1, "month");
                return new TimeRange(beginTime, endTime);
            }

            /**
             * @return {TimeRange} The last 90 days, as a TimeRange
             */

        }, {
            key: "lastNinetyDays",
            value: function lastNinetyDays() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(90, "days");
                return new TimeRange(beginTime, endTime);
            }

            /**
             * @return {TimeRange} The last year, as a TimeRange
             */

        }, {
            key: "lastYear",
            value: function lastYear() {
                var endTime = (0, _moment2.default)();
                var beginTime = endTime.clone().subtract(1, "year");
                return new TimeRange(beginTime, endTime);
            }
        }]);
        return TimeRange;
    }(); /*
          *  Copyright (c) 2015-2017, The Regents of the University of California,
          *  through Lawrence Berkeley National Laboratory (subject to receipt
          *  of any required approvals from the U.S. Dept. of Energy).
          *  All rights reserved.
          *
          *  This source code is licensed under the BSD-style license found in the
          *  LICENSE file in the root directory of this source tree.
          */

    exports.default = TimeRange;
});
$__System.registerDynamic("1a5", ["1f9", "1c0", "1aa", "198", "1ae", "122", "1a6", "e", "1a4", "1a2", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _slicedToArray2 = $__require("1f9");
    var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
    var _regenerator = $__require("1c0");
    var _regenerator2 = _interopRequireDefault(_regenerator);
    var _toConsumableArray2 = $__require("1aa");
    var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
    var _keys = $__require("198");
    var _keys2 = _interopRequireDefault(_keys);
    var _getIterator2 = $__require("1ae");
    var _getIterator3 = _interopRequireDefault(_getIterator2);
    var _underscore = $__require("122");
    var _underscore2 = _interopRequireDefault(_underscore);
    var _immutable = $__require("1a6");
    var _immutable2 = _interopRequireDefault(_immutable);
    var _moment = $__require("e");
    var _moment2 = _interopRequireDefault(_moment);
    var _timerange = $__require("1a4");
    var _timerange2 = _interopRequireDefault(_timerange);
    var _index = $__require("1a2");
    var _index2 = _interopRequireDefault(_index);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var units = {
      s: {
        label: "seconds",
        length: 1
      },
      m: {
        label: "minutes",
        length: 60
      },
      h: {
        label: "hours",
        length: 60 * 60
      },
      d: {
        label: "days",
        length: 60 * 60 * 24
      }
    };
    exports.default = {
      leftPad: function leftPad(value) {
        return "" + (value < 10 ? "0" : "") + value;
      },
      windowDuration: function windowDuration(w) {
        var regex = /([0-9]+)([smhd])/;
        var parts = regex.exec(w);
        if (parts && parts.length >= 3) {
          var num = parseInt(parts[1], 10);
          var unit = parts[2];
          return num * units[unit].length * 1000;
        }
      },
      windowPositionFromDate: function windowPositionFromDate(w, date) {
        var duration = this.windowDuration(w);
        var dd = _moment2.default.utc(date).valueOf();
        return parseInt(dd /= duration, 10);
      },
      rangeFromIndexString: function rangeFromIndexString(index, utc) {
        var isUTC = !_underscore2.default.isUndefined(utc) ? utc : true;
        var parts = index.split("-");
        var beginTime = void 0;
        var endTime = void 0;
        switch (parts.length) {
          case 3:
            if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10)) && !_underscore2.default.isNaN(parseInt(parts[2], 10))) {
              var _year = parseInt(parts[0], 10);
              var month = parseInt(parts[1], 10);
              var day = parseInt(parts[2], 10);
              beginTime = isUTC ? _moment2.default.utc([_year, month - 1, day]) : (0, _moment2.default)([_year, month - 1, day]);
              endTime = isUTC ? _moment2.default.utc(beginTime).endOf("day") : (0, _moment2.default)(beginTime).endOf("day");
            }
            break;
          case 2:
            var rangeRegex = /([0-9]+)([smhd])/;
            var sizeParts = rangeRegex.exec(parts[0]);
            if (sizeParts && sizeParts.length >= 3 && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
              var pos = parseInt(parts[1], 10);
              var num = parseInt(sizeParts[1], 10);
              var unit = sizeParts[2];
              var length = num * units[unit].length * 1000;
              beginTime = isUTC ? _moment2.default.utc(pos * length) : (0, _moment2.default)(pos * length);
              endTime = isUTC ? _moment2.default.utc((pos + 1) * length) : (0, _moment2.default)((pos + 1) * length);
            } else if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
              var _year2 = parseInt(parts[0], 10);
              var _month = parseInt(parts[1], 10);
              beginTime = isUTC ? _moment2.default.utc([_year2, _month - 1]) : (0, _moment2.default)([_year2, _month - 1]);
              endTime = isUTC ? _moment2.default.utc(beginTime).endOf("month") : (0, _moment2.default)(beginTime).endOf("month");
            }
            break;
          case 1:
            var year = parts[0];
            beginTime = isUTC ? _moment2.default.utc([year]) : (0, _moment2.default)([year]);
            endTime = isUTC ? _moment2.default.utc(beginTime).endOf("year") : (0, _moment2.default)(beginTime).endOf("year");
            break;
        }
        if (beginTime && beginTime.isValid() && endTime && endTime.isValid()) {
          return new _timerange2.default(beginTime, endTime);
        } else {
          return undefined;
        }
      },
      niceIndexString: function niceIndexString(index, format) {
        var t = void 0;
        var parts = index.split("-");
        switch (parts.length) {
          case 3:
            if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10)) && !_underscore2.default.isNaN(parseInt(parts[2], 10))) {
              var _year3 = parseInt(parts[0], 10);
              var month = parseInt(parts[1], 10);
              var day = parseInt(parts[2], 10);
              t = _moment2.default.utc([_year3, month - 1, day]);
              if (format) {
                return t.format(format);
              } else {
                return t.format("MMMM Do YYYY");
              }
            }
            break;
          case 2:
            var rangeRegex = /([0-9]+)([smhd])/;
            var sizeParts = rangeRegex.exec(parts[0]);
            if (sizeParts && sizeParts.length >= 3 && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
              return index;
            } else if (!_underscore2.default.isNaN(parseInt(parts[0], 10)) && !_underscore2.default.isNaN(parseInt(parts[1], 10))) {
              var _year4 = parseInt(parts[0], 10);
              var _month2 = parseInt(parts[1], 10);
              t = _moment2.default.utc([_year4, _month2 - 1]);
              if (format) {
                return t.format(format);
              } else {
                return t.format("MMMM");
              }
            }
            break;
          case 1:
            var year = parts[0];
            t = _moment2.default.utc([year]);
            if (format) {
              return t.format(format);
            } else {
              return t.format("YYYY");
            }
            break;
        }
        return index;
      },
      isMissing: function isMissing(val) {
        return _underscore2.default.isNull(val) || _underscore2.default.isUndefined(val) || _underscore2.default.isNaN(val);
      },
      fieldPathToArray: function fieldPathToArray(fieldSpec) {
        if (_underscore2.default.isArray(fieldSpec) || _underscore2.default.isFunction(fieldSpec)) {
          return fieldSpec;
        } else if (_underscore2.default.isString(fieldSpec)) {
          return fieldSpec.split(".");
        } else if (_underscore2.default.isUndefined(fieldSpec)) {
          return ["value"];
        }
      },
      generatePaths: function generatePaths(newData) {
        var _marked = [recurse].map(_regenerator2.default.mark);
        var paths = [];
        function recurse(data) {
          var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
          var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, key, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, path;
          return _regenerator2.default.wrap(function recurse$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!_underscore2.default.isObject(data)) {
                    _context.next = 53;
                    break;
                  }
                  _iteratorNormalCompletion = true;
                  _didIteratorError = false;
                  _iteratorError = undefined;
                  _context.prev = 4;
                  _iterator = (0, _getIterator3.default)((0, _keys2.default)(data));
                case 6:
                  if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                    _context.next = 37;
                    break;
                  }
                  key = _step.value;
                  _iteratorNormalCompletion2 = true;
                  _didIteratorError2 = false;
                  _iteratorError2 = undefined;
                  _context.prev = 11;
                  _iterator2 = (0, _getIterator3.default)(recurse(data[key], [].concat((0, _toConsumableArray3.default)(keys), [key])));
                case 13:
                  if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
                    _context.next = 20;
                    break;
                  }
                  path = _step2.value;
                  _context.next = 17;
                  return path;
                case 17:
                  _iteratorNormalCompletion2 = true;
                  _context.next = 13;
                  break;
                case 20:
                  _context.next = 26;
                  break;
                case 22:
                  _context.prev = 22;
                  _context.t0 = _context["catch"](11);
                  _didIteratorError2 = true;
                  _iteratorError2 = _context.t0;
                case 26:
                  _context.prev = 26;
                  _context.prev = 27;
                  if (!_iteratorNormalCompletion2 && _iterator2.return) {
                    _iterator2.return();
                  }
                case 29:
                  _context.prev = 29;
                  if (!_didIteratorError2) {
                    _context.next = 32;
                    break;
                  }
                  throw _iteratorError2;
                case 32:
                  return _context.finish(29);
                case 33:
                  return _context.finish(26);
                case 34:
                  _iteratorNormalCompletion = true;
                  _context.next = 6;
                  break;
                case 37:
                  _context.next = 43;
                  break;
                case 39:
                  _context.prev = 39;
                  _context.t1 = _context["catch"](4);
                  _didIteratorError = true;
                  _iteratorError = _context.t1;
                case 43:
                  _context.prev = 43;
                  _context.prev = 44;
                  if (!_iteratorNormalCompletion && _iterator.return) {
                    _iterator.return();
                  }
                case 46:
                  _context.prev = 46;
                  if (!_didIteratorError) {
                    _context.next = 49;
                    break;
                  }
                  throw _iteratorError;
                case 49:
                  return _context.finish(46);
                case 50:
                  return _context.finish(43);
                case 51:
                  _context.next = 55;
                  break;
                case 53:
                  _context.next = 55;
                  return keys;
                case 55:
                case "end":
                  return _context.stop();
              }
            }
          }, _marked[0], this, [[4, 39, 43, 51], [11, 22, 26, 34], [27,, 29, 33], [44,, 46, 50]]);
        }
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;
        try {
          for (var _iterator3 = (0, _getIterator3.default)(recurse(newData)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var key = _step3.value;
            paths.push(key);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
        return paths;
      },
      timestampFromArg: function timestampFromArg(arg) {
        if (_underscore2.default.isNumber(arg)) {
          return new Date(arg);
        } else if (_underscore2.default.isString(arg)) {
          return new Date(+arg);
        } else if (_underscore2.default.isDate(arg)) {
          return new Date(arg.getTime());
        } else if (_moment2.default.isMoment(arg)) {
          return new Date(arg.valueOf());
        } else {
          throw new Error("Unable to get timestamp from " + arg + ". Should be a number, date, or moment.");
        }
      },
      timeRangeFromArg: function timeRangeFromArg(arg) {
        if (arg instanceof _timerange2.default) {
          return arg;
        } else if (_underscore2.default.isString(arg)) {
          var _arg$split = arg.split(","),
              _arg$split2 = (0, _slicedToArray3.default)(_arg$split, 2),
              begin = _arg$split2[0],
              end = _arg$split2[1];
          return new _timerange2.default([+begin, +end]);
        } else if (_underscore2.default.isArray(arg) && arg.length === 2) {
          return new _timerange2.default(arg);
        } else {
          throw new Error("Unable to parse timerange. Should be a TimeRange. Got " + arg + ".");
        }
      },
      indexFromArgs: function indexFromArgs(arg1) {
        var arg2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        if (_underscore2.default.isString(arg1)) {
          return new _index2.default(arg1, arg2);
        } else if (arg1 instanceof _index2.default) {
          return arg1;
        } else {
          throw new Error("Unable to get index from " + arg1 + ". Should be a string or Index.");
        }
      },
      dataFromArg: function dataFromArg(arg) {
        var data = void 0;
        if (_underscore2.default.isObject(arg)) {
          data = new _immutable2.default.fromJS(arg);
        } else if (data instanceof _immutable2.default.Map) {
          data = arg;
        } else if (_underscore2.default.isNumber(arg) || _underscore2.default.isString(arg)) {
          data = new _immutable2.default.Map({ value: arg });
        } else {
          throw new Error("Unable to interpret event data from " + arg + ".");
        }
        return data;
      }
    };
  })($__require("16"));
});
$__System.registerDynamic("1a2", ["68", "19a", "1a5", "16"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    "use strict";

    Object.defineProperty(exports, "__esModule", { value: true });
    var _classCallCheck2 = $__require("68");
    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
    var _createClass2 = $__require("19a");
    var _createClass3 = _interopRequireDefault(_createClass2);
    var _util = $__require("1a5");
    var _util2 = _interopRequireDefault(_util);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Index = function () {
      function Index(s) {
        var utc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        (0, _classCallCheck3.default)(this, Index);
        this._utc = utc;
        this._string = s;
        this._timerange = _util2.default.rangeFromIndexString(s, this._utc);
      }
      (0, _createClass3.default)(Index, [{
        key: "toJSON",
        value: function toJSON() {
          return this._string;
        }
      }, {
        key: "toString",
        value: function toString() {
          return this._string;
        }
      }, {
        key: "toNiceString",
        value: function toNiceString(format) {
          return _util2.default.niceIndexString(this._string, format);
        }
      }, {
        key: "asString",
        value: function asString() {
          return this.toString();
        }
      }, {
        key: "asTimerange",
        value: function asTimerange() {
          return this._timerange;
        }
      }, {
        key: "begin",
        value: function begin() {
          return this._timerange.begin();
        }
      }, {
        key: "end",
        value: function end() {
          return this._timerange.end();
        }
      }], [{
        key: "getIndexString",
        value: function getIndexString(win, date) {
          var pos = _util2.default.windowPositionFromDate(win, date);
          return win + "-" + pos;
        }
      }, {
        key: "getIndexStringList",
        value: function getIndexStringList(win, timerange) {
          var pos1 = _util2.default.windowPositionFromDate(win, timerange.begin());
          var pos2 = _util2.default.windowPositionFromDate(win, timerange.end());
          var indexList = [];
          if (pos1 <= pos2) {
            for (var pos = pos1; pos <= pos2; pos++) {
              indexList.push(win + "-" + pos);
            }
          }
          return indexList;
        }
      }, {
        key: "getDailyIndexString",
        value: function getDailyIndexString(date) {
          var utc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var day = _util2.default.leftPad(utc ? date.getUTCDate() : date.getDate());
          var month = _util2.default.leftPad(utc ? date.getUTCMonth() + 1 : date.getMonth() + 1);
          var year = utc ? date.getUTCFullYear() : date.getFullYear();
          return year + "-" + month + "-" + day;
        }
      }, {
        key: "getMonthlyIndexString",
        value: function getMonthlyIndexString(date) {
          var utc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var month = _util2.default.leftPad(utc ? date.getUTCMonth() + 1 : date.getMonth() + 1);
          var year = utc ? date.getUTCFullYear() : date.getFullYear();
          return year + "-" + month;
        }
      }, {
        key: "getYearlyIndexString",
        value: function getYearlyIndexString(date) {
          var utc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          var year = utc ? date.getUTCFullYear() : date.getFullYear();
          return "" + year;
        }
      }]);
      return Index;
    }();
    exports.default = Index;
  })($__require("16"));
});
$__System.registerDynamic("194", ["198", "68", "19a", "122", "1bf", "1a2"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _keys = $__require("198");
  var _keys2 = _interopRequireDefault(_keys);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _underscore = $__require("122");
  var _underscore2 = _interopRequireDefault(_underscore);
  var _collection = $__require("1bf");
  var _collection2 = _interopRequireDefault(_collection);
  var _index = $__require("1a2");
  var _index2 = _interopRequireDefault(_index);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Collector = function () {
    function Collector(options, onTrigger) {
      (0, _classCallCheck3.default)(this, Collector);
      var windowType = options.windowType,
          windowDuration = options.windowDuration,
          groupBy = options.groupBy,
          emitOn = options.emitOn;
      this._groupBy = groupBy;
      this._emitOn = emitOn;
      this._windowType = windowType;
      this._windowDuration = windowDuration;
      this._onTrigger = onTrigger;
      this._collections = {};
    }
    (0, _createClass3.default)(Collector, [{
      key: "flushCollections",
      value: function flushCollections() {
        this.emitCollections(this._collections);
      }
    }, {
      key: "emitCollections",
      value: function emitCollections(collections) {
        var _this = this;
        if (this._onTrigger) {
          _underscore2.default.each(collections, function (c) {
            var collection = c.collection,
                windowKey = c.windowKey,
                groupByKey = c.groupByKey;
            _this._onTrigger && _this._onTrigger(collection, windowKey, groupByKey);
          });
        }
      }
    }, {
      key: "addEvent",
      value: function addEvent(event) {
        var _this2 = this;
        var timestamp = event.timestamp();
        var windowType = this._windowType;
        var windowKey = void 0;
        if (windowType === "fixed") {
          windowKey = _index2.default.getIndexString(this._windowDuration, timestamp);
        } else if (windowType === "daily") {
          windowKey = _index2.default.getDailyIndexString(timestamp);
        } else if (windowType === "monthly") {
          windowKey = _index2.default.getMonthlyIndexString(timestamp);
        } else if (windowType === "yearly") {
          windowKey = _index2.default.getYearlyIndexString(timestamp);
        } else {
          windowKey = windowType;
        }
        var groupByKey = this._groupBy(event);
        var collectionKey = groupByKey ? windowKey + "::" + groupByKey : windowKey;
        var discard = false;
        if (!_underscore2.default.has(this._collections, collectionKey)) {
          this._collections[collectionKey] = {
            windowKey: windowKey,
            groupByKey: groupByKey,
            collection: new _collection2.default()
          };
          discard = true;
        }
        this._collections[collectionKey].collection = this._collections[collectionKey].collection.addEvent(event);
        var discards = {};
        if (discard && windowType === "fixed") {
          _underscore2.default.each(this._collections, function (c, k) {
            if (windowKey !== c.windowKey) {
              discards[k] = c;
            }
          });
        }
        var emitOn = this._emitOn;
        if (emitOn === "eachEvent") {
          this.emitCollections(this._collections);
        } else if (emitOn === "discard") {
          this.emitCollections(discards);
          _underscore2.default.each((0, _keys2.default)(discards), function (k) {
            delete _this2._collections[k];
          });
        } else if (emitOn === "flush") {} else {
          throw new Error("Unknown emit type supplied to Collector");
        }
      }
    }]);
    return Collector;
  }();
  exports.default = Collector;
});
$__System.registerDynamic("68", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  exports.__esModule = true;

  exports.default = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
});
$__System.registerDynamic('21e', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  //     Underscore.js 1.8.3
  //     http://underscorejs.org
  //     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  //     Underscore may be freely distributed under the MIT license.

  var global = this || self,
      GLOBAL = global;
  (function () {

    // Baseline setup
    // --------------

    // Establish the root object, `window` in the browser, or `exports` on the server.
    var root = this;

    // Save the previous value of the `_` variable.
    var previousUnderscore = root._;

    // Save bytes in the minified (but not gzipped) version:
    var ArrayProto = Array.prototype,
        ObjProto = Object.prototype,
        FuncProto = Function.prototype;

    // Create quick reference variables for speed access to core prototypes.
    var push = ArrayProto.push,
        slice = ArrayProto.slice,
        toString = ObjProto.toString,
        hasOwnProperty = ObjProto.hasOwnProperty;

    // All **ECMAScript 5** native function implementations that we hope to use
    // are declared here.
    var nativeIsArray = Array.isArray,
        nativeKeys = Object.keys,
        nativeBind = FuncProto.bind,
        nativeCreate = Object.create;

    // Naked function reference for surrogate-prototype-swapping.
    var Ctor = function () {};

    // Create a safe reference to the Underscore object for use below.
    var _ = function (obj) {
      if (obj instanceof _) return obj;
      if (!(this instanceof _)) return new _(obj);
      this._wrapped = obj;
    };

    // Export the Underscore object for **Node.js**, with
    // backwards-compatibility for the old `require()` API. If we're in
    // the browser, add `_` as a global object.
    if (typeof exports !== 'undefined') {
      if (typeof module !== 'undefined' && module.exports) {
        exports = module.exports = _;
      }
      exports._ = _;
    } else {
      root._ = _;
    }

    // Current version.
    _.VERSION = '1.8.3';

    // Internal function that returns an efficient (for current engines) version
    // of the passed-in callback, to be repeatedly applied in other Underscore
    // functions.
    var optimizeCb = function (func, context, argCount) {
      if (context === void 0) return func;
      switch (argCount == null ? 3 : argCount) {
        case 1:
          return function (value) {
            return func.call(context, value);
          };
        case 2:
          return function (value, other) {
            return func.call(context, value, other);
          };
        case 3:
          return function (value, index, collection) {
            return func.call(context, value, index, collection);
          };
        case 4:
          return function (accumulator, value, index, collection) {
            return func.call(context, accumulator, value, index, collection);
          };
      }
      return function () {
        return func.apply(context, arguments);
      };
    };

    // A mostly-internal function to generate callbacks that can be applied
    // to each element in a collection, returning the desired result — either
    // identity, an arbitrary callback, a property matcher, or a property accessor.
    var cb = function (value, context, argCount) {
      if (value == null) return _.identity;
      if (_.isFunction(value)) return optimizeCb(value, context, argCount);
      if (_.isObject(value)) return _.matcher(value);
      return _.property(value);
    };
    _.iteratee = function (value, context) {
      return cb(value, context, Infinity);
    };

    // An internal function for creating assigner functions.
    var createAssigner = function (keysFunc, undefinedOnly) {
      return function (obj) {
        var length = arguments.length;
        if (length < 2 || obj == null) return obj;
        for (var index = 1; index < length; index++) {
          var source = arguments[index],
              keys = keysFunc(source),
              l = keys.length;
          for (var i = 0; i < l; i++) {
            var key = keys[i];
            if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
          }
        }
        return obj;
      };
    };

    // An internal function for creating a new object that inherits from another.
    var baseCreate = function (prototype) {
      if (!_.isObject(prototype)) return {};
      if (nativeCreate) return nativeCreate(prototype);
      Ctor.prototype = prototype;
      var result = new Ctor();
      Ctor.prototype = null;
      return result;
    };

    var property = function (key) {
      return function (obj) {
        return obj == null ? void 0 : obj[key];
      };
    };

    // Helper for collection methods to determine whether a collection
    // should be iterated as an array or as an object
    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
    var getLength = property('length');
    var isArrayLike = function (collection) {
      var length = getLength(collection);
      return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
    };

    // Collection Functions
    // --------------------

    // The cornerstone, an `each` implementation, aka `forEach`.
    // Handles raw objects in addition to array-likes. Treats all
    // sparse array-likes as if they were dense.
    _.each = _.forEach = function (obj, iteratee, context) {
      iteratee = optimizeCb(iteratee, context);
      var i, length;
      if (isArrayLike(obj)) {
        for (i = 0, length = obj.length; i < length; i++) {
          iteratee(obj[i], i, obj);
        }
      } else {
        var keys = _.keys(obj);
        for (i = 0, length = keys.length; i < length; i++) {
          iteratee(obj[keys[i]], keys[i], obj);
        }
      }
      return obj;
    };

    // Return the results of applying the iteratee to each element.
    _.map = _.collect = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          results = Array(length);
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        results[index] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
    };

    // Create a reducing function iterating left or right.
    function createReduce(dir) {
      // Optimized iterator function as using arguments.length
      // in the main function will deoptimize the, see #1991.
      function iterator(obj, iteratee, memo, keys, index, length) {
        for (; index >= 0 && index < length; index += dir) {
          var currentKey = keys ? keys[index] : index;
          memo = iteratee(memo, obj[currentKey], currentKey, obj);
        }
        return memo;
      }

      return function (obj, iteratee, memo, context) {
        iteratee = optimizeCb(iteratee, context, 4);
        var keys = !isArrayLike(obj) && _.keys(obj),
            length = (keys || obj).length,
            index = dir > 0 ? 0 : length - 1;
        // Determine the initial value if none is provided.
        if (arguments.length < 3) {
          memo = obj[keys ? keys[index] : index];
          index += dir;
        }
        return iterator(obj, iteratee, memo, keys, index, length);
      };
    }

    // **Reduce** builds up a single result from a list of values, aka `inject`,
    // or `foldl`.
    _.reduce = _.foldl = _.inject = createReduce(1);

    // The right-associative version of reduce, also known as `foldr`.
    _.reduceRight = _.foldr = createReduce(-1);

    // Return the first value which passes a truth test. Aliased as `detect`.
    _.find = _.detect = function (obj, predicate, context) {
      var key;
      if (isArrayLike(obj)) {
        key = _.findIndex(obj, predicate, context);
      } else {
        key = _.findKey(obj, predicate, context);
      }
      if (key !== void 0 && key !== -1) return obj[key];
    };

    // Return all the elements that pass a truth test.
    // Aliased as `select`.
    _.filter = _.select = function (obj, predicate, context) {
      var results = [];
      predicate = cb(predicate, context);
      _.each(obj, function (value, index, list) {
        if (predicate(value, index, list)) results.push(value);
      });
      return results;
    };

    // Return all the elements for which a truth test fails.
    _.reject = function (obj, predicate, context) {
      return _.filter(obj, _.negate(cb(predicate)), context);
    };

    // Determine whether all of the elements match a truth test.
    // Aliased as `all`.
    _.every = _.all = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length;
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        if (!predicate(obj[currentKey], currentKey, obj)) return false;
      }
      return true;
    };

    // Determine if at least one element in the object matches a truth test.
    // Aliased as `any`.
    _.some = _.any = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length;
      for (var index = 0; index < length; index++) {
        var currentKey = keys ? keys[index] : index;
        if (predicate(obj[currentKey], currentKey, obj)) return true;
      }
      return false;
    };

    // Determine if the array or object contains a given item (using `===`).
    // Aliased as `includes` and `include`.
    _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      if (typeof fromIndex != 'number' || guard) fromIndex = 0;
      return _.indexOf(obj, item, fromIndex) >= 0;
    };

    // Invoke a method (with arguments) on every item in a collection.
    _.invoke = function (obj, method) {
      var args = slice.call(arguments, 2);
      var isFunc = _.isFunction(method);
      return _.map(obj, function (value) {
        var func = isFunc ? method : value[method];
        return func == null ? func : func.apply(value, args);
      });
    };

    // Convenience version of a common use case of `map`: fetching a property.
    _.pluck = function (obj, key) {
      return _.map(obj, _.property(key));
    };

    // Convenience version of a common use case of `filter`: selecting only objects
    // containing specific `key:value` pairs.
    _.where = function (obj, attrs) {
      return _.filter(obj, _.matcher(attrs));
    };

    // Convenience version of a common use case of `find`: getting the first object
    // containing specific `key:value` pairs.
    _.findWhere = function (obj, attrs) {
      return _.find(obj, _.matcher(attrs));
    };

    // Return the maximum element (or element-based computation).
    _.max = function (obj, iteratee, context) {
      var result = -Infinity,
          lastComputed = -Infinity,
          value,
          computed;
      if (iteratee == null && obj != null) {
        obj = isArrayLike(obj) ? obj : _.values(obj);
        for (var i = 0, length = obj.length; i < length; i++) {
          value = obj[i];
          if (value > result) {
            result = value;
          }
        }
      } else {
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index, list) {
          computed = iteratee(value, index, list);
          if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
            result = value;
            lastComputed = computed;
          }
        });
      }
      return result;
    };

    // Return the minimum element (or element-based computation).
    _.min = function (obj, iteratee, context) {
      var result = Infinity,
          lastComputed = Infinity,
          value,
          computed;
      if (iteratee == null && obj != null) {
        obj = isArrayLike(obj) ? obj : _.values(obj);
        for (var i = 0, length = obj.length; i < length; i++) {
          value = obj[i];
          if (value < result) {
            result = value;
          }
        }
      } else {
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index, list) {
          computed = iteratee(value, index, list);
          if (computed < lastComputed || computed === Infinity && result === Infinity) {
            result = value;
            lastComputed = computed;
          }
        });
      }
      return result;
    };

    // Shuffle a collection, using the modern version of the
    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
    _.shuffle = function (obj) {
      var set = isArrayLike(obj) ? obj : _.values(obj);
      var length = set.length;
      var shuffled = Array(length);
      for (var index = 0, rand; index < length; index++) {
        rand = _.random(0, index);
        if (rand !== index) shuffled[index] = shuffled[rand];
        shuffled[rand] = set[index];
      }
      return shuffled;
    };

    // Sample **n** random values from a collection.
    // If **n** is not specified, returns a single random element.
    // The internal `guard` argument allows it to work with `map`.
    _.sample = function (obj, n, guard) {
      if (n == null || guard) {
        if (!isArrayLike(obj)) obj = _.values(obj);
        return obj[_.random(obj.length - 1)];
      }
      return _.shuffle(obj).slice(0, Math.max(0, n));
    };

    // Sort the object's values by a criterion produced by an iteratee.
    _.sortBy = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      return _.pluck(_.map(obj, function (value, index, list) {
        return {
          value: value,
          index: index,
          criteria: iteratee(value, index, list)
        };
      }).sort(function (left, right) {
        var a = left.criteria;
        var b = right.criteria;
        if (a !== b) {
          if (a > b || a === void 0) return 1;
          if (a < b || b === void 0) return -1;
        }
        return left.index - right.index;
      }), 'value');
    };

    // An internal function used for aggregate "group by" operations.
    var group = function (behavior) {
      return function (obj, iteratee, context) {
        var result = {};
        iteratee = cb(iteratee, context);
        _.each(obj, function (value, index) {
          var key = iteratee(value, index, obj);
          behavior(result, value, key);
        });
        return result;
      };
    };

    // Groups the object's values by a criterion. Pass either a string attribute
    // to group by, or a function that returns the criterion.
    _.groupBy = group(function (result, value, key) {
      if (_.has(result, key)) result[key].push(value);else result[key] = [value];
    });

    // Indexes the object's values by a criterion, similar to `groupBy`, but for
    // when you know that your index values will be unique.
    _.indexBy = group(function (result, value, key) {
      result[key] = value;
    });

    // Counts instances of an object that group by a certain criterion. Pass
    // either a string attribute to count by, or a function that returns the
    // criterion.
    _.countBy = group(function (result, value, key) {
      if (_.has(result, key)) result[key]++;else result[key] = 1;
    });

    // Safely create a real, live array from anything iterable.
    _.toArray = function (obj) {
      if (!obj) return [];
      if (_.isArray(obj)) return slice.call(obj);
      if (isArrayLike(obj)) return _.map(obj, _.identity);
      return _.values(obj);
    };

    // Return the number of elements in an object.
    _.size = function (obj) {
      if (obj == null) return 0;
      return isArrayLike(obj) ? obj.length : _.keys(obj).length;
    };

    // Split a collection into two arrays: one whose elements all satisfy the given
    // predicate, and one whose elements all do not satisfy the predicate.
    _.partition = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var pass = [],
          fail = [];
      _.each(obj, function (value, key, obj) {
        (predicate(value, key, obj) ? pass : fail).push(value);
      });
      return [pass, fail];
    };

    // Array Functions
    // ---------------

    // Get the first element of an array. Passing **n** will return the first N
    // values in the array. Aliased as `head` and `take`. The **guard** check
    // allows it to work with `_.map`.
    _.first = _.head = _.take = function (array, n, guard) {
      if (array == null) return void 0;
      if (n == null || guard) return array[0];
      return _.initial(array, array.length - n);
    };

    // Returns everything but the last entry of the array. Especially useful on
    // the arguments object. Passing **n** will return all the values in
    // the array, excluding the last N.
    _.initial = function (array, n, guard) {
      return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
    };

    // Get the last element of an array. Passing **n** will return the last N
    // values in the array.
    _.last = function (array, n, guard) {
      if (array == null) return void 0;
      if (n == null || guard) return array[array.length - 1];
      return _.rest(array, Math.max(0, array.length - n));
    };

    // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
    // Especially useful on the arguments object. Passing an **n** will return
    // the rest N values in the array.
    _.rest = _.tail = _.drop = function (array, n, guard) {
      return slice.call(array, n == null || guard ? 1 : n);
    };

    // Trim out all falsy values from an array.
    _.compact = function (array) {
      return _.filter(array, _.identity);
    };

    // Internal implementation of a recursive `flatten` function.
    var flatten = function (input, shallow, strict, startIndex) {
      var output = [],
          idx = 0;
      for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
        var value = input[i];
        if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
          //flatten current level of array or arguments object
          if (!shallow) value = flatten(value, shallow, strict);
          var j = 0,
              len = value.length;
          output.length += len;
          while (j < len) {
            output[idx++] = value[j++];
          }
        } else if (!strict) {
          output[idx++] = value;
        }
      }
      return output;
    };

    // Flatten out an array, either recursively (by default), or just one level.
    _.flatten = function (array, shallow) {
      return flatten(array, shallow, false);
    };

    // Return a version of the array that does not contain the specified value(s).
    _.without = function (array) {
      return _.difference(array, slice.call(arguments, 1));
    };

    // Produce a duplicate-free version of the array. If the array has already
    // been sorted, you have the option of using a faster algorithm.
    // Aliased as `unique`.
    _.uniq = _.unique = function (array, isSorted, iteratee, context) {
      if (!_.isBoolean(isSorted)) {
        context = iteratee;
        iteratee = isSorted;
        isSorted = false;
      }
      if (iteratee != null) iteratee = cb(iteratee, context);
      var result = [];
      var seen = [];
      for (var i = 0, length = getLength(array); i < length; i++) {
        var value = array[i],
            computed = iteratee ? iteratee(value, i, array) : value;
        if (isSorted) {
          if (!i || seen !== computed) result.push(value);
          seen = computed;
        } else if (iteratee) {
          if (!_.contains(seen, computed)) {
            seen.push(computed);
            result.push(value);
          }
        } else if (!_.contains(result, value)) {
          result.push(value);
        }
      }
      return result;
    };

    // Produce an array that contains the union: each distinct element from all of
    // the passed-in arrays.
    _.union = function () {
      return _.uniq(flatten(arguments, true, true));
    };

    // Produce an array that contains every item shared between all the
    // passed-in arrays.
    _.intersection = function (array) {
      var result = [];
      var argsLength = arguments.length;
      for (var i = 0, length = getLength(array); i < length; i++) {
        var item = array[i];
        if (_.contains(result, item)) continue;
        for (var j = 1; j < argsLength; j++) {
          if (!_.contains(arguments[j], item)) break;
        }
        if (j === argsLength) result.push(item);
      }
      return result;
    };

    // Take the difference between one array and a number of other arrays.
    // Only the elements present in just the first array will remain.
    _.difference = function (array) {
      var rest = flatten(arguments, true, true, 1);
      return _.filter(array, function (value) {
        return !_.contains(rest, value);
      });
    };

    // Zip together multiple lists into a single array -- elements that share
    // an index go together.
    _.zip = function () {
      return _.unzip(arguments);
    };

    // Complement of _.zip. Unzip accepts an array of arrays and groups
    // each array's elements on shared indices
    _.unzip = function (array) {
      var length = array && _.max(array, getLength).length || 0;
      var result = Array(length);

      for (var index = 0; index < length; index++) {
        result[index] = _.pluck(array, index);
      }
      return result;
    };

    // Converts lists into objects. Pass either a single array of `[key, value]`
    // pairs, or two parallel arrays of the same length -- one of keys, and one of
    // the corresponding values.
    _.object = function (list, values) {
      var result = {};
      for (var i = 0, length = getLength(list); i < length; i++) {
        if (values) {
          result[list[i]] = values[i];
        } else {
          result[list[i][0]] = list[i][1];
        }
      }
      return result;
    };

    // Generator function to create the findIndex and findLastIndex functions
    function createPredicateIndexFinder(dir) {
      return function (array, predicate, context) {
        predicate = cb(predicate, context);
        var length = getLength(array);
        var index = dir > 0 ? 0 : length - 1;
        for (; index >= 0 && index < length; index += dir) {
          if (predicate(array[index], index, array)) return index;
        }
        return -1;
      };
    }

    // Returns the first index on an array-like that passes a predicate test
    _.findIndex = createPredicateIndexFinder(1);
    _.findLastIndex = createPredicateIndexFinder(-1);

    // Use a comparator function to figure out the smallest index at which
    // an object should be inserted so as to maintain order. Uses binary search.
    _.sortedIndex = function (array, obj, iteratee, context) {
      iteratee = cb(iteratee, context, 1);
      var value = iteratee(obj);
      var low = 0,
          high = getLength(array);
      while (low < high) {
        var mid = Math.floor((low + high) / 2);
        if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;
      }
      return low;
    };

    // Generator function to create the indexOf and lastIndexOf functions
    function createIndexFinder(dir, predicateFind, sortedIndex) {
      return function (array, item, idx) {
        var i = 0,
            length = getLength(array);
        if (typeof idx == 'number') {
          if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
          } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
          }
        } else if (sortedIndex && idx && length) {
          idx = sortedIndex(array, item);
          return array[idx] === item ? idx : -1;
        }
        if (item !== item) {
          idx = predicateFind(slice.call(array, i, length), _.isNaN);
          return idx >= 0 ? idx + i : -1;
        }
        for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
          if (array[idx] === item) return idx;
        }
        return -1;
      };
    }

    // Return the position of the first occurrence of an item in an array,
    // or -1 if the item is not included in the array.
    // If the array is large and already in sort order, pass `true`
    // for **isSorted** to use binary search.
    _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
    _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

    // Generate an integer Array containing an arithmetic progression. A port of
    // the native Python `range()` function. See
    // [the Python documentation](http://docs.python.org/library/functions.html#range).
    _.range = function (start, stop, step) {
      if (stop == null) {
        stop = start || 0;
        start = 0;
      }
      step = step || 1;

      var length = Math.max(Math.ceil((stop - start) / step), 0);
      var range = Array(length);

      for (var idx = 0; idx < length; idx++, start += step) {
        range[idx] = start;
      }

      return range;
    };

    // Function (ahem) Functions
    // ------------------

    // Determines whether to execute a function as a constructor
    // or a normal function with the provided arguments
    var executeBound = function (sourceFunc, boundFunc, context, callingContext, args) {
      if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
      var self = baseCreate(sourceFunc.prototype);
      var result = sourceFunc.apply(self, args);
      if (_.isObject(result)) return result;
      return self;
    };

    // Create a function bound to a given object (assigning `this`, and arguments,
    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
    // available.
    _.bind = function (func, context) {
      if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
      if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
      var args = slice.call(arguments, 2);
      var bound = function () {
        return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
      };
      return bound;
    };

    // Partially apply a function by creating a version that has had some of its
    // arguments pre-filled, without changing its dynamic `this` context. _ acts
    // as a placeholder, allowing any combination of arguments to be pre-filled.
    _.partial = function (func) {
      var boundArgs = slice.call(arguments, 1);
      var bound = function () {
        var position = 0,
            length = boundArgs.length;
        var args = Array(length);
        for (var i = 0; i < length; i++) {
          args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
        }
        while (position < arguments.length) args.push(arguments[position++]);
        return executeBound(func, bound, this, this, args);
      };
      return bound;
    };

    // Bind a number of an object's methods to that object. Remaining arguments
    // are the method names to be bound. Useful for ensuring that all callbacks
    // defined on an object belong to it.
    _.bindAll = function (obj) {
      var i,
          length = arguments.length,
          key;
      if (length <= 1) throw new Error('bindAll must be passed function names');
      for (i = 1; i < length; i++) {
        key = arguments[i];
        obj[key] = _.bind(obj[key], obj);
      }
      return obj;
    };

    // Memoize an expensive function by storing its results.
    _.memoize = function (func, hasher) {
      var memoize = function (key) {
        var cache = memoize.cache;
        var address = '' + (hasher ? hasher.apply(this, arguments) : key);
        if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
        return cache[address];
      };
      memoize.cache = {};
      return memoize;
    };

    // Delays a function for the given number of milliseconds, and then calls
    // it with the arguments supplied.
    _.delay = function (func, wait) {
      var args = slice.call(arguments, 2);
      return setTimeout(function () {
        return func.apply(null, args);
      }, wait);
    };

    // Defers a function, scheduling it to run after the current call stack has
    // cleared.
    _.defer = _.partial(_.delay, _, 1);

    // Returns a function, that, when invoked, will only be triggered at most once
    // during a given window of time. Normally, the throttled function will run
    // as much as it can, without ever going more than once per `wait` duration;
    // but if you'd like to disable the execution on the leading edge, pass
    // `{leading: false}`. To disable execution on the trailing edge, ditto.
    _.throttle = function (func, wait, options) {
      var context, args, result;
      var timeout = null;
      var previous = 0;
      if (!options) options = {};
      var later = function () {
        previous = options.leading === false ? 0 : _.now();
        timeout = null;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      };
      return function () {
        var now = _.now();
        if (!previous && options.leading === false) previous = now;
        var remaining = wait - (now - previous);
        context = this;
        args = arguments;
        if (remaining <= 0 || remaining > wait) {
          if (timeout) {
            clearTimeout(timeout);
            timeout = null;
          }
          previous = now;
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        } else if (!timeout && options.trailing !== false) {
          timeout = setTimeout(later, remaining);
        }
        return result;
      };
    };

    // Returns a function, that, as long as it continues to be invoked, will not
    // be triggered. The function will be called after it stops being called for
    // N milliseconds. If `immediate` is passed, trigger the function on the
    // leading edge, instead of the trailing.
    _.debounce = function (func, wait, immediate) {
      var timeout, args, context, timestamp, result;

      var later = function () {
        var last = _.now() - timestamp;

        if (last < wait && last >= 0) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate) {
            result = func.apply(context, args);
            if (!timeout) context = args = null;
          }
        }
      };

      return function () {
        context = this;
        args = arguments;
        timestamp = _.now();
        var callNow = immediate && !timeout;
        if (!timeout) timeout = setTimeout(later, wait);
        if (callNow) {
          result = func.apply(context, args);
          context = args = null;
        }

        return result;
      };
    };

    // Returns the first function passed as an argument to the second,
    // allowing you to adjust arguments, run code before and after, and
    // conditionally execute the original function.
    _.wrap = function (func, wrapper) {
      return _.partial(wrapper, func);
    };

    // Returns a negated version of the passed-in predicate.
    _.negate = function (predicate) {
      return function () {
        return !predicate.apply(this, arguments);
      };
    };

    // Returns a function that is the composition of a list of functions, each
    // consuming the return value of the function that follows.
    _.compose = function () {
      var args = arguments;
      var start = args.length - 1;
      return function () {
        var i = start;
        var result = args[start].apply(this, arguments);
        while (i--) result = args[i].call(this, result);
        return result;
      };
    };

    // Returns a function that will only be executed on and after the Nth call.
    _.after = function (times, func) {
      return function () {
        if (--times < 1) {
          return func.apply(this, arguments);
        }
      };
    };

    // Returns a function that will only be executed up to (but not including) the Nth call.
    _.before = function (times, func) {
      var memo;
      return function () {
        if (--times > 0) {
          memo = func.apply(this, arguments);
        }
        if (times <= 1) func = null;
        return memo;
      };
    };

    // Returns a function that will be executed at most one time, no matter how
    // often you call it. Useful for lazy initialization.
    _.once = _.partial(_.before, 2);

    // Object Functions
    // ----------------

    // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
    var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');
    var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

    function collectNonEnumProps(obj, keys) {
      var nonEnumIdx = nonEnumerableProps.length;
      var constructor = obj.constructor;
      var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;

      // Constructor is a special case.
      var prop = 'constructor';
      if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

      while (nonEnumIdx--) {
        prop = nonEnumerableProps[nonEnumIdx];
        if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
          keys.push(prop);
        }
      }
    }

    // Retrieve the names of an object's own properties.
    // Delegates to **ECMAScript 5**'s native `Object.keys`
    _.keys = function (obj) {
      if (!_.isObject(obj)) return [];
      if (nativeKeys) return nativeKeys(obj);
      var keys = [];
      for (var key in obj) if (_.has(obj, key)) keys.push(key);
      // Ahem, IE < 9.
      if (hasEnumBug) collectNonEnumProps(obj, keys);
      return keys;
    };

    // Retrieve all the property names of an object.
    _.allKeys = function (obj) {
      if (!_.isObject(obj)) return [];
      var keys = [];
      for (var key in obj) keys.push(key);
      // Ahem, IE < 9.
      if (hasEnumBug) collectNonEnumProps(obj, keys);
      return keys;
    };

    // Retrieve the values of an object's properties.
    _.values = function (obj) {
      var keys = _.keys(obj);
      var length = keys.length;
      var values = Array(length);
      for (var i = 0; i < length; i++) {
        values[i] = obj[keys[i]];
      }
      return values;
    };

    // Returns the results of applying the iteratee to each element of the object
    // In contrast to _.map it returns an object
    _.mapObject = function (obj, iteratee, context) {
      iteratee = cb(iteratee, context);
      var keys = _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
    };

    // Convert an object into a list of `[key, value]` pairs.
    _.pairs = function (obj) {
      var keys = _.keys(obj);
      var length = keys.length;
      var pairs = Array(length);
      for (var i = 0; i < length; i++) {
        pairs[i] = [keys[i], obj[keys[i]]];
      }
      return pairs;
    };

    // Invert the keys and values of an object. The values must be serializable.
    _.invert = function (obj) {
      var result = {};
      var keys = _.keys(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        result[obj[keys[i]]] = keys[i];
      }
      return result;
    };

    // Return a sorted list of the function names available on the object.
    // Aliased as `methods`
    _.functions = _.methods = function (obj) {
      var names = [];
      for (var key in obj) {
        if (_.isFunction(obj[key])) names.push(key);
      }
      return names.sort();
    };

    // Extend a given object with all the properties in passed-in object(s).
    _.extend = createAssigner(_.allKeys);

    // Assigns a given object with all the own properties in the passed-in object(s)
    // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
    _.extendOwn = _.assign = createAssigner(_.keys);

    // Returns the first key on an object that passes a predicate test
    _.findKey = function (obj, predicate, context) {
      predicate = cb(predicate, context);
      var keys = _.keys(obj),
          key;
      for (var i = 0, length = keys.length; i < length; i++) {
        key = keys[i];
        if (predicate(obj[key], key, obj)) return key;
      }
    };

    // Return a copy of the object only containing the whitelisted properties.
    _.pick = function (object, oiteratee, context) {
      var result = {},
          obj = object,
          iteratee,
          keys;
      if (obj == null) return result;
      if (_.isFunction(oiteratee)) {
        keys = _.allKeys(obj);
        iteratee = optimizeCb(oiteratee, context);
      } else {
        keys = flatten(arguments, false, false, 1);
        iteratee = function (value, key, obj) {
          return key in obj;
        };
        obj = Object(obj);
      }
      for (var i = 0, length = keys.length; i < length; i++) {
        var key = keys[i];
        var value = obj[key];
        if (iteratee(value, key, obj)) result[key] = value;
      }
      return result;
    };

    // Return a copy of the object without the blacklisted properties.
    _.omit = function (obj, iteratee, context) {
      if (_.isFunction(iteratee)) {
        iteratee = _.negate(iteratee);
      } else {
        var keys = _.map(flatten(arguments, false, false, 1), String);
        iteratee = function (value, key) {
          return !_.contains(keys, key);
        };
      }
      return _.pick(obj, iteratee, context);
    };

    // Fill in a given object with default properties.
    _.defaults = createAssigner(_.allKeys, true);

    // Creates an object that inherits from the given prototype object.
    // If additional properties are provided then they will be added to the
    // created object.
    _.create = function (prototype, props) {
      var result = baseCreate(prototype);
      if (props) _.extendOwn(result, props);
      return result;
    };

    // Create a (shallow-cloned) duplicate of an object.
    _.clone = function (obj) {
      if (!_.isObject(obj)) return obj;
      return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
    };

    // Invokes interceptor with the obj, and then returns obj.
    // The primary purpose of this method is to "tap into" a method chain, in
    // order to perform operations on intermediate results within the chain.
    _.tap = function (obj, interceptor) {
      interceptor(obj);
      return obj;
    };

    // Returns whether an object has a given set of `key:value` pairs.
    _.isMatch = function (object, attrs) {
      var keys = _.keys(attrs),
          length = keys.length;
      if (object == null) return !length;
      var obj = Object(object);
      for (var i = 0; i < length; i++) {
        var key = keys[i];
        if (attrs[key] !== obj[key] || !(key in obj)) return false;
      }
      return true;
    };

    // Internal recursive comparison function for `isEqual`.
    var eq = function (a, b, aStack, bStack) {
      // Identical objects are equal. `0 === -0`, but they aren't identical.
      // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
      if (a === b) return a !== 0 || 1 / a === 1 / b;
      // A strict comparison is necessary because `null == undefined`.
      if (a == null || b == null) return a === b;
      // Unwrap any wrapped objects.
      if (a instanceof _) a = a._wrapped;
      if (b instanceof _) b = b._wrapped;
      // Compare `[[Class]]` names.
      var className = toString.call(a);
      if (className !== toString.call(b)) return false;
      switch (className) {
        // Strings, numbers, regular expressions, dates, and booleans are compared by value.
        case '[object RegExp]':
        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
        case '[object String]':
          // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
          // equivalent to `new String("5")`.
          return '' + a === '' + b;
        case '[object Number]':
          // `NaN`s are equivalent, but non-reflexive.
          // Object(NaN) is equivalent to NaN
          if (+a !== +a) return +b !== +b;
          // An `egal` comparison is performed for other numeric values.
          return +a === 0 ? 1 / +a === 1 / b : +a === +b;
        case '[object Date]':
        case '[object Boolean]':
          // Coerce dates and booleans to numeric primitive values. Dates are compared by their
          // millisecond representations. Note that invalid dates with millisecond representations
          // of `NaN` are not equivalent.
          return +a === +b;
      }

      var areArrays = className === '[object Array]';
      if (!areArrays) {
        if (typeof a != 'object' || typeof b != 'object') return false;

        // Objects with different constructors are not equivalent, but `Object`s or `Array`s
        // from different frames are.
        var aCtor = a.constructor,
            bCtor = b.constructor;
        if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {
          return false;
        }
      }
      // Assume equality for cyclic structures. The algorithm for detecting cyclic
      // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

      // Initializing stack of traversed objects.
      // It's done here since we only need them for objects and arrays comparison.
      aStack = aStack || [];
      bStack = bStack || [];
      var length = aStack.length;
      while (length--) {
        // Linear search. Performance is inversely proportional to the number of
        // unique nested structures.
        if (aStack[length] === a) return bStack[length] === b;
      }

      // Add the first object to the stack of traversed objects.
      aStack.push(a);
      bStack.push(b);

      // Recursively compare objects and arrays.
      if (areArrays) {
        // Compare array lengths to determine if a deep comparison is necessary.
        length = a.length;
        if (length !== b.length) return false;
        // Deep compare the contents, ignoring non-numeric properties.
        while (length--) {
          if (!eq(a[length], b[length], aStack, bStack)) return false;
        }
      } else {
        // Deep compare objects.
        var keys = _.keys(a),
            key;
        length = keys.length;
        // Ensure that both objects contain the same number of properties before comparing deep equality.
        if (_.keys(b).length !== length) return false;
        while (length--) {
          // Deep compare each member
          key = keys[length];
          if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
        }
      }
      // Remove the first object from the stack of traversed objects.
      aStack.pop();
      bStack.pop();
      return true;
    };

    // Perform a deep comparison to check if two objects are equal.
    _.isEqual = function (a, b) {
      return eq(a, b);
    };

    // Is a given array, string, or object empty?
    // An "empty" object has no enumerable own-properties.
    _.isEmpty = function (obj) {
      if (obj == null) return true;
      if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
      return _.keys(obj).length === 0;
    };

    // Is a given value a DOM element?
    _.isElement = function (obj) {
      return !!(obj && obj.nodeType === 1);
    };

    // Is a given value an array?
    // Delegates to ECMA5's native Array.isArray
    _.isArray = nativeIsArray || function (obj) {
      return toString.call(obj) === '[object Array]';
    };

    // Is a given variable an object?
    _.isObject = function (obj) {
      var type = typeof obj;
      return type === 'function' || type === 'object' && !!obj;
    };

    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
    _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (name) {
      _['is' + name] = function (obj) {
        return toString.call(obj) === '[object ' + name + ']';
      };
    });

    // Define a fallback version of the method in browsers (ahem, IE < 9), where
    // there isn't any inspectable "Arguments" type.
    if (!_.isArguments(arguments)) {
      _.isArguments = function (obj) {
        return _.has(obj, 'callee');
      };
    }

    // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
    // IE 11 (#1621), and in Safari 8 (#1929).
    if (typeof /./ != 'function' && typeof Int8Array != 'object') {
      _.isFunction = function (obj) {
        return typeof obj == 'function' || false;
      };
    }

    // Is a given object a finite number?
    _.isFinite = function (obj) {
      return isFinite(obj) && !isNaN(parseFloat(obj));
    };

    // Is the given value `NaN`? (NaN is the only number which does not equal itself).
    _.isNaN = function (obj) {
      return _.isNumber(obj) && obj !== +obj;
    };

    // Is a given value a boolean?
    _.isBoolean = function (obj) {
      return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
    };

    // Is a given value equal to null?
    _.isNull = function (obj) {
      return obj === null;
    };

    // Is a given variable undefined?
    _.isUndefined = function (obj) {
      return obj === void 0;
    };

    // Shortcut function for checking if an object has a given property directly
    // on itself (in other words, not on a prototype).
    _.has = function (obj, key) {
      return obj != null && hasOwnProperty.call(obj, key);
    };

    // Utility Functions
    // -----------------

    // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
    // previous owner. Returns a reference to the Underscore object.
    _.noConflict = function () {
      root._ = previousUnderscore;
      return this;
    };

    // Keep the identity function around for default iteratees.
    _.identity = function (value) {
      return value;
    };

    // Predicate-generating functions. Often useful outside of Underscore.
    _.constant = function (value) {
      return function () {
        return value;
      };
    };

    _.noop = function () {};

    _.property = property;

    // Generates a function for a given object that returns a given property.
    _.propertyOf = function (obj) {
      return obj == null ? function () {} : function (key) {
        return obj[key];
      };
    };

    // Returns a predicate for checking whether an object has a given set of
    // `key:value` pairs.
    _.matcher = _.matches = function (attrs) {
      attrs = _.extendOwn({}, attrs);
      return function (obj) {
        return _.isMatch(obj, attrs);
      };
    };

    // Run a function **n** times.
    _.times = function (n, iteratee, context) {
      var accum = Array(Math.max(0, n));
      iteratee = optimizeCb(iteratee, context, 1);
      for (var i = 0; i < n; i++) accum[i] = iteratee(i);
      return accum;
    };

    // Return a random integer between min and max (inclusive).
    _.random = function (min, max) {
      if (max == null) {
        max = min;
        min = 0;
      }
      return min + Math.floor(Math.random() * (max - min + 1));
    };

    // A (possibly faster) way to get the current timestamp as an integer.
    _.now = Date.now || function () {
      return new Date().getTime();
    };

    // List of HTML entities for escaping.
    var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '`': '&#x60;'
    };
    var unescapeMap = _.invert(escapeMap);

    // Functions for escaping and unescaping strings to/from HTML interpolation.
    var createEscaper = function (map) {
      var escaper = function (match) {
        return map[match];
      };
      // Regexes for identifying a key that needs to be escaped
      var source = '(?:' + _.keys(map).join('|') + ')';
      var testRegexp = RegExp(source);
      var replaceRegexp = RegExp(source, 'g');
      return function (string) {
        string = string == null ? '' : '' + string;
        return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
      };
    };
    _.escape = createEscaper(escapeMap);
    _.unescape = createEscaper(unescapeMap);

    // If the value of the named `property` is a function then invoke it with the
    // `object` as context; otherwise, return it.
    _.result = function (object, property, fallback) {
      var value = object == null ? void 0 : object[property];
      if (value === void 0) {
        value = fallback;
      }
      return _.isFunction(value) ? value.call(object) : value;
    };

    // Generate a unique integer id (unique within the entire client session).
    // Useful for temporary DOM ids.
    var idCounter = 0;
    _.uniqueId = function (prefix) {
      var id = ++idCounter + '';
      return prefix ? prefix + id : id;
    };

    // By default, Underscore uses ERB-style template delimiters, change the
    // following template settings to use alternative delimiters.
    _.templateSettings = {
      evaluate: /<%([\s\S]+?)%>/g,
      interpolate: /<%=([\s\S]+?)%>/g,
      escape: /<%-([\s\S]+?)%>/g
    };

    // When customizing `templateSettings`, if you don't want to define an
    // interpolation, evaluation or escaping regex, we need one that is
    // guaranteed not to match.
    var noMatch = /(.)^/;

    // Certain characters need to be escaped so that they can be put into a
    // string literal.
    var escapes = {
      "'": "'",
      '\\': '\\',
      '\r': 'r',
      '\n': 'n',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };

    var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

    var escapeChar = function (match) {
      return '\\' + escapes[match];
    };

    // JavaScript micro-templating, similar to John Resig's implementation.
    // Underscore templating handles arbitrary delimiters, preserves whitespace,
    // and correctly escapes quotes within interpolated code.
    // NB: `oldSettings` only exists for backwards compatibility.
    _.template = function (text, settings, oldSettings) {
      if (!settings && oldSettings) settings = oldSettings;
      settings = _.defaults({}, settings, _.templateSettings);

      // Combine delimiters into one regular expression via alternation.
      var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g');

      // Compile the template source, escaping string literals appropriately.
      var index = 0;
      var source = "__p+='";
      text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
        source += text.slice(index, offset).replace(escaper, escapeChar);
        index = offset + match.length;

        if (escape) {
          source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
        } else if (interpolate) {
          source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
        } else if (evaluate) {
          source += "';\n" + evaluate + "\n__p+='";
        }

        // Adobe VMs need the match returned to produce the correct offest.
        return match;
      });
      source += "';\n";

      // If a variable is not specified, place data values in local scope.
      if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

      source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + 'return __p;\n';

      try {
        var render = new Function(settings.variable || 'obj', '_', source);
      } catch (e) {
        e.source = source;
        throw e;
      }

      var template = function (data) {
        return render.call(this, data, _);
      };

      // Provide the compiled source as a convenience for precompilation.
      var argument = settings.variable || 'obj';
      template.source = 'function(' + argument + '){\n' + source + '}';

      return template;
    };

    // Add a "chain" function. Start chaining a wrapped Underscore object.
    _.chain = function (obj) {
      var instance = _(obj);
      instance._chain = true;
      return instance;
    };

    // OOP
    // ---------------
    // If Underscore is called as a function, it returns a wrapped object that
    // can be used OO-style. This wrapper holds altered versions of all the
    // underscore functions. Wrapped objects may be chained.

    // Helper function to continue chaining intermediate results.
    var result = function (instance, obj) {
      return instance._chain ? _(obj).chain() : obj;
    };

    // Add your own custom functions to the Underscore object.
    _.mixin = function (obj) {
      _.each(_.functions(obj), function (name) {
        var func = _[name] = obj[name];
        _.prototype[name] = function () {
          var args = [this._wrapped];
          push.apply(args, arguments);
          return result(this, func.apply(_, args));
        };
      });
    };

    // Add all of the Underscore functions to the wrapper object.
    _.mixin(_);

    // Add all mutator Array functions to the wrapper.
    _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {
      var method = ArrayProto[name];
      _.prototype[name] = function () {
        var obj = this._wrapped;
        method.apply(obj, arguments);
        if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
        return result(this, obj);
      };
    });

    // Add all accessor Array functions to the wrapper.
    _.each(['concat', 'join', 'slice'], function (name) {
      var method = ArrayProto[name];
      _.prototype[name] = function () {
        return result(this, method.apply(this._wrapped, arguments));
      };
    });

    // Extracts the result from a wrapped and chained object.
    _.prototype.value = function () {
      return this._wrapped;
    };

    // Provide unwrapping proxy for some methods used in engine operations
    // such as arithmetic and JSON stringification.
    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

    _.prototype.toString = function () {
      return '' + this._wrapped;
    };

    // AMD registration happens at the end for compatibility with AMD loaders
    // that may not enforce next-turn semantics on modules. Even though general
    // practice for AMD registration is to be anonymous, underscore registers
    // as a named module because, like jQuery, it is a base library that is
    // popular enough to be bundled in a third party lib, but not be part of
    // an AMD load request. Those cases could generate an error when an
    // anonymous define() is called outside of a loader request.
    if (typeof undefined === 'function' && define.amd) {
      define('underscore', [], function () {
        return _;
      });
    }
  }).call(this);
});
$__System.registerDynamic("122", ["21e"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("21e");
});
$__System.registerDynamic("1c2", ["68", "122"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _classCallCheck2 = $__require("68");

    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

    var _underscore = $__require("122");

    var _underscore2 = _interopRequireDefault(_underscore);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    var PipelineOut = function PipelineOut(pipeline) {
        (0, _classCallCheck3.default)(this, PipelineOut);

        this._id = _underscore2.default.uniqueId("id-");
        this._pipeline = pipeline;
    }; /**
        *  Copyright (c) 2016-2017, The Regents of the University of California,
        *  through Lawrence Berkeley National Laboratory (subject to receipt
        *  of any required approvals from the U.S. Dept. of Energy).
        *  All rights reserved.
        *
        *  This source code is licensed under the BSD-style license found in the
        *  LICENSE file in the root directory of this source tree.
        */

    exports.default = PipelineOut;
});
$__System.registerDynamic("1bc", ["199", "68", "19a", "69", "6a", "194", "1c2"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _getPrototypeOf = $__require("199");
  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
  var _classCallCheck2 = $__require("68");
  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
  var _createClass2 = $__require("19a");
  var _createClass3 = _interopRequireDefault(_createClass2);
  var _possibleConstructorReturn2 = $__require("69");
  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
  var _inherits2 = $__require("6a");
  var _inherits3 = _interopRequireDefault(_inherits2);
  var _collector = $__require("194");
  var _collector2 = _interopRequireDefault(_collector);
  var _pipelineout = $__require("1c2");
  var _pipelineout2 = _interopRequireDefault(_pipelineout);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var CollectionOut = function (_PipelineOut) {
    (0, _inherits3.default)(CollectionOut, _PipelineOut);
    function CollectionOut(pipeline, options, callback) {
      (0, _classCallCheck3.default)(this, CollectionOut);
      var _this = (0, _possibleConstructorReturn3.default)(this, (CollectionOut.__proto__ || (0, _getPrototypeOf2.default)(CollectionOut)).call(this, pipeline));
      _this._callback = callback;
      _this._collector = new _collector2.default({
        windowType: pipeline.getWindowType(),
        windowDuration: pipeline.getWindowDuration(),
        groupBy: pipeline.getGroupBy(),
        emitOn: pipeline.getEmitOn()
      }, function (collection, windowKey, groupByKey) {
        var groupBy = groupByKey ? groupByKey : "all";
        if (_this._callback) {
          _this._callback(collection, windowKey, groupBy);
        } else {
          var keys = [];
          if (windowKey !== "global") {
            keys.push(windowKey);
          }
          if (groupBy !== "all") {
            keys.push(groupBy);
          }
          var k = keys.length > 0 ? keys.join("--") : "all";
          _this._pipeline.addResult(k, collection);
        }
      });
      return _this;
    }
    (0, _createClass3.default)(CollectionOut, [{
      key: "addEvent",
      value: function addEvent(event) {
        this._collector.addEvent(event);
      }
    }, {
      key: "onEmit",
      value: function onEmit(cb) {
        this._callback = cb;
      }
    }, {
      key: "flush",
      value: function flush() {
        this._collector.flushCollections();
        if (!this._callback) {
          this._pipeline.resultsDone();
        }
      }
    }]);
    return CollectionOut;
  }(_pipelineout2.default);
  exports.default = CollectionOut;
});
$__System.registerDynamic('21f', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof undefined === 'function' && define.amd ? define(factory) : global.Immutable = factory();
  })(this, function () {
    'use strict';
    var SLICE$0 = Array.prototype.slice;

    function createClass(ctor, superClass) {
      if (superClass) {
        ctor.prototype = Object.create(superClass.prototype);
      }
      ctor.prototype.constructor = ctor;
    }

    function Iterable(value) {
      return isIterable(value) ? value : Seq(value);
    }

    createClass(KeyedIterable, Iterable);
    function KeyedIterable(value) {
      return isKeyed(value) ? value : KeyedSeq(value);
    }

    createClass(IndexedIterable, Iterable);
    function IndexedIterable(value) {
      return isIndexed(value) ? value : IndexedSeq(value);
    }

    createClass(SetIterable, Iterable);
    function SetIterable(value) {
      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
    }

    function isIterable(maybeIterable) {
      return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
    }

    function isKeyed(maybeKeyed) {
      return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
    }

    function isIndexed(maybeIndexed) {
      return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
    }

    function isAssociative(maybeAssociative) {
      return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
    }

    function isOrdered(maybeOrdered) {
      return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
    }

    Iterable.isIterable = isIterable;
    Iterable.isKeyed = isKeyed;
    Iterable.isIndexed = isIndexed;
    Iterable.isAssociative = isAssociative;
    Iterable.isOrdered = isOrdered;

    Iterable.Keyed = KeyedIterable;
    Iterable.Indexed = IndexedIterable;
    Iterable.Set = SetIterable;

    var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
    var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
    var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
    var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

    // Used for setting prototype methods that IE8 chokes on.
    var DELETE = 'delete';

    // Constants describing the size of trie nodes.
    var SHIFT = 5; // Resulted in best performance after ______?
    var SIZE = 1 << SHIFT;
    var MASK = SIZE - 1;

    // A consistent shared value representing "not set" which equals nothing other
    // than itself, and nothing that could be provided externally.
    var NOT_SET = {};

    // Boolean references, Rough equivalent of `bool &`.
    var CHANGE_LENGTH = { value: false };
    var DID_ALTER = { value: false };

    function MakeRef(ref) {
      ref.value = false;
      return ref;
    }

    function SetRef(ref) {
      ref && (ref.value = true);
    }

    // A function which returns a value representing an "owner" for transient writes
    // to tries. The return value will only ever equal itself, and will not equal
    // the return of any subsequent call of this function.
    function OwnerID() {}

    // http://jsperf.com/copy-array-inline
    function arrCopy(arr, offset) {
      offset = offset || 0;
      var len = Math.max(0, arr.length - offset);
      var newArr = new Array(len);
      for (var ii = 0; ii < len; ii++) {
        newArr[ii] = arr[ii + offset];
      }
      return newArr;
    }

    function ensureSize(iter) {
      if (iter.size === undefined) {
        iter.size = iter.__iterate(returnTrue);
      }
      return iter.size;
    }

    function wrapIndex(iter, index) {
      // This implements "is array index" which the ECMAString spec defines as:
      //
      //     A String property name P is an array index if and only if
      //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
      //     to 2^32−1.
      //
      // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
      if (typeof index !== 'number') {
        var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
        if ('' + uint32Index !== index || uint32Index === 4294967295) {
          return NaN;
        }
        index = uint32Index;
      }
      return index < 0 ? ensureSize(iter) + index : index;
    }

    function returnTrue() {
      return true;
    }

    function wholeSlice(begin, end, size) {
      return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);
    }

    function resolveBegin(begin, size) {
      return resolveIndex(begin, size, 0);
    }

    function resolveEnd(end, size) {
      return resolveIndex(end, size, size);
    }

    function resolveIndex(index, size, defaultIndex) {
      return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);
    }

    /* global Symbol */

    var ITERATE_KEYS = 0;
    var ITERATE_VALUES = 1;
    var ITERATE_ENTRIES = 2;

    var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;

    function Iterator(next) {
      this.next = next;
    }

    Iterator.prototype.toString = function () {
      return '[Iterator]';
    };

    Iterator.KEYS = ITERATE_KEYS;
    Iterator.VALUES = ITERATE_VALUES;
    Iterator.ENTRIES = ITERATE_ENTRIES;

    Iterator.prototype.inspect = Iterator.prototype.toSource = function () {
      return this.toString();
    };
    Iterator.prototype[ITERATOR_SYMBOL] = function () {
      return this;
    };

    function iteratorValue(type, k, v, iteratorResult) {
      var value = type === 0 ? k : type === 1 ? v : [k, v];
      iteratorResult ? iteratorResult.value = value : iteratorResult = {
        value: value, done: false
      };
      return iteratorResult;
    }

    function iteratorDone() {
      return { value: undefined, done: true };
    }

    function hasIterator(maybeIterable) {
      return !!getIteratorFn(maybeIterable);
    }

    function isIterator(maybeIterator) {
      return maybeIterator && typeof maybeIterator.next === 'function';
    }

    function getIterator(iterable) {
      var iteratorFn = getIteratorFn(iterable);
      return iteratorFn && iteratorFn.call(iterable);
    }

    function getIteratorFn(iterable) {
      var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);
      if (typeof iteratorFn === 'function') {
        return iteratorFn;
      }
    }

    function isArrayLike(value) {
      return value && typeof value.length === 'number';
    }

    createClass(Seq, Iterable);
    function Seq(value) {
      return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);
    }

    Seq.of = function () /*...values*/{
      return Seq(arguments);
    };

    Seq.prototype.toSeq = function () {
      return this;
    };

    Seq.prototype.toString = function () {
      return this.__toString('Seq {', '}');
    };

    Seq.prototype.cacheResult = function () {
      if (!this._cache && this.__iterateUncached) {
        this._cache = this.entrySeq().toArray();
        this.size = this._cache.length;
      }
      return this;
    };

    // abstract __iterateUncached(fn, reverse)

    Seq.prototype.__iterate = function (fn, reverse) {
      return seqIterate(this, fn, reverse, true);
    };

    // abstract __iteratorUncached(type, reverse)

    Seq.prototype.__iterator = function (type, reverse) {
      return seqIterator(this, type, reverse, true);
    };

    createClass(KeyedSeq, Seq);
    function KeyedSeq(value) {
      return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);
    }

    KeyedSeq.prototype.toKeyedSeq = function () {
      return this;
    };

    createClass(IndexedSeq, Seq);
    function IndexedSeq(value) {
      return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
    }

    IndexedSeq.of = function () /*...values*/{
      return IndexedSeq(arguments);
    };

    IndexedSeq.prototype.toIndexedSeq = function () {
      return this;
    };

    IndexedSeq.prototype.toString = function () {
      return this.__toString('Seq [', ']');
    };

    IndexedSeq.prototype.__iterate = function (fn, reverse) {
      return seqIterate(this, fn, reverse, false);
    };

    IndexedSeq.prototype.__iterator = function (type, reverse) {
      return seqIterator(this, type, reverse, false);
    };

    createClass(SetSeq, Seq);
    function SetSeq(value) {
      return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();
    }

    SetSeq.of = function () /*...values*/{
      return SetSeq(arguments);
    };

    SetSeq.prototype.toSetSeq = function () {
      return this;
    };

    Seq.isSeq = isSeq;
    Seq.Keyed = KeyedSeq;
    Seq.Set = SetSeq;
    Seq.Indexed = IndexedSeq;

    var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

    Seq.prototype[IS_SEQ_SENTINEL] = true;

    createClass(ArraySeq, IndexedSeq);
    function ArraySeq(array) {
      this._array = array;
      this.size = array.length;
    }

    ArraySeq.prototype.get = function (index, notSetValue) {
      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
    };

    ArraySeq.prototype.__iterate = function (fn, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ArraySeq.prototype.__iterator = function (type, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      var ii = 0;
      return new Iterator(function () {
        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);
      });
    };

    createClass(ObjectSeq, KeyedSeq);
    function ObjectSeq(object) {
      var keys = Object.keys(object);
      this._object = object;
      this._keys = keys;
      this.size = keys.length;
    }

    ObjectSeq.prototype.get = function (key, notSetValue) {
      if (notSetValue !== undefined && !this.has(key)) {
        return notSetValue;
      }
      return this._object[key];
    };

    ObjectSeq.prototype.has = function (key) {
      return this._object.hasOwnProperty(key);
    };

    ObjectSeq.prototype.__iterate = function (fn, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var key = keys[reverse ? maxIndex - ii : ii];
        if (fn(object[key], key, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ObjectSeq.prototype.__iterator = function (type, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      var ii = 0;
      return new Iterator(function () {
        var key = keys[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);
      });
    };

    ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;

    createClass(IterableSeq, IndexedSeq);
    function IterableSeq(iterable) {
      this._iterable = iterable;
      this.size = iterable.length || iterable.size;
    }

    IterableSeq.prototype.__iterateUncached = function (fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      var iterations = 0;
      if (isIterator(iterator)) {
        var step;
        while (!(step = iterator.next()).done) {
          if (fn(step.value, iterations++, this) === false) {
            break;
          }
        }
      }
      return iterations;
    };

    IterableSeq.prototype.__iteratorUncached = function (type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      if (!isIterator(iterator)) {
        return new Iterator(iteratorDone);
      }
      var iterations = 0;
      return new Iterator(function () {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, iterations++, step.value);
      });
    };

    createClass(IteratorSeq, IndexedSeq);
    function IteratorSeq(iterator) {
      this._iterator = iterator;
      this._iteratorCache = [];
    }

    IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      while (iterations < cache.length) {
        if (fn(cache[iterations], iterations++, this) === false) {
          return iterations;
        }
      }
      var step;
      while (!(step = iterator.next()).done) {
        var val = step.value;
        cache[iterations] = val;
        if (fn(val, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };

    IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      return new Iterator(function () {
        if (iterations >= cache.length) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          cache[iterations] = step.value;
        }
        return iteratorValue(type, iterations, cache[iterations++]);
      });
    };

    // # pragma Helper functions

    function isSeq(maybeSeq) {
      return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
    }

    var EMPTY_SEQ;

    function emptySequence() {
      return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
    }

    function keyedSeqFromValue(value) {
      var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;
      if (!seq) {
        throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);
      }
      return seq;
    }

    function indexedSeqFromValue(value) {
      var seq = maybeIndexedSeqFromValue(value);
      if (!seq) {
        throw new TypeError('Expected Array or iterable object of values: ' + value);
      }
      return seq;
    }

    function seqFromValue(value) {
      var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);
      if (!seq) {
        throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);
      }
      return seq;
    }

    function maybeIndexedSeqFromValue(value) {
      return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;
    }

    function seqIterate(seq, fn, reverse, useKeys) {
      var cache = seq._cache;
      if (cache) {
        var maxIndex = cache.length - 1;
        for (var ii = 0; ii <= maxIndex; ii++) {
          var entry = cache[reverse ? maxIndex - ii : ii];
          if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
            return ii + 1;
          }
        }
        return ii;
      }
      return seq.__iterateUncached(fn, reverse);
    }

    function seqIterator(seq, type, reverse, useKeys) {
      var cache = seq._cache;
      if (cache) {
        var maxIndex = cache.length - 1;
        var ii = 0;
        return new Iterator(function () {
          var entry = cache[reverse ? maxIndex - ii : ii];
          return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
        });
      }
      return seq.__iteratorUncached(type, reverse);
    }

    function fromJS(json, converter) {
      return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);
    }

    function fromJSWith(converter, json, key, parentJSON) {
      if (Array.isArray(json)) {
        return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {
          return fromJSWith(converter, v, k, json);
        }));
      }
      if (isPlainObj(json)) {
        return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {
          return fromJSWith(converter, v, k, json);
        }));
      }
      return json;
    }

    function fromJSDefault(json) {
      if (Array.isArray(json)) {
        return IndexedSeq(json).map(fromJSDefault).toList();
      }
      if (isPlainObj(json)) {
        return KeyedSeq(json).map(fromJSDefault).toMap();
      }
      return json;
    }

    function isPlainObj(value) {
      return value && (value.constructor === Object || value.constructor === undefined);
    }

    /**
     * An extension of the "same-value" algorithm as [described for use by ES6 Map
     * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
     *
     * NaN is considered the same as NaN, however -0 and 0 are considered the same
     * value, which is different from the algorithm described by
     * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
     *
     * This is extended further to allow Objects to describe the values they
     * represent, by way of `valueOf` or `equals` (and `hashCode`).
     *
     * Note: because of this extension, the key equality of Immutable.Map and the
     * value equality of Immutable.Set will differ from ES6 Map and Set.
     *
     * ### Defining custom values
     *
     * The easiest way to describe the value an object represents is by implementing
     * `valueOf`. For example, `Date` represents a value by returning a unix
     * timestamp for `valueOf`:
     *
     *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
     *     var date2 = new Date(1234567890000);
     *     date1.valueOf(); // 1234567890000
     *     assert( date1 !== date2 );
     *     assert( Immutable.is( date1, date2 ) );
     *
     * Note: overriding `valueOf` may have other implications if you use this object
     * where JavaScript expects a primitive, such as implicit string coercion.
     *
     * For more complex types, especially collections, implementing `valueOf` may
     * not be performant. An alternative is to implement `equals` and `hashCode`.
     *
     * `equals` takes another object, presumably of similar type, and returns true
     * if the it is equal. Equality is symmetrical, so the same result should be
     * returned if this and the argument are flipped.
     *
     *     assert( a.equals(b) === b.equals(a) );
     *
     * `hashCode` returns a 32bit integer number representing the object which will
     * be used to determine how to store the value object in a Map or Set. You must
     * provide both or neither methods, one must not exist without the other.
     *
     * Also, an important relationship between these methods must be upheld: if two
     * values are equal, they *must* return the same hashCode. If the values are not
     * equal, they might have the same hashCode; this is called a hash collision,
     * and while undesirable for performance reasons, it is acceptable.
     *
     *     if (a.equals(b)) {
     *       assert( a.hashCode() === b.hashCode() );
     *     }
     *
     * All Immutable collections implement `equals` and `hashCode`.
     *
     */
    function is(valueA, valueB) {
      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
      if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {
        valueA = valueA.valueOf();
        valueB = valueB.valueOf();
        if (valueA === valueB || valueA !== valueA && valueB !== valueB) {
          return true;
        }
        if (!valueA || !valueB) {
          return false;
        }
      }
      if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {
        return true;
      }
      return false;
    }

    function deepEqual(a, b) {
      if (a === b) {
        return true;
      }

      if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {
        return false;
      }

      if (a.size === 0 && b.size === 0) {
        return true;
      }

      var notAssociative = !isAssociative(a);

      if (isOrdered(a)) {
        var entries = a.entries();
        return b.every(function (v, k) {
          var entry = entries.next().value;
          return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
        }) && entries.next().done;
      }

      var flipped = false;

      if (a.size === undefined) {
        if (b.size === undefined) {
          if (typeof a.cacheResult === 'function') {
            a.cacheResult();
          }
        } else {
          flipped = true;
          var _ = a;
          a = b;
          b = _;
        }
      }

      var allEqual = true;
      var bSize = b.__iterate(function (v, k) {
        if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
          allEqual = false;
          return false;
        }
      });

      return allEqual && a.size === bSize;
    }

    createClass(Repeat, IndexedSeq);

    function Repeat(value, times) {
      if (!(this instanceof Repeat)) {
        return new Repeat(value, times);
      }
      this._value = value;
      this.size = times === undefined ? Infinity : Math.max(0, times);
      if (this.size === 0) {
        if (EMPTY_REPEAT) {
          return EMPTY_REPEAT;
        }
        EMPTY_REPEAT = this;
      }
    }

    Repeat.prototype.toString = function () {
      if (this.size === 0) {
        return 'Repeat []';
      }
      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
    };

    Repeat.prototype.get = function (index, notSetValue) {
      return this.has(index) ? this._value : notSetValue;
    };

    Repeat.prototype.includes = function (searchValue) {
      return is(this._value, searchValue);
    };

    Repeat.prototype.slice = function (begin, end) {
      var size = this.size;
      return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
    };

    Repeat.prototype.reverse = function () {
      return this;
    };

    Repeat.prototype.indexOf = function (searchValue) {
      if (is(this._value, searchValue)) {
        return 0;
      }
      return -1;
    };

    Repeat.prototype.lastIndexOf = function (searchValue) {
      if (is(this._value, searchValue)) {
        return this.size;
      }
      return -1;
    };

    Repeat.prototype.__iterate = function (fn, reverse) {
      for (var ii = 0; ii < this.size; ii++) {
        if (fn(this._value, ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    Repeat.prototype.__iterator = function (type, reverse) {
      var this$0 = this;
      var ii = 0;
      return new Iterator(function () {
        return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();
      });
    };

    Repeat.prototype.equals = function (other) {
      return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);
    };

    var EMPTY_REPEAT;

    function invariant(condition, error) {
      if (!condition) throw new Error(error);
    }

    createClass(Range, IndexedSeq);

    function Range(start, end, step) {
      if (!(this instanceof Range)) {
        return new Range(start, end, step);
      }
      invariant(step !== 0, 'Cannot step a Range by 0');
      start = start || 0;
      if (end === undefined) {
        end = Infinity;
      }
      step = step === undefined ? 1 : Math.abs(step);
      if (end < start) {
        step = -step;
      }
      this._start = start;
      this._end = end;
      this._step = step;
      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
      if (this.size === 0) {
        if (EMPTY_RANGE) {
          return EMPTY_RANGE;
        }
        EMPTY_RANGE = this;
      }
    }

    Range.prototype.toString = function () {
      if (this.size === 0) {
        return 'Range []';
      }
      return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';
    };

    Range.prototype.get = function (index, notSetValue) {
      return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;
    };

    Range.prototype.includes = function (searchValue) {
      var possibleIndex = (searchValue - this._start) / this._step;
      return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);
    };

    Range.prototype.slice = function (begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      begin = resolveBegin(begin, this.size);
      end = resolveEnd(end, this.size);
      if (end <= begin) {
        return new Range(0, 0);
      }
      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
    };

    Range.prototype.indexOf = function (searchValue) {
      var offsetValue = searchValue - this._start;
      if (offsetValue % this._step === 0) {
        var index = offsetValue / this._step;
        if (index >= 0 && index < this.size) {
          return index;
        }
      }
      return -1;
    };

    Range.prototype.lastIndexOf = function (searchValue) {
      return this.indexOf(searchValue);
    };

    Range.prototype.__iterate = function (fn, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(value, ii, this) === false) {
          return ii + 1;
        }
        value += reverse ? -step : step;
      }
      return ii;
    };

    Range.prototype.__iterator = function (type, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      var ii = 0;
      return new Iterator(function () {
        var v = value;
        value += reverse ? -step : step;
        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
      });
    };

    Range.prototype.equals = function (other) {
      return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);
    };

    var EMPTY_RANGE;

    createClass(Collection, Iterable);
    function Collection() {
      throw TypeError('Abstract');
    }

    createClass(KeyedCollection, Collection);function KeyedCollection() {}

    createClass(IndexedCollection, Collection);function IndexedCollection() {}

    createClass(SetCollection, Collection);function SetCollection() {}

    Collection.Keyed = KeyedCollection;
    Collection.Indexed = IndexedCollection;
    Collection.Set = SetCollection;

    var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {
      a = a | 0; // int
      b = b | 0; // int
      var c = a & 0xffff;
      var d = b & 0xffff;
      // Shift by 0 fixes the sign on the high part.
      return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int
    };

    // v8 has an optimization for storing 31-bit signed numbers.
    // Values which have either 00 or 11 as the high order bits qualify.
    // This function drops the highest order bit in a signed number, maintaining
    // the sign bit.
    function smi(i32) {
      return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;
    }

    function hash(o) {
      if (o === false || o === null || o === undefined) {
        return 0;
      }
      if (typeof o.valueOf === 'function') {
        o = o.valueOf();
        if (o === false || o === null || o === undefined) {
          return 0;
        }
      }
      if (o === true) {
        return 1;
      }
      var type = typeof o;
      if (type === 'number') {
        if (o !== o || o === Infinity) {
          return 0;
        }
        var h = o | 0;
        if (h !== o) {
          h ^= o * 0xFFFFFFFF;
        }
        while (o > 0xFFFFFFFF) {
          o /= 0xFFFFFFFF;
          h ^= o;
        }
        return smi(h);
      }
      if (type === 'string') {
        return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
      }
      if (typeof o.hashCode === 'function') {
        return o.hashCode();
      }
      if (type === 'object') {
        return hashJSObj(o);
      }
      if (typeof o.toString === 'function') {
        return hashString(o.toString());
      }
      throw new Error('Value type ' + type + ' cannot be hashed.');
    }

    function cachedHashString(string) {
      var hash = stringHashCache[string];
      if (hash === undefined) {
        hash = hashString(string);
        if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
          STRING_HASH_CACHE_SIZE = 0;
          stringHashCache = {};
        }
        STRING_HASH_CACHE_SIZE++;
        stringHashCache[string] = hash;
      }
      return hash;
    }

    // http://jsperf.com/hashing-strings
    function hashString(string) {
      // This is the hash from JVM
      // The hash code for a string is computed as
      // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
      // where s[i] is the ith character of the string and n is the length of
      // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
      // (exclusive) by dropping high bits.
      var hash = 0;
      for (var ii = 0; ii < string.length; ii++) {
        hash = 31 * hash + string.charCodeAt(ii) | 0;
      }
      return smi(hash);
    }

    function hashJSObj(obj) {
      var hash;
      if (usingWeakMap) {
        hash = weakMap.get(obj);
        if (hash !== undefined) {
          return hash;
        }
      }

      hash = obj[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      if (!canDefineProperty) {
        hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
        if (hash !== undefined) {
          return hash;
        }

        hash = getIENodeHash(obj);
        if (hash !== undefined) {
          return hash;
        }
      }

      hash = ++objHashUID;
      if (objHashUID & 0x40000000) {
        objHashUID = 0;
      }

      if (usingWeakMap) {
        weakMap.set(obj, hash);
      } else if (isExtensible !== undefined && isExtensible(obj) === false) {
        throw new Error('Non-extensible objects are not allowed as keys.');
      } else if (canDefineProperty) {
        Object.defineProperty(obj, UID_HASH_KEY, {
          'enumerable': false,
          'configurable': false,
          'writable': false,
          'value': hash
        });
      } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
        // Since we can't define a non-enumerable property on the object
        // we'll hijack one of the less-used non-enumerable properties to
        // save our hash on it. Since this is a function it will not show up in
        // `JSON.stringify` which is what we want.
        obj.propertyIsEnumerable = function () {
          return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
        };
        obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
      } else if (obj.nodeType !== undefined) {
        // At this point we couldn't get the IE `uniqueID` to use as a hash
        // and we couldn't use a non-enumerable property to exploit the
        // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
        // itself.
        obj[UID_HASH_KEY] = hash;
      } else {
        throw new Error('Unable to set a non-enumerable property on object.');
      }

      return hash;
    }

    // Get references to ES5 object methods.
    var isExtensible = Object.isExtensible;

    // True if Object.defineProperty works as expected. IE8 fails this test.
    var canDefineProperty = function () {
      try {
        Object.defineProperty({}, '@', {});
        return true;
      } catch (e) {
        return false;
      }
    }();

    // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
    // and avoid memory leaks from the IE cloneNode bug.
    function getIENodeHash(node) {
      if (node && node.nodeType > 0) {
        switch (node.nodeType) {
          case 1:
            // Element
            return node.uniqueID;
          case 9:
            // Document
            return node.documentElement && node.documentElement.uniqueID;
        }
      }
    }

    // If possible, use a WeakMap.
    var usingWeakMap = typeof WeakMap === 'function';
    var weakMap;
    if (usingWeakMap) {
      weakMap = new WeakMap();
    }

    var objHashUID = 0;

    var UID_HASH_KEY = '__immutablehash__';
    if (typeof Symbol === 'function') {
      UID_HASH_KEY = Symbol(UID_HASH_KEY);
    }

    var STRING_HASH_CACHE_MIN_STRLEN = 16;
    var STRING_HASH_CACHE_MAX_SIZE = 255;
    var STRING_HASH_CACHE_SIZE = 0;
    var stringHashCache = {};

    function assertNotInfinite(size) {
      invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');
    }

    createClass(Map, KeyedCollection);

    // @pragma Construction

    function Map(value) {
      return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {
        var iter = KeyedIterable(value);
        assertNotInfinite(iter.size);
        iter.forEach(function (v, k) {
          return map.set(k, v);
        });
      });
    }

    Map.of = function () {
      var keyValues = SLICE$0.call(arguments, 0);
      return emptyMap().withMutations(function (map) {
        for (var i = 0; i < keyValues.length; i += 2) {
          if (i + 1 >= keyValues.length) {
            throw new Error('Missing value for key: ' + keyValues[i]);
          }
          map.set(keyValues[i], keyValues[i + 1]);
        }
      });
    };

    Map.prototype.toString = function () {
      return this.__toString('Map {', '}');
    };

    // @pragma Access

    Map.prototype.get = function (k, notSetValue) {
      return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;
    };

    // @pragma Modification

    Map.prototype.set = function (k, v) {
      return updateMap(this, k, v);
    };

    Map.prototype.setIn = function (keyPath, v) {
      return this.updateIn(keyPath, NOT_SET, function () {
        return v;
      });
    };

    Map.prototype.remove = function (k) {
      return updateMap(this, k, NOT_SET);
    };

    Map.prototype.deleteIn = function (keyPath) {
      return this.updateIn(keyPath, function () {
        return NOT_SET;
      });
    };

    Map.prototype.update = function (k, notSetValue, updater) {
      return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);
    };

    Map.prototype.updateIn = function (keyPath, notSetValue, updater) {
      if (!updater) {
        updater = notSetValue;
        notSetValue = undefined;
      }
      var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);
      return updatedValue === NOT_SET ? undefined : updatedValue;
    };

    Map.prototype.clear = function () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._root = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyMap();
    };

    // @pragma Composition

    Map.prototype.merge = function () /*...iters*/{
      return mergeIntoMapWith(this, undefined, arguments);
    };

    Map.prototype.mergeWith = function (merger) {
      var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, merger, iters);
    };

    Map.prototype.mergeIn = function (keyPath) {
      var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(keyPath, emptyMap(), function (m) {
        return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];
      });
    };

    Map.prototype.mergeDeep = function () /*...iters*/{
      return mergeIntoMapWith(this, deepMerger, arguments);
    };

    Map.prototype.mergeDeepWith = function (merger) {
      var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
    };

    Map.prototype.mergeDeepIn = function (keyPath) {
      var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(keyPath, emptyMap(), function (m) {
        return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];
      });
    };

    Map.prototype.sort = function (comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator));
    };

    Map.prototype.sortBy = function (mapper, comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator, mapper));
    };

    // @pragma Mutability

    Map.prototype.withMutations = function (fn) {
      var mutable = this.asMutable();
      fn(mutable);
      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
    };

    Map.prototype.asMutable = function () {
      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
    };

    Map.prototype.asImmutable = function () {
      return this.__ensureOwner();
    };

    Map.prototype.wasAltered = function () {
      return this.__altered;
    };

    Map.prototype.__iterator = function (type, reverse) {
      return new MapIterator(this, type, reverse);
    };

    Map.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      this._root && this._root.iterate(function (entry) {
        iterations++;
        return fn(entry[1], entry[0], this$0);
      }, reverse);
      return iterations;
    };

    Map.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeMap(this.size, this._root, ownerID, this.__hash);
    };

    function isMap(maybeMap) {
      return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
    }

    Map.isMap = isMap;

    var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

    var MapPrototype = Map.prototype;
    MapPrototype[IS_MAP_SENTINEL] = true;
    MapPrototype[DELETE] = MapPrototype.remove;
    MapPrototype.removeIn = MapPrototype.deleteIn;

    // #pragma Trie Nodes


    function ArrayMapNode(ownerID, entries) {
      this.ownerID = ownerID;
      this.entries = entries;
    }

    ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && entries.length === 1) {
        return; // undefined
      }

      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
        return createNodes(ownerID, entries, key, value);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new ArrayMapNode(ownerID, newEntries);
    };

    function BitmapIndexedNode(ownerID, bitmap, nodes) {
      this.ownerID = ownerID;
      this.bitmap = bitmap;
      this.nodes = nodes;
    }

    BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);
      var bitmap = this.bitmap;
      return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);
    };

    BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var bit = 1 << keyHashFrag;
      var bitmap = this.bitmap;
      var exists = (bitmap & bit) !== 0;

      if (!exists && value === NOT_SET) {
        return this;
      }

      var idx = popCount(bitmap & bit - 1);
      var nodes = this.nodes;
      var node = exists ? nodes[idx] : undefined;
      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

      if (newNode === node) {
        return this;
      }

      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
      }

      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
        return nodes[idx ^ 1];
      }

      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
        return newNode;
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
      var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.bitmap = newBitmap;
        this.nodes = newNodes;
        return this;
      }

      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
    };

    function HashArrayMapNode(ownerID, count, nodes) {
      this.ownerID = ownerID;
      this.count = count;
      this.nodes = nodes;
    }

    HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var node = this.nodes[idx];
      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
    };

    HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var removed = value === NOT_SET;
      var nodes = this.nodes;
      var node = nodes[idx];

      if (removed && !node) {
        return this;
      }

      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
      if (newNode === node) {
        return this;
      }

      var newCount = this.count;
      if (!node) {
        newCount++;
      } else if (!newNode) {
        newCount--;
        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
          return packNodes(ownerID, nodes, newCount, idx);
        }
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newNodes = setIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.count = newCount;
        this.nodes = newNodes;
        return this;
      }

      return new HashArrayMapNode(ownerID, newCount, newNodes);
    };

    function HashCollisionNode(ownerID, keyHash, entries) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entries = entries;
    }

    HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }

      var removed = value === NOT_SET;

      if (keyHash !== this.keyHash) {
        if (removed) {
          return this;
        }
        SetRef(didAlter);
        SetRef(didChangeSize);
        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
      }

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && len === 2) {
        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
    };

    function ValueNode(ownerID, keyHash, entry) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entry = entry;
    }

    ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {
      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
    };

    ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;
      var keyMatch = is(key, this.entry[0]);
      if (keyMatch ? value === this.entry[1] : removed) {
        return this;
      }

      SetRef(didAlter);

      if (removed) {
        SetRef(didChangeSize);
        return; // undefined
      }

      if (keyMatch) {
        if (ownerID && ownerID === this.ownerID) {
          this.entry[1] = value;
          return this;
        }
        return new ValueNode(ownerID, this.keyHash, [key, value]);
      }

      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
    };

    // #pragma Iterators

    ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {
      var entries = this.entries;
      for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
        if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
          return false;
        }
      }
    };

    BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {
      var nodes = this.nodes;
      for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
        var node = nodes[reverse ? maxIndex - ii : ii];
        if (node && node.iterate(fn, reverse) === false) {
          return false;
        }
      }
    };

    ValueNode.prototype.iterate = function (fn, reverse) {
      return fn(this.entry);
    };

    createClass(MapIterator, Iterator);

    function MapIterator(map, type, reverse) {
      this._type = type;
      this._reverse = reverse;
      this._stack = map._root && mapIteratorFrame(map._root);
    }

    MapIterator.prototype.next = function () {
      var type = this._type;
      var stack = this._stack;
      while (stack) {
        var node = stack.node;
        var index = stack.index++;
        var maxIndex;
        if (node.entry) {
          if (index === 0) {
            return mapIteratorValue(type, node.entry);
          }
        } else if (node.entries) {
          maxIndex = node.entries.length - 1;
          if (index <= maxIndex) {
            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
          }
        } else {
          maxIndex = node.nodes.length - 1;
          if (index <= maxIndex) {
            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
            if (subNode) {
              if (subNode.entry) {
                return mapIteratorValue(type, subNode.entry);
              }
              stack = this._stack = mapIteratorFrame(subNode, stack);
            }
            continue;
          }
        }
        stack = this._stack = this._stack.__prev;
      }
      return iteratorDone();
    };

    function mapIteratorValue(type, entry) {
      return iteratorValue(type, entry[0], entry[1]);
    }

    function mapIteratorFrame(node, prev) {
      return {
        node: node,
        index: 0,
        __prev: prev
      };
    }

    function makeMap(size, root, ownerID, hash) {
      var map = Object.create(MapPrototype);
      map.size = size;
      map._root = root;
      map.__ownerID = ownerID;
      map.__hash = hash;
      map.__altered = false;
      return map;
    }

    var EMPTY_MAP;
    function emptyMap() {
      return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
    }

    function updateMap(map, k, v) {
      var newRoot;
      var newSize;
      if (!map._root) {
        if (v === NOT_SET) {
          return map;
        }
        newSize = 1;
        newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
      } else {
        var didChangeSize = MakeRef(CHANGE_LENGTH);
        var didAlter = MakeRef(DID_ALTER);
        newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
        if (!didAlter.value) {
          return map;
        }
        newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
      }
      if (map.__ownerID) {
        map.size = newSize;
        map._root = newRoot;
        map.__hash = undefined;
        map.__altered = true;
        return map;
      }
      return newRoot ? makeMap(newSize, newRoot) : emptyMap();
    }

    function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (!node) {
        if (value === NOT_SET) {
          return node;
        }
        SetRef(didAlter);
        SetRef(didChangeSize);
        return new ValueNode(ownerID, keyHash, [key, value]);
      }
      return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
    }

    function isLeafNode(node) {
      return node.constructor === ValueNode || node.constructor === HashCollisionNode;
    }

    function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
      if (node.keyHash === keyHash) {
        return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
      }

      var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
      var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

      var newNode;
      var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);

      return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);
    }

    function createNodes(ownerID, entries, key, value) {
      if (!ownerID) {
        ownerID = new OwnerID();
      }
      var node = new ValueNode(ownerID, hash(key), [key, value]);
      for (var ii = 0; ii < entries.length; ii++) {
        var entry = entries[ii];
        node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
      }
      return node;
    }

    function packNodes(ownerID, nodes, count, excluding) {
      var bitmap = 0;
      var packedII = 0;
      var packedNodes = new Array(count);
      for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
        var node = nodes[ii];
        if (node !== undefined && ii !== excluding) {
          bitmap |= bit;
          packedNodes[packedII++] = node;
        }
      }
      return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
    }

    function expandNodes(ownerID, nodes, bitmap, including, node) {
      var count = 0;
      var expandedNodes = new Array(SIZE);
      for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
        expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
      }
      expandedNodes[including] = node;
      return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
    }

    function mergeIntoMapWith(map, merger, iterables) {
      var iters = [];
      for (var ii = 0; ii < iterables.length; ii++) {
        var value = iterables[ii];
        var iter = KeyedIterable(value);
        if (!isIterable(value)) {
          iter = iter.map(function (v) {
            return fromJS(v);
          });
        }
        iters.push(iter);
      }
      return mergeIntoCollectionWith(map, merger, iters);
    }

    function deepMerger(existing, value, key) {
      return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;
    }

    function deepMergerWith(merger) {
      return function (existing, value, key) {
        if (existing && existing.mergeDeepWith && isIterable(value)) {
          return existing.mergeDeepWith(merger, value);
        }
        var nextValue = merger(existing, value, key);
        return is(existing, nextValue) ? existing : nextValue;
      };
    }

    function mergeIntoCollectionWith(collection, merger, iters) {
      iters = iters.filter(function (x) {
        return x.size !== 0;
      });
      if (iters.length === 0) {
        return collection;
      }
      if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
        return collection.constructor(iters[0]);
      }
      return collection.withMutations(function (collection) {
        var mergeIntoMap = merger ? function (value, key) {
          collection.update(key, NOT_SET, function (existing) {
            return existing === NOT_SET ? value : merger(existing, value, key);
          });
        } : function (value, key) {
          collection.set(key, value);
        };
        for (var ii = 0; ii < iters.length; ii++) {
          iters[ii].forEach(mergeIntoMap);
        }
      });
    }

    function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
      var isNotSet = existing === NOT_SET;
      var step = keyPathIter.next();
      if (step.done) {
        var existingValue = isNotSet ? notSetValue : existing;
        var newValue = updater(existingValue);
        return newValue === existingValue ? existing : newValue;
      }
      invariant(isNotSet || existing && existing.set, 'invalid keyPath');
      var key = step.value;
      var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
      var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);
      return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
    }

    function popCount(x) {
      x = x - (x >> 1 & 0x55555555);
      x = (x & 0x33333333) + (x >> 2 & 0x33333333);
      x = x + (x >> 4) & 0x0f0f0f0f;
      x = x + (x >> 8);
      x = x + (x >> 16);
      return x & 0x7f;
    }

    function setIn(array, idx, val, canEdit) {
      var newArray = canEdit ? array : arrCopy(array);
      newArray[idx] = val;
      return newArray;
    }

    function spliceIn(array, idx, val, canEdit) {
      var newLen = array.length + 1;
      if (canEdit && idx + 1 === newLen) {
        array[idx] = val;
        return array;
      }
      var newArray = new Array(newLen);
      var after = 0;
      for (var ii = 0; ii < newLen; ii++) {
        if (ii === idx) {
          newArray[ii] = val;
          after = -1;
        } else {
          newArray[ii] = array[ii + after];
        }
      }
      return newArray;
    }

    function spliceOut(array, idx, canEdit) {
      var newLen = array.length - 1;
      if (canEdit && idx === newLen) {
        array.pop();
        return array;
      }
      var newArray = new Array(newLen);
      var after = 0;
      for (var ii = 0; ii < newLen; ii++) {
        if (ii === idx) {
          after = 1;
        }
        newArray[ii] = array[ii + after];
      }
      return newArray;
    }

    var MAX_ARRAY_MAP_SIZE = SIZE / 4;
    var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
    var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

    createClass(List, IndexedCollection);

    // @pragma Construction

    function List(value) {
      var empty = emptyList();
      if (value === null || value === undefined) {
        return empty;
      }
      if (isList(value)) {
        return value;
      }
      var iter = IndexedIterable(value);
      var size = iter.size;
      if (size === 0) {
        return empty;
      }
      assertNotInfinite(size);
      if (size > 0 && size < SIZE) {
        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
      }
      return empty.withMutations(function (list) {
        list.setSize(size);
        iter.forEach(function (v, i) {
          return list.set(i, v);
        });
      });
    }

    List.of = function () /*...values*/{
      return this(arguments);
    };

    List.prototype.toString = function () {
      return this.__toString('List [', ']');
    };

    // @pragma Access

    List.prototype.get = function (index, notSetValue) {
      index = wrapIndex(this, index);
      if (index >= 0 && index < this.size) {
        index += this._origin;
        var node = listNodeFor(this, index);
        return node && node.array[index & MASK];
      }
      return notSetValue;
    };

    // @pragma Modification

    List.prototype.set = function (index, value) {
      return updateList(this, index, value);
    };

    List.prototype.remove = function (index) {
      return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);
    };

    List.prototype.insert = function (index, value) {
      return this.splice(index, 0, value);
    };

    List.prototype.clear = function () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = this._origin = this._capacity = 0;
        this._level = SHIFT;
        this._root = this._tail = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyList();
    };

    List.prototype.push = function () /*...values*/{
      var values = arguments;
      var oldSize = this.size;
      return this.withMutations(function (list) {
        setListBounds(list, 0, oldSize + values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(oldSize + ii, values[ii]);
        }
      });
    };

    List.prototype.pop = function () {
      return setListBounds(this, 0, -1);
    };

    List.prototype.unshift = function () /*...values*/{
      var values = arguments;
      return this.withMutations(function (list) {
        setListBounds(list, -values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(ii, values[ii]);
        }
      });
    };

    List.prototype.shift = function () {
      return setListBounds(this, 1);
    };

    // @pragma Composition

    List.prototype.merge = function () /*...iters*/{
      return mergeIntoListWith(this, undefined, arguments);
    };

    List.prototype.mergeWith = function (merger) {
      var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, merger, iters);
    };

    List.prototype.mergeDeep = function () /*...iters*/{
      return mergeIntoListWith(this, deepMerger, arguments);
    };

    List.prototype.mergeDeepWith = function (merger) {
      var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, deepMergerWith(merger), iters);
    };

    List.prototype.setSize = function (size) {
      return setListBounds(this, 0, size);
    };

    // @pragma Iteration

    List.prototype.slice = function (begin, end) {
      var size = this.size;
      if (wholeSlice(begin, end, size)) {
        return this;
      }
      return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));
    };

    List.prototype.__iterator = function (type, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      return new Iterator(function () {
        var value = values();
        return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);
      });
    };

    List.prototype.__iterate = function (fn, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      var value;
      while ((value = values()) !== DONE) {
        if (fn(value, index++, this) === false) {
          break;
        }
      }
      return index;
    };

    List.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        return this;
      }
      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
    };

    function isList(maybeList) {
      return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
    }

    List.isList = isList;

    var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

    var ListPrototype = List.prototype;
    ListPrototype[IS_LIST_SENTINEL] = true;
    ListPrototype[DELETE] = ListPrototype.remove;
    ListPrototype.setIn = MapPrototype.setIn;
    ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;
    ListPrototype.update = MapPrototype.update;
    ListPrototype.updateIn = MapPrototype.updateIn;
    ListPrototype.mergeIn = MapPrototype.mergeIn;
    ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
    ListPrototype.withMutations = MapPrototype.withMutations;
    ListPrototype.asMutable = MapPrototype.asMutable;
    ListPrototype.asImmutable = MapPrototype.asImmutable;
    ListPrototype.wasAltered = MapPrototype.wasAltered;

    function VNode(array, ownerID) {
      this.array = array;
      this.ownerID = ownerID;
    }

    // TODO: seems like these methods are very similar

    VNode.prototype.removeBefore = function (ownerID, level, index) {
      if (index === level ? 1 << level : 0 || this.array.length === 0) {
        return this;
      }
      var originIndex = index >>> level & MASK;
      if (originIndex >= this.array.length) {
        return new VNode([], ownerID);
      }
      var removingFirst = originIndex === 0;
      var newChild;
      if (level > 0) {
        var oldChild = this.array[originIndex];
        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
        if (newChild === oldChild && removingFirst) {
          return this;
        }
      }
      if (removingFirst && !newChild) {
        return this;
      }
      var editable = editableVNode(this, ownerID);
      if (!removingFirst) {
        for (var ii = 0; ii < originIndex; ii++) {
          editable.array[ii] = undefined;
        }
      }
      if (newChild) {
        editable.array[originIndex] = newChild;
      }
      return editable;
    };

    VNode.prototype.removeAfter = function (ownerID, level, index) {
      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
        return this;
      }
      var sizeIndex = index - 1 >>> level & MASK;
      if (sizeIndex >= this.array.length) {
        return this;
      }

      var newChild;
      if (level > 0) {
        var oldChild = this.array[sizeIndex];
        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
          return this;
        }
      }

      var editable = editableVNode(this, ownerID);
      editable.array.splice(sizeIndex + 1);
      if (newChild) {
        editable.array[sizeIndex] = newChild;
      }
      return editable;
    };

    var DONE = {};

    function iterateList(list, reverse) {
      var left = list._origin;
      var right = list._capacity;
      var tailPos = getTailOffset(right);
      var tail = list._tail;

      return iterateNodeOrLeaf(list._root, list._level, 0);

      function iterateNodeOrLeaf(node, level, offset) {
        return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);
      }

      function iterateLeaf(node, offset) {
        var array = offset === tailPos ? tail && tail.array : node && node.array;
        var from = offset > left ? 0 : left - offset;
        var to = right - offset;
        if (to > SIZE) {
          to = SIZE;
        }
        return function () {
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          return array && array[idx];
        };
      }

      function iterateNode(node, level, offset) {
        var values;
        var array = node && node.array;
        var from = offset > left ? 0 : left - offset >> level;
        var to = (right - offset >> level) + 1;
        if (to > SIZE) {
          to = SIZE;
        }
        return function () {
          do {
            if (values) {
              var value = values();
              if (value !== DONE) {
                return value;
              }
              values = null;
            }
            if (from === to) {
              return DONE;
            }
            var idx = reverse ? --to : from++;
            values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));
          } while (true);
        };
      }
    }

    function makeList(origin, capacity, level, root, tail, ownerID, hash) {
      var list = Object.create(ListPrototype);
      list.size = capacity - origin;
      list._origin = origin;
      list._capacity = capacity;
      list._level = level;
      list._root = root;
      list._tail = tail;
      list.__ownerID = ownerID;
      list.__hash = hash;
      list.__altered = false;
      return list;
    }

    var EMPTY_LIST;
    function emptyList() {
      return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
    }

    function updateList(list, index, value) {
      index = wrapIndex(list, index);

      if (index !== index) {
        return list;
      }

      if (index >= list.size || index < 0) {
        return list.withMutations(function (list) {
          index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);
        });
      }

      index += list._origin;

      var newTail = list._tail;
      var newRoot = list._root;
      var didAlter = MakeRef(DID_ALTER);
      if (index >= getTailOffset(list._capacity)) {
        newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
      } else {
        newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
      }

      if (!didAlter.value) {
        return list;
      }

      if (list.__ownerID) {
        list._root = newRoot;
        list._tail = newTail;
        list.__hash = undefined;
        list.__altered = true;
        return list;
      }
      return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
    }

    function updateVNode(node, ownerID, level, index, value, didAlter) {
      var idx = index >>> level & MASK;
      var nodeHas = node && idx < node.array.length;
      if (!nodeHas && value === undefined) {
        return node;
      }

      var newNode;

      if (level > 0) {
        var lowerNode = node && node.array[idx];
        var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
        if (newLowerNode === lowerNode) {
          return node;
        }
        newNode = editableVNode(node, ownerID);
        newNode.array[idx] = newLowerNode;
        return newNode;
      }

      if (nodeHas && node.array[idx] === value) {
        return node;
      }

      SetRef(didAlter);

      newNode = editableVNode(node, ownerID);
      if (value === undefined && idx === newNode.array.length - 1) {
        newNode.array.pop();
      } else {
        newNode.array[idx] = value;
      }
      return newNode;
    }

    function editableVNode(node, ownerID) {
      if (ownerID && node && ownerID === node.ownerID) {
        return node;
      }
      return new VNode(node ? node.array.slice() : [], ownerID);
    }

    function listNodeFor(list, rawIndex) {
      if (rawIndex >= getTailOffset(list._capacity)) {
        return list._tail;
      }
      if (rawIndex < 1 << list._level + SHIFT) {
        var node = list._root;
        var level = list._level;
        while (node && level > 0) {
          node = node.array[rawIndex >>> level & MASK];
          level -= SHIFT;
        }
        return node;
      }
    }

    function setListBounds(list, begin, end) {
      // Sanitize begin & end using this shorthand for ToInt32(argument)
      // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
      if (begin !== undefined) {
        begin = begin | 0;
      }
      if (end !== undefined) {
        end = end | 0;
      }
      var owner = list.__ownerID || new OwnerID();
      var oldOrigin = list._origin;
      var oldCapacity = list._capacity;
      var newOrigin = oldOrigin + begin;
      var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
      if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
        return list;
      }

      // If it's going to end after it starts, it's empty.
      if (newOrigin >= newCapacity) {
        return list.clear();
      }

      var newLevel = list._level;
      var newRoot = list._root;

      // New origin might need creating a higher root.
      var offsetShift = 0;
      while (newOrigin + offsetShift < 0) {
        newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
        newLevel += SHIFT;
        offsetShift += 1 << newLevel;
      }
      if (offsetShift) {
        newOrigin += offsetShift;
        oldOrigin += offsetShift;
        newCapacity += offsetShift;
        oldCapacity += offsetShift;
      }

      var oldTailOffset = getTailOffset(oldCapacity);
      var newTailOffset = getTailOffset(newCapacity);

      // New size might need creating a higher root.
      while (newTailOffset >= 1 << newLevel + SHIFT) {
        newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
        newLevel += SHIFT;
      }

      // Locate or create the new tail.
      var oldTail = list._tail;
      var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

      // Merge Tail into tree.
      if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
        newRoot = editableVNode(newRoot, owner);
        var node = newRoot;
        for (var level = newLevel; level > SHIFT; level -= SHIFT) {
          var idx = oldTailOffset >>> level & MASK;
          node = node.array[idx] = editableVNode(node.array[idx], owner);
        }
        node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;
      }

      // If the size has been reduced, there's a chance the tail needs to be trimmed.
      if (newCapacity < oldCapacity) {
        newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
      }

      // If the new origin is within the tail, then we do not need a root.
      if (newOrigin >= newTailOffset) {
        newOrigin -= newTailOffset;
        newCapacity -= newTailOffset;
        newLevel = SHIFT;
        newRoot = null;
        newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

        // Otherwise, if the root has been trimmed, garbage collect.
      } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
        offsetShift = 0;

        // Identify the new top root node of the subtree of the old root.
        while (newRoot) {
          var beginIndex = newOrigin >>> newLevel & MASK;
          if (beginIndex !== newTailOffset >>> newLevel & MASK) {
            break;
          }
          if (beginIndex) {
            offsetShift += (1 << newLevel) * beginIndex;
          }
          newLevel -= SHIFT;
          newRoot = newRoot.array[beginIndex];
        }

        // Trim the new sides of the new root.
        if (newRoot && newOrigin > oldOrigin) {
          newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
        }
        if (newRoot && newTailOffset < oldTailOffset) {
          newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
        }
        if (offsetShift) {
          newOrigin -= offsetShift;
          newCapacity -= offsetShift;
        }
      }

      if (list.__ownerID) {
        list.size = newCapacity - newOrigin;
        list._origin = newOrigin;
        list._capacity = newCapacity;
        list._level = newLevel;
        list._root = newRoot;
        list._tail = newTail;
        list.__hash = undefined;
        list.__altered = true;
        return list;
      }
      return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
    }

    function mergeIntoListWith(list, merger, iterables) {
      var iters = [];
      var maxSize = 0;
      for (var ii = 0; ii < iterables.length; ii++) {
        var value = iterables[ii];
        var iter = IndexedIterable(value);
        if (iter.size > maxSize) {
          maxSize = iter.size;
        }
        if (!isIterable(value)) {
          iter = iter.map(function (v) {
            return fromJS(v);
          });
        }
        iters.push(iter);
      }
      if (maxSize > list.size) {
        list = list.setSize(maxSize);
      }
      return mergeIntoCollectionWith(list, merger, iters);
    }

    function getTailOffset(size) {
      return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;
    }

    createClass(OrderedMap, Map);

    // @pragma Construction

    function OrderedMap(value) {
      return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {
        var iter = KeyedIterable(value);
        assertNotInfinite(iter.size);
        iter.forEach(function (v, k) {
          return map.set(k, v);
        });
      });
    }

    OrderedMap.of = function () /*...values*/{
      return this(arguments);
    };

    OrderedMap.prototype.toString = function () {
      return this.__toString('OrderedMap {', '}');
    };

    // @pragma Access

    OrderedMap.prototype.get = function (k, notSetValue) {
      var index = this._map.get(k);
      return index !== undefined ? this._list.get(index)[1] : notSetValue;
    };

    // @pragma Modification

    OrderedMap.prototype.clear = function () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._map.clear();
        this._list.clear();
        return this;
      }
      return emptyOrderedMap();
    };

    OrderedMap.prototype.set = function (k, v) {
      return updateOrderedMap(this, k, v);
    };

    OrderedMap.prototype.remove = function (k) {
      return updateOrderedMap(this, k, NOT_SET);
    };

    OrderedMap.prototype.wasAltered = function () {
      return this._map.wasAltered() || this._list.wasAltered();
    };

    OrderedMap.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      return this._list.__iterate(function (entry) {
        return entry && fn(entry[1], entry[0], this$0);
      }, reverse);
    };

    OrderedMap.prototype.__iterator = function (type, reverse) {
      return this._list.fromEntrySeq().__iterator(type, reverse);
    };

    OrderedMap.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      var newList = this._list.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        this._list = newList;
        return this;
      }
      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
    };

    function isOrderedMap(maybeOrderedMap) {
      return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
    }

    OrderedMap.isOrderedMap = isOrderedMap;

    OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
    OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;

    function makeOrderedMap(map, list, ownerID, hash) {
      var omap = Object.create(OrderedMap.prototype);
      omap.size = map ? map.size : 0;
      omap._map = map;
      omap._list = list;
      omap.__ownerID = ownerID;
      omap.__hash = hash;
      return omap;
    }

    var EMPTY_ORDERED_MAP;
    function emptyOrderedMap() {
      return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
    }

    function updateOrderedMap(omap, k, v) {
      var map = omap._map;
      var list = omap._list;
      var i = map.get(k);
      var has = i !== undefined;
      var newMap;
      var newList;
      if (v === NOT_SET) {
        // removed
        if (!has) {
          return omap;
        }
        if (list.size >= SIZE && list.size >= map.size * 2) {
          newList = list.filter(function (entry, idx) {
            return entry !== undefined && i !== idx;
          });
          newMap = newList.toKeyedSeq().map(function (entry) {
            return entry[0];
          }).flip().toMap();
          if (omap.__ownerID) {
            newMap.__ownerID = newList.__ownerID = omap.__ownerID;
          }
        } else {
          newMap = map.remove(k);
          newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
        }
      } else {
        if (has) {
          if (v === list.get(i)[1]) {
            return omap;
          }
          newMap = map;
          newList = list.set(i, [k, v]);
        } else {
          newMap = map.set(k, list.size);
          newList = list.set(list.size, [k, v]);
        }
      }
      if (omap.__ownerID) {
        omap.size = newMap.size;
        omap._map = newMap;
        omap._list = newList;
        omap.__hash = undefined;
        return omap;
      }
      return makeOrderedMap(newMap, newList);
    }

    createClass(ToKeyedSequence, KeyedSeq);
    function ToKeyedSequence(indexed, useKeys) {
      this._iter = indexed;
      this._useKeys = useKeys;
      this.size = indexed.size;
    }

    ToKeyedSequence.prototype.get = function (key, notSetValue) {
      return this._iter.get(key, notSetValue);
    };

    ToKeyedSequence.prototype.has = function (key) {
      return this._iter.has(key);
    };

    ToKeyedSequence.prototype.valueSeq = function () {
      return this._iter.valueSeq();
    };

    ToKeyedSequence.prototype.reverse = function () {
      var this$0 = this;
      var reversedSequence = reverseFactory(this, true);
      if (!this._useKeys) {
        reversedSequence.valueSeq = function () {
          return this$0._iter.toSeq().reverse();
        };
      }
      return reversedSequence;
    };

    ToKeyedSequence.prototype.map = function (mapper, context) {
      var this$0 = this;
      var mappedSequence = mapFactory(this, mapper, context);
      if (!this._useKeys) {
        mappedSequence.valueSeq = function () {
          return this$0._iter.toSeq().map(mapper, context);
        };
      }
      return mappedSequence;
    };

    ToKeyedSequence.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      var ii;
      return this._iter.__iterate(this._useKeys ? function (v, k) {
        return fn(v, k, this$0);
      } : (ii = reverse ? resolveSize(this) : 0, function (v) {
        return fn(v, reverse ? --ii : ii++, this$0);
      }), reverse);
    };

    ToKeyedSequence.prototype.__iterator = function (type, reverse) {
      if (this._useKeys) {
        return this._iter.__iterator(type, reverse);
      }
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var ii = reverse ? resolveSize(this) : 0;
      return new Iterator(function () {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);
      });
    };

    ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;

    createClass(ToIndexedSequence, IndexedSeq);
    function ToIndexedSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToIndexedSequence.prototype.includes = function (value) {
      return this._iter.includes(value);
    };

    ToIndexedSequence.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      var iterations = 0;
      return this._iter.__iterate(function (v) {
        return fn(v, iterations++, this$0);
      }, reverse);
    };

    ToIndexedSequence.prototype.__iterator = function (type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      return new Iterator(function () {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, iterations++, step.value, step);
      });
    };

    createClass(ToSetSequence, SetSeq);
    function ToSetSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToSetSequence.prototype.has = function (key) {
      return this._iter.includes(key);
    };

    ToSetSequence.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      return this._iter.__iterate(function (v) {
        return fn(v, v, this$0);
      }, reverse);
    };

    ToSetSequence.prototype.__iterator = function (type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function () {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, step.value, step.value, step);
      });
    };

    createClass(FromEntriesSequence, KeyedSeq);
    function FromEntriesSequence(entries) {
      this._iter = entries;
      this.size = entries.size;
    }

    FromEntriesSequence.prototype.entrySeq = function () {
      return this._iter.toSeq();
    };

    FromEntriesSequence.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      return this._iter.__iterate(function (entry) {
        // Check if entry exists first so array access doesn't throw for holes
        // in the parent iteration.
        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);
        }
      }, reverse);
    };

    FromEntriesSequence.prototype.__iterator = function (type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function () {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          // Check if entry exists first so array access doesn't throw for holes
          // in the parent iteration.
          if (entry) {
            validateEntry(entry);
            var indexedIterable = isIterable(entry);
            return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);
          }
        }
      });
    };

    ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;

    function flipFactory(iterable) {
      var flipSequence = makeSequence(iterable);
      flipSequence._iter = iterable;
      flipSequence.size = iterable.size;
      flipSequence.flip = function () {
        return iterable;
      };
      flipSequence.reverse = function () {
        var reversedSequence = iterable.reverse.apply(this); // super.reverse()
        reversedSequence.flip = function () {
          return iterable.reverse();
        };
        return reversedSequence;
      };
      flipSequence.has = function (key) {
        return iterable.includes(key);
      };
      flipSequence.includes = function (key) {
        return iterable.has(key);
      };
      flipSequence.cacheResult = cacheResultThrough;
      flipSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        return iterable.__iterate(function (v, k) {
          return fn(k, v, this$0) !== false;
        }, reverse);
      };
      flipSequence.__iteratorUncached = function (type, reverse) {
        if (type === ITERATE_ENTRIES) {
          var iterator = iterable.__iterator(type, reverse);
          return new Iterator(function () {
            var step = iterator.next();
            if (!step.done) {
              var k = step.value[0];
              step.value[0] = step.value[1];
              step.value[1] = k;
            }
            return step;
          });
        }
        return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);
      };
      return flipSequence;
    }

    function mapFactory(iterable, mapper, context) {
      var mappedSequence = makeSequence(iterable);
      mappedSequence.size = iterable.size;
      mappedSequence.has = function (key) {
        return iterable.has(key);
      };
      mappedSequence.get = function (key, notSetValue) {
        var v = iterable.get(key, NOT_SET);
        return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);
      };
      mappedSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        return iterable.__iterate(function (v, k, c) {
          return fn(mapper.call(context, v, k, c), k, this$0) !== false;
        }, reverse);
      };
      mappedSequence.__iteratorUncached = function (type, reverse) {
        var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
        return new Iterator(function () {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);
        });
      };
      return mappedSequence;
    }

    function reverseFactory(iterable, useKeys) {
      var reversedSequence = makeSequence(iterable);
      reversedSequence._iter = iterable;
      reversedSequence.size = iterable.size;
      reversedSequence.reverse = function () {
        return iterable;
      };
      if (iterable.flip) {
        reversedSequence.flip = function () {
          var flipSequence = flipFactory(iterable);
          flipSequence.reverse = function () {
            return iterable.flip();
          };
          return flipSequence;
        };
      }
      reversedSequence.get = function (key, notSetValue) {
        return iterable.get(useKeys ? key : -1 - key, notSetValue);
      };
      reversedSequence.has = function (key) {
        return iterable.has(useKeys ? key : -1 - key);
      };
      reversedSequence.includes = function (value) {
        return iterable.includes(value);
      };
      reversedSequence.cacheResult = cacheResultThrough;
      reversedSequence.__iterate = function (fn, reverse) {
        var this$0 = this;
        return iterable.__iterate(function (v, k) {
          return fn(v, k, this$0);
        }, !reverse);
      };
      reversedSequence.__iterator = function (type, reverse) {
        return iterable.__iterator(type, !reverse);
      };
      return reversedSequence;
    }

    function filterFactory(iterable, predicate, context, useKeys) {
      var filterSequence = makeSequence(iterable);
      if (useKeys) {
        filterSequence.has = function (key) {
          var v = iterable.get(key, NOT_SET);
          return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
        };
        filterSequence.get = function (key, notSetValue) {
          var v = iterable.get(key, NOT_SET);
          return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;
        };
      }
      filterSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        var iterations = 0;
        iterable.__iterate(function (v, k, c) {
          if (predicate.call(context, v, k, c)) {
            iterations++;
            return fn(v, useKeys ? k : iterations - 1, this$0);
          }
        }, reverse);
        return iterations;
      };
      filterSequence.__iteratorUncached = function (type, reverse) {
        var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
        var iterations = 0;
        return new Iterator(function () {
          while (true) {
            var step = iterator.next();
            if (step.done) {
              return step;
            }
            var entry = step.value;
            var key = entry[0];
            var value = entry[1];
            if (predicate.call(context, value, key, iterable)) {
              return iteratorValue(type, useKeys ? key : iterations++, value, step);
            }
          }
        });
      };
      return filterSequence;
    }

    function countByFactory(iterable, grouper, context) {
      var groups = Map().asMutable();
      iterable.__iterate(function (v, k) {
        groups.update(grouper.call(context, v, k, iterable), 0, function (a) {
          return a + 1;
        });
      });
      return groups.asImmutable();
    }

    function groupByFactory(iterable, grouper, context) {
      var isKeyedIter = isKeyed(iterable);
      var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
      iterable.__iterate(function (v, k) {
        groups.update(grouper.call(context, v, k, iterable), function (a) {
          return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;
        });
      });
      var coerce = iterableClass(iterable);
      return groups.map(function (arr) {
        return reify(iterable, coerce(arr));
      });
    }

    function sliceFactory(iterable, begin, end, useKeys) {
      var originalSize = iterable.size;

      // Sanitize begin & end using this shorthand for ToInt32(argument)
      // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
      if (begin !== undefined) {
        begin = begin | 0;
      }
      if (end !== undefined) {
        if (end === Infinity) {
          end = originalSize;
        } else {
          end = end | 0;
        }
      }

      if (wholeSlice(begin, end, originalSize)) {
        return iterable;
      }

      var resolvedBegin = resolveBegin(begin, originalSize);
      var resolvedEnd = resolveEnd(end, originalSize);

      // begin or end will be NaN if they were provided as negative numbers and
      // this iterable's size is unknown. In that case, cache first so there is
      // a known size and these do not resolve to NaN.
      if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
        return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
      }

      // Note: resolvedEnd is undefined when the original sequence's length is
      // unknown and this slice did not supply an end and should contain all
      // elements after resolvedBegin.
      // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
      var resolvedSize = resolvedEnd - resolvedBegin;
      var sliceSize;
      if (resolvedSize === resolvedSize) {
        sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
      }

      var sliceSeq = makeSequence(iterable);

      // If iterable.size is undefined, the size of the realized sliceSeq is
      // unknown at this point unless the number of items to slice is 0
      sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

      if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
        sliceSeq.get = function (index, notSetValue) {
          index = wrapIndex(this, index);
          return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;
        };
      }

      sliceSeq.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        if (sliceSize === 0) {
          return 0;
        }
        if (reverse) {
          return this.cacheResult().__iterate(fn, reverse);
        }
        var skipped = 0;
        var isSkipping = true;
        var iterations = 0;
        iterable.__iterate(function (v, k) {
          if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
            iterations++;
            return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;
          }
        });
        return iterations;
      };

      sliceSeq.__iteratorUncached = function (type, reverse) {
        if (sliceSize !== 0 && reverse) {
          return this.cacheResult().__iterator(type, reverse);
        }
        // Don't bother instantiating parent iterator if taking 0.
        var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
        var skipped = 0;
        var iterations = 0;
        return new Iterator(function () {
          while (skipped++ < resolvedBegin) {
            iterator.next();
          }
          if (++iterations > sliceSize) {
            return iteratorDone();
          }
          var step = iterator.next();
          if (useKeys || type === ITERATE_VALUES) {
            return step;
          } else if (type === ITERATE_KEYS) {
            return iteratorValue(type, iterations - 1, undefined, step);
          } else {
            return iteratorValue(type, iterations - 1, step.value[1], step);
          }
        });
      };

      return sliceSeq;
    }

    function takeWhileFactory(iterable, predicate, context) {
      var takeSequence = makeSequence(iterable);
      takeSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        if (reverse) {
          return this.cacheResult().__iterate(fn, reverse);
        }
        var iterations = 0;
        iterable.__iterate(function (v, k, c) {
          return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);
        });
        return iterations;
      };
      takeSequence.__iteratorUncached = function (type, reverse) {
        var this$0 = this;
        if (reverse) {
          return this.cacheResult().__iterator(type, reverse);
        }
        var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
        var iterating = true;
        return new Iterator(function () {
          if (!iterating) {
            return iteratorDone();
          }
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var k = entry[0];
          var v = entry[1];
          if (!predicate.call(context, v, k, this$0)) {
            iterating = false;
            return iteratorDone();
          }
          return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
        });
      };
      return takeSequence;
    }

    function skipWhileFactory(iterable, predicate, context, useKeys) {
      var skipSequence = makeSequence(iterable);
      skipSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        if (reverse) {
          return this.cacheResult().__iterate(fn, reverse);
        }
        var isSkipping = true;
        var iterations = 0;
        iterable.__iterate(function (v, k, c) {
          if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
            iterations++;
            return fn(v, useKeys ? k : iterations - 1, this$0);
          }
        });
        return iterations;
      };
      skipSequence.__iteratorUncached = function (type, reverse) {
        var this$0 = this;
        if (reverse) {
          return this.cacheResult().__iterator(type, reverse);
        }
        var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
        var skipping = true;
        var iterations = 0;
        return new Iterator(function () {
          var step, k, v;
          do {
            step = iterator.next();
            if (step.done) {
              if (useKeys || type === ITERATE_VALUES) {
                return step;
              } else if (type === ITERATE_KEYS) {
                return iteratorValue(type, iterations++, undefined, step);
              } else {
                return iteratorValue(type, iterations++, step.value[1], step);
              }
            }
            var entry = step.value;
            k = entry[0];
            v = entry[1];
            skipping && (skipping = predicate.call(context, v, k, this$0));
          } while (skipping);
          return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);
        });
      };
      return skipSequence;
    }

    function concatFactory(iterable, values) {
      var isKeyedIterable = isKeyed(iterable);
      var iters = [iterable].concat(values).map(function (v) {
        if (!isIterable(v)) {
          v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);
        } else if (isKeyedIterable) {
          v = KeyedIterable(v);
        }
        return v;
      }).filter(function (v) {
        return v.size !== 0;
      });

      if (iters.length === 0) {
        return iterable;
      }

      if (iters.length === 1) {
        var singleton = iters[0];
        if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {
          return singleton;
        }
      }

      var concatSeq = new ArraySeq(iters);
      if (isKeyedIterable) {
        concatSeq = concatSeq.toKeyedSeq();
      } else if (!isIndexed(iterable)) {
        concatSeq = concatSeq.toSetSeq();
      }
      concatSeq = concatSeq.flatten(true);
      concatSeq.size = iters.reduce(function (sum, seq) {
        if (sum !== undefined) {
          var size = seq.size;
          if (size !== undefined) {
            return sum + size;
          }
        }
      }, 0);
      return concatSeq;
    }

    function flattenFactory(iterable, depth, useKeys) {
      var flatSequence = makeSequence(iterable);
      flatSequence.__iterateUncached = function (fn, reverse) {
        var iterations = 0;
        var stopped = false;
        function flatDeep(iter, currentDepth) {
          var this$0 = this;
          iter.__iterate(function (v, k) {
            if ((!depth || currentDepth < depth) && isIterable(v)) {
              flatDeep(v, currentDepth + 1);
            } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
              stopped = true;
            }
            return !stopped;
          }, reverse);
        }
        flatDeep(iterable, 0);
        return iterations;
      };
      flatSequence.__iteratorUncached = function (type, reverse) {
        var iterator = iterable.__iterator(type, reverse);
        var stack = [];
        var iterations = 0;
        return new Iterator(function () {
          while (iterator) {
            var step = iterator.next();
            if (step.done !== false) {
              iterator = stack.pop();
              continue;
            }
            var v = step.value;
            if (type === ITERATE_ENTRIES) {
              v = v[1];
            }
            if ((!depth || stack.length < depth) && isIterable(v)) {
              stack.push(iterator);
              iterator = v.__iterator(type, reverse);
            } else {
              return useKeys ? step : iteratorValue(type, iterations++, v, step);
            }
          }
          return iteratorDone();
        });
      };
      return flatSequence;
    }

    function flatMapFactory(iterable, mapper, context) {
      var coerce = iterableClass(iterable);
      return iterable.toSeq().map(function (v, k) {
        return coerce(mapper.call(context, v, k, iterable));
      }).flatten(true);
    }

    function interposeFactory(iterable, separator) {
      var interposedSequence = makeSequence(iterable);
      interposedSequence.size = iterable.size && iterable.size * 2 - 1;
      interposedSequence.__iterateUncached = function (fn, reverse) {
        var this$0 = this;
        var iterations = 0;
        iterable.__iterate(function (v, k) {
          return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;
        }, reverse);
        return iterations;
      };
      interposedSequence.__iteratorUncached = function (type, reverse) {
        var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
        var iterations = 0;
        var step;
        return new Iterator(function () {
          if (!step || iterations % 2) {
            step = iterator.next();
            if (step.done) {
              return step;
            }
          }
          return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);
        });
      };
      return interposedSequence;
    }

    function sortFactory(iterable, comparator, mapper) {
      if (!comparator) {
        comparator = defaultComparator;
      }
      var isKeyedIterable = isKeyed(iterable);
      var index = 0;
      var entries = iterable.toSeq().map(function (v, k) {
        return [k, v, index++, mapper ? mapper(v, k, iterable) : v];
      }).toArray();
      entries.sort(function (a, b) {
        return comparator(a[3], b[3]) || a[2] - b[2];
      }).forEach(isKeyedIterable ? function (v, i) {
        entries[i].length = 2;
      } : function (v, i) {
        entries[i] = v[1];
      });
      return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);
    }

    function maxFactory(iterable, comparator, mapper) {
      if (!comparator) {
        comparator = defaultComparator;
      }
      if (mapper) {
        var entry = iterable.toSeq().map(function (v, k) {
          return [v, mapper(v, k, iterable)];
        }).reduce(function (a, b) {
          return maxCompare(comparator, a[1], b[1]) ? b : a;
        });
        return entry && entry[0];
      } else {
        return iterable.reduce(function (a, b) {
          return maxCompare(comparator, a, b) ? b : a;
        });
      }
    }

    function maxCompare(comparator, a, b) {
      var comp = comparator(b, a);
      // b is considered the new max if the comparator declares them equal, but
      // they are not equal and b is in fact a nullish value.
      return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;
    }

    function zipWithFactory(keyIter, zipper, iters) {
      var zipSequence = makeSequence(keyIter);
      zipSequence.size = new ArraySeq(iters).map(function (i) {
        return i.size;
      }).min();
      // Note: this a generic base implementation of __iterate in terms of
      // __iterator which may be more generically useful in the future.
      zipSequence.__iterate = function (fn, reverse) {
        /* generic:
        var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
        var step;
        var iterations = 0;
        while (!(step = iterator.next()).done) {
          iterations++;
          if (fn(step.value[1], step.value[0], this) === false) {
            break;
          }
        }
        return iterations;
        */
        // indexed:
        var iterator = this.__iterator(ITERATE_VALUES, reverse);
        var step;
        var iterations = 0;
        while (!(step = iterator.next()).done) {
          if (fn(step.value, iterations++, this) === false) {
            break;
          }
        }
        return iterations;
      };
      zipSequence.__iteratorUncached = function (type, reverse) {
        var iterators = iters.map(function (i) {
          return i = Iterable(i), getIterator(reverse ? i.reverse() : i);
        });
        var iterations = 0;
        var isDone = false;
        return new Iterator(function () {
          var steps;
          if (!isDone) {
            steps = iterators.map(function (i) {
              return i.next();
            });
            isDone = steps.some(function (s) {
              return s.done;
            });
          }
          if (isDone) {
            return iteratorDone();
          }
          return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {
            return s.value;
          })));
        });
      };
      return zipSequence;
    }

    // #pragma Helper Functions

    function reify(iter, seq) {
      return isSeq(iter) ? seq : iter.constructor(seq);
    }

    function validateEntry(entry) {
      if (entry !== Object(entry)) {
        throw new TypeError('Expected [K, V] tuple: ' + entry);
      }
    }

    function resolveSize(iter) {
      assertNotInfinite(iter.size);
      return ensureSize(iter);
    }

    function iterableClass(iterable) {
      return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;
    }

    function makeSequence(iterable) {
      return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);
    }

    function cacheResultThrough() {
      if (this._iter.cacheResult) {
        this._iter.cacheResult();
        this.size = this._iter.size;
        return this;
      } else {
        return Seq.prototype.cacheResult.call(this);
      }
    }

    function defaultComparator(a, b) {
      return a > b ? 1 : a < b ? -1 : 0;
    }

    function forceIterator(keyPath) {
      var iter = getIterator(keyPath);
      if (!iter) {
        // Array might not be iterable in this environment, so we need a fallback
        // to our wrapped type.
        if (!isArrayLike(keyPath)) {
          throw new TypeError('Expected iterable or array-like: ' + keyPath);
        }
        iter = getIterator(Iterable(keyPath));
      }
      return iter;
    }

    createClass(Record, KeyedCollection);

    function Record(defaultValues, name) {
      var hasInitialized;

      var RecordType = function Record(values) {
        if (values instanceof RecordType) {
          return values;
        }
        if (!(this instanceof RecordType)) {
          return new RecordType(values);
        }
        if (!hasInitialized) {
          hasInitialized = true;
          var keys = Object.keys(defaultValues);
          setProps(RecordTypePrototype, keys);
          RecordTypePrototype.size = keys.length;
          RecordTypePrototype._name = name;
          RecordTypePrototype._keys = keys;
          RecordTypePrototype._defaultValues = defaultValues;
        }
        this._map = Map(values);
      };

      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
      RecordTypePrototype.constructor = RecordType;

      return RecordType;
    }

    Record.prototype.toString = function () {
      return this.__toString(recordName(this) + ' {', '}');
    };

    // @pragma Access

    Record.prototype.has = function (k) {
      return this._defaultValues.hasOwnProperty(k);
    };

    Record.prototype.get = function (k, notSetValue) {
      if (!this.has(k)) {
        return notSetValue;
      }
      var defaultVal = this._defaultValues[k];
      return this._map ? this._map.get(k, defaultVal) : defaultVal;
    };

    // @pragma Modification

    Record.prototype.clear = function () {
      if (this.__ownerID) {
        this._map && this._map.clear();
        return this;
      }
      var RecordType = this.constructor;
      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
    };

    Record.prototype.set = function (k, v) {
      if (!this.has(k)) {
        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
      }
      if (this._map && !this._map.has(k)) {
        var defaultVal = this._defaultValues[k];
        if (v === defaultVal) {
          return this;
        }
      }
      var newMap = this._map && this._map.set(k, v);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.remove = function (k) {
      if (!this.has(k)) {
        return this;
      }
      var newMap = this._map && this._map.remove(k);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.wasAltered = function () {
      return this._map.wasAltered();
    };

    Record.prototype.__iterator = function (type, reverse) {
      var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function (_, k) {
        return this$0.get(k);
      }).__iterator(type, reverse);
    };

    Record.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function (_, k) {
        return this$0.get(k);
      }).__iterate(fn, reverse);
    };

    Record.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map && this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return makeRecord(this, newMap, ownerID);
    };

    var RecordPrototype = Record.prototype;
    RecordPrototype[DELETE] = RecordPrototype.remove;
    RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;
    RecordPrototype.merge = MapPrototype.merge;
    RecordPrototype.mergeWith = MapPrototype.mergeWith;
    RecordPrototype.mergeIn = MapPrototype.mergeIn;
    RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
    RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
    RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
    RecordPrototype.setIn = MapPrototype.setIn;
    RecordPrototype.update = MapPrototype.update;
    RecordPrototype.updateIn = MapPrototype.updateIn;
    RecordPrototype.withMutations = MapPrototype.withMutations;
    RecordPrototype.asMutable = MapPrototype.asMutable;
    RecordPrototype.asImmutable = MapPrototype.asImmutable;

    function makeRecord(likeRecord, map, ownerID) {
      var record = Object.create(Object.getPrototypeOf(likeRecord));
      record._map = map;
      record.__ownerID = ownerID;
      return record;
    }

    function recordName(record) {
      return record._name || record.constructor.name || 'Record';
    }

    function setProps(prototype, names) {
      try {
        names.forEach(setProp.bind(undefined, prototype));
      } catch (error) {
        // Object.defineProperty failed. Probably IE8.
      }
    }

    function setProp(prototype, name) {
      Object.defineProperty(prototype, name, {
        get: function () {
          return this.get(name);
        },
        set: function (value) {
          invariant(this.__ownerID, 'Cannot set on an immutable record.');
          this.set(name, value);
        }
      });
    }

    createClass(Set, SetCollection);

    // @pragma Construction

    function Set(value) {
      return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {
        var iter = SetIterable(value);
        assertNotInfinite(iter.size);
        iter.forEach(function (v) {
          return set.add(v);
        });
      });
    }

    Set.of = function () /*...values*/{
      return this(arguments);
    };

    Set.fromKeys = function (value) {
      return this(KeyedIterable(value).keySeq());
    };

    Set.prototype.toString = function () {
      return this.__toString('Set {', '}');
    };

    // @pragma Access

    Set.prototype.has = function (value) {
      return this._map.has(value);
    };

    // @pragma Modification

    Set.prototype.add = function (value) {
      return updateSet(this, this._map.set(value, true));
    };

    Set.prototype.remove = function (value) {
      return updateSet(this, this._map.remove(value));
    };

    Set.prototype.clear = function () {
      return updateSet(this, this._map.clear());
    };

    // @pragma Composition

    Set.prototype.union = function () {
      var iters = SLICE$0.call(arguments, 0);
      iters = iters.filter(function (x) {
        return x.size !== 0;
      });
      if (iters.length === 0) {
        return this;
      }
      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
        return this.constructor(iters[0]);
      }
      return this.withMutations(function (set) {
        for (var ii = 0; ii < iters.length; ii++) {
          SetIterable(iters[ii]).forEach(function (value) {
            return set.add(value);
          });
        }
      });
    };

    Set.prototype.intersect = function () {
      var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function (iter) {
        return SetIterable(iter);
      });
      var originalSet = this;
      return this.withMutations(function (set) {
        originalSet.forEach(function (value) {
          if (!iters.every(function (iter) {
            return iter.includes(value);
          })) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.subtract = function () {
      var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function (iter) {
        return SetIterable(iter);
      });
      var originalSet = this;
      return this.withMutations(function (set) {
        originalSet.forEach(function (value) {
          if (iters.some(function (iter) {
            return iter.includes(value);
          })) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.merge = function () {
      return this.union.apply(this, arguments);
    };

    Set.prototype.mergeWith = function (merger) {
      var iters = SLICE$0.call(arguments, 1);
      return this.union.apply(this, iters);
    };

    Set.prototype.sort = function (comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator));
    };

    Set.prototype.sortBy = function (mapper, comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator, mapper));
    };

    Set.prototype.wasAltered = function () {
      return this._map.wasAltered();
    };

    Set.prototype.__iterate = function (fn, reverse) {
      var this$0 = this;
      return this._map.__iterate(function (_, k) {
        return fn(k, k, this$0);
      }, reverse);
    };

    Set.prototype.__iterator = function (type, reverse) {
      return this._map.map(function (_, k) {
        return k;
      }).__iterator(type, reverse);
    };

    Set.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return this.__make(newMap, ownerID);
    };

    function isSet(maybeSet) {
      return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
    }

    Set.isSet = isSet;

    var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

    var SetPrototype = Set.prototype;
    SetPrototype[IS_SET_SENTINEL] = true;
    SetPrototype[DELETE] = SetPrototype.remove;
    SetPrototype.mergeDeep = SetPrototype.merge;
    SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
    SetPrototype.withMutations = MapPrototype.withMutations;
    SetPrototype.asMutable = MapPrototype.asMutable;
    SetPrototype.asImmutable = MapPrototype.asImmutable;

    SetPrototype.__empty = emptySet;
    SetPrototype.__make = makeSet;

    function updateSet(set, newMap) {
      if (set.__ownerID) {
        set.size = newMap.size;
        set._map = newMap;
        return set;
      }
      return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);
    }

    function makeSet(map, ownerID) {
      var set = Object.create(SetPrototype);
      set.size = map ? map.size : 0;
      set._map = map;
      set.__ownerID = ownerID;
      return set;
    }

    var EMPTY_SET;
    function emptySet() {
      return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
    }

    createClass(OrderedSet, Set);

    // @pragma Construction

    function OrderedSet(value) {
      return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {
        var iter = SetIterable(value);
        assertNotInfinite(iter.size);
        iter.forEach(function (v) {
          return set.add(v);
        });
      });
    }

    OrderedSet.of = function () /*...values*/{
      return this(arguments);
    };

    OrderedSet.fromKeys = function (value) {
      return this(KeyedIterable(value).keySeq());
    };

    OrderedSet.prototype.toString = function () {
      return this.__toString('OrderedSet {', '}');
    };

    function isOrderedSet(maybeOrderedSet) {
      return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
    }

    OrderedSet.isOrderedSet = isOrderedSet;

    var OrderedSetPrototype = OrderedSet.prototype;
    OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

    OrderedSetPrototype.__empty = emptyOrderedSet;
    OrderedSetPrototype.__make = makeOrderedSet;

    function makeOrderedSet(map, ownerID) {
      var set = Object.create(OrderedSetPrototype);
      set.size = map ? map.size : 0;
      set._map = map;
      set.__ownerID = ownerID;
      return set;
    }

    var EMPTY_ORDERED_SET;
    function emptyOrderedSet() {
      return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
    }

    createClass(Stack, IndexedCollection);

    // @pragma Construction

    function Stack(value) {
      return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);
    }

    Stack.of = function () /*...values*/{
      return this(arguments);
    };

    Stack.prototype.toString = function () {
      return this.__toString('Stack [', ']');
    };

    // @pragma Access

    Stack.prototype.get = function (index, notSetValue) {
      var head = this._head;
      index = wrapIndex(this, index);
      while (head && index--) {
        head = head.next;
      }
      return head ? head.value : notSetValue;
    };

    Stack.prototype.peek = function () {
      return this._head && this._head.value;
    };

    // @pragma Modification

    Stack.prototype.push = function () /*...values*/{
      if (arguments.length === 0) {
        return this;
      }
      var newSize = this.size + arguments.length;
      var head = this._head;
      for (var ii = arguments.length - 1; ii >= 0; ii--) {
        head = {
          value: arguments[ii],
          next: head
        };
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pushAll = function (iter) {
      iter = IndexedIterable(iter);
      if (iter.size === 0) {
        return this;
      }
      assertNotInfinite(iter.size);
      var newSize = this.size;
      var head = this._head;
      iter.reverse().forEach(function (value) {
        newSize++;
        head = {
          value: value,
          next: head
        };
      });
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pop = function () {
      return this.slice(1);
    };

    Stack.prototype.unshift = function () /*...values*/{
      return this.push.apply(this, arguments);
    };

    Stack.prototype.unshiftAll = function (iter) {
      return this.pushAll(iter);
    };

    Stack.prototype.shift = function () {
      return this.pop.apply(this, arguments);
    };

    Stack.prototype.clear = function () {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._head = undefined;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyStack();
    };

    Stack.prototype.slice = function (begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      var resolvedBegin = resolveBegin(begin, this.size);
      var resolvedEnd = resolveEnd(end, this.size);
      if (resolvedEnd !== this.size) {
        // super.slice(begin, end);
        return IndexedCollection.prototype.slice.call(this, begin, end);
      }
      var newSize = this.size - resolvedBegin;
      var head = this._head;
      while (resolvedBegin--) {
        head = head.next;
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    // @pragma Mutability

    Stack.prototype.__ensureOwner = function (ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeStack(this.size, this._head, ownerID, this.__hash);
    };

    // @pragma Iteration

    Stack.prototype.__iterate = function (fn, reverse) {
      if (reverse) {
        return this.reverse().__iterate(fn);
      }
      var iterations = 0;
      var node = this._head;
      while (node) {
        if (fn(node.value, iterations++, this) === false) {
          break;
        }
        node = node.next;
      }
      return iterations;
    };

    Stack.prototype.__iterator = function (type, reverse) {
      if (reverse) {
        return this.reverse().__iterator(type);
      }
      var iterations = 0;
      var node = this._head;
      return new Iterator(function () {
        if (node) {
          var value = node.value;
          node = node.next;
          return iteratorValue(type, iterations++, value);
        }
        return iteratorDone();
      });
    };

    function isStack(maybeStack) {
      return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
    }

    Stack.isStack = isStack;

    var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

    var StackPrototype = Stack.prototype;
    StackPrototype[IS_STACK_SENTINEL] = true;
    StackPrototype.withMutations = MapPrototype.withMutations;
    StackPrototype.asMutable = MapPrototype.asMutable;
    StackPrototype.asImmutable = MapPrototype.asImmutable;
    StackPrototype.wasAltered = MapPrototype.wasAltered;

    function makeStack(size, head, ownerID, hash) {
      var map = Object.create(StackPrototype);
      map.size = size;
      map._head = head;
      map.__ownerID = ownerID;
      map.__hash = hash;
      map.__altered = false;
      return map;
    }

    var EMPTY_STACK;
    function emptyStack() {
      return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
    }

    /**
     * Contributes additional methods to a constructor
     */
    function mixin(ctor, methods) {
      var keyCopier = function (key) {
        ctor.prototype[key] = methods[key];
      };
      Object.keys(methods).forEach(keyCopier);
      Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);
      return ctor;
    }

    Iterable.Iterator = Iterator;

    mixin(Iterable, {

      // ### Conversion to other types

      toArray: function () {
        assertNotInfinite(this.size);
        var array = new Array(this.size || 0);
        this.valueSeq().__iterate(function (v, i) {
          array[i] = v;
        });
        return array;
      },

      toIndexedSeq: function () {
        return new ToIndexedSequence(this);
      },

      toJS: function () {
        return this.toSeq().map(function (value) {
          return value && typeof value.toJS === 'function' ? value.toJS() : value;
        }).__toJS();
      },

      toJSON: function () {
        return this.toSeq().map(function (value) {
          return value && typeof value.toJSON === 'function' ? value.toJSON() : value;
        }).__toJS();
      },

      toKeyedSeq: function () {
        return new ToKeyedSequence(this, true);
      },

      toMap: function () {
        // Use Late Binding here to solve the circular dependency.
        return Map(this.toKeyedSeq());
      },

      toObject: function () {
        assertNotInfinite(this.size);
        var object = {};
        this.__iterate(function (v, k) {
          object[k] = v;
        });
        return object;
      },

      toOrderedMap: function () {
        // Use Late Binding here to solve the circular dependency.
        return OrderedMap(this.toKeyedSeq());
      },

      toOrderedSet: function () {
        // Use Late Binding here to solve the circular dependency.
        return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
      },

      toSet: function () {
        // Use Late Binding here to solve the circular dependency.
        return Set(isKeyed(this) ? this.valueSeq() : this);
      },

      toSetSeq: function () {
        return new ToSetSequence(this);
      },

      toSeq: function () {
        return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();
      },

      toStack: function () {
        // Use Late Binding here to solve the circular dependency.
        return Stack(isKeyed(this) ? this.valueSeq() : this);
      },

      toList: function () {
        // Use Late Binding here to solve the circular dependency.
        return List(isKeyed(this) ? this.valueSeq() : this);
      },

      // ### Common JavaScript methods and properties

      toString: function () {
        return '[Iterable]';
      },

      __toString: function (head, tail) {
        if (this.size === 0) {
          return head + tail;
        }
        return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
      },

      // ### ES6 Collection methods (ES6 Array and Map)

      concat: function () {
        var values = SLICE$0.call(arguments, 0);
        return reify(this, concatFactory(this, values));
      },

      includes: function (searchValue) {
        return this.some(function (value) {
          return is(value, searchValue);
        });
      },

      entries: function () {
        return this.__iterator(ITERATE_ENTRIES);
      },

      every: function (predicate, context) {
        assertNotInfinite(this.size);
        var returnValue = true;
        this.__iterate(function (v, k, c) {
          if (!predicate.call(context, v, k, c)) {
            returnValue = false;
            return false;
          }
        });
        return returnValue;
      },

      filter: function (predicate, context) {
        return reify(this, filterFactory(this, predicate, context, true));
      },

      find: function (predicate, context, notSetValue) {
        var entry = this.findEntry(predicate, context);
        return entry ? entry[1] : notSetValue;
      },

      forEach: function (sideEffect, context) {
        assertNotInfinite(this.size);
        return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
      },

      join: function (separator) {
        assertNotInfinite(this.size);
        separator = separator !== undefined ? '' + separator : ',';
        var joined = '';
        var isFirst = true;
        this.__iterate(function (v) {
          isFirst ? isFirst = false : joined += separator;
          joined += v !== null && v !== undefined ? v.toString() : '';
        });
        return joined;
      },

      keys: function () {
        return this.__iterator(ITERATE_KEYS);
      },

      map: function (mapper, context) {
        return reify(this, mapFactory(this, mapper, context));
      },

      reduce: function (reducer, initialReduction, context) {
        assertNotInfinite(this.size);
        var reduction;
        var useFirst;
        if (arguments.length < 2) {
          useFirst = true;
        } else {
          reduction = initialReduction;
        }
        this.__iterate(function (v, k, c) {
          if (useFirst) {
            useFirst = false;
            reduction = v;
          } else {
            reduction = reducer.call(context, reduction, v, k, c);
          }
        });
        return reduction;
      },

      reduceRight: function (reducer, initialReduction, context) {
        var reversed = this.toKeyedSeq().reverse();
        return reversed.reduce.apply(reversed, arguments);
      },

      reverse: function () {
        return reify(this, reverseFactory(this, true));
      },

      slice: function (begin, end) {
        return reify(this, sliceFactory(this, begin, end, true));
      },

      some: function (predicate, context) {
        return !this.every(not(predicate), context);
      },

      sort: function (comparator) {
        return reify(this, sortFactory(this, comparator));
      },

      values: function () {
        return this.__iterator(ITERATE_VALUES);
      },

      // ### More sequential methods

      butLast: function () {
        return this.slice(0, -1);
      },

      isEmpty: function () {
        return this.size !== undefined ? this.size === 0 : !this.some(function () {
          return true;
        });
      },

      count: function (predicate, context) {
        return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);
      },

      countBy: function (grouper, context) {
        return countByFactory(this, grouper, context);
      },

      equals: function (other) {
        return deepEqual(this, other);
      },

      entrySeq: function () {
        var iterable = this;
        if (iterable._cache) {
          // We cache as an entries array, so we can just return the cache!
          return new ArraySeq(iterable._cache);
        }
        var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
        entriesSequence.fromEntrySeq = function () {
          return iterable.toSeq();
        };
        return entriesSequence;
      },

      filterNot: function (predicate, context) {
        return this.filter(not(predicate), context);
      },

      findEntry: function (predicate, context, notSetValue) {
        var found = notSetValue;
        this.__iterate(function (v, k, c) {
          if (predicate.call(context, v, k, c)) {
            found = [k, v];
            return false;
          }
        });
        return found;
      },

      findKey: function (predicate, context) {
        var entry = this.findEntry(predicate, context);
        return entry && entry[0];
      },

      findLast: function (predicate, context, notSetValue) {
        return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
      },

      findLastEntry: function (predicate, context, notSetValue) {
        return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
      },

      findLastKey: function (predicate, context) {
        return this.toKeyedSeq().reverse().findKey(predicate, context);
      },

      first: function () {
        return this.find(returnTrue);
      },

      flatMap: function (mapper, context) {
        return reify(this, flatMapFactory(this, mapper, context));
      },

      flatten: function (depth) {
        return reify(this, flattenFactory(this, depth, true));
      },

      fromEntrySeq: function () {
        return new FromEntriesSequence(this);
      },

      get: function (searchKey, notSetValue) {
        return this.find(function (_, key) {
          return is(key, searchKey);
        }, undefined, notSetValue);
      },

      getIn: function (searchKeyPath, notSetValue) {
        var nested = this;
        // Note: in an ES6 environment, we would prefer:
        // for (var key of searchKeyPath) {
        var iter = forceIterator(searchKeyPath);
        var step;
        while (!(step = iter.next()).done) {
          var key = step.value;
          nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
          if (nested === NOT_SET) {
            return notSetValue;
          }
        }
        return nested;
      },

      groupBy: function (grouper, context) {
        return groupByFactory(this, grouper, context);
      },

      has: function (searchKey) {
        return this.get(searchKey, NOT_SET) !== NOT_SET;
      },

      hasIn: function (searchKeyPath) {
        return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
      },

      isSubset: function (iter) {
        iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
        return this.every(function (value) {
          return iter.includes(value);
        });
      },

      isSuperset: function (iter) {
        iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
        return iter.isSubset(this);
      },

      keyOf: function (searchValue) {
        return this.findKey(function (value) {
          return is(value, searchValue);
        });
      },

      keySeq: function () {
        return this.toSeq().map(keyMapper).toIndexedSeq();
      },

      last: function () {
        return this.toSeq().reverse().first();
      },

      lastKeyOf: function (searchValue) {
        return this.toKeyedSeq().reverse().keyOf(searchValue);
      },

      max: function (comparator) {
        return maxFactory(this, comparator);
      },

      maxBy: function (mapper, comparator) {
        return maxFactory(this, comparator, mapper);
      },

      min: function (comparator) {
        return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
      },

      minBy: function (mapper, comparator) {
        return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
      },

      rest: function () {
        return this.slice(1);
      },

      skip: function (amount) {
        return this.slice(Math.max(0, amount));
      },

      skipLast: function (amount) {
        return reify(this, this.toSeq().reverse().skip(amount).reverse());
      },

      skipWhile: function (predicate, context) {
        return reify(this, skipWhileFactory(this, predicate, context, true));
      },

      skipUntil: function (predicate, context) {
        return this.skipWhile(not(predicate), context);
      },

      sortBy: function (mapper, comparator) {
        return reify(this, sortFactory(this, comparator, mapper));
      },

      take: function (amount) {
        return this.slice(0, Math.max(0, amount));
      },

      takeLast: function (amount) {
        return reify(this, this.toSeq().reverse().take(amount).reverse());
      },

      takeWhile: function (predicate, context) {
        return reify(this, takeWhileFactory(this, predicate, context));
      },

      takeUntil: function (predicate, context) {
        return this.takeWhile(not(predicate), context);
      },

      valueSeq: function () {
        return this.toIndexedSeq();
      },

      // ### Hashable Object

      hashCode: function () {
        return this.__hash || (this.__hash = hashIterable(this));
      }

      // ### Internal

      // abstract __iterate(fn, reverse)

      // abstract __iterator(type, reverse)
    });

    // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
    // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
    // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
    // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

    var IterablePrototype = Iterable.prototype;
    IterablePrototype[IS_ITERABLE_SENTINEL] = true;
    IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
    IterablePrototype.__toJS = IterablePrototype.toArray;
    IterablePrototype.__toStringMapper = quoteString;
    IterablePrototype.inspect = IterablePrototype.toSource = function () {
      return this.toString();
    };
    IterablePrototype.chain = IterablePrototype.flatMap;
    IterablePrototype.contains = IterablePrototype.includes;

    mixin(KeyedIterable, {

      // ### More sequential methods

      flip: function () {
        return reify(this, flipFactory(this));
      },

      mapEntries: function (mapper, context) {
        var this$0 = this;
        var iterations = 0;
        return reify(this, this.toSeq().map(function (v, k) {
          return mapper.call(context, [k, v], iterations++, this$0);
        }).fromEntrySeq());
      },

      mapKeys: function (mapper, context) {
        var this$0 = this;
        return reify(this, this.toSeq().flip().map(function (k, v) {
          return mapper.call(context, k, v, this$0);
        }).flip());
      }

    });

    var KeyedIterablePrototype = KeyedIterable.prototype;
    KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
    KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
    KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
    KeyedIterablePrototype.__toStringMapper = function (v, k) {
      return JSON.stringify(k) + ': ' + quoteString(v);
    };

    mixin(IndexedIterable, {

      // ### Conversion to other types

      toKeyedSeq: function () {
        return new ToKeyedSequence(this, false);
      },

      // ### ES6 Collection methods (ES6 Array and Map)

      filter: function (predicate, context) {
        return reify(this, filterFactory(this, predicate, context, false));
      },

      findIndex: function (predicate, context) {
        var entry = this.findEntry(predicate, context);
        return entry ? entry[0] : -1;
      },

      indexOf: function (searchValue) {
        var key = this.keyOf(searchValue);
        return key === undefined ? -1 : key;
      },

      lastIndexOf: function (searchValue) {
        var key = this.lastKeyOf(searchValue);
        return key === undefined ? -1 : key;
      },

      reverse: function () {
        return reify(this, reverseFactory(this, false));
      },

      slice: function (begin, end) {
        return reify(this, sliceFactory(this, begin, end, false));
      },

      splice: function (index, removeNum /*, ...values*/) {
        var numArgs = arguments.length;
        removeNum = Math.max(removeNum | 0, 0);
        if (numArgs === 0 || numArgs === 2 && !removeNum) {
          return this;
        }
        // If index is negative, it should resolve relative to the size of the
        // collection. However size may be expensive to compute if not cached, so
        // only call count() if the number is in fact negative.
        index = resolveBegin(index, index < 0 ? this.count() : this.size);
        var spliced = this.slice(0, index);
        return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));
      },

      // ### More collection methods

      findLastIndex: function (predicate, context) {
        var entry = this.findLastEntry(predicate, context);
        return entry ? entry[0] : -1;
      },

      first: function () {
        return this.get(0);
      },

      flatten: function (depth) {
        return reify(this, flattenFactory(this, depth, false));
      },

      get: function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {
          return key === index;
        }, undefined, notSetValue);
      },

      has: function (index) {
        index = wrapIndex(this, index);
        return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);
      },

      interpose: function (separator) {
        return reify(this, interposeFactory(this, separator));
      },

      interleave: function () /*...iterables*/{
        var iterables = [this].concat(arrCopy(arguments));
        var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
        var interleaved = zipped.flatten(true);
        if (zipped.size) {
          interleaved.size = zipped.size * iterables.length;
        }
        return reify(this, interleaved);
      },

      keySeq: function () {
        return Range(0, this.size);
      },

      last: function () {
        return this.get(-1);
      },

      skipWhile: function (predicate, context) {
        return reify(this, skipWhileFactory(this, predicate, context, false));
      },

      zip: function () /*, ...iterables */{
        var iterables = [this].concat(arrCopy(arguments));
        return reify(this, zipWithFactory(this, defaultZipper, iterables));
      },

      zipWith: function (zipper /*, ...iterables */) {
        var iterables = arrCopy(arguments);
        iterables[0] = this;
        return reify(this, zipWithFactory(this, zipper, iterables));
      }

    });

    IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
    IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;

    mixin(SetIterable, {

      // ### ES6 Collection methods (ES6 Array and Map)

      get: function (value, notSetValue) {
        return this.has(value) ? value : notSetValue;
      },

      includes: function (value) {
        return this.has(value);
      },

      // ### More sequential methods

      keySeq: function () {
        return this.valueSeq();
      }

    });

    SetIterable.prototype.has = IterablePrototype.includes;
    SetIterable.prototype.contains = SetIterable.prototype.includes;

    // Mixin subclasses

    mixin(KeyedSeq, KeyedIterable.prototype);
    mixin(IndexedSeq, IndexedIterable.prototype);
    mixin(SetSeq, SetIterable.prototype);

    mixin(KeyedCollection, KeyedIterable.prototype);
    mixin(IndexedCollection, IndexedIterable.prototype);
    mixin(SetCollection, SetIterable.prototype);

    // #pragma Helper functions

    function keyMapper(v, k) {
      return k;
    }

    function entryMapper(v, k) {
      return [k, v];
    }

    function not(predicate) {
      return function () {
        return !predicate.apply(this, arguments);
      };
    }

    function neg(predicate) {
      return function () {
        return -predicate.apply(this, arguments);
      };
    }

    function quoteString(value) {
      return typeof value === 'string' ? JSON.stringify(value) : String(value);
    }

    function defaultZipper() {
      return arrCopy(arguments);
    }

    function defaultNegComparator(a, b) {
      return a < b ? 1 : a > b ? -1 : 0;
    }

    function hashIterable(iterable) {
      if (iterable.size === Infinity) {
        return 0;
      }
      var ordered = isOrdered(iterable);
      var keyed = isKeyed(iterable);
      var h = ordered ? 1 : 0;
      var size = iterable.__iterate(keyed ? ordered ? function (v, k) {
        h = 31 * h + hashMerge(hash(v), hash(k)) | 0;
      } : function (v, k) {
        h = h + hashMerge(hash(v), hash(k)) | 0;
      } : ordered ? function (v) {
        h = 31 * h + hash(v) | 0;
      } : function (v) {
        h = h + hash(v) | 0;
      });
      return murmurHashOfSize(size, h);
    }

    function murmurHashOfSize(size, h) {
      h = imul(h, 0xCC9E2D51);
      h = imul(h << 15 | h >>> -15, 0x1B873593);
      h = imul(h << 13 | h >>> -13, 5);
      h = (h + 0xE6546B64 | 0) ^ size;
      h = imul(h ^ h >>> 16, 0x85EBCA6B);
      h = imul(h ^ h >>> 13, 0xC2B2AE35);
      h = smi(h ^ h >>> 16);
      return h;
    }

    function hashMerge(a, b) {
      return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
    }

    var Immutable = {

      Iterable: Iterable,

      Seq: Seq,
      Collection: Collection,
      Map: Map,
      OrderedMap: OrderedMap,
      List: List,
      Stack: Stack,
      Set: Set,
      OrderedSet: OrderedSet,

      Record: Record,
      Range: Range,
      Repeat: Repeat,

      is: is,
      fromJS: fromJS

    };

    return Immutable;
  });
});
$__System.registerDynamic("1a6", ["21f"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("21f");
});
$__System.registerDynamic("220", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  module.exports = function (n) {
    function r(e) {
      if (t[e]) return t[e].exports;var o = t[e] = { exports: {}, id: e, loaded: !1 };return n[e].call(o.exports, o, o.exports, r), o.loaded = !0, o.exports;
    }var t = {};return r.m = n, r.c = t, r.p = "", r(0);
  }([function (n, r, t) {
    "use strict";
    var e = t(1);"undefined" != typeof Immutable && (Immutable.installDevTools = install.bind(null, Immutable));var o = !1;n.exports = function (n) {
      if ("undefined" == typeof window) throw new Error("Can only install immutable-devtools in a browser environment.");o !== !0 && (window.devtoolsFormatters = window.devtoolsFormatters || [], window.devtoolsFormatters.push(e(n)), o = !0);
    };
  }, function (n, r) {
    "use strict";
    function t(n) {
      if (Array.isArray(n)) {
        for (var r = 0, t = Array(n.length); r < n.length; r++) t[r] = n[r];return t;
      }return Array.from(n);
    }var e = { style: "list-style-type: none; padding: 0; margin: 0 0 0 12px" },
        o = { style: "color:#881391" };n.exports = function (n) {
      function r(n, r) {
        return ["object", { object: n, config: r }];
      }function u(n) {
        return n.size > 0;
      }function a(n) {
        return ["span", o, n + ": "];
      }function i(n) {
        var o = n.map(function (n, t) {
          return ["li", a(t), r(n)];
        }).toList().toJS();return ["ol", e].concat(t(o));
      }function d(n) {
        var o = n.map(function (n) {
          return ["li", r(n)];
        }).toJS();return ["ol", e].concat(t(o));
      }function s(r) {
        return r instanceof n.Record ? v : Object.keys(w).filter(function (t) {
          return n[t]["is" + t](r);
        }).map(function (n) {
          return w[n];
        }).concat(f)[0];
      }var c = {},
          f = { header: function (n, t) {
          return t === c ? null : r(n, c);
        }, hasBody: function (n, r) {
          return !1;
        }, body: function (n, r) {
          return null;
        } },
          l = { header: function () {
          return ["span", "Map"];
        }, hasBody: u, body: i },
          y = { header: function () {
          return ["span", "OrderedMap"];
        }, hasBody: u, body: i },
          p = { header: function () {
          return ["span", "List"];
        }, hasBody: u, body: i },
          h = { header: function () {
          return ["span", "Stack"];
        }, hasBody: u, body: d },
          m = { header: function () {
          return ["span", "Set"];
        }, hasBody: u, body: d },
          b = { header: function () {
          return ["span", "OrderedSet"];
        }, hasBody: u, body: d },
          v = { header: function () {
          return ["span", "Record"];
        }, hasBody: u, body: function (n) {
          var o = n.keySeq().map(function (t) {
            return ["li", a(t), r(n.get(t))];
          }).toJS();return ["ol", e].concat(t(o));
        } },
          w = { OrderedMap: y, OrderedSet: b, List: p, Map: l, Set: m, Stack: h };return { header: function (n, r) {
          return s(n).header(n, r);
        }, hasBody: function (n, r) {
          return s(n).hasBody(n, r);
        }, body: function (n, r) {
          return s(n).body(n, r);
        } };
    };
  }]);
});
$__System.registerDynamic("221", ["220"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("220");
});
$__System.registerDynamic("222", ["197", "1f3", "1a8", "1a3", "196", "195", "1a2", "1a4", "1bf", "1ba", "1be", "1bb", "1c2", "1bd", "1bc", "1a6", "221"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.filter = exports.percentile = exports.stdev = exports.median = exports.difference = exports.last = exports.first = exports.count = exports.min = exports.max = exports.avg = exports.sum = exports.keep = exports.CollectionOut = exports.EventOut = exports.PipelineOut = exports.Bounded = exports.Stream = exports.Pipeline = exports.TimeSeries = exports.Collection = exports.TimeRange = exports.Index = exports.IndexedEvent = exports.TimeRangeEvent = exports.TimeEvent = exports.Event = undefined;
  var _pipeline = $__require("197");
  Object.defineProperty(exports, "Pipeline", {
    enumerable: true,
    get: function get() {
      return _pipeline.Pipeline;
    }
  });
  var _functions = $__require("1f3");
  Object.defineProperty(exports, "keep", {
    enumerable: true,
    get: function get() {
      return _functions.keep;
    }
  });
  Object.defineProperty(exports, "sum", {
    enumerable: true,
    get: function get() {
      return _functions.sum;
    }
  });
  Object.defineProperty(exports, "avg", {
    enumerable: true,
    get: function get() {
      return _functions.avg;
    }
  });
  Object.defineProperty(exports, "max", {
    enumerable: true,
    get: function get() {
      return _functions.max;
    }
  });
  Object.defineProperty(exports, "min", {
    enumerable: true,
    get: function get() {
      return _functions.min;
    }
  });
  Object.defineProperty(exports, "count", {
    enumerable: true,
    get: function get() {
      return _functions.count;
    }
  });
  Object.defineProperty(exports, "first", {
    enumerable: true,
    get: function get() {
      return _functions.first;
    }
  });
  Object.defineProperty(exports, "last", {
    enumerable: true,
    get: function get() {
      return _functions.last;
    }
  });
  Object.defineProperty(exports, "difference", {
    enumerable: true,
    get: function get() {
      return _functions.difference;
    }
  });
  Object.defineProperty(exports, "median", {
    enumerable: true,
    get: function get() {
      return _functions.median;
    }
  });
  Object.defineProperty(exports, "stdev", {
    enumerable: true,
    get: function get() {
      return _functions.stdev;
    }
  });
  Object.defineProperty(exports, "percentile", {
    enumerable: true,
    get: function get() {
      return _functions.percentile;
    }
  });
  Object.defineProperty(exports, "filter", {
    enumerable: true,
    get: function get() {
      return _functions.filter;
    }
  });
  var _event = $__require("1a8");
  var _event2 = _interopRequireDefault(_event);
  var _timeevent = $__require("1a3");
  var _timeevent2 = _interopRequireDefault(_timeevent);
  var _timerangeevent = $__require("196");
  var _timerangeevent2 = _interopRequireDefault(_timerangeevent);
  var _indexedevent = $__require("195");
  var _indexedevent2 = _interopRequireDefault(_indexedevent);
  var _index = $__require("1a2");
  var _index2 = _interopRequireDefault(_index);
  var _timerange = $__require("1a4");
  var _timerange2 = _interopRequireDefault(_timerange);
  var _collection = $__require("1bf");
  var _collection2 = _interopRequireDefault(_collection);
  var _timeseries = $__require("1ba");
  var _timeseries2 = _interopRequireDefault(_timeseries);
  var _stream = $__require("1be");
  var _stream2 = _interopRequireDefault(_stream);
  var _bounded = $__require("1bb");
  var _bounded2 = _interopRequireDefault(_bounded);
  var _pipelineout = $__require("1c2");
  var _pipelineout2 = _interopRequireDefault(_pipelineout);
  var _eventout = $__require("1bd");
  var _eventout2 = _interopRequireDefault(_eventout);
  var _collectionout = $__require("1bc");
  var _collectionout2 = _interopRequireDefault(_collectionout);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  var Immutable = $__require("1a6");
  var installDevTools = $__require("221");
  if (typeof window !== "undefined") {
    installDevTools(Immutable);
  }
  exports.Event = _event2.default;
  exports.TimeEvent = _timeevent2.default;
  exports.TimeRangeEvent = _timerangeevent2.default;
  exports.IndexedEvent = _indexedevent2.default;
  exports.Index = _index2.default;
  exports.TimeRange = _timerange2.default;
  exports.Collection = _collection2.default;
  exports.TimeSeries = _timeseries2.default;
  exports.Stream = _stream2.default;
  exports.Bounded = _bounded2.default;
  exports.PipelineOut = _pipelineout2.default;
  exports.EventOut = _eventout2.default;
  exports.CollectionOut = _collectionout2.default;
});
$__System.registerDynamic("19", ["222"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("222");
});
$__System.registerDynamic("223", ["1c", "50", "19"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _pondjs = $__require("19");

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }
        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, enumerable: false, writable: true, configurable: true }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    } /**
opyright (c) 2015-present, The Regents of the University of California,
through Lawrence Berkeley National Laboratory (subject to receipt
of any required approvals from the U.S. Dept. of Energy).
ll rights reserved.

his source code is licensed under the BSD-style license found in the
file in the root directory of this source tree.


    /**
     * Renders a band with extents defined by the supplied TimeRange. This
     * is a super simple component right now which just renders a simple
     * rectangle, in the style of the prop `style` across the timerange
     * specified. However, this is useful for highlighting a timerange to
     * correspond with another part of the your UI.
     *
     * See also the Brush component for a TimeRange marker that you can
     * resize interactively.
     */
    var TimeRangeMarker = function (_React$Component) {
        _inherits(TimeRangeMarker, _React$Component);

        function TimeRangeMarker() {
            _classCallCheck(this, TimeRangeMarker);

            return _possibleConstructorReturn(this, (TimeRangeMarker.__proto__ || Object.getPrototypeOf(TimeRangeMarker)).apply(this, arguments));
        }

        _createClass(TimeRangeMarker, [{
            key: "renderBand",
            value: function renderBand() {
                var timerange = this.props.timerange;
                var timeScale = this.props.timeScale;

                // Viewport bounds
                var viewBeginTime = timeScale.invert(0);
                var viewEndTime = timeScale.invert(this.props.width);
                var viewport = new _pondjs.TimeRange(viewBeginTime, viewEndTime);

                var bandStyle = void 0;
                if (this.props.style) {
                    bandStyle = this.props.style;
                } else {
                    bandStyle = { fill: "steelblue" };
                }

                if (!viewport.disjoint(timerange)) {
                    var range = timerange.intersection(viewport);
                    var begin = range.begin();
                    var end = range.end();
                    var beginPos = timeScale(begin);
                    var endPos = timeScale(end);
                    var width = endPos - beginPos;
                    if (width < 1) {
                        width = 1;
                    }
                    return _react2.default.createElement("rect", {
                        x: beginPos,
                        y: 0,
                        width: width,
                        height: this.props.height,
                        style: bandStyle
                    });
                }
                return _react2.default.createElement("g", null);
            }
        }, {
            key: "render",
            value: function render() {
                return _react2.default.createElement("g", null, this.renderBand());
            }
        }]);

        return TimeRangeMarker;
    }(_react2.default.Component);

    exports.default = TimeRangeMarker;

    TimeRangeMarker.propTypes = {
        /**
        * The timerange to mark. This is in the form of a Pond TimeRange.
        */
        timerange: _propTypes2.default.instanceOf(_pondjs.TimeRange).isRequired,
        /**
        * The style of the rect that will be rendered as a SVG <Rect>. This
        * object is the inline CSS for that rect.
        */
        style: _propTypes2.default.object, // eslint-disable-line
        /**
        * [Internal] The timeScale supplied by the surrounding ChartContainer
        */
        timeScale: _propTypes2.default.func.isRequired,
        /**
        * [Internal] The width supplied by the surrounding ChartContainer
        */
        width: _propTypes2.default.number.isRequired,
        /**
        * [Internal] The height supplied by the surrounding ChartContainer
        */
        height: _propTypes2.default.number.isRequired
    };

    TimeRangeMarker.defaultProps = {
        spacing: 1,
        offset: 0,
        style: { fill: "rgba(70, 130, 180, 0.25);" }
    };
});
$__System.registerDynamic("224", ["1c", "50"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    /**
     * Renders a 'axis' that display a label for a current tracker value
     *
     *      ----+----------------+
     *          |     56.2G      |
     *          |      bps       |
     *          |                |
     *      ----+----------------+
     */
    /**
     *  Copyright (c) 2015-present, The Regents of the University of California,
     *  through Lawrence Berkeley National Laboratory (subject to receipt
     *  of any required approvals from the U.S. Dept. of Energy).
     *  All rights reserved.
     *
     *  This source code is licensed under the BSD-style license found in the
     *  LICENSE file in the root directory of this source tree.
     */

    var ValueAxis = function ValueAxis(_ref) {
        var width = _ref.width,
            height = _ref.height,
            value = _ref.value,
            detail = _ref.detail;

        var labelStyle = {
            fill: "#666",
            fontSize: 20,
            textAnchor: "middle"
        };
        var detailStyle = {
            fontSize: 12,
            textAnchor: "middle",
            fill: "#9a9a9a"
        };
        return _react2.default.createElement("g", null, _react2.default.createElement("rect", {
            key: "background",
            x: "0",
            y: "0",
            width: width,
            height: height,
            style: { fill: "none", stroke: "none" }
        }), _react2.default.createElement("text", { key: "value", x: parseInt(width / 2, 10), y: height / 2, style: labelStyle }, value), _react2.default.createElement("text", {
            key: "detail",
            x: parseInt(width / 2, 10),
            y: height / 2,
            dy: "1.2em",
            style: detailStyle
        }, detail));
    };

    ValueAxis.propTypes = {
        /**
        * If values are numbers, use this format string
        */
        value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
        /**
        * If values are numbers, use this format string
        */
        detail: _propTypes2.default.string,
        /**
        * The width of the axis
        */
        width: _propTypes2.default.number,
        /**
        * The height of the axis
        */
        height: _propTypes2.default.number
    };

    exports.default = ValueAxis;
});
$__System.registerDynamic("141", ["1c", "50"], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react = $__require("1c");

    var _react2 = _interopRequireDefault(_react);

    var _propTypes = $__require("50");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
    }

    /**
     * Renders a list of values in svg
     *
     *      +----------------+
     *      | Max 100 Gbps   |
     *      | Avg 26 Gbps    |
     *      +----------------+
     */
    /**
     *  Copyright (c) 2015-present, The Regents of the University of California,
     *  through Lawrence Berkeley National Laboratory (subject to receipt
     *  of any required approvals from the U.S. Dept. of Energy).
     *  All rights reserved.
     *
     *  This source code is licensed under the BSD-style license found in the
     *  LICENSE file in the root directory of this source tree.
     */

    var ValueList = function ValueList(props) {
        var align = props.align,
            style = props.style,
            width = props.width,
            height = props.height;

        var textStyle = {
            fontSize: 11,
            textAnchor: "left",
            fill: "#b0b0b0",
            pointerEvents: "none"
        };

        var textStyleCentered = {
            fontSize: 11,
            textAnchor: "middle",
            fill: "#bdbdbd",
            pointerEvents: "none"
        };

        var values = props.values.map(function (item, i) {
            if (align === "left") {
                return _react2.default.createElement("g", { key: i }, _react2.default.createElement("text", { x: 10, y: 5, dy: (i + 1) * 1.2 + "em", style: textStyle }, _react2.default.createElement("tspan", { style: { fontWeight: 700 } }, item.label + ": "), _react2.default.createElement("tspan", null, "" + item.value)));
            }

            var posx = parseInt(props.width / 2, 10);
            return _react2.default.createElement("g", { key: i }, _react2.default.createElement("text", { x: posx, y: 5, dy: (i + 1) * 1.2 + "em", style: textStyleCentered }, _react2.default.createElement("tspan", { style: { fontWeight: 700 } }, item.label + ": "), _react2.default.createElement("tspan", null, "" + item.value)));
        });

        var box = _react2.default.createElement("rect", {
            style: style,
            x: 0,
            y: 0,
            width: width,
            height: height
        });

        return _react2.default.createElement("g", null, box, values);
    };

    ValueList.defaultProps = {
        align: "center",
        width: 100,
        height: 100,
        pointerEvents: "none",
        style: { fill: "#FEFEFE", stroke: "#DDD", opacity: 0.8 }
    };

    ValueList.propTypes = {
        align: _propTypes2.default.oneOf(["center", "left"]),
        /**
        * An array of label value pairs to render
        */
        values: _propTypes2.default.arrayOf(_propTypes2.default.shape({
            label: _propTypes2.default.string, // eslint-disable-line
            value: _propTypes2.default.oneOfType([
            // eslint-disable-line
            _propTypes2.default.number, _propTypes2.default.string])
        })).isRequired,
        /**
        * CSS object to be applied to the ValueList surrounding box
        */
        style: _propTypes2.default.object, // eslint-disable-line
        /**
        * The width of the rectangle to render into
        */
        width: _propTypes2.default.number,
        /**
        * The height of the rectangle to render into
        */
        height: _propTypes2.default.number
    };

    exports.default = ValueList;
});
$__System.registerDynamic('225', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var noop = { value: function () {} };

    function dispatch() {
      for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
        if (!(t = arguments[i] + "") || t in _) throw new Error("illegal type: " + t);
        _[t] = [];
      }
      return new Dispatch(_);
    }

    function Dispatch(_) {
      this._ = _;
    }

    function parseTypenames(typenames, types) {
      return typenames.trim().split(/^|\s+/).map(function (t) {
        var name = "",
            i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
        return { type: t, name: name };
      });
    }

    Dispatch.prototype = dispatch.prototype = {
      constructor: Dispatch,
      on: function (typename, callback) {
        var _ = this._,
            T = parseTypenames(typename + "", _),
            t,
            i = -1,
            n = T.length;

        // If no callback was specified, return the callback of the given type and name.
        if (arguments.length < 2) {
          while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
          return;
        }

        // If a type was specified, set the callback for the given type and name.
        // Otherwise, if a null callback was specified, remove callbacks of the given name.
        if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
        while (++i < n) {
          if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
        }

        return this;
      },
      copy: function () {
        var copy = {},
            _ = this._;
        for (var t in _) copy[t] = _[t].slice();
        return new Dispatch(copy);
      },
      call: function (type, that) {
        if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      },
      apply: function (type, that, args) {
        if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
        for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
      }
    };

    function get(type, name) {
      for (var i = 0, n = type.length, c; i < n; ++i) {
        if ((c = type[i]).name === name) {
          return c.value;
        }
      }
    }

    function set(type, name, callback) {
      for (var i = 0, n = type.length; i < n; ++i) {
        if (type[i].name === name) {
          type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
          break;
        }
      }
      if (callback != null) type.push({ name: name, value: callback });
      return type;
    }

    exports.dispatch = dispatch;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("226", ["225"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("225");
});
$__System.registerDynamic('227', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-timer/ Version 1.0.7. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var frame = 0;
    var timeout = 0;
    var interval = 0;
    var pokeDelay = 1000;
    var taskHead;
    var taskTail;
    var clockLast = 0;
    var clockNow = 0;
    var clockSkew = 0;
    var clock = typeof performance === "object" && performance.now ? performance : Date;
    var setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
      setTimeout(f, 17);
    };

    function now() {
      return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
    }

    function clearNow() {
      clockNow = 0;
    }

    function Timer() {
      this._call = this._time = this._next = null;
    }

    Timer.prototype = timer.prototype = {
      constructor: Timer,
      restart: function (callback, delay, time) {
        if (typeof callback !== "function") throw new TypeError("callback is not a function");
        time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
        if (!this._next && taskTail !== this) {
          if (taskTail) taskTail._next = this;else taskHead = this;
          taskTail = this;
        }
        this._call = callback;
        this._time = time;
        sleep();
      },
      stop: function () {
        if (this._call) {
          this._call = null;
          this._time = Infinity;
          sleep();
        }
      }
    };

    function timer(callback, delay, time) {
      var t = new Timer();
      t.restart(callback, delay, time);
      return t;
    }

    function timerFlush() {
      now(); // Get the current time, if not already set.
      ++frame; // Pretend we’ve set an alarm, if we haven’t already.
      var t = taskHead,
          e;
      while (t) {
        if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
        t = t._next;
      }
      --frame;
    }

    function wake() {
      clockNow = (clockLast = clock.now()) + clockSkew;
      frame = timeout = 0;
      try {
        timerFlush();
      } finally {
        frame = 0;
        nap();
        clockNow = 0;
      }
    }

    function poke() {
      var now = clock.now(),
          delay = now - clockLast;
      if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
    }

    function nap() {
      var t0,
          t1 = taskHead,
          t2,
          time = Infinity;
      while (t1) {
        if (t1._call) {
          if (time > t1._time) time = t1._time;
          t0 = t1, t1 = t1._next;
        } else {
          t2 = t1._next, t1._next = null;
          t1 = t0 ? t0._next = t2 : taskHead = t2;
        }
      }
      taskTail = t0;
      sleep(time);
    }

    function sleep(time) {
      if (frame) return; // Soonest alarm already set, or will be.
      if (timeout) timeout = clearTimeout(timeout);
      var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
      if (delay > 24) {
        if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
        if (interval) interval = clearInterval(interval);
      } else {
        if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
        frame = 1, setFrame(wake);
      }
    }

    var timeout$1 = function (callback, delay, time) {
      var t = new Timer();
      delay = delay == null ? 0 : +delay;
      t.restart(function (elapsed) {
        t.stop();
        callback(elapsed + delay);
      }, delay, time);
      return t;
    };

    var interval$1 = function (callback, delay, time) {
      var t = new Timer(),
          total = delay;
      if (delay == null) return t.restart(callback, delay, time), t;
      delay = +delay, time = time == null ? now() : +time;
      t.restart(function tick(elapsed) {
        elapsed += total;
        t.restart(tick, total += delay, time);
        callback(elapsed);
      }, delay, time);
      return t;
    };

    exports.now = now;
    exports.timer = timer;
    exports.timerFlush = timerFlush;
    exports.timeout = timeout$1;
    exports.interval = interval$1;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("228", ["227"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("227");
});
$__System.registerDynamic('229', ['139'], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-interpolate/ Version 1.1.6. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('139')) : typeof undefined === 'function' && define.amd ? define(['exports', 'd3-color'], factory) : factory(global.d3 = global.d3 || {}, global.d3);
  })(this, function (exports, d3Color) {
    'use strict';

    function basis(t1, v0, v1, v2, v3) {
      var t2 = t1 * t1,
          t3 = t2 * t1;
      return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
    }

    var basis$1 = function (values) {
      var n = values.length - 1;
      return function (t) {
        var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
            v1 = values[i],
            v2 = values[i + 1],
            v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
            v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    };

    var basisClosed = function (values) {
      var n = values.length;
      return function (t) {
        var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
            v0 = values[(i + n - 1) % n],
            v1 = values[i % n],
            v2 = values[(i + 1) % n],
            v3 = values[(i + 2) % n];
        return basis((t - i / n) * n, v0, v1, v2, v3);
      };
    };

    var constant = function (x) {
      return function () {
        return x;
      };
    };

    function linear(a, d) {
      return function (t) {
        return a + t * d;
      };
    }

    function exponential(a, b, y) {
      return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
        return Math.pow(a + t * b, y);
      };
    }

    function hue(a, b) {
      var d = b - a;
      return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
    }

    function gamma(y) {
      return (y = +y) === 1 ? nogamma : function (a, b) {
        return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
      };
    }

    function nogamma(a, b) {
      var d = b - a;
      return d ? linear(a, d) : constant(isNaN(a) ? b : a);
    }

    var rgb$1 = function rgbGamma(y) {
      var color$$1 = gamma(y);

      function rgb$$1(start, end) {
        var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),
            g = color$$1(start.g, end.g),
            b = color$$1(start.b, end.b),
            opacity = nogamma(start.opacity, end.opacity);
        return function (t) {
          start.r = r(t);
          start.g = g(t);
          start.b = b(t);
          start.opacity = opacity(t);
          return start + "";
        };
      }

      rgb$$1.gamma = rgbGamma;

      return rgb$$1;
    }(1);

    function rgbSpline(spline) {
      return function (colors) {
        var n = colors.length,
            r = new Array(n),
            g = new Array(n),
            b = new Array(n),
            i,
            color$$1;
        for (i = 0; i < n; ++i) {
          color$$1 = d3Color.rgb(colors[i]);
          r[i] = color$$1.r || 0;
          g[i] = color$$1.g || 0;
          b[i] = color$$1.b || 0;
        }
        r = spline(r);
        g = spline(g);
        b = spline(b);
        color$$1.opacity = 1;
        return function (t) {
          color$$1.r = r(t);
          color$$1.g = g(t);
          color$$1.b = b(t);
          return color$$1 + "";
        };
      };
    }

    var rgbBasis = rgbSpline(basis$1);
    var rgbBasisClosed = rgbSpline(basisClosed);

    var array = function (a, b) {
      var nb = b ? b.length : 0,
          na = a ? Math.min(nb, a.length) : 0,
          x = new Array(na),
          c = new Array(nb),
          i;

      for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);
      for (; i < nb; ++i) c[i] = b[i];

      return function (t) {
        for (i = 0; i < na; ++i) c[i] = x[i](t);
        return c;
      };
    };

    var date = function (a, b) {
      var d = new Date();
      return a = +a, b -= a, function (t) {
        return d.setTime(a + b * t), d;
      };
    };

    var number = function (a, b) {
      return a = +a, b -= a, function (t) {
        return a + b * t;
      };
    };

    var object = function (a, b) {
      var i = {},
          c = {},
          k;

      if (a === null || typeof a !== "object") a = {};
      if (b === null || typeof b !== "object") b = {};

      for (k in b) {
        if (k in a) {
          i[k] = value(a[k], b[k]);
        } else {
          c[k] = b[k];
        }
      }

      return function (t) {
        for (k in i) c[k] = i[k](t);
        return c;
      };
    };

    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
    var reB = new RegExp(reA.source, "g");

    function zero(b) {
      return function () {
        return b;
      };
    }

    function one(b) {
      return function (t) {
        return b(t) + "";
      };
    }

    var string = function (a, b) {
      var bi = reA.lastIndex = reB.lastIndex = 0,
          // scan index for next number in b
      am,
          // current match in a
      bm,
          // current match in b
      bs,
          // string preceding current number in b, if any
      i = -1,
          // index in s
      s = [],
          // string constants and placeholders
      q = []; // number interpolators

      // Coerce inputs to strings.
      a = a + "", b = b + "";

      // Interpolate pairs of numbers in a & b.
      while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
        if ((bs = bm.index) > bi) {
          // a string precedes the next number in b
          bs = b.slice(bi, bs);
          if (s[i]) s[i] += bs; // coalesce with previous string
          else s[++i] = bs;
        }
        if ((am = am[0]) === (bm = bm[0])) {
          // numbers in a & b match
          if (s[i]) s[i] += bm; // coalesce with previous string
          else s[++i] = bm;
        } else {
          // interpolate non-matching numbers
          s[++i] = null;
          q.push({ i: i, x: number(am, bm) });
        }
        bi = reB.lastIndex;
      }

      // Add remains of b.
      if (bi < b.length) {
        bs = b.slice(bi);
        if (s[i]) s[i] += bs; // coalesce with previous string
        else s[++i] = bs;
      }

      // Special optimization for only a single match.
      // Otherwise, interpolate each of the numbers and rejoin the string.
      return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
        for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
        return s.join("");
      });
    };

    var value = function (a, b) {
      var t = typeof b,
          c;
      return b == null || t === "boolean" ? constant(b) : (t === "number" ? number : t === "string" ? (c = d3Color.color(b)) ? (b = c, rgb$1) : string : b instanceof d3Color.color ? rgb$1 : b instanceof Date ? date : Array.isArray(b) ? array : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : number)(a, b);
    };

    var round = function (a, b) {
      return a = +a, b -= a, function (t) {
        return Math.round(a + b * t);
      };
    };

    var degrees = 180 / Math.PI;

    var identity = {
      translateX: 0,
      translateY: 0,
      rotate: 0,
      skewX: 0,
      scaleX: 1,
      scaleY: 1
    };

    var decompose = function (a, b, c, d, e, f) {
      var scaleX, scaleY, skewX;
      if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
      if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
      if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
      if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
      return {
        translateX: e,
        translateY: f,
        rotate: Math.atan2(b, a) * degrees,
        skewX: Math.atan(skewX) * degrees,
        scaleX: scaleX,
        scaleY: scaleY
      };
    };

    var cssNode;
    var cssRoot;
    var cssView;
    var svgNode;

    function parseCss(value) {
      if (value === "none") return identity;
      if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
      cssNode.style.transform = value;
      value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
      cssRoot.removeChild(cssNode);
      value = value.slice(7, -1).split(",");
      return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
    }

    function parseSvg(value) {
      if (value == null) return identity;
      if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
      svgNode.setAttribute("transform", value);
      if (!(value = svgNode.transform.baseVal.consolidate())) return identity;
      value = value.matrix;
      return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
    }

    function interpolateTransform(parse, pxComma, pxParen, degParen) {

      function pop(s) {
        return s.length ? s.pop() + " " : "";
      }

      function translate(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push("translate(", null, pxComma, null, pxParen);
          q.push({ i: i - 4, x: number(xa, xb) }, { i: i - 2, x: number(ya, yb) });
        } else if (xb || yb) {
          s.push("translate(" + xb + pxComma + yb + pxParen);
        }
      }

      function rotate(a, b, s, q) {
        if (a !== b) {
          if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path
          q.push({ i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: number(a, b) });
        } else if (b) {
          s.push(pop(s) + "rotate(" + b + degParen);
        }
      }

      function skewX(a, b, s, q) {
        if (a !== b) {
          q.push({ i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: number(a, b) });
        } else if (b) {
          s.push(pop(s) + "skewX(" + b + degParen);
        }
      }

      function scale(xa, ya, xb, yb, s, q) {
        if (xa !== xb || ya !== yb) {
          var i = s.push(pop(s) + "scale(", null, ",", null, ")");
          q.push({ i: i - 4, x: number(xa, xb) }, { i: i - 2, x: number(ya, yb) });
        } else if (xb !== 1 || yb !== 1) {
          s.push(pop(s) + "scale(" + xb + "," + yb + ")");
        }
      }

      return function (a, b) {
        var s = [],
            // string constants and placeholders
        q = []; // number interpolators
        a = parse(a), b = parse(b);
        translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
        rotate(a.rotate, b.rotate, s, q);
        skewX(a.skewX, b.skewX, s, q);
        scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
        a = b = null; // gc
        return function (t) {
          var i = -1,
              n = q.length,
              o;
          while (++i < n) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        };
      };
    }

    var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

    var rho = Math.SQRT2;
    var rho2 = 2;
    var rho4 = 4;
    var epsilon2 = 1e-12;

    function cosh(x) {
      return ((x = Math.exp(x)) + 1 / x) / 2;
    }

    function sinh(x) {
      return ((x = Math.exp(x)) - 1 / x) / 2;
    }

    function tanh(x) {
      return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }

    // p0 = [ux0, uy0, w0]
    // p1 = [ux1, uy1, w1]
    var zoom = function (p0, p1) {
      var ux0 = p0[0],
          uy0 = p0[1],
          w0 = p0[2],
          ux1 = p1[0],
          uy1 = p1[1],
          w1 = p1[2],
          dx = ux1 - ux0,
          dy = uy1 - uy0,
          d2 = dx * dx + dy * dy,
          i,
          S;

      // Special case for u0 ≅ u1.
      if (d2 < epsilon2) {
        S = Math.log(w1 / w0) / rho;
        i = function (t) {
          return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
        };
      }

      // General case.
      else {
          var d1 = Math.sqrt(d2),
              b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
              b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
              r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
              r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
          S = (r1 - r0) / rho;
          i = function (t) {
            var s = t * S,
                coshr0 = cosh(r0),
                u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
            return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
          };
        }

      i.duration = S * 1000;

      return i;
    };

    function hsl$1(hue$$1) {
      return function (start, end) {
        var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
            s = nogamma(start.s, end.s),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function (t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }

    var hsl$2 = hsl$1(hue);
    var hslLong = hsl$1(nogamma);

    function lab$1(start, end) {
      var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),
          a = nogamma(start.a, end.a),
          b = nogamma(start.b, end.b),
          opacity = nogamma(start.opacity, end.opacity);
      return function (t) {
        start.l = l(t);
        start.a = a(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }

    function hcl$1(hue$$1) {
      return function (start, end) {
        var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
            c = nogamma(start.c, end.c),
            l = nogamma(start.l, end.l),
            opacity = nogamma(start.opacity, end.opacity);
        return function (t) {
          start.h = h(t);
          start.c = c(t);
          start.l = l(t);
          start.opacity = opacity(t);
          return start + "";
        };
      };
    }

    var hcl$2 = hcl$1(hue);
    var hclLong = hcl$1(nogamma);

    function cubehelix$1(hue$$1) {
      return function cubehelixGamma(y) {
        y = +y;

        function cubehelix$$1(start, end) {
          var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
              s = nogamma(start.s, end.s),
              l = nogamma(start.l, end.l),
              opacity = nogamma(start.opacity, end.opacity);
          return function (t) {
            start.h = h(t);
            start.s = s(t);
            start.l = l(Math.pow(t, y));
            start.opacity = opacity(t);
            return start + "";
          };
        }

        cubehelix$$1.gamma = cubehelixGamma;

        return cubehelix$$1;
      }(1);
    }

    var cubehelix$2 = cubehelix$1(hue);
    var cubehelixLong = cubehelix$1(nogamma);

    var quantize = function (interpolator, n) {
      var samples = new Array(n);
      for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
      return samples;
    };

    exports.interpolate = value;
    exports.interpolateArray = array;
    exports.interpolateBasis = basis$1;
    exports.interpolateBasisClosed = basisClosed;
    exports.interpolateDate = date;
    exports.interpolateNumber = number;
    exports.interpolateObject = object;
    exports.interpolateRound = round;
    exports.interpolateString = string;
    exports.interpolateTransformCss = interpolateTransformCss;
    exports.interpolateTransformSvg = interpolateTransformSvg;
    exports.interpolateZoom = zoom;
    exports.interpolateRgb = rgb$1;
    exports.interpolateRgbBasis = rgbBasis;
    exports.interpolateRgbBasisClosed = rgbBasisClosed;
    exports.interpolateHsl = hsl$2;
    exports.interpolateHslLong = hslLong;
    exports.interpolateLab = lab$1;
    exports.interpolateHcl = hcl$2;
    exports.interpolateHclLong = hclLong;
    exports.interpolateCubehelix = cubehelix$2;
    exports.interpolateCubehelixLong = cubehelixLong;
    exports.quantize = quantize;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("13a", ["229"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("229");
});
$__System.registerDynamic('22a', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var define = function (constructor, factory, prototype) {
      constructor.prototype = factory.prototype = prototype;
      prototype.constructor = constructor;
    };

    function extend(parent, definition) {
      var prototype = Object.create(parent.prototype);
      for (var key in definition) prototype[key] = definition[key];
      return prototype;
    }

    function Color() {}

    var darker = 0.7;
    var brighter = 1 / darker;

    var reI = "\\s*([+-]?\\d+)\\s*";
    var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
    var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
    var reHex3 = /^#([0-9a-f]{3})$/;
    var reHex6 = /^#([0-9a-f]{6})$/;
    var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
    var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
    var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
    var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
    var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
    var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

    var named = {
      aliceblue: 0xf0f8ff,
      antiquewhite: 0xfaebd7,
      aqua: 0x00ffff,
      aquamarine: 0x7fffd4,
      azure: 0xf0ffff,
      beige: 0xf5f5dc,
      bisque: 0xffe4c4,
      black: 0x000000,
      blanchedalmond: 0xffebcd,
      blue: 0x0000ff,
      blueviolet: 0x8a2be2,
      brown: 0xa52a2a,
      burlywood: 0xdeb887,
      cadetblue: 0x5f9ea0,
      chartreuse: 0x7fff00,
      chocolate: 0xd2691e,
      coral: 0xff7f50,
      cornflowerblue: 0x6495ed,
      cornsilk: 0xfff8dc,
      crimson: 0xdc143c,
      cyan: 0x00ffff,
      darkblue: 0x00008b,
      darkcyan: 0x008b8b,
      darkgoldenrod: 0xb8860b,
      darkgray: 0xa9a9a9,
      darkgreen: 0x006400,
      darkgrey: 0xa9a9a9,
      darkkhaki: 0xbdb76b,
      darkmagenta: 0x8b008b,
      darkolivegreen: 0x556b2f,
      darkorange: 0xff8c00,
      darkorchid: 0x9932cc,
      darkred: 0x8b0000,
      darksalmon: 0xe9967a,
      darkseagreen: 0x8fbc8f,
      darkslateblue: 0x483d8b,
      darkslategray: 0x2f4f4f,
      darkslategrey: 0x2f4f4f,
      darkturquoise: 0x00ced1,
      darkviolet: 0x9400d3,
      deeppink: 0xff1493,
      deepskyblue: 0x00bfff,
      dimgray: 0x696969,
      dimgrey: 0x696969,
      dodgerblue: 0x1e90ff,
      firebrick: 0xb22222,
      floralwhite: 0xfffaf0,
      forestgreen: 0x228b22,
      fuchsia: 0xff00ff,
      gainsboro: 0xdcdcdc,
      ghostwhite: 0xf8f8ff,
      gold: 0xffd700,
      goldenrod: 0xdaa520,
      gray: 0x808080,
      green: 0x008000,
      greenyellow: 0xadff2f,
      grey: 0x808080,
      honeydew: 0xf0fff0,
      hotpink: 0xff69b4,
      indianred: 0xcd5c5c,
      indigo: 0x4b0082,
      ivory: 0xfffff0,
      khaki: 0xf0e68c,
      lavender: 0xe6e6fa,
      lavenderblush: 0xfff0f5,
      lawngreen: 0x7cfc00,
      lemonchiffon: 0xfffacd,
      lightblue: 0xadd8e6,
      lightcoral: 0xf08080,
      lightcyan: 0xe0ffff,
      lightgoldenrodyellow: 0xfafad2,
      lightgray: 0xd3d3d3,
      lightgreen: 0x90ee90,
      lightgrey: 0xd3d3d3,
      lightpink: 0xffb6c1,
      lightsalmon: 0xffa07a,
      lightseagreen: 0x20b2aa,
      lightskyblue: 0x87cefa,
      lightslategray: 0x778899,
      lightslategrey: 0x778899,
      lightsteelblue: 0xb0c4de,
      lightyellow: 0xffffe0,
      lime: 0x00ff00,
      limegreen: 0x32cd32,
      linen: 0xfaf0e6,
      magenta: 0xff00ff,
      maroon: 0x800000,
      mediumaquamarine: 0x66cdaa,
      mediumblue: 0x0000cd,
      mediumorchid: 0xba55d3,
      mediumpurple: 0x9370db,
      mediumseagreen: 0x3cb371,
      mediumslateblue: 0x7b68ee,
      mediumspringgreen: 0x00fa9a,
      mediumturquoise: 0x48d1cc,
      mediumvioletred: 0xc71585,
      midnightblue: 0x191970,
      mintcream: 0xf5fffa,
      mistyrose: 0xffe4e1,
      moccasin: 0xffe4b5,
      navajowhite: 0xffdead,
      navy: 0x000080,
      oldlace: 0xfdf5e6,
      olive: 0x808000,
      olivedrab: 0x6b8e23,
      orange: 0xffa500,
      orangered: 0xff4500,
      orchid: 0xda70d6,
      palegoldenrod: 0xeee8aa,
      palegreen: 0x98fb98,
      paleturquoise: 0xafeeee,
      palevioletred: 0xdb7093,
      papayawhip: 0xffefd5,
      peachpuff: 0xffdab9,
      peru: 0xcd853f,
      pink: 0xffc0cb,
      plum: 0xdda0dd,
      powderblue: 0xb0e0e6,
      purple: 0x800080,
      rebeccapurple: 0x663399,
      red: 0xff0000,
      rosybrown: 0xbc8f8f,
      royalblue: 0x4169e1,
      saddlebrown: 0x8b4513,
      salmon: 0xfa8072,
      sandybrown: 0xf4a460,
      seagreen: 0x2e8b57,
      seashell: 0xfff5ee,
      sienna: 0xa0522d,
      silver: 0xc0c0c0,
      skyblue: 0x87ceeb,
      slateblue: 0x6a5acd,
      slategray: 0x708090,
      slategrey: 0x708090,
      snow: 0xfffafa,
      springgreen: 0x00ff7f,
      steelblue: 0x4682b4,
      tan: 0xd2b48c,
      teal: 0x008080,
      thistle: 0xd8bfd8,
      tomato: 0xff6347,
      turquoise: 0x40e0d0,
      violet: 0xee82ee,
      wheat: 0xf5deb3,
      white: 0xffffff,
      whitesmoke: 0xf5f5f5,
      yellow: 0xffff00,
      yellowgreen: 0x9acd32
    };

    define(Color, color, {
      displayable: function () {
        return this.rgb().displayable();
      },
      toString: function () {
        return this.rgb() + "";
      }
    });

    function color(format) {
      var m;
      format = (format + "").trim().toLowerCase();
      return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
      ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
    }

    function rgbn(n) {
      return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
    }

    function rgba(r, g, b, a) {
      if (a <= 0) r = g = b = NaN;
      return new Rgb(r, g, b, a);
    }

    function rgbConvert(o) {
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Rgb();
      o = o.rgb();
      return new Rgb(o.r, o.g, o.b, o.opacity);
    }

    function rgb(r, g, b, opacity) {
      return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }

    function Rgb(r, g, b, opacity) {
      this.r = +r;
      this.g = +g;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Rgb, rgb, extend(Color, {
      brighter: function (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      darker: function (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
      },
      rgb: function () {
        return this;
      },
      displayable: function () {
        return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;
      },
      toString: function () {
        var a = this.opacity;a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
        return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
      }
    }));

    function hsla(h, s, l, a) {
      if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
      return new Hsl(h, s, l, a);
    }

    function hslConvert(o) {
      if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Color)) o = color(o);
      if (!o) return new Hsl();
      if (o instanceof Hsl) return o;
      o = o.rgb();
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          min = Math.min(r, g, b),
          max = Math.max(r, g, b),
          h = NaN,
          s = max - min,
          l = (max + min) / 2;
      if (s) {
        if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
        s /= l < 0.5 ? max + min : 2 - max - min;
        h *= 60;
      } else {
        s = l > 0 && l < 1 ? 0 : h;
      }
      return new Hsl(h, s, l, o.opacity);
    }

    function hsl(h, s, l, opacity) {
      return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }

    function Hsl(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Hsl, hsl, extend(Color, {
      brighter: function (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Hsl(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function () {
        var h = this.h % 360 + (this.h < 0) * 360,
            s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
            l = this.l,
            m2 = l + (l < 0.5 ? l : 1 - l) * s,
            m1 = 2 * l - m2;
        return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
      },
      displayable: function () {
        return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
      }
    }));

    /* From FvD 13.37, CSS Color Module Level 3 */
    function hsl2rgb(h, m1, m2) {
      return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
    }

    var deg2rad = Math.PI / 180;
    var rad2deg = 180 / Math.PI;

    var Kn = 18;
    var Xn = 0.950470;
    var Yn = 1;
    var Zn = 1.088830;
    var t0 = 4 / 29;
    var t1 = 6 / 29;
    var t2 = 3 * t1 * t1;
    var t3 = t1 * t1 * t1;

    function labConvert(o) {
      if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
      if (o instanceof Hcl) {
        var h = o.h * deg2rad;
        return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
      }
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var b = rgb2xyz(o.r),
          a = rgb2xyz(o.g),
          l = rgb2xyz(o.b),
          x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
          y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
          z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
      return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
    }

    function lab(l, a, b, opacity) {
      return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
    }

    function Lab(l, a, b, opacity) {
      this.l = +l;
      this.a = +a;
      this.b = +b;
      this.opacity = +opacity;
    }

    define(Lab, lab, extend(Color, {
      brighter: function (k) {
        return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      darker: function (k) {
        return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
      },
      rgb: function () {
        var y = (this.l + 16) / 116,
            x = isNaN(this.a) ? y : y + this.a / 500,
            z = isNaN(this.b) ? y : y - this.b / 200;
        y = Yn * lab2xyz(y);
        x = Xn * lab2xyz(x);
        z = Zn * lab2xyz(z);
        return new Rgb(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), this.opacity);
      }
    }));

    function xyz2lab(t) {
      return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
    }

    function lab2xyz(t) {
      return t > t1 ? t * t * t : t2 * (t - t0);
    }

    function xyz2rgb(x) {
      return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
    }

    function rgb2xyz(x) {
      return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
    }

    function hclConvert(o) {
      if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
      if (!(o instanceof Lab)) o = labConvert(o);
      var h = Math.atan2(o.b, o.a) * rad2deg;
      return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
    }

    function hcl(h, c, l, opacity) {
      return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
    }

    function Hcl(h, c, l, opacity) {
      this.h = +h;
      this.c = +c;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Hcl, hcl, extend(Color, {
      brighter: function (k) {
        return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
      },
      darker: function (k) {
        return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
      },
      rgb: function () {
        return labConvert(this).rgb();
      }
    }));

    var A = -0.14861;
    var B = +1.78277;
    var C = -0.29227;
    var D = -0.90649;
    var E = +1.97294;
    var ED = E * D;
    var EB = E * B;
    var BC_DA = B * C - D * A;

    function cubehelixConvert(o) {
      if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
      if (!(o instanceof Rgb)) o = rgbConvert(o);
      var r = o.r / 255,
          g = o.g / 255,
          b = o.b / 255,
          l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
          bl = b - l,
          k = (E * (g - l) - C * bl) / D,
          s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
          // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
      return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
    }

    function cubehelix(h, s, l, opacity) {
      return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
    }

    function Cubehelix(h, s, l, opacity) {
      this.h = +h;
      this.s = +s;
      this.l = +l;
      this.opacity = +opacity;
    }

    define(Cubehelix, cubehelix, extend(Color, {
      brighter: function (k) {
        k = k == null ? brighter : Math.pow(brighter, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      darker: function (k) {
        k = k == null ? darker : Math.pow(darker, k);
        return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
      },
      rgb: function () {
        var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
            l = +this.l,
            a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
            cosh = Math.cos(h),
            sinh = Math.sin(h);
        return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
      }
    }));

    exports.color = color;
    exports.rgb = rgb;
    exports.hsl = hsl;
    exports.lab = lab;
    exports.hcl = hcl;
    exports.cubehelix = cubehelix;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("139", ["22a"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("22a");
});
$__System.registerDynamic('22b', ['185', '226', '228', '13a', '139', '13e'], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-transition/ Version 1.1.1. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, $__require('185'), $__require('226'), $__require('228'), $__require('13a'), $__require('139'), $__require('13e')) : typeof undefined === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) : factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3);
  })(this, function (exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) {
    'use strict';

    var emptyOn = d3Dispatch.dispatch("start", "end", "interrupt");
    var emptyTween = [];

    var CREATED = 0;
    var SCHEDULED = 1;
    var STARTING = 2;
    var STARTED = 3;
    var RUNNING = 4;
    var ENDING = 5;
    var ENDED = 6;

    var schedule = function (node, name, id, index, group, timing) {
      var schedules = node.__transition;
      if (!schedules) node.__transition = {};else if (id in schedules) return;
      create(node, id, {
        name: name,
        index: index, // For context during callback.
        group: group, // For context during callback.
        on: emptyOn,
        tween: emptyTween,
        time: timing.time,
        delay: timing.delay,
        duration: timing.duration,
        ease: timing.ease,
        timer: null,
        state: CREATED
      });
    };

    function init(node, id) {
      var schedule = get(node, id);
      if (schedule.state > CREATED) throw new Error("too late; already scheduled");
      return schedule;
    }

    function set(node, id) {
      var schedule = get(node, id);
      if (schedule.state > STARTING) throw new Error("too late; already started");
      return schedule;
    }

    function get(node, id) {
      var schedule = node.__transition;
      if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
      return schedule;
    }

    function create(node, id, self) {
      var schedules = node.__transition,
          tween;

      // Initialize the self timer when the transition is created.
      // Note the actual delay is not known until the first callback!
      schedules[id] = self;
      self.timer = d3Timer.timer(schedule, 0, self.time);

      function schedule(elapsed) {
        self.state = SCHEDULED;
        self.timer.restart(start, self.delay, self.time);

        // If the elapsed delay is less than our first sleep, start immediately.
        if (self.delay <= elapsed) start(elapsed - self.delay);
      }

      function start(elapsed) {
        var i, j, n, o;

        // If the state is not SCHEDULED, then we previously errored on start.
        if (self.state !== SCHEDULED) return stop();

        for (i in schedules) {
          o = schedules[i];
          if (o.name !== self.name) continue;

          // While this element already has a starting transition during this frame,
          // defer starting an interrupting transition until that transition has a
          // chance to tick (and possibly end); see d3/d3-transition#54!
          if (o.state === STARTED) return d3Timer.timeout(start);

          // Interrupt the active transition, if any.
          // Dispatch the interrupt event.
          if (o.state === RUNNING) {
            o.state = ENDED;
            o.timer.stop();
            o.on.call("interrupt", node, node.__data__, o.index, o.group);
            delete schedules[i];
          }

          // Cancel any pre-empted transitions. No interrupt event is dispatched
          // because the cancelled transitions never started. Note that this also
          // removes this transition from the pending list!
          else if (+i < id) {
              o.state = ENDED;
              o.timer.stop();
              delete schedules[i];
            }
        }

        // Defer the first tick to end of the current frame; see d3/d3#1576.
        // Note the transition may be canceled after start and before the first tick!
        // Note this must be scheduled before the start event; see d3/d3-transition#16!
        // Assuming this is successful, subsequent callbacks go straight to tick.
        d3Timer.timeout(function () {
          if (self.state === STARTED) {
            self.state = RUNNING;
            self.timer.restart(tick, self.delay, self.time);
            tick(elapsed);
          }
        });

        // Dispatch the start event.
        // Note this must be done before the tween are initialized.
        self.state = STARTING;
        self.on.call("start", node, node.__data__, self.index, self.group);
        if (self.state !== STARTING) return; // interrupted
        self.state = STARTED;

        // Initialize the tween, deleting null tween.
        tween = new Array(n = self.tween.length);
        for (i = 0, j = -1; i < n; ++i) {
          if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
            tween[++j] = o;
          }
        }
        tween.length = j + 1;
      }

      function tick(elapsed) {
        var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
            i = -1,
            n = tween.length;

        while (++i < n) {
          tween[i].call(null, t);
        }

        // Dispatch the end event.
        if (self.state === ENDING) {
          self.on.call("end", node, node.__data__, self.index, self.group);
          stop();
        }
      }

      function stop() {
        self.state = ENDED;
        self.timer.stop();
        delete schedules[id];
        for (var i in schedules) return; // eslint-disable-line no-unused-vars
        delete node.__transition;
      }
    }

    var interrupt = function (node, name) {
      var schedules = node.__transition,
          schedule,
          active,
          empty = true,
          i;

      if (!schedules) return;

      name = name == null ? null : name + "";

      for (i in schedules) {
        if ((schedule = schedules[i]).name !== name) {
          empty = false;continue;
        }
        active = schedule.state > STARTING && schedule.state < ENDING;
        schedule.state = ENDED;
        schedule.timer.stop();
        if (active) schedule.on.call("interrupt", node, node.__data__, schedule.index, schedule.group);
        delete schedules[i];
      }

      if (empty) delete node.__transition;
    };

    var selection_interrupt = function (name) {
      return this.each(function () {
        interrupt(this, name);
      });
    };

    function tweenRemove(id, name) {
      var tween0, tween1;
      return function () {
        var schedule = set(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = tween0 = tween;
          for (var i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1 = tween1.slice();
              tween1.splice(i, 1);
              break;
            }
          }
        }

        schedule.tween = tween1;
      };
    }

    function tweenFunction(id, name, value) {
      var tween0, tween1;
      if (typeof value !== "function") throw new Error();
      return function () {
        var schedule = set(this, id),
            tween = schedule.tween;

        // If this node shared tween with the previous node,
        // just assign the updated shared tween and we’re done!
        // Otherwise, copy-on-write.
        if (tween !== tween0) {
          tween1 = (tween0 = tween).slice();
          for (var t = { name: name, value: value }, i = 0, n = tween1.length; i < n; ++i) {
            if (tween1[i].name === name) {
              tween1[i] = t;
              break;
            }
          }
          if (i === n) tween1.push(t);
        }

        schedule.tween = tween1;
      };
    }

    var transition_tween = function (name, value) {
      var id = this._id;

      name += "";

      if (arguments.length < 2) {
        var tween = get(this.node(), id).tween;
        for (var i = 0, n = tween.length, t; i < n; ++i) {
          if ((t = tween[i]).name === name) {
            return t.value;
          }
        }
        return null;
      }

      return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
    };

    function tweenValue(transition, name, value) {
      var id = transition._id;

      transition.each(function () {
        var schedule = set(this, id);
        (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
      });

      return function (node) {
        return get(node, id).value[name];
      };
    }

    var interpolate = function (a, b) {
      var c;
      return (typeof b === "number" ? d3Interpolate.interpolateNumber : b instanceof d3Color.color ? d3Interpolate.interpolateRgb : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb) : d3Interpolate.interpolateString)(a, b);
    };

    function attrRemove(name) {
      return function () {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS(fullname) {
      return function () {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant(name, interpolate$$1, value1) {
      var value00, interpolate0;
      return function () {
        var value0 = this.getAttribute(name);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
      };
    }

    function attrConstantNS(fullname, interpolate$$1, value1) {
      var value00, interpolate0;
      return function () {
        var value0 = this.getAttributeNS(fullname.space, fullname.local);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
      };
    }

    function attrFunction(name, interpolate$$1, value) {
      var value00, value10, interpolate0;
      return function () {
        var value0,
            value1 = value(this);
        if (value1 == null) return void this.removeAttribute(name);
        value0 = this.getAttribute(name);
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
      };
    }

    function attrFunctionNS(fullname, interpolate$$1, value) {
      var value00, value10, interpolate0;
      return function () {
        var value0,
            value1 = value(this);
        if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
        value0 = this.getAttributeNS(fullname.space, fullname.local);
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
      };
    }

    var transition_attr = function (name, value) {
      var fullname = d3Selection.namespace(name),
          i = fullname === "transform" ? d3Interpolate.interpolateTransformSvg : interpolate;
      return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + ""));
    };

    function attrTweenNS(fullname, value) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function (t) {
          node.setAttributeNS(fullname.space, fullname.local, i(t));
        };
      }
      tween._value = value;
      return tween;
    }

    function attrTween(name, value) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function (t) {
          node.setAttribute(name, i(t));
        };
      }
      tween._value = value;
      return tween;
    }

    var transition_attrTween = function (name, value) {
      var key = "attr." + name;
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error();
      var fullname = d3Selection.namespace(name);
      return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
    };

    function delayFunction(id, value) {
      return function () {
        init(this, id).delay = +value.apply(this, arguments);
      };
    }

    function delayConstant(id, value) {
      return value = +value, function () {
        init(this, id).delay = value;
      };
    }

    var transition_delay = function (value) {
      var id = this._id;

      return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;
    };

    function durationFunction(id, value) {
      return function () {
        set(this, id).duration = +value.apply(this, arguments);
      };
    }

    function durationConstant(id, value) {
      return value = +value, function () {
        set(this, id).duration = value;
      };
    }

    var transition_duration = function (value) {
      var id = this._id;

      return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;
    };

    function easeConstant(id, value) {
      if (typeof value !== "function") throw new Error();
      return function () {
        set(this, id).ease = value;
      };
    }

    var transition_ease = function (value) {
      var id = this._id;

      return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;
    };

    var transition_filter = function (match) {
      if (typeof match !== "function") match = d3Selection.matcher(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Transition(subgroups, this._parents, this._name, this._id);
    };

    var transition_merge = function (transition) {
      if (transition._id !== this._id) throw new Error();

      for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Transition(merges, this._parents, this._name, this._id);
    };

    function start(name) {
      return (name + "").trim().split(/^|\s+/).every(function (t) {
        var i = t.indexOf(".");
        if (i >= 0) t = t.slice(0, i);
        return !t || t === "start";
      });
    }

    function onFunction(id, name, listener) {
      var on0,
          on1,
          sit = start(name) ? init : set;
      return function () {
        var schedule = sit(this, id),
            on = schedule.on;

        // If this node shared a dispatch with the previous node,
        // just assign the updated shared dispatch and we’re done!
        // Otherwise, copy-on-write.
        if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

        schedule.on = on1;
      };
    }

    var transition_on = function (name, listener) {
      var id = this._id;

      return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
    };

    function removeFunction(id) {
      return function () {
        var parent = this.parentNode;
        for (var i in this.__transition) if (+i !== id) return;
        if (parent) parent.removeChild(this);
      };
    }

    var transition_remove = function () {
      return this.on("end.remove", removeFunction(this._id));
    };

    var transition_select = function (select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = d3Selection.selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
            schedule(subgroup[i], name, id, i, subgroup, get(node, id));
          }
        }
      }

      return new Transition(subgroups, this._parents, name, id);
    };

    var transition_selectAll = function (select) {
      var name = this._name,
          id = this._id;

      if (typeof select !== "function") select = d3Selection.selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {
              if (child = children[k]) {
                schedule(child, name, id, k, children, inherit);
              }
            }
            subgroups.push(children);
            parents.push(node);
          }
        }
      }

      return new Transition(subgroups, parents, name, id);
    };

    var Selection = d3Selection.selection.prototype.constructor;

    var transition_selection = function () {
      return new Selection(this._groups, this._parents);
    };

    function styleRemove(name, interpolate$$1) {
      var value00, value10, interpolate0;
      return function () {
        var value0 = d3Selection.style(this, name),
            value1 = (this.style.removeProperty(name), d3Selection.style(this, name));
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
      };
    }

    function styleRemoveEnd(name) {
      return function () {
        this.style.removeProperty(name);
      };
    }

    function styleConstant(name, interpolate$$1, value1) {
      var value00, interpolate0;
      return function () {
        var value0 = d3Selection.style(this, name);
        return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
      };
    }

    function styleFunction(name, interpolate$$1, value) {
      var value00, value10, interpolate0;
      return function () {
        var value0 = d3Selection.style(this, name),
            value1 = value(this);
        if (value1 == null) value1 = (this.style.removeProperty(name), d3Selection.style(this, name));
        return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
      };
    }

    var transition_style = function (name, value, priority) {
      var i = (name += "") === "transform" ? d3Interpolate.interpolateTransformCss : interpolate;
      return value == null ? this.styleTween(name, styleRemove(name, i)).on("end.style." + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === "function" ? styleFunction(name, i, tweenValue(this, "style." + name, value)) : styleConstant(name, i, value + ""), priority);
    };

    function styleTween(name, value, priority) {
      function tween() {
        var node = this,
            i = value.apply(node, arguments);
        return i && function (t) {
          node.style.setProperty(name, i(t), priority);
        };
      }
      tween._value = value;
      return tween;
    }

    var transition_styleTween = function (name, value, priority) {
      var key = "style." + (name += "");
      if (arguments.length < 2) return (key = this.tween(key)) && key._value;
      if (value == null) return this.tween(key, null);
      if (typeof value !== "function") throw new Error();
      return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
    };

    function textConstant(value) {
      return function () {
        this.textContent = value;
      };
    }

    function textFunction(value) {
      return function () {
        var value1 = value(this);
        this.textContent = value1 == null ? "" : value1;
      };
    }

    var transition_text = function (value) {
      return this.tween("text", typeof value === "function" ? textFunction(tweenValue(this, "text", value)) : textConstant(value == null ? "" : value + ""));
    };

    var transition_transition = function () {
      var name = this._name,
          id0 = this._id,
          id1 = newId();

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            var inherit = get(node, id0);
            schedule(node, name, id1, i, group, {
              time: inherit.time + inherit.delay + inherit.duration,
              delay: 0,
              duration: inherit.duration,
              ease: inherit.ease
            });
          }
        }
      }

      return new Transition(groups, this._parents, name, id1);
    };

    var id = 0;

    function Transition(groups, parents, name, id) {
      this._groups = groups;
      this._parents = parents;
      this._name = name;
      this._id = id;
    }

    function transition(name) {
      return d3Selection.selection().transition(name);
    }

    function newId() {
      return ++id;
    }

    var selection_prototype = d3Selection.selection.prototype;

    Transition.prototype = transition.prototype = {
      constructor: Transition,
      select: transition_select,
      selectAll: transition_selectAll,
      filter: transition_filter,
      merge: transition_merge,
      selection: transition_selection,
      transition: transition_transition,
      call: selection_prototype.call,
      nodes: selection_prototype.nodes,
      node: selection_prototype.node,
      size: selection_prototype.size,
      empty: selection_prototype.empty,
      each: selection_prototype.each,
      on: transition_on,
      attr: transition_attr,
      attrTween: transition_attrTween,
      style: transition_style,
      styleTween: transition_styleTween,
      text: transition_text,
      remove: transition_remove,
      tween: transition_tween,
      delay: transition_delay,
      duration: transition_duration,
      ease: transition_ease
    };

    var defaultTiming = {
      time: null, // Set on use.
      delay: 0,
      duration: 250,
      ease: d3Ease.easeCubicInOut
    };

    function inherit(node, id) {
      var timing;
      while (!(timing = node.__transition) || !(timing = timing[id])) {
        if (!(node = node.parentNode)) {
          return defaultTiming.time = d3Timer.now(), defaultTiming;
        }
      }
      return timing;
    }

    var selection_transition = function (name) {
      var id, timing;

      if (name instanceof Transition) {
        id = name._id, name = name._name;
      } else {
        id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + "";
      }

      for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            schedule(node, name, id, i, group, timing || inherit(node, id));
          }
        }
      }

      return new Transition(groups, this._parents, name, id);
    };

    d3Selection.selection.prototype.interrupt = selection_interrupt;
    d3Selection.selection.prototype.transition = selection_transition;

    var root = [null];

    var active = function (node, name) {
      var schedules = node.__transition,
          schedule,
          i;

      if (schedules) {
        name = name == null ? null : name + "";
        for (i in schedules) {
          if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
            return new Transition([[node]], root, name, +i);
          }
        }
      }

      return null;
    };

    exports.transition = transition;
    exports.active = active;
    exports.interrupt = interrupt;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("22c", ["22b"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("22b");
});
$__System.registerDynamic('22d', [], true, function ($__require, exports, module) {
	var global = this || self,
	    GLOBAL = global;
	/*!
  * @name JavaScript/NodeJS Merge v1.2.0
  * @author yeikos
  * @repository https://github.com/yeikos/js.merge
 
  * Copyright 2014 yeikos - MIT license
  * https://raw.github.com/yeikos/js.merge/master/LICENSE
  */

	;(function (isNode) {

		/**
   * Merge one or more objects 
   * @param bool? clone
   * @param mixed,... arguments
   * @return object
   */

		var Public = function (clone) {

			return merge(clone === true, false, arguments);
		},
		    publicName = 'merge';

		/**
   * Merge two or more objects recursively 
   * @param bool? clone
   * @param mixed,... arguments
   * @return object
   */

		Public.recursive = function (clone) {

			return merge(clone === true, true, arguments);
		};

		/**
   * Clone the input removing any reference
   * @param mixed input
   * @return mixed
   */

		Public.clone = function (input) {

			var output = input,
			    type = typeOf(input),
			    index,
			    size;

			if (type === 'array') {

				output = [];
				size = input.length;

				for (index = 0; index < size; ++index) output[index] = Public.clone(input[index]);
			} else if (type === 'object') {

				output = {};

				for (index in input) output[index] = Public.clone(input[index]);
			}

			return output;
		};

		/**
   * Merge two objects recursively
   * @param mixed input
   * @param mixed extend
   * @return mixed
   */

		function merge_recursive(base, extend) {

			if (typeOf(base) !== 'object') return extend;

			for (var key in extend) {

				if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {

					base[key] = merge_recursive(base[key], extend[key]);
				} else {

					base[key] = extend[key];
				}
			}

			return base;
		}

		/**
   * Merge two or more objects
   * @param bool clone
   * @param bool recursive
   * @param array argv
   * @return object
   */

		function merge(clone, recursive, argv) {

			var result = argv[0],
			    size = argv.length;

			if (clone || typeOf(result) !== 'object') result = {};

			for (var index = 0; index < size; ++index) {

				var item = argv[index],
				    type = typeOf(item);

				if (type !== 'object') continue;

				for (var key in item) {

					var sitem = clone ? Public.clone(item[key]) : item[key];

					if (recursive) {

						result[key] = merge_recursive(result[key], sitem);
					} else {

						result[key] = sitem;
					}
				}
			}

			return result;
		}

		/**
   * Get type of variable
   * @param mixed input
   * @return string
   *
   * @see http://jsperf.com/typeofvar
   */

		function typeOf(input) {

			return {}.toString.call(input).slice(8, -1).toLowerCase();
		}

		if (isNode) {

			module.exports = Public;
		} else {

			window[publicName] = Public;
		}
	})(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
});
$__System.registerDynamic("123", ["22d"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("22d");
});
$__System.registerDynamic('22e', ['22f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('22f');
});
$__System.registerDynamic("1c", ["22e"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("22e");
});
$__System.registerDynamic('230', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ARIADOMPropertyConfig = {
    Properties: {
      // Global States and Properties
      'aria-current': 0, // state
      'aria-details': 0,
      'aria-disabled': 0, // state
      'aria-hidden': 0, // state
      'aria-invalid': 0, // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    },
    DOMAttributeNames: {},
    DOMPropertyNames: {}
  };

  module.exports = ARIADOMPropertyConfig;
});
$__System.registerDynamic('231', ['165', '232', '233'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('165');
  var PooledClass = $__require('232');
  var getTextContentAccessor = $__require('233');
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }
  _assign(FallbackCompositionState.prototype, {
    destructor: function () {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },
    getText: function () {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },
    getData: function () {
      if (this._fallbackText) {
        return this._fallbackText;
      }
      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;
      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }
      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }
      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });
  PooledClass.addPoolingTo(FallbackCompositionState);
  module.exports = FallbackCompositionState;
});
$__System.registerDynamic('234', ['235'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var CompositionEventInterface = { data: null };
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
  module.exports = SyntheticCompositionEvent;
});
$__System.registerDynamic('236', ['235'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var InputEventInterface = { data: null };
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
  module.exports = SyntheticInputEvent;
});
$__System.registerDynamic('237', ['238', '239', '231', '234', '236'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('238');
  var ExecutionEnvironment = $__require('239');
  var FallbackCompositionState = $__require('231');
  var SyntheticCompositionEvent = $__require('234');
  var SyntheticInputEvent = $__require('236');
  var END_KEYCODES = [9, 13, 27, 32];
  var START_KEYCODE = 229;
  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }
  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: 'onBeforeInput',
        captured: 'onBeforeInputCapture'
      },
      dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionEnd',
        captured: 'onCompositionEndCapture'
      },
      dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionStart',
        captured: 'onCompositionStartCapture'
      },
      dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionUpdate',
        captured: 'onCompositionUpdateCapture'
      },
      dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    }
  };
  var hasSpaceKeypress = false;
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case 'topCompositionStart':
        return eventTypes.compositionStart;
      case 'topCompositionEnd':
        return eventTypes.compositionEnd;
      case 'topCompositionUpdate':
        return eventTypes.compositionUpdate;
    }
  }
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
  }
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topKeyUp':
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case 'topKeyDown':
        return nativeEvent.keyCode !== START_KEYCODE;
      case 'topKeyPress':
      case 'topMouseDown':
      case 'topBlur':
        return true;
      default:
        return false;
    }
  }
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }
  var currentComposition = null;
  function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;
    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }
    if (!eventType) {
      return null;
    }
    if (useFallbackCompositionData) {
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }
    var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
    if (fallbackData) {
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topCompositionEnd':
        return getDataFromCustomEvent(nativeEvent);
      case 'topKeyPress':
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }
        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;
      case 'topTextInput':
        var chars = nativeEvent.data;
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }
        return chars;
      default:
        return null;
    }
  }
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    if (currentComposition) {
      if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }
    switch (topLevelType) {
      case 'topPaste':
        return null;
      case 'topKeyPress':
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case 'topCompositionEnd':
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }
  function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var chars;
    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }
    if (!chars) {
      return null;
    }
    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
  var BeforeInputEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
    }
  };
  module.exports = BeforeInputEventPlugin;
});
$__System.registerDynamic('23a', ['23b', '238', '239', '23c', '23d', '235', '23e', '23f', '240', '241', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventPluginHub = $__require('23b');
    var EventPropagators = $__require('238');
    var ExecutionEnvironment = $__require('239');
    var ReactDOMComponentTree = $__require('23c');
    var ReactUpdates = $__require('23d');
    var SyntheticEvent = $__require('235');
    var inputValueTracking = $__require('23e');
    var getEventTarget = $__require('23f');
    var isEventSupported = $__require('240');
    var isTextInputElement = $__require('241');
    var eventTypes = { change: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        },
        dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
      } };
    function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
      var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
      event.type = 'change';
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
    var activeElement = null;
    var activeElementInst = null;
    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    var doesChangeEventBubble = false;
    if (ExecutionEnvironment.canUseDOM) {
      doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
    }
    function manualDispatchChangeEvent(nativeEvent) {
      var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));
      ReactUpdates.batchedUpdates(runEventInBatch, event);
    }
    function runEventInBatch(event) {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue(false);
    }
    function startWatchingForChangeEventIE8(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onchange', manualDispatchChangeEvent);
    }
    function stopWatchingForChangeEventIE8() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onchange', manualDispatchChangeEvent);
      activeElement = null;
      activeElementInst = null;
    }
    function getInstIfValueChanged(targetInst, nativeEvent) {
      var updated = inputValueTracking.updateValueIfChanged(targetInst);
      var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;
      if (updated || simulated) {
        return targetInst;
      }
    }
    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === 'topChange') {
        return targetInst;
      }
    }
    function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
      if (topLevelType === 'topFocus') {
        stopWatchingForChangeEventIE8();
        startWatchingForChangeEventIE8(target, targetInst);
      } else if (topLevelType === 'topBlur') {
        stopWatchingForChangeEventIE8();
      }
    }
    var isInputEventSupported = false;
    if (ExecutionEnvironment.canUseDOM) {
      isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    }
    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }
      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }
      if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }
    function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
      if (topLevelType === 'topFocus') {
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === 'topBlur') {
        stopWatchingForValueChange();
      }
    }
    function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
        return getInstIfValueChanged(activeElementInst, nativeEvent);
      }
    }
    function shouldUseClickEvent(elem) {
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topClick') {
        return getInstIfValueChanged(targetInst, nativeEvent);
      }
    }
    function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
      if (topLevelType === 'topInput' || topLevelType === 'topChange') {
        return getInstIfValueChanged(targetInst, nativeEvent);
      }
    }
    function handleControlledInputBlur(inst, node) {
      if (inst == null) {
        return;
      }
      var state = inst._wrapperState || node._wrapperState;
      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }
      var value = '' + node.value;
      if (node.getAttribute('value') !== value) {
        node.setAttribute('value', value);
      }
    }
    var ChangeEventPlugin = {
      eventTypes: eventTypes,
      _allowSimulatedPassThrough: true,
      _isInputEventSupported: isInputEventSupported,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) {
          if (doesChangeEventBubble) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else {
            handleEventFunc = handleEventsForChangeEventIE8;
          }
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            handleEventFunc = handleEventsForInputEventPolyfill;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }
        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
          if (inst) {
            var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
            return event;
          }
        }
        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        }
        if (topLevelType === 'topBlur') {
          handleControlledInputBlur(targetInst, targetNode);
        }
      }
    };
    module.exports = ChangeEventPlugin;
  })($__require('16'));
});
$__System.registerDynamic('242', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * Module that is injectable into `EventPluginHub`, that specifies a
   * deterministic ordering of `EventPlugin`s. A convenient way to reason about
   * plugins, without having to package every one of them. This is better than
   * having plugins be ordered in the same order that they are injected because
   * that ordering would be influenced by the packaging order.
   * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
   * preventing default on events is convenient in `SimpleEventPlugin` handlers.
   */

  var global = this || self,
      GLOBAL = global;
  var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

  module.exports = DefaultEventPluginOrder;
});
$__System.registerDynamic('243', ['238', '23c', '244'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('238');
  var ReactDOMComponentTree = $__require('23c');
  var SyntheticMouseEvent = $__require('244');
  var eventTypes = {
    mouseEnter: {
      registrationName: 'onMouseEnter',
      dependencies: ['topMouseOut', 'topMouseOver']
    },
    mouseLeave: {
      registrationName: 'onMouseLeave',
      dependencies: ['topMouseOut', 'topMouseOver']
    }
  };
  var EnterLeaveEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
        return null;
      }
      var win;
      if (nativeEventTarget.window === nativeEventTarget) {
        win = nativeEventTarget;
      } else {
        var doc = nativeEventTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }
      var from;
      var to;
      if (topLevelType === 'topMouseOut') {
        from = targetInst;
        var related = nativeEvent.relatedTarget || nativeEvent.toElement;
        to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
      } else {
        from = null;
        to = targetInst;
      }
      if (from === to) {
        return null;
      }
      var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
      var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = fromNode;
      leave.relatedTarget = toNode;
      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = toNode;
      enter.relatedTarget = fromNode;
      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
      return [leave, enter];
    }
  };
  module.exports = EnterLeaveEventPlugin;
});
$__System.registerDynamic('245', ['246'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('246');
  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
    Properties: {
      accept: 0,
      acceptCharset: 0,
      accessKey: 0,
      action: 0,
      allowFullScreen: HAS_BOOLEAN_VALUE,
      allowTransparency: 0,
      alt: 0,
      as: 0,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: 0,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: HAS_BOOLEAN_VALUE,
      cellPadding: 0,
      cellSpacing: 0,
      charSet: 0,
      challenge: 0,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      cite: 0,
      classID: 0,
      className: 0,
      cols: HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: 0,
      content: 0,
      contentEditable: 0,
      contextMenu: 0,
      controls: HAS_BOOLEAN_VALUE,
      controlsList: 0,
      coords: 0,
      crossOrigin: 0,
      data: 0,
      dateTime: 0,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: 0,
      disabled: HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: 0,
      encType: 0,
      form: 0,
      formAction: 0,
      formEncType: 0,
      formMethod: 0,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: 0,
      frameBorder: 0,
      headers: 0,
      height: 0,
      hidden: HAS_BOOLEAN_VALUE,
      high: 0,
      href: 0,
      hrefLang: 0,
      htmlFor: 0,
      httpEquiv: 0,
      icon: 0,
      id: 0,
      inputMode: 0,
      integrity: 0,
      is: 0,
      keyParams: 0,
      keyType: 0,
      kind: 0,
      label: 0,
      lang: 0,
      list: 0,
      loop: HAS_BOOLEAN_VALUE,
      low: 0,
      manifest: 0,
      marginHeight: 0,
      marginWidth: 0,
      max: 0,
      maxLength: 0,
      media: 0,
      mediaGroup: 0,
      method: 0,
      min: 0,
      minLength: 0,
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: 0,
      nonce: 0,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: 0,
      pattern: 0,
      placeholder: 0,
      playsInline: HAS_BOOLEAN_VALUE,
      poster: 0,
      preload: 0,
      profile: 0,
      radioGroup: 0,
      readOnly: HAS_BOOLEAN_VALUE,
      referrerPolicy: 0,
      rel: 0,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: 0,
      rows: HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: HAS_NUMERIC_VALUE,
      sandbox: 0,
      scope: 0,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: 0,
      seamless: HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: 0,
      size: HAS_POSITIVE_NUMERIC_VALUE,
      sizes: 0,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: 0,
      src: 0,
      srcDoc: 0,
      srcLang: 0,
      srcSet: 0,
      start: HAS_NUMERIC_VALUE,
      step: 0,
      style: 0,
      summary: 0,
      tabIndex: 0,
      target: 0,
      title: 0,
      type: 0,
      useMap: 0,
      value: 0,
      width: 0,
      wmode: 0,
      wrap: 0,
      about: 0,
      datatype: 0,
      inlist: 0,
      prefix: 0,
      property: 0,
      resource: 0,
      'typeof': 0,
      vocab: 0,
      autoCapitalize: 0,
      autoCorrect: 0,
      autoSave: 0,
      color: 0,
      itemProp: 0,
      itemScope: HAS_BOOLEAN_VALUE,
      itemType: 0,
      itemID: 0,
      itemRef: 0,
      results: 0,
      security: 0,
      unselectable: 0
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {},
    DOMMutationMethods: { value: function (node, value) {
        if (value == null) {
          return node.removeAttribute('value');
        }
        if (node.type !== 'number' || node.hasAttribute('value') === false) {
          node.setAttribute('value', '' + value);
        } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
          node.setAttribute('value', '' + value);
        }
      } }
  };
  module.exports = HTMLDOMPropertyConfig;
});
$__System.registerDynamic('247', ['248', '23c', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('248');
    var ReactDOMComponentTree = $__require('23c');
    var ReactDOMIDOperations = { dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
        var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
        DOMChildrenOperations.processUpdates(node, updates);
      } };
    module.exports = ReactDOMIDOperations;
  })($__require('16'));
});
$__System.registerDynamic('249', ['248', '247', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMChildrenOperations = $__require('248');
    var ReactDOMIDOperations = $__require('247');
    var ReactComponentBrowserEnvironment = {
      processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
      replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
    };
    module.exports = ReactComponentBrowserEnvironment;
  })($__require('16'));
});
$__System.registerDynamic('24a', ['23c', '24b'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var ReactDOMComponentTree = $__require('23c');
    var focusNode = $__require('24b');
    var AutoFocusUtils = { focusDOMComponent: function () {
            focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
        } };
    module.exports = AutoFocusUtils;
});
$__System.registerDynamic("24c", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var global = this || self,
      GLOBAL = global;
  var _hyphenPattern = /-(.)/g;

  /**
   * Camelcases a hyphenated string, for example:
   *
   *   > camelize('background-color')
   *   < "backgroundColor"
   *
   * @param {string} string
   * @return {string}
   */
  function camelize(string) {
    return string.replace(_hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  }

  module.exports = camelize;
});
$__System.registerDynamic('24d', ['24c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var camelize = $__require('24c');
  var msPattern = /^-ms-/;
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }
  module.exports = camelizeStyleName;
});
$__System.registerDynamic('24e', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * CSS properties which accept numbers but are not in units of "px".
   */

  var global = this || self,
      GLOBAL = global;
  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    columns: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,

    // SVG-related properties
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };

  /**
   * @param {string} prefix vendor-specific prefix, eg: Webkit
   * @param {string} key style name, eg: transitionDuration
   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
   * WebkitTransitionDuration
   */
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }

  /**
   * Support style names that may come passed in prefixed by adding permutations
   * of vendor prefixes.
   */
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

  // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
  // infinite loop, because it iterates over the newly added props too.
  Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });

  /**
   * Most style properties can be unset by doing .style[prop] = '' but IE8
   * doesn't like doing that with shorthand properties so for the properties that
   * IE8 breaks on, which are listed here, we instead unset each of the
   * individual properties. See http://bugs.jquery.com/ticket/12385.
   * The 4-value 'clock' properties like margin, padding, border-width seem to
   * behave without any problems. Curiously, list-style works too without any
   * special prodding.
   */
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };

  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };

  module.exports = CSSProperty;
});
$__System.registerDynamic('24f', ['24e', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CSSProperty = $__require('24e');
    var warning = $__require('16a');
    var isUnitlessNumber = CSSProperty.isUnitlessNumber;
    var styleWarnings = {};
    function dangerousStyleValue(name, value, component, isCustomProperty) {
      var isEmpty = value == null || typeof value === 'boolean' || value === '';
      if (isEmpty) {
        return '';
      }
      var isNonNumeric = isNaN(value);
      if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
        return '' + value;
      }
      if (typeof value === 'string') {
        if ('production' !== 'production') {
          if (component && value !== '0') {
            var owner = component._currentElement._owner;
            var ownerName = owner ? owner.getName() : null;
            if (ownerName && !styleWarnings[ownerName]) {
              styleWarnings[ownerName] = {};
            }
            var warned = false;
            if (ownerName) {
              var warnings = styleWarnings[ownerName];
              warned = warnings[name];
              if (!warned) {
                warnings[name] = true;
              }
            }
            if (!warned) {
              'production' !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
            }
          }
        }
        value = value.trim();
      }
      return value + 'px';
    }
    module.exports = dangerousStyleValue;
  })($__require('16'));
});
$__System.registerDynamic('250', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var global = this || self,
      GLOBAL = global;
  var _uppercasePattern = /([A-Z])/g;

  /**
   * Hyphenates a camelcased string, for example:
   *
   *   > hyphenate('backgroundColor')
   *   < "background-color"
   *
   * For CSS style names, use `hyphenateStyleName` instead which works properly
   * with all vendor prefixes, including `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }

  module.exports = hyphenate;
});
$__System.registerDynamic('14a', ['250'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hyphenate = $__require('250');
  var msPattern = /^ms-/;
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }
  module.exports = hyphenateStyleName;
});
$__System.registerDynamic('251', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   * @typechecks static-only
   */

  'use strict';

  /**
   * Memoizes the return value of a function that accepts one string argument.
   */

  var global = this || self,
      GLOBAL = global;
  function memoizeStringOnly(callback) {
    var cache = {};
    return function (string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }

  module.exports = memoizeStringOnly;
});
$__System.registerDynamic('252', ['24e', '239', '253', '24d', '24f', '14a', '251', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var CSSProperty = $__require('24e');
    var ExecutionEnvironment = $__require('239');
    var ReactInstrumentation = $__require('253');
    var camelizeStyleName = $__require('24d');
    var dangerousStyleValue = $__require('24f');
    var hyphenateStyleName = $__require('14a');
    var memoizeStringOnly = $__require('251');
    var warning = $__require('16a');
    var processStyleName = memoizeStringOnly(function (styleName) {
      return hyphenateStyleName(styleName);
    });
    var hasShorthandPropertyBug = false;
    var styleFloatAccessor = 'cssFloat';
    if (ExecutionEnvironment.canUseDOM) {
      var tempStyle = document.createElement('div').style;
      try {
        tempStyle.font = '';
      } catch (e) {
        hasShorthandPropertyBug = true;
      }
      if (document.documentElement.style.cssFloat === undefined) {
        styleFloatAccessor = 'styleFloat';
      }
    }
    if ('production' !== 'production') {
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnHyphenatedStyleName = function (name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
      };
      var warnBadVendoredStyleName = function (name, owner) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }
        warnedStyleNames[name] = true;
        'production' !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
      };
      var warnStyleValueWithSemicolon = function (name, value, owner) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }
        warnedStyleValues[value] = true;
        'production' !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
      };
      var warnStyleValueIsNaN = function (name, value, owner) {
        if (warnedForNaNValue) {
          return;
        }
        warnedForNaNValue = true;
        'production' !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
      };
      var checkRenderMessage = function (owner) {
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' Check the render method of `' + name + '`.';
          }
        }
        return '';
      };
      var warnValidStyle = function (name, value, component) {
        var owner;
        if (component) {
          owner = component._currentElement._owner;
        }
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name, owner);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name, owner);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value, owner);
        }
        if (typeof value === 'number' && isNaN(value)) {
          warnStyleValueIsNaN(name, value, owner);
        }
      };
    }
    var CSSPropertyOperations = {
      createMarkupForStyles: function (styles, component) {
        var serialized = '';
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var isCustomProperty = styleName.indexOf('--') === 0;
          var styleValue = styles[styleName];
          if ('production' !== 'production') {
            if (!isCustomProperty) {
              warnValidStyle(styleName, styleValue, component);
            }
          }
          if (styleValue != null) {
            serialized += processStyleName(styleName) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
          }
        }
        return serialized || null;
      },
      setValueForStyles: function (node, styles, component) {
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: component._debugID,
            type: 'update styles',
            payload: styles
          });
        }
        var style = node.style;
        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }
          var isCustomProperty = styleName.indexOf('--') === 0;
          if ('production' !== 'production') {
            if (!isCustomProperty) {
              warnValidStyle(styleName, styles[styleName], component);
            }
          }
          var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
          if (styleName === 'float' || styleName === 'cssFloat') {
            styleName = styleFloatAccessor;
          }
          if (isCustomProperty) {
            style.setProperty(styleName, styleValue);
          } else if (styleValue) {
            style[styleName] = styleValue;
          } else {
            var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
            if (expansion) {
              for (var individualStyleName in expansion) {
                style[individualStyleName] = '';
              }
            } else {
              style[styleName] = '';
            }
          }
        }
      }
    };
    module.exports = CSSPropertyOperations;
  })($__require('16'));
});
$__System.registerDynamic('254', ['255'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var escapeTextContentForBrowser = $__require('255');
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }
  module.exports = quoteAttributeValueForBrowser;
});
$__System.registerDynamic('256', ['246', '23c', '253', '254', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('246');
    var ReactDOMComponentTree = $__require('23c');
    var ReactInstrumentation = $__require('253');
    var quoteAttributeValueForBrowser = $__require('254');
    var warning = $__require('16a');
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
      if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
        return true;
      }
      if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
        return false;
      }
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }
      illegalAttributeNameCache[attributeName] = true;
      'production' !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
      return false;
    }
    function shouldIgnoreValue(propertyInfo, value) {
      return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
    }
    var DOMPropertyOperations = {
      createMarkupForID: function (id) {
        return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
      },
      setAttributeForID: function (node, id) {
        node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
      },
      createMarkupForRoot: function () {
        return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
      },
      setAttributeForRoot: function (node) {
        node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
      },
      createMarkupForProperty: function (name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          if (shouldIgnoreValue(propertyInfo, value)) {
            return '';
          }
          var attributeName = propertyInfo.attributeName;
          if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            return attributeName + '=""';
          }
          return attributeName + '=' + quoteAttributeValueForBrowser(value);
        } else if (DOMProperty.isCustomAttribute(name)) {
          if (value == null) {
            return '';
          }
          return name + '=' + quoteAttributeValueForBrowser(value);
        }
        return null;
      },
      createMarkupForCustomAttribute: function (name, value) {
        if (!isAttributeNameSafe(name) || value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      },
      setValueForProperty: function (node, name, value) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, value);
          } else if (shouldIgnoreValue(propertyInfo, value)) {
            this.deleteValueForProperty(node, name);
            return;
          } else if (propertyInfo.mustUseProperty) {
            node[propertyInfo.propertyName] = value;
          } else {
            var attributeName = propertyInfo.attributeName;
            var namespace = propertyInfo.attributeNamespace;
            if (namespace) {
              node.setAttributeNS(namespace, attributeName, '' + value);
            } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
              node.setAttribute(attributeName, '');
            } else {
              node.setAttribute(attributeName, '' + value);
            }
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          DOMPropertyOperations.setValueForAttribute(node, name, value);
          return;
        }
        if ('production' !== 'production') {
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'update attribute',
            payload: payload
          });
        }
      },
      setValueForAttribute: function (node, name, value) {
        if (!isAttributeNameSafe(name)) {
          return;
        }
        if (value == null) {
          node.removeAttribute(name);
        } else {
          node.setAttribute(name, '' + value);
        }
        if ('production' !== 'production') {
          var payload = {};
          payload[name] = value;
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'update attribute',
            payload: payload
          });
        }
      },
      deleteValueForAttribute: function (node, name) {
        node.removeAttribute(name);
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'remove attribute',
            payload: name
          });
        }
      },
      deleteValueForProperty: function (node, name) {
        var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
        if (propertyInfo) {
          var mutationMethod = propertyInfo.mutationMethod;
          if (mutationMethod) {
            mutationMethod(node, undefined);
          } else if (propertyInfo.mustUseProperty) {
            var propName = propertyInfo.propertyName;
            if (propertyInfo.hasBooleanValue) {
              node[propName] = false;
            } else {
              node[propName] = '';
            }
          } else {
            node.removeAttribute(propertyInfo.attributeName);
          }
        } else if (DOMProperty.isCustomAttribute(name)) {
          node.removeAttribute(name);
        }
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
            type: 'remove attribute',
            payload: name
          });
        }
      }
    };
    module.exports = DOMPropertyOperations;
  })($__require('16'));
});
$__System.registerDynamic('257', ['258', '165', '256', '259', '23c', '23d', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var DOMPropertyOperations = $__require('256');
    var LinkedValueUtils = $__require('259');
    var ReactDOMComponentTree = $__require('23c');
    var ReactUpdates = $__require('23d');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var didWarnValueLink = false;
    var didWarnCheckedLink = false;
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMInput.updateWrapper(this);
      }
    }
    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    var ReactDOMInput = {
      getHostProps: function (inst, props) {
        var value = LinkedValueUtils.getValue(props);
        var checked = LinkedValueUtils.getChecked(props);
        var hostProps = _assign({
          type: undefined,
          step: undefined,
          min: undefined,
          max: undefined
        }, props, {
          defaultChecked: undefined,
          defaultValue: undefined,
          value: value != null ? value : inst._wrapperState.initialValue,
          checked: checked != null ? checked : inst._wrapperState.initialChecked,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
          var owner = inst._currentElement._owner;
          if (props.valueLink !== undefined && !didWarnValueLink) {
            'production' !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.checkedLink !== undefined && !didWarnCheckedLink) {
            'production' !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnCheckedLink = true;
          }
          if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            'production' !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnCheckedDefaultChecked = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            'production' !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnValueDefaultValue = true;
          }
        }
        var defaultValue = props.defaultValue;
        inst._wrapperState = {
          initialChecked: props.checked != null ? props.checked : props.defaultChecked,
          initialValue: props.value != null ? props.value : defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst),
          controlled: isControlled(props)
        };
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        if ('production' !== 'production') {
          var controlled = isControlled(props);
          var owner = inst._currentElement._owner;
          if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            'production' !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnUncontrolledToControlled = true;
          }
          if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            'production' !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
            didWarnControlledToUncontrolled = true;
          }
        }
        var checked = props.checked;
        if (checked != null) {
          DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
        }
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          if (value === 0 && node.value === '') {
            node.value = '0';
          } else if (props.type === 'number') {
            var valueAsNumber = parseFloat(node.value, 10) || 0;
            if (value != valueAsNumber || value == valueAsNumber && node.value != value) {
              node.value = '' + value;
            }
          } else if (node.value !== '' + value) {
            node.value = '' + value;
          }
        } else {
          if (props.value == null && props.defaultValue != null) {
            if (node.defaultValue !== '' + props.defaultValue) {
              node.defaultValue = '' + props.defaultValue;
            }
          }
          if (props.checked == null && props.defaultChecked != null) {
            node.defaultChecked = !!props.defaultChecked;
          }
        }
      },
      postMountWrapper: function (inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        switch (props.type) {
          case 'submit':
          case 'reset':
            break;
          case 'color':
          case 'date':
          case 'datetime':
          case 'datetime-local':
          case 'month':
          case 'time':
          case 'week':
            node.value = '';
            node.value = node.defaultValue;
            break;
          default:
            node.value = node.value;
            break;
        }
        var name = node.name;
        if (name !== '') {
          node.name = '';
        }
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !node.defaultChecked;
        if (name !== '') {
          node.name = name;
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      var name = props.name;
      if (props.type === 'radio' && name != null) {
        var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
        var queryRoot = rootNode;
        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        }
        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];
          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          }
          var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
          !otherInstance ? 'production' !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
          ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
        }
      }
      return returnValue;
    }
    module.exports = ReactDOMInput;
  })($__require('16'));
});
$__System.registerDynamic('25a', ['165', '22f', '23c', '25b', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var React = $__require('22f');
    var ReactDOMComponentTree = $__require('23c');
    var ReactDOMSelect = $__require('25b');
    var warning = $__require('16a');
    var didWarnInvalidOptionChildren = false;
    function flattenChildren(children) {
      var content = '';
      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          content += child;
        } else if (!didWarnInvalidOptionChildren) {
          didWarnInvalidOptionChildren = true;
          'production' !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
        }
      });
      return content;
    }
    var ReactDOMOption = {
      mountWrapper: function (inst, props, hostParent) {
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
        }
        var selectValue = null;
        if (hostParent != null) {
          var selectParent = hostParent;
          if (selectParent._tag === 'optgroup') {
            selectParent = selectParent._hostParent;
          }
          if (selectParent != null && selectParent._tag === 'select') {
            selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
          }
        }
        var selected = null;
        if (selectValue != null) {
          var value;
          if (props.value != null) {
            value = props.value + '';
          } else {
            value = flattenChildren(props.children);
          }
          selected = false;
          if (Array.isArray(selectValue)) {
            for (var i = 0; i < selectValue.length; i++) {
              if ('' + selectValue[i] === value) {
                selected = true;
                break;
              }
            }
          } else {
            selected = '' + selectValue === value;
          }
        }
        inst._wrapperState = { selected: selected };
      },
      postMountWrapper: function (inst) {
        var props = inst._currentElement.props;
        if (props.value != null) {
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          node.setAttribute('value', props.value);
        }
      },
      getHostProps: function (inst, props) {
        var hostProps = _assign({
          selected: undefined,
          children: undefined
        }, props);
        if (inst._wrapperState.selected != null) {
          hostProps.selected = inst._wrapperState.selected;
        }
        var content = flattenChildren(props.children);
        if (content) {
          hostProps.children = content;
        }
        return hostProps;
      }
    };
    module.exports = ReactDOMOption;
  })($__require('16'));
});
$__System.registerDynamic('25b', ['165', '259', '23c', '23d', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var LinkedValueUtils = $__require('259');
    var ReactDOMComponentTree = $__require('23c');
    var ReactUpdates = $__require('23d');
    var warning = $__require('16a');
    var didWarnValueLink = false;
    var didWarnValueDefaultValue = false;
    function updateOptionsIfPendingUpdateAndMounted() {
      if (this._rootNodeID && this._wrapperState.pendingUpdate) {
        this._wrapperState.pendingUpdate = false;
        var props = this._currentElement.props;
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          updateOptions(this, Boolean(props.multiple), value);
        }
      }
    }
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var valuePropNames = ['value', 'defaultValue'];
    function checkSelectPropTypes(inst, props) {
      var owner = inst._currentElement._owner;
      LinkedValueUtils.checkPropTypes('select', props, owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        'production' !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];
        if (props[propName] == null) {
          continue;
        }
        var isArray = Array.isArray(props[propName]);
        if (props.multiple && !isArray) {
          'production' !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        } else if (!props.multiple && isArray) {
          'production' !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
        }
      }
    }
    function updateOptions(inst, multiple, propValue) {
      var selectedValue, i;
      var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
      if (multiple) {
        selectedValue = {};
        for (i = 0; i < propValue.length; i++) {
          selectedValue['' + propValue[i]] = true;
        }
        for (i = 0; i < options.length; i++) {
          var selected = selectedValue.hasOwnProperty(options[i].value);
          if (options[i].selected !== selected) {
            options[i].selected = selected;
          }
        }
      } else {
        selectedValue = '' + propValue;
        for (i = 0; i < options.length; i++) {
          if (options[i].value === selectedValue) {
            options[i].selected = true;
            return;
          }
        }
        if (options.length) {
          options[0].selected = true;
        }
      }
    }
    var ReactDOMSelect = {
      getHostProps: function (inst, props) {
        return _assign({}, props, {
          onChange: inst._wrapperState.onChange,
          value: undefined
        });
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          checkSelectPropTypes(inst, props);
        }
        var value = LinkedValueUtils.getValue(props);
        inst._wrapperState = {
          pendingUpdate: false,
          initialValue: value != null ? value : props.defaultValue,
          listeners: null,
          onChange: _handleChange.bind(inst),
          wasMultiple: Boolean(props.multiple)
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          'production' !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
          didWarnValueDefaultValue = true;
        }
      },
      getSelectValueContext: function (inst) {
        return inst._wrapperState.initialValue;
      },
      postUpdateWrapper: function (inst) {
        var props = inst._currentElement.props;
        inst._wrapperState.initialValue = undefined;
        var wasMultiple = inst._wrapperState.wasMultiple;
        inst._wrapperState.wasMultiple = Boolean(props.multiple);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          inst._wrapperState.pendingUpdate = false;
          updateOptions(inst, Boolean(props.multiple), value);
        } else if (wasMultiple !== Boolean(props.multiple)) {
          if (props.defaultValue != null) {
            updateOptions(inst, Boolean(props.multiple), props.defaultValue);
          } else {
            updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
          }
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      if (this._rootNodeID) {
        this._wrapperState.pendingUpdate = true;
      }
      ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMSelect;
  })($__require('16'));
});
$__System.registerDynamic('259', ['258', '25c', '25d', '22f', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactPropTypesSecret = $__require('25c');
    var propTypesFactory = $__require('25d');
    var React = $__require('22f');
    var PropTypes = propTypesFactory(React.isValidElement);
    var invariant = $__require('169');
    var warning = $__require('16a');
    var hasReadOnlyValue = {
      button: true,
      checkbox: true,
      image: true,
      hidden: true,
      radio: true,
      reset: true,
      submit: true
    };
    function _assertSingleLink(inputProps) {
      !(inputProps.checkedLink == null || inputProps.valueLink == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
    }
    function _assertValueLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.value == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
    }
    function _assertCheckedLink(inputProps) {
      _assertSingleLink(inputProps);
      !(inputProps.checked == null && inputProps.onChange == null) ? 'production' !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
    }
    var propTypes = {
      value: function (props, propName, componentName) {
        if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      checked: function (props, propName, componentName) {
        if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
          return null;
        }
        return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
      },
      onChange: PropTypes.func
    };
    var loggedTypeFailures = {};
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    var LinkedValueUtils = {
      checkPropTypes: function (tagName, props, owner) {
        for (var propName in propTypes) {
          if (propTypes.hasOwnProperty(propName)) {
            var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
          }
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var addendum = getDeclarationErrorAddendum(owner);
            'production' !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
          }
        }
      },
      getValue: function (inputProps) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.value;
        }
        return inputProps.value;
      },
      getChecked: function (inputProps) {
        if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.value;
        }
        return inputProps.checked;
      },
      executeOnChange: function (inputProps, event) {
        if (inputProps.valueLink) {
          _assertValueLink(inputProps);
          return inputProps.valueLink.requestChange(event.target.value);
        } else if (inputProps.checkedLink) {
          _assertCheckedLink(inputProps);
          return inputProps.checkedLink.requestChange(event.target.checked);
        } else if (inputProps.onChange) {
          return inputProps.onChange.call(undefined, event);
        }
      }
    };
    module.exports = LinkedValueUtils;
  })($__require('16'));
});
$__System.registerDynamic('25e', ['258', '165', '259', '23c', '23d', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var LinkedValueUtils = $__require('259');
    var ReactDOMComponentTree = $__require('23c');
    var ReactUpdates = $__require('23d');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var didWarnValueLink = false;
    var didWarnValDefaultVal = false;
    function forceUpdateIfMounted() {
      if (this._rootNodeID) {
        ReactDOMTextarea.updateWrapper(this);
      }
    }
    var ReactDOMTextarea = {
      getHostProps: function (inst, props) {
        !(props.dangerouslySetInnerHTML == null) ? 'production' !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
        var hostProps = _assign({}, props, {
          value: undefined,
          defaultValue: undefined,
          children: '' + inst._wrapperState.initialValue,
          onChange: inst._wrapperState.onChange
        });
        return hostProps;
      },
      mountWrapper: function (inst, props) {
        if ('production' !== 'production') {
          LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
          if (props.valueLink !== undefined && !didWarnValueLink) {
            'production' !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
            didWarnValueLink = true;
          }
          if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            'production' !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
            didWarnValDefaultVal = true;
          }
        }
        var value = LinkedValueUtils.getValue(props);
        var initialValue = value;
        if (value == null) {
          var defaultValue = props.defaultValue;
          var children = props.children;
          if (children != null) {
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
            }
            !(defaultValue == null) ? 'production' !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
            if (Array.isArray(children)) {
              !(children.length <= 1) ? 'production' !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
              children = children[0];
            }
            defaultValue = '' + children;
          }
          if (defaultValue == null) {
            defaultValue = '';
          }
          initialValue = defaultValue;
        }
        inst._wrapperState = {
          initialValue: '' + initialValue,
          listeners: null,
          onChange: _handleChange.bind(inst)
        };
      },
      updateWrapper: function (inst) {
        var props = inst._currentElement.props;
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var value = LinkedValueUtils.getValue(props);
        if (value != null) {
          var newValue = '' + value;
          if (newValue !== node.value) {
            node.value = newValue;
          }
          if (props.defaultValue == null) {
            node.defaultValue = newValue;
          }
        }
        if (props.defaultValue != null) {
          node.defaultValue = props.defaultValue;
        }
      },
      postMountWrapper: function (inst) {
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        var textContent = node.textContent;
        if (textContent === inst._wrapperState.initialValue) {
          node.value = textContent;
        }
      }
    };
    function _handleChange(event) {
      var props = this._currentElement.props;
      var returnValue = LinkedValueUtils.executeOnChange(props, event);
      ReactUpdates.asap(forceUpdateIfMounted, this);
      return returnValue;
    }
    module.exports = ReactDOMTextarea;
  })($__require('16'));
});
$__System.registerDynamic('25f', ['260', '261', '262', '263', '264', '16a', '265', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactReconciler = $__require('260');
    var instantiateReactComponent = $__require('261');
    var KeyEscapeUtils = $__require('262');
    var shouldUpdateReactComponent = $__require('263');
    var traverseAllChildren = $__require('264');
    var warning = $__require('16a');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('265');
    }
    function instantiateChild(childInstances, child, name, selfDebugID) {
      var keyUnique = childInstances[name] === undefined;
      if ('production' !== 'production') {
        if (!ReactComponentTreeHook) {
          ReactComponentTreeHook = $__require('265');
        }
        if (!keyUnique) {
          'production' !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
        }
      }
      if (child != null && keyUnique) {
        childInstances[name] = instantiateReactComponent(child, true);
      }
    }
    var ReactChildReconciler = {
      instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) {
        if (nestedChildNodes == null) {
          return null;
        }
        var childInstances = {};
        if ('production' !== 'production') {
          traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
            return instantiateChild(childInsts, child, name, selfDebugID);
          }, childInstances);
        } else {
          traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
        }
        return childInstances;
      },
      updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) {
        if (!nextChildren && !prevChildren) {
          return;
        }
        var name;
        var prevChild;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          prevChild = prevChildren && prevChildren[name];
          var prevElement = prevChild && prevChild._currentElement;
          var nextElement = nextChildren[name];
          if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
            ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
            nextChildren[name] = prevChild;
          } else {
            if (prevChild) {
              removedNodes[name] = ReactReconciler.getHostNode(prevChild);
              ReactReconciler.unmountComponent(prevChild, false);
            }
            var nextChildInstance = instantiateReactComponent(nextElement, true);
            nextChildren[name] = nextChildInstance;
            var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
            mountImages.push(nextChildMountImage);
          }
        }
        for (name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
            prevChild = prevChildren[name];
            removedNodes[name] = ReactReconciler.getHostNode(prevChild);
            ReactReconciler.unmountComponent(prevChild, false);
          }
        }
      },
      unmountChildren: function (renderedChildren, safely) {
        for (var name in renderedChildren) {
          if (renderedChildren.hasOwnProperty(name)) {
            var renderedChild = renderedChildren[name];
            ReactReconciler.unmountComponent(renderedChild, safely);
          }
        }
      }
    };
    module.exports = ReactChildReconciler;
  })($__require('16'));
});
$__System.registerDynamic('266', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var global = this || self,
      GLOBAL = global;
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;
});
$__System.registerDynamic('267', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;
});
$__System.registerDynamic('262', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  var global = this || self,
      GLOBAL = global;
  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;
});
$__System.registerDynamic('264', ['258', '268', '266', '267', '169', '262', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactCurrentOwner = $__require('268');
    var REACT_ELEMENT_TYPE = $__require('266');
    var getIteratorFn = $__require('267');
    var invariant = $__require('169');
    var KeyEscapeUtils = $__require('262');
    var warning = $__require('16a');
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var didWarnAboutMaps = false;
    function getComponentKey(component, index) {
      if (component && typeof component === 'object' && component.key != null) {
        return KeyEscapeUtils.escape(component.key);
      }
      return index.toString(36);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ('production' !== 'production') {
              var mapsAsChildrenAddendum = '';
              if (ReactCurrentOwner.current) {
                var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                if (mapsAsChildrenOwnerName) {
                  mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                }
              }
              'production' !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ('production' !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? 'production' !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('16'));
});
$__System.registerDynamic('269', ['262', '264', '16a', '265', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var KeyEscapeUtils = $__require('262');
    var traverseAllChildren = $__require('264');
    var warning = $__require('16a');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('265');
    }
    function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
      if (traverseContext && typeof traverseContext === 'object') {
        var result = traverseContext;
        var keyUnique = result[name] === undefined;
        if ('production' !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = $__require('265');
          }
          if (!keyUnique) {
            'production' !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
          }
        }
        if (keyUnique && child != null) {
          result[name] = child;
        }
      }
    }
    function flattenChildren(children, selfDebugID) {
      if (children == null) {
        return children;
      }
      var result = {};
      if ('production' !== 'production') {
        traverseAllChildren(children, function (traverseContext, child, name) {
          return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
        }, result);
      } else {
        traverseAllChildren(children, flattenSingleChildIntoContext, result);
      }
      return result;
    }
    module.exports = flattenChildren;
  })($__require('16'));
});
$__System.registerDynamic('26a', ['258', '26b', '26c', '253', '268', '260', '25f', '167', '269', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactComponentEnvironment = $__require('26b');
    var ReactInstanceMap = $__require('26c');
    var ReactInstrumentation = $__require('253');
    var ReactCurrentOwner = $__require('268');
    var ReactReconciler = $__require('260');
    var ReactChildReconciler = $__require('25f');
    var emptyFunction = $__require('167');
    var flattenChildren = $__require('269');
    var invariant = $__require('169');
    function makeInsertMarkup(markup, afterNode, toIndex) {
      return {
        type: 'INSERT_MARKUP',
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeMove(child, afterNode, toIndex) {
      return {
        type: 'MOVE_EXISTING',
        content: null,
        fromIndex: child._mountIndex,
        fromNode: ReactReconciler.getHostNode(child),
        toIndex: toIndex,
        afterNode: afterNode
      };
    }
    function makeRemove(child, node) {
      return {
        type: 'REMOVE_NODE',
        content: null,
        fromIndex: child._mountIndex,
        fromNode: node,
        toIndex: null,
        afterNode: null
      };
    }
    function makeSetMarkup(markup) {
      return {
        type: 'SET_MARKUP',
        content: markup,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function makeTextContent(textContent) {
      return {
        type: 'TEXT_CONTENT',
        content: textContent,
        fromIndex: null,
        fromNode: null,
        toIndex: null,
        afterNode: null
      };
    }
    function enqueue(queue, update) {
      if (update) {
        queue = queue || [];
        queue.push(update);
      }
      return queue;
    }
    function processQueue(inst, updateQueue) {
      ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
    }
    var setChildrenForInstrumentation = emptyFunction;
    if ('production' !== 'production') {
      var getDebugID = function (inst) {
        if (!inst._debugID) {
          var internal;
          if (internal = ReactInstanceMap.get(inst)) {
            inst = internal;
          }
        }
        return inst._debugID;
      };
      setChildrenForInstrumentation = function (children) {
        var debugID = getDebugID(this);
        if (debugID !== 0) {
          ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
            return children[key]._debugID;
          }) : []);
        }
      };
    }
    var ReactMultiChild = { Mixin: {
        _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
          if ('production' !== 'production') {
            var selfDebugID = getDebugID(this);
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
            }
          }
          return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
        },
        _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
          var nextChildren;
          var selfDebugID = 0;
          if ('production' !== 'production') {
            selfDebugID = getDebugID(this);
            if (this._currentElement) {
              try {
                ReactCurrentOwner.current = this._currentElement._owner;
                nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
              } finally {
                ReactCurrentOwner.current = null;
              }
              ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
              return nextChildren;
            }
          }
          nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        },
        mountChildren: function (nestedChildren, transaction, context) {
          var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
          this._renderedChildren = children;
          var mountImages = [];
          var index = 0;
          for (var name in children) {
            if (children.hasOwnProperty(name)) {
              var child = children[name];
              var selfDebugID = 0;
              if ('production' !== 'production') {
                selfDebugID = getDebugID(this);
              }
              var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
              child._mountIndex = index++;
              mountImages.push(mountImage);
            }
          }
          if ('production' !== 'production') {
            setChildrenForInstrumentation.call(this, children);
          }
          return mountImages;
        },
        updateTextContent: function (nextContent) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? 'production' !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeTextContent(nextContent)];
          processQueue(this, updates);
        },
        updateMarkup: function (nextMarkup) {
          var prevChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(prevChildren, false);
          for (var name in prevChildren) {
            if (prevChildren.hasOwnProperty(name)) {
              !false ? 'production' !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
            }
          }
          var updates = [makeSetMarkup(nextMarkup)];
          processQueue(this, updates);
        },
        updateChildren: function (nextNestedChildrenElements, transaction, context) {
          this._updateChildren(nextNestedChildrenElements, transaction, context);
        },
        _updateChildren: function (nextNestedChildrenElements, transaction, context) {
          var prevChildren = this._renderedChildren;
          var removedNodes = {};
          var mountImages = [];
          var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
          if (!nextChildren && !prevChildren) {
            return;
          }
          var updates = null;
          var name;
          var nextIndex = 0;
          var lastIndex = 0;
          var nextMountIndex = 0;
          var lastPlacedNode = null;
          for (name in nextChildren) {
            if (!nextChildren.hasOwnProperty(name)) {
              continue;
            }
            var prevChild = prevChildren && prevChildren[name];
            var nextChild = nextChildren[name];
            if (prevChild === nextChild) {
              updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              prevChild._mountIndex = nextIndex;
            } else {
              if (prevChild) {
                lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              }
              updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
              nextMountIndex++;
            }
            nextIndex++;
            lastPlacedNode = ReactReconciler.getHostNode(nextChild);
          }
          for (name in removedNodes) {
            if (removedNodes.hasOwnProperty(name)) {
              updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
            }
          }
          if (updates) {
            processQueue(this, updates);
          }
          this._renderedChildren = nextChildren;
          if ('production' !== 'production') {
            setChildrenForInstrumentation.call(this, nextChildren);
          }
        },
        unmountChildren: function (safely) {
          var renderedChildren = this._renderedChildren;
          ReactChildReconciler.unmountChildren(renderedChildren, safely);
          this._renderedChildren = null;
        },
        moveChild: function (child, afterNode, toIndex, lastIndex) {
          if (child._mountIndex < lastIndex) {
            return makeMove(child, afterNode, toIndex);
          }
        },
        createChild: function (child, afterNode, mountImage) {
          return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
        },
        removeChild: function (child, node) {
          return makeRemove(child, node);
        },
        _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
          child._mountIndex = index;
          return this.createChild(child, afterNode, mountImage);
        },
        _unmountChild: function (child, node) {
          var update = this.removeChild(child, node);
          child._mountIndex = null;
          return update;
        }
      } };
    module.exports = ReactMultiChild;
  })($__require('16'));
});
$__System.registerDynamic('26d', ['26e', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var ReactUpdateQueue = $__require('26e');
    var warning = $__require('16a');
    function warnNoop(publicInstance, callerName) {
      if ('production' !== 'production') {
        var constructor = publicInstance.constructor;
        'production' !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactServerUpdateQueue = function () {
      function ReactServerUpdateQueue(transaction) {
        _classCallCheck(this, ReactServerUpdateQueue);
        this.transaction = transaction;
      }
      ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
        return false;
      };
      ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
        }
      };
      ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueForceUpdate(publicInstance);
        } else {
          warnNoop(publicInstance, 'forceUpdate');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
        } else {
          warnNoop(publicInstance, 'replaceState');
        }
      };
      ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
        if (this.transaction.isInTransaction()) {
          ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
        } else {
          warnNoop(publicInstance, 'setState');
        }
      };
      return ReactServerUpdateQueue;
    }();
    module.exports = ReactServerUpdateQueue;
  })($__require('16'));
});
$__System.registerDynamic('26f', ['165', '232', '270', '253', '26d', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var PooledClass = $__require('232');
    var Transaction = $__require('270');
    var ReactInstrumentation = $__require('253');
    var ReactServerUpdateQueue = $__require('26d');
    var TRANSACTION_WRAPPERS = [];
    if ('production' !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    var noopCallbackQueue = { enqueue: function () {} };
    function ReactServerRenderingTransaction(renderToStaticMarkup) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = renderToStaticMarkup;
      this.useCreateElement = false;
      this.updateQueue = new ReactServerUpdateQueue(this);
    }
    var Mixin = {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function () {
        return noopCallbackQueue;
      },
      getUpdateQueue: function () {
        return this.updateQueue;
      },
      destructor: function () {},
      checkpoint: function () {},
      rollback: function () {}
    };
    _assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);
    PooledClass.addPoolingTo(ReactServerRenderingTransaction);
    module.exports = ReactServerRenderingTransaction;
  })($__require('16'));
});
$__System.registerDynamic('23e', ['23c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMComponentTree = $__require('23c');
  function isCheckable(elem) {
    var type = elem.type;
    var nodeName = elem.nodeName;
    return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
  }
  function getTracker(inst) {
    return inst._wrapperState.valueTracker;
  }
  function attachTracker(inst, tracker) {
    inst._wrapperState.valueTracker = tracker;
  }
  function detachTracker(inst) {
    inst._wrapperState.valueTracker = null;
  }
  function getValueFromNode(node) {
    var value;
    if (node) {
      value = isCheckable(node) ? '' + node.checked : node.value;
    }
    return value;
  }
  var inputValueTracking = {
    _getTrackerFromNode: function (node) {
      return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
    },
    track: function (inst) {
      if (getTracker(inst)) {
        return;
      }
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField];
      if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }
      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable,
        configurable: true,
        get: function () {
          return descriptor.get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          descriptor.set.call(this, value);
        }
      });
      attachTracker(inst, {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(inst);
          delete node[valueField];
        }
      });
    },
    updateValueIfChanged: function (inst) {
      if (!inst) {
        return false;
      }
      var tracker = getTracker(inst);
      if (!tracker) {
        inputValueTracking.track(inst);
        return true;
      }
      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));
      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }
      return false;
    },
    stopTracking: function (inst) {
      var tracker = getTracker(inst);
      if (tracker) {
        tracker.stopTracking();
      }
    }
  };
  module.exports = inputValueTracking;
});
$__System.registerDynamic('271', ['258', '165', '24a', '252', '272', '273', '246', '256', '23b', '274', '275', '276', '23c', '257', '25a', '25b', '25e', '253', '26a', '26f', '167', '255', '169', '240', '278', '23e', '277', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var AutoFocusUtils = $__require('24a');
    var CSSPropertyOperations = $__require('252');
    var DOMLazyTree = $__require('272');
    var DOMNamespaces = $__require('273');
    var DOMProperty = $__require('246');
    var DOMPropertyOperations = $__require('256');
    var EventPluginHub = $__require('23b');
    var EventPluginRegistry = $__require('274');
    var ReactBrowserEventEmitter = $__require('275');
    var ReactDOMComponentFlags = $__require('276');
    var ReactDOMComponentTree = $__require('23c');
    var ReactDOMInput = $__require('257');
    var ReactDOMOption = $__require('25a');
    var ReactDOMSelect = $__require('25b');
    var ReactDOMTextarea = $__require('25e');
    var ReactInstrumentation = $__require('253');
    var ReactMultiChild = $__require('26a');
    var ReactServerRenderingTransaction = $__require('26f');
    var emptyFunction = $__require('167');
    var escapeTextContentForBrowser = $__require('255');
    var invariant = $__require('169');
    var isEventSupported = $__require('240');
    var shallowEqual = $__require('278');
    var inputValueTracking = $__require('23e');
    var validateDOMNesting = $__require('277');
    var warning = $__require('16a');
    var Flags = ReactDOMComponentFlags;
    var deleteListener = EventPluginHub.deleteListener;
    var getNode = ReactDOMComponentTree.getNodeFromInstance;
    var listenTo = ReactBrowserEventEmitter.listenTo;
    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    var CONTENT_TYPES = {
      string: true,
      number: true
    };
    var STYLE = 'style';
    var HTML = '__html';
    var RESERVED_PROPS = {
      children: null,
      dangerouslySetInnerHTML: null,
      suppressContentEditableWarning: null
    };
    var DOC_FRAGMENT_TYPE = 11;
    function getDeclarationErrorAddendum(internalInstance) {
      if (internalInstance) {
        var owner = internalInstance._currentElement._owner || null;
        if (owner) {
          var name = owner.getName();
          if (name) {
            return ' This DOM node was rendered by `' + name + '`.';
          }
        }
      }
      return '';
    }
    function friendlyStringify(obj) {
      if (typeof obj === 'object') {
        if (Array.isArray(obj)) {
          return '[' + obj.map(friendlyStringify).join(', ') + ']';
        } else {
          var pairs = [];
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
              pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
            }
          }
          return '{' + pairs.join(', ') + '}';
        }
      } else if (typeof obj === 'string') {
        return JSON.stringify(obj);
      } else if (typeof obj === 'function') {
        return '[function object]';
      }
      return String(obj);
    }
    var styleMutationWarning = {};
    function checkAndWarnForMutatedStyle(style1, style2, component) {
      if (style1 == null || style2 == null) {
        return;
      }
      if (shallowEqual(style1, style2)) {
        return;
      }
      var componentName = component._tag;
      var owner = component._currentElement._owner;
      var ownerName;
      if (owner) {
        ownerName = owner.getName();
      }
      var hash = ownerName + '|' + componentName;
      if (styleMutationWarning.hasOwnProperty(hash)) {
        return;
      }
      styleMutationWarning[hash] = true;
      'production' !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
    }
    function assertValidProps(component, props) {
      if (!props) {
        return;
      }
      if (voidElementTags[component._tag]) {
        !(props.children == null && props.dangerouslySetInnerHTML == null) ? 'production' !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
      }
      if (props.dangerouslySetInnerHTML != null) {
        !(props.children == null) ? 'production' !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
        !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? 'production' !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
        'production' !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
        'production' !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
      }
      !(props.style == null || typeof props.style === 'object') ? 'production' !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
    }
    function enqueuePutListener(inst, registrationName, listener, transaction) {
      if (transaction instanceof ReactServerRenderingTransaction) {
        return;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
      }
      var containerInfo = inst._hostContainerInfo;
      var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
      var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
      listenTo(registrationName, doc);
      transaction.getReactMountReady().enqueue(putListener, {
        inst: inst,
        registrationName: registrationName,
        listener: listener
      });
    }
    function putListener() {
      var listenerToPut = this;
      EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
    }
    function inputPostMount() {
      var inst = this;
      ReactDOMInput.postMountWrapper(inst);
    }
    function textareaPostMount() {
      var inst = this;
      ReactDOMTextarea.postMountWrapper(inst);
    }
    function optionPostMount() {
      var inst = this;
      ReactDOMOption.postMountWrapper(inst);
    }
    var setAndValidateContentChildDev = emptyFunction;
    if ('production' !== 'production') {
      setAndValidateContentChildDev = function (content) {
        var hasExistingContent = this._contentDebugID != null;
        var debugID = this._debugID;
        var contentDebugID = -debugID;
        if (content == null) {
          if (hasExistingContent) {
            ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
          }
          this._contentDebugID = null;
          return;
        }
        validateDOMNesting(null, String(content), this, this._ancestorInfo);
        this._contentDebugID = contentDebugID;
        if (hasExistingContent) {
          ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
          ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
        } else {
          ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
          ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
          ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
        }
      };
    }
    var mediaEvents = {
      topAbort: 'abort',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTimeUpdate: 'timeupdate',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting'
    };
    function trackInputValue() {
      inputValueTracking.track(this);
    }
    function trapBubbledEventsLocal() {
      var inst = this;
      !inst._rootNodeID ? 'production' !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
      var node = getNode(inst);
      !node ? 'production' !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
      switch (inst._tag) {
        case 'iframe':
        case 'object':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
          break;
        case 'video':
        case 'audio':
          inst._wrapperState.listeners = [];
          for (var event in mediaEvents) {
            if (mediaEvents.hasOwnProperty(event)) {
              inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
            }
          }
          break;
        case 'source':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
          break;
        case 'img':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
          break;
        case 'form':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
          break;
        case 'input':
        case 'select':
        case 'textarea':
          inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
          break;
      }
    }
    function postUpdateSelectWrapper() {
      ReactDOMSelect.postUpdateWrapper(this);
    }
    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true
    };
    var newlineEatingTags = {
      listing: true,
      pre: true,
      textarea: true
    };
    var voidElementTags = _assign({ menuitem: true }, omittedCloseTags);
    var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
    var validatedTagCache = {};
    var hasOwnProperty = {}.hasOwnProperty;
    function validateDangerousTag(tag) {
      if (!hasOwnProperty.call(validatedTagCache, tag)) {
        !VALID_TAG_REGEX.test(tag) ? 'production' !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
        validatedTagCache[tag] = true;
      }
    }
    function isCustomComponent(tagName, props) {
      return tagName.indexOf('-') >= 0 || props.is != null;
    }
    var globalIdCounter = 1;
    function ReactDOMComponent(element) {
      var tag = element.type;
      validateDangerousTag(tag);
      this._currentElement = element;
      this._tag = tag.toLowerCase();
      this._namespaceURI = null;
      this._renderedChildren = null;
      this._previousStyle = null;
      this._previousStyleCopy = null;
      this._hostNode = null;
      this._hostParent = null;
      this._rootNodeID = 0;
      this._domID = 0;
      this._hostContainerInfo = null;
      this._wrapperState = null;
      this._topLevelWrapper = null;
      this._flags = 0;
      if ('production' !== 'production') {
        this._ancestorInfo = null;
        setAndValidateContentChildDev.call(this, null);
      }
    }
    ReactDOMComponent.displayName = 'ReactDOMComponent';
    ReactDOMComponent.Mixin = {
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        this._rootNodeID = globalIdCounter++;
        this._domID = hostContainerInfo._idCounter++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var props = this._currentElement.props;
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            this._wrapperState = { listeners: null };
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'input':
            ReactDOMInput.mountWrapper(this, props, hostParent);
            props = ReactDOMInput.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trackInputValue, this);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'option':
            ReactDOMOption.mountWrapper(this, props, hostParent);
            props = ReactDOMOption.getHostProps(this, props);
            break;
          case 'select':
            ReactDOMSelect.mountWrapper(this, props, hostParent);
            props = ReactDOMSelect.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
          case 'textarea':
            ReactDOMTextarea.mountWrapper(this, props, hostParent);
            props = ReactDOMTextarea.getHostProps(this, props);
            transaction.getReactMountReady().enqueue(trackInputValue, this);
            transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
            break;
        }
        assertValidProps(this, props);
        var namespaceURI;
        var parentTag;
        if (hostParent != null) {
          namespaceURI = hostParent._namespaceURI;
          parentTag = hostParent._tag;
        } else if (hostContainerInfo._tag) {
          namespaceURI = hostContainerInfo._namespaceURI;
          parentTag = hostContainerInfo._tag;
        }
        if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
          namespaceURI = DOMNamespaces.html;
        }
        if (namespaceURI === DOMNamespaces.html) {
          if (this._tag === 'svg') {
            namespaceURI = DOMNamespaces.svg;
          } else if (this._tag === 'math') {
            namespaceURI = DOMNamespaces.mathml;
          }
        }
        this._namespaceURI = namespaceURI;
        if ('production' !== 'production') {
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo._tag) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting(this._tag, null, this, parentInfo);
          }
          this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
        }
        var mountImage;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var el;
          if (namespaceURI === DOMNamespaces.html) {
            if (this._tag === 'script') {
              var div = ownerDocument.createElement('div');
              var type = this._currentElement.type;
              div.innerHTML = '<' + type + '></' + type + '>';
              el = div.removeChild(div.firstChild);
            } else if (props.is) {
              el = ownerDocument.createElement(this._currentElement.type, props.is);
            } else {
              el = ownerDocument.createElement(this._currentElement.type);
            }
          } else {
            el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
          }
          ReactDOMComponentTree.precacheNode(this, el);
          this._flags |= Flags.hasCachedChildNodes;
          if (!this._hostParent) {
            DOMPropertyOperations.setAttributeForRoot(el);
          }
          this._updateDOMProperties(null, props, transaction);
          var lazyTree = DOMLazyTree(el);
          this._createInitialChildren(transaction, props, context, lazyTree);
          mountImage = lazyTree;
        } else {
          var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
          var tagContent = this._createContentMarkup(transaction, props, context);
          if (!tagContent && omittedCloseTags[this._tag]) {
            mountImage = tagOpen + '/>';
          } else {
            mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
          }
        }
        switch (this._tag) {
          case 'input':
            transaction.getReactMountReady().enqueue(inputPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'textarea':
            transaction.getReactMountReady().enqueue(textareaPostMount, this);
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'select':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'button':
            if (props.autoFocus) {
              transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
            }
            break;
          case 'option':
            transaction.getReactMountReady().enqueue(optionPostMount, this);
            break;
        }
        return mountImage;
      },
      _createOpenTagMarkupAndPutListeners: function (transaction, props) {
        var ret = '<' + this._currentElement.type;
        for (var propKey in props) {
          if (!props.hasOwnProperty(propKey)) {
            continue;
          }
          var propValue = props[propKey];
          if (propValue == null) {
            continue;
          }
          if (registrationNameModules.hasOwnProperty(propKey)) {
            if (propValue) {
              enqueuePutListener(this, propKey, propValue, transaction);
            }
          } else {
            if (propKey === STYLE) {
              if (propValue) {
                if ('production' !== 'production') {
                  this._previousStyle = propValue;
                }
                propValue = this._previousStyleCopy = _assign({}, props.style);
              }
              propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
            }
            var markup = null;
            if (this._tag != null && isCustomComponent(this._tag, props)) {
              if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
                markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
              }
            } else {
              markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
            }
            if (markup) {
              ret += ' ' + markup;
            }
          }
        }
        if (transaction.renderToStaticMarkup) {
          return ret;
        }
        if (!this._hostParent) {
          ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
        }
        ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
        return ret;
      },
      _createContentMarkup: function (transaction, props, context) {
        var ret = '';
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            ret = innerHTML.__html;
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            ret = escapeTextContentForBrowser(contentToUse);
            if ('production' !== 'production') {
              setAndValidateContentChildDev.call(this, contentToUse);
            }
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            ret = mountImages.join('');
          }
        }
        if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
          return '\n' + ret;
        } else {
          return ret;
        }
      },
      _createInitialChildren: function (transaction, props, context, lazyTree) {
        var innerHTML = props.dangerouslySetInnerHTML;
        if (innerHTML != null) {
          if (innerHTML.__html != null) {
            DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
          }
        } else {
          var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
          var childrenToUse = contentToUse != null ? null : props.children;
          if (contentToUse != null) {
            if (contentToUse !== '') {
              if ('production' !== 'production') {
                setAndValidateContentChildDev.call(this, contentToUse);
              }
              DOMLazyTree.queueText(lazyTree, contentToUse);
            }
          } else if (childrenToUse != null) {
            var mountImages = this.mountChildren(childrenToUse, transaction, context);
            for (var i = 0; i < mountImages.length; i++) {
              DOMLazyTree.queueChild(lazyTree, mountImages[i]);
            }
          }
        }
      },
      receiveComponent: function (nextElement, transaction, context) {
        var prevElement = this._currentElement;
        this._currentElement = nextElement;
        this.updateComponent(transaction, prevElement, nextElement, context);
      },
      updateComponent: function (transaction, prevElement, nextElement, context) {
        var lastProps = prevElement.props;
        var nextProps = this._currentElement.props;
        switch (this._tag) {
          case 'input':
            lastProps = ReactDOMInput.getHostProps(this, lastProps);
            nextProps = ReactDOMInput.getHostProps(this, nextProps);
            break;
          case 'option':
            lastProps = ReactDOMOption.getHostProps(this, lastProps);
            nextProps = ReactDOMOption.getHostProps(this, nextProps);
            break;
          case 'select':
            lastProps = ReactDOMSelect.getHostProps(this, lastProps);
            nextProps = ReactDOMSelect.getHostProps(this, nextProps);
            break;
          case 'textarea':
            lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
            nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
            break;
        }
        assertValidProps(this, nextProps);
        this._updateDOMProperties(lastProps, nextProps, transaction);
        this._updateDOMChildren(lastProps, nextProps, transaction, context);
        switch (this._tag) {
          case 'input':
            ReactDOMInput.updateWrapper(this);
            inputValueTracking.updateValueIfChanged(this);
            break;
          case 'textarea':
            ReactDOMTextarea.updateWrapper(this);
            break;
          case 'select':
            transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
            break;
        }
      },
      _updateDOMProperties: function (lastProps, nextProps, transaction) {
        var propKey;
        var styleName;
        var styleUpdates;
        for (propKey in lastProps) {
          if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
            continue;
          }
          if (propKey === STYLE) {
            var lastStyle = this._previousStyleCopy;
            for (styleName in lastStyle) {
              if (lastStyle.hasOwnProperty(styleName)) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            this._previousStyleCopy = null;
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (lastProps[propKey]) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, lastProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
          }
        }
        for (propKey in nextProps) {
          var nextProp = nextProps[propKey];
          var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
          if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
            continue;
          }
          if (propKey === STYLE) {
            if (nextProp) {
              if ('production' !== 'production') {
                checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
                this._previousStyle = nextProp;
              }
              nextProp = this._previousStyleCopy = _assign({}, nextProp);
            } else {
              this._previousStyleCopy = null;
            }
            if (lastProp) {
              for (styleName in lastProp) {
                if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = '';
                }
              }
              for (styleName in nextProp) {
                if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                  styleUpdates = styleUpdates || {};
                  styleUpdates[styleName] = nextProp[styleName];
                }
              }
            } else {
              styleUpdates = nextProp;
            }
          } else if (registrationNameModules.hasOwnProperty(propKey)) {
            if (nextProp) {
              enqueuePutListener(this, propKey, nextProp, transaction);
            } else if (lastProp) {
              deleteListener(this, propKey);
            }
          } else if (isCustomComponent(this._tag, nextProps)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
            }
          } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
            var node = getNode(this);
            if (nextProp != null) {
              DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
            } else {
              DOMPropertyOperations.deleteValueForProperty(node, propKey);
            }
          }
        }
        if (styleUpdates) {
          CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
        }
      },
      _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
        var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
        var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
        var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
        var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
        var lastChildren = lastContent != null ? null : lastProps.children;
        var nextChildren = nextContent != null ? null : nextProps.children;
        var lastHasContentOrHtml = lastContent != null || lastHtml != null;
        var nextHasContentOrHtml = nextContent != null || nextHtml != null;
        if (lastChildren != null && nextChildren == null) {
          this.updateChildren(null, transaction, context);
        } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
          this.updateTextContent('');
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        }
        if (nextContent != null) {
          if (lastContent !== nextContent) {
            this.updateTextContent('' + nextContent);
            if ('production' !== 'production') {
              setAndValidateContentChildDev.call(this, nextContent);
            }
          }
        } else if (nextHtml != null) {
          if (lastHtml !== nextHtml) {
            this.updateMarkup('' + nextHtml);
          }
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
          }
        } else if (nextChildren != null) {
          if ('production' !== 'production') {
            setAndValidateContentChildDev.call(this, null);
          }
          this.updateChildren(nextChildren, transaction, context);
        }
      },
      getHostNode: function () {
        return getNode(this);
      },
      unmountComponent: function (safely) {
        switch (this._tag) {
          case 'audio':
          case 'form':
          case 'iframe':
          case 'img':
          case 'link':
          case 'object':
          case 'source':
          case 'video':
            var listeners = this._wrapperState.listeners;
            if (listeners) {
              for (var i = 0; i < listeners.length; i++) {
                listeners[i].remove();
              }
            }
            break;
          case 'input':
          case 'textarea':
            inputValueTracking.stopTracking(this);
            break;
          case 'html':
          case 'head':
          case 'body':
            !false ? 'production' !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
            break;
        }
        this.unmountChildren(safely);
        ReactDOMComponentTree.uncacheNode(this);
        EventPluginHub.deleteAllListeners(this);
        this._rootNodeID = 0;
        this._domID = 0;
        this._wrapperState = null;
        if ('production' !== 'production') {
          setAndValidateContentChildDev.call(this, null);
        }
      },
      getPublicInstance: function () {
        return getNode(this);
      }
    };
    _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
    module.exports = ReactDOMComponent;
  })($__require('16'));
});
$__System.registerDynamic('279', ['165', '272', '23c'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('165');
  var DOMLazyTree = $__require('272');
  var ReactDOMComponentTree = $__require('23c');
  var ReactDOMEmptyComponent = function (instantiate) {
    this._currentElement = null;
    this._hostNode = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._domID = 0;
  };
  _assign(ReactDOMEmptyComponent.prototype, {
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      var domID = hostContainerInfo._idCounter++;
      this._domID = domID;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;
      var nodeValue = ' react-empty: ' + this._domID + ' ';
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var node = ownerDocument.createComment(nodeValue);
        ReactDOMComponentTree.precacheNode(this, node);
        return DOMLazyTree(node);
      } else {
        if (transaction.renderToStaticMarkup) {
          return '';
        }
        return '<!--' + nodeValue + '-->';
      }
    },
    receiveComponent: function () {},
    getHostNode: function () {
      return ReactDOMComponentTree.getNodeFromInstance(this);
    },
    unmountComponent: function () {
      ReactDOMComponentTree.uncacheNode(this);
    }
  });
  module.exports = ReactDOMEmptyComponent;
});
$__System.registerDynamic('27a', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    function getLowestCommonAncestor(instA, instB) {
      !('_hostNode' in instA) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      !('_hostNode' in instB) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      var depthA = 0;
      for (var tempA = instA; tempA; tempA = tempA._hostParent) {
        depthA++;
      }
      var depthB = 0;
      for (var tempB = instB; tempB; tempB = tempB._hostParent) {
        depthB++;
      }
      while (depthA - depthB > 0) {
        instA = instA._hostParent;
        depthA--;
      }
      while (depthB - depthA > 0) {
        instB = instB._hostParent;
        depthB--;
      }
      var depth = depthA;
      while (depth--) {
        if (instA === instB) {
          return instA;
        }
        instA = instA._hostParent;
        instB = instB._hostParent;
      }
      return null;
    }
    function isAncestor(instA, instB) {
      !('_hostNode' in instA) ? 'production' !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      !('_hostNode' in instB) ? 'production' !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
      while (instB) {
        if (instB === instA) {
          return true;
        }
        instB = instB._hostParent;
      }
      return false;
    }
    function getParentInstance(inst) {
      !('_hostNode' in inst) ? 'production' !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
      return inst._hostParent;
    }
    function traverseTwoPhase(inst, fn, arg) {
      var path = [];
      while (inst) {
        path.push(inst);
        inst = inst._hostParent;
      }
      var i;
      for (i = path.length; i-- > 0;) {
        fn(path[i], 'captured', arg);
      }
      for (i = 0; i < path.length; i++) {
        fn(path[i], 'bubbled', arg);
      }
    }
    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];
      while (from && from !== common) {
        pathFrom.push(from);
        from = from._hostParent;
      }
      var pathTo = [];
      while (to && to !== common) {
        pathTo.push(to);
        to = to._hostParent;
      }
      var i;
      for (i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], 'bubbled', argFrom);
      }
      for (i = pathTo.length; i-- > 0;) {
        fn(pathTo[i], 'captured', argTo);
      }
    }
    module.exports = {
      isAncestor: isAncestor,
      getLowestCommonAncestor: getLowestCommonAncestor,
      getParentInstance: getParentInstance,
      traverseTwoPhase: traverseTwoPhase,
      traverseEnterLeave: traverseEnterLeave
    };
  })($__require('16'));
});
$__System.registerDynamic('27b', ['169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var invariant = $__require('169');
    function toArray(obj) {
      var length = obj.length;
      !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? 'production' !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
      !(typeof length === 'number') ? 'production' !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
      !(length === 0 || length - 1 in obj) ? 'production' !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
      !(typeof obj.callee !== 'function') ? 'production' !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
      if (obj.hasOwnProperty) {
        try {
          return Array.prototype.slice.call(obj);
        } catch (e) {}
      }
      var ret = Array(length);
      for (var ii = 0; ii < length; ii++) {
        ret[ii] = obj[ii];
      }
      return ret;
    }
    function hasArrayNature(obj) {
      return !!obj && (typeof obj == 'object' || typeof obj == 'function') && 'length' in obj && !('setInterval' in obj) && typeof obj.nodeType != 'number' && (Array.isArray(obj) || 'callee' in obj || 'item' in obj);
    }
    function createArrayFromMixed(obj) {
      if (!hasArrayNature(obj)) {
        return [obj];
      } else if (Array.isArray(obj)) {
        return obj.slice();
      } else {
        return toArray(obj);
      }
    }
    module.exports = createArrayFromMixed;
  })($__require('16'));
});
$__System.registerDynamic('27c', ['239', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('239');
    var invariant = $__require('169');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var shouldWrap = {};
    var selectWrap = [1, '<select multiple="true">', '</select>'];
    var tableWrap = [1, '<table>', '</table>'];
    var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
    var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
    var markupWrap = {
      '*': [1, '?<div>', '</div>'],
      'area': [1, '<map>', '</map>'],
      'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
      'legend': [1, '<fieldset>', '</fieldset>'],
      'param': [1, '<object>', '</object>'],
      'tr': [2, '<table><tbody>', '</tbody></table>'],
      'optgroup': selectWrap,
      'option': selectWrap,
      'caption': tableWrap,
      'colgroup': tableWrap,
      'tbody': tableWrap,
      'tfoot': tableWrap,
      'thead': tableWrap,
      'td': trWrap,
      'th': trWrap
    };
    var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
    svgElements.forEach(function (nodeName) {
      markupWrap[nodeName] = svgWrap;
      shouldWrap[nodeName] = true;
    });
    function getMarkupWrap(nodeName) {
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
      if (!markupWrap.hasOwnProperty(nodeName)) {
        nodeName = '*';
      }
      if (!shouldWrap.hasOwnProperty(nodeName)) {
        if (nodeName === '*') {
          dummyNode.innerHTML = '<link />';
        } else {
          dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
        }
        shouldWrap[nodeName] = !dummyNode.firstChild;
      }
      return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
    }
    module.exports = getMarkupWrap;
  })($__require('16'));
});
$__System.registerDynamic('27d', ['239', '27b', '27c', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('239');
    var createArrayFromMixed = $__require('27b');
    var getMarkupWrap = $__require('27c');
    var invariant = $__require('169');
    var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
    var nodeNamePattern = /^\s*<(\w+)/;
    function getNodeName(markup) {
      var nodeNameMatch = markup.match(nodeNamePattern);
      return nodeNameMatch && nodeNameMatch[1].toLowerCase();
    }
    function createNodesFromMarkup(markup, handleScript) {
      var node = dummyNode;
      !!!dummyNode ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
      var nodeName = getNodeName(markup);
      var wrap = nodeName && getMarkupWrap(nodeName);
      if (wrap) {
        node.innerHTML = wrap[1] + markup + wrap[2];
        var wrapDepth = wrap[0];
        while (wrapDepth--) {
          node = node.lastChild;
        }
      } else {
        node.innerHTML = markup;
      }
      var scripts = node.getElementsByTagName('script');
      if (scripts.length) {
        !handleScript ? 'production' !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
        createArrayFromMixed(scripts).forEach(handleScript);
      }
      var nodes = Array.from(node.childNodes);
      while (node.lastChild) {
        node.removeChild(node.lastChild);
      }
      return nodes;
    }
    module.exports = createNodesFromMarkup;
  })($__require('16'));
});
$__System.registerDynamic('27e', ['258', '272', '239', '27d', '167', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var DOMLazyTree = $__require('272');
    var ExecutionEnvironment = $__require('239');
    var createNodesFromMarkup = $__require('27d');
    var emptyFunction = $__require('167');
    var invariant = $__require('169');
    var Danger = { dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
        !ExecutionEnvironment.canUseDOM ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
        !markup ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
        !(oldChild.nodeName !== 'HTML') ? 'production' !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
        if (typeof markup === 'string') {
          var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
          oldChild.parentNode.replaceChild(newChild, oldChild);
        } else {
          DOMLazyTree.replaceChildWithTree(oldChild, markup);
        }
      } };
    module.exports = Danger;
  })($__require('16'));
});
$__System.registerDynamic('248', ['272', '27e', '23c', '253', '27f', '280', '281', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMLazyTree = $__require('272');
    var Danger = $__require('27e');
    var ReactDOMComponentTree = $__require('23c');
    var ReactInstrumentation = $__require('253');
    var createMicrosoftUnsafeLocalFunction = $__require('27f');
    var setInnerHTML = $__require('280');
    var setTextContent = $__require('281');
    function getNodeAfter(parentNode, node) {
      if (Array.isArray(node)) {
        node = node[1];
      }
      return node ? node.nextSibling : parentNode.firstChild;
    }
    var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
      parentNode.insertBefore(childNode, referenceNode);
    });
    function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
      DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
    }
    function moveChild(parentNode, childNode, referenceNode) {
      if (Array.isArray(childNode)) {
        moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
      } else {
        insertChildAt(parentNode, childNode, referenceNode);
      }
    }
    function removeChild(parentNode, childNode) {
      if (Array.isArray(childNode)) {
        var closingComment = childNode[1];
        childNode = childNode[0];
        removeDelimitedText(parentNode, childNode, closingComment);
        parentNode.removeChild(closingComment);
      }
      parentNode.removeChild(childNode);
    }
    function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
      var node = openingComment;
      while (true) {
        var nextNode = node.nextSibling;
        insertChildAt(parentNode, node, referenceNode);
        if (node === closingComment) {
          break;
        }
        node = nextNode;
      }
    }
    function removeDelimitedText(parentNode, startNode, closingComment) {
      while (true) {
        var node = startNode.nextSibling;
        if (node === closingComment) {
          break;
        } else {
          parentNode.removeChild(node);
        }
      }
    }
    function replaceDelimitedText(openingComment, closingComment, stringText) {
      var parentNode = openingComment.parentNode;
      var nodeAfterComment = openingComment.nextSibling;
      if (nodeAfterComment === closingComment) {
        if (stringText) {
          insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
        }
      } else {
        if (stringText) {
          setTextContent(nodeAfterComment, stringText);
          removeDelimitedText(parentNode, nodeAfterComment, closingComment);
        } else {
          removeDelimitedText(parentNode, openingComment, closingComment);
        }
      }
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
          type: 'replace text',
          payload: stringText
        });
      }
    }
    var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
    if ('production' !== 'production') {
      dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
        Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
        if (prevInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: prevInstance._debugID,
            type: 'replace with',
            payload: markup.toString()
          });
        } else {
          var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
          if (nextInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: nextInstance._debugID,
              type: 'mount',
              payload: markup.toString()
            });
          }
        }
      };
    }
    var DOMChildrenOperations = {
      dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
      replaceDelimitedText: replaceDelimitedText,
      processUpdates: function (parentNode, updates) {
        if ('production' !== 'production') {
          var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
        }
        for (var k = 0; k < updates.length; k++) {
          var update = updates[k];
          switch (update.type) {
            case 'INSERT_MARKUP':
              insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'insert child',
                  payload: {
                    toIndex: update.toIndex,
                    content: update.content.toString()
                  }
                });
              }
              break;
            case 'MOVE_EXISTING':
              moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'move child',
                  payload: {
                    fromIndex: update.fromIndex,
                    toIndex: update.toIndex
                  }
                });
              }
              break;
            case 'SET_MARKUP':
              setInnerHTML(parentNode, update.content);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'replace children',
                  payload: update.content.toString()
                });
              }
              break;
            case 'TEXT_CONTENT':
              setTextContent(parentNode, update.content);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'replace text',
                  payload: update.content.toString()
                });
              }
              break;
            case 'REMOVE_NODE':
              removeChild(parentNode, update.fromNode);
              if ('production' !== 'production') {
                ReactInstrumentation.debugTool.onHostOperation({
                  instanceID: parentNodeDebugID,
                  type: 'remove child',
                  payload: { fromIndex: update.fromIndex }
                });
              }
              break;
          }
        }
      }
    };
    module.exports = DOMChildrenOperations;
  })($__require('16'));
});
$__System.registerDynamic('282', ['258', '165', '248', '272', '23c', '255', '169', '277', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var DOMChildrenOperations = $__require('248');
    var DOMLazyTree = $__require('272');
    var ReactDOMComponentTree = $__require('23c');
    var escapeTextContentForBrowser = $__require('255');
    var invariant = $__require('169');
    var validateDOMNesting = $__require('277');
    var ReactDOMTextComponent = function (text) {
      this._currentElement = text;
      this._stringText = '' + text;
      this._hostNode = null;
      this._hostParent = null;
      this._domID = 0;
      this._mountIndex = 0;
      this._closingComment = null;
      this._commentNodes = null;
    };
    _assign(ReactDOMTextComponent.prototype, {
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        if ('production' !== 'production') {
          var parentInfo;
          if (hostParent != null) {
            parentInfo = hostParent._ancestorInfo;
          } else if (hostContainerInfo != null) {
            parentInfo = hostContainerInfo._ancestorInfo;
          }
          if (parentInfo) {
            validateDOMNesting(null, this._stringText, this, parentInfo);
          }
        }
        var domID = hostContainerInfo._idCounter++;
        var openingValue = ' react-text: ' + domID + ' ';
        var closingValue = ' /react-text ';
        this._domID = domID;
        this._hostParent = hostParent;
        if (transaction.useCreateElement) {
          var ownerDocument = hostContainerInfo._ownerDocument;
          var openingComment = ownerDocument.createComment(openingValue);
          var closingComment = ownerDocument.createComment(closingValue);
          var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
          if (this._stringText) {
            DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
          }
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
          ReactDOMComponentTree.precacheNode(this, openingComment);
          this._closingComment = closingComment;
          return lazyTree;
        } else {
          var escapedText = escapeTextContentForBrowser(this._stringText);
          if (transaction.renderToStaticMarkup) {
            return escapedText;
          }
          return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
        }
      },
      receiveComponent: function (nextText, transaction) {
        if (nextText !== this._currentElement) {
          this._currentElement = nextText;
          var nextStringText = '' + nextText;
          if (nextStringText !== this._stringText) {
            this._stringText = nextStringText;
            var commentNodes = this.getHostNode();
            DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
          }
        }
      },
      getHostNode: function () {
        var hostNode = this._commentNodes;
        if (hostNode) {
          return hostNode;
        }
        if (!this._closingComment) {
          var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
          var node = openingComment.nextSibling;
          while (true) {
            !(node != null) ? 'production' !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
            if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
              this._closingComment = node;
              break;
            }
            node = node.nextSibling;
          }
        }
        hostNode = [this._hostNode, this._closingComment];
        this._commentNodes = hostNode;
        return hostNode;
      },
      unmountComponent: function () {
        this._closingComment = null;
        this._commentNodes = null;
        ReactDOMComponentTree.uncacheNode(this);
      }
    });
    module.exports = ReactDOMTextComponent;
  })($__require('16'));
});
$__System.registerDynamic('283', ['165', '23d', '270', '167'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var _assign = $__require('165');
  var ReactUpdates = $__require('23d');
  var Transaction = $__require('270');
  var emptyFunction = $__require('167');
  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function () {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };
  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };
  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }
  _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, { getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    } });
  var transaction = new ReactDefaultBatchingStrategyTransaction();
  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,
    batchedUpdates: function (callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
      ReactDefaultBatchingStrategy.isBatchingUpdates = true;
      if (alreadyBatchingUpdates) {
        return callback(a, b, c, d, e);
      } else {
        return transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };
  module.exports = ReactDefaultBatchingStrategy;
});
$__System.registerDynamic('284', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  'use strict';

  /**
   * Gets the scroll position of the supplied element or window.
   *
   * The return values are unbounded, unlike `getScrollPosition`. This means they
   * may be negative or exceed the element boundaries (which is possible using
   * inertial scrolling).
   *
   * @param {DOMWindow|DOMElement} scrollable
   * @return {object} Map with `x` and `y` keys.
   */

  var global = this || self,
      GLOBAL = global;
  function getUnboundedScrollPosition(scrollable) {
    if (scrollable.Window && scrollable instanceof scrollable.Window) {
      return {
        x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
        y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }

  module.exports = getUnboundedScrollPosition;
});
$__System.registerDynamic('285', ['165', '286', '239', '232', '23c', '23d', '23f', '284', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var EventListener = $__require('286');
    var ExecutionEnvironment = $__require('239');
    var PooledClass = $__require('232');
    var ReactDOMComponentTree = $__require('23c');
    var ReactUpdates = $__require('23d');
    var getEventTarget = $__require('23f');
    var getUnboundedScrollPosition = $__require('284');
    function findParent(inst) {
      while (inst._hostParent) {
        inst = inst._hostParent;
      }
      var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
      var container = rootNode.parentNode;
      return ReactDOMComponentTree.getClosestInstanceFromNode(container);
    }
    function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
      this.topLevelType = topLevelType;
      this.nativeEvent = nativeEvent;
      this.ancestors = [];
    }
    _assign(TopLevelCallbackBookKeeping.prototype, { destructor: function () {
        this.topLevelType = null;
        this.nativeEvent = null;
        this.ancestors.length = 0;
      } });
    PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
    function handleTopLevelImpl(bookKeeping) {
      var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
      var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
      var ancestor = targetInst;
      do {
        bookKeeping.ancestors.push(ancestor);
        ancestor = ancestor && findParent(ancestor);
      } while (ancestor);
      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
      }
    }
    function scrollValueMonitor(cb) {
      var scrollPosition = getUnboundedScrollPosition(window);
      cb(scrollPosition);
    }
    var ReactEventListener = {
      _enabled: true,
      _handleTopLevel: null,
      WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
      setHandleTopLevel: function (handleTopLevel) {
        ReactEventListener._handleTopLevel = handleTopLevel;
      },
      setEnabled: function (enabled) {
        ReactEventListener._enabled = !!enabled;
      },
      isEnabled: function () {
        return ReactEventListener._enabled;
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
        if (!element) {
          return null;
        }
        return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
        if (!element) {
          return null;
        }
        return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
      },
      monitorScrollValue: function (refresh) {
        var callback = scrollValueMonitor.bind(null, refresh);
        EventListener.listen(window, 'scroll', callback);
      },
      dispatchEvent: function (topLevelType, nativeEvent) {
        if (!ReactEventListener._enabled) {
          return;
        }
        var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
        try {
          ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
        } finally {
          TopLevelCallbackBookKeeping.release(bookKeeping);
        }
      }
    };
    module.exports = ReactEventListener;
  })($__require('16'));
});
$__System.registerDynamic('287', ['246', '23b', '288', '26b', '289', '275', '28a', '23d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMProperty = $__require('246');
  var EventPluginHub = $__require('23b');
  var EventPluginUtils = $__require('288');
  var ReactComponentEnvironment = $__require('26b');
  var ReactEmptyComponent = $__require('289');
  var ReactBrowserEventEmitter = $__require('275');
  var ReactHostComponent = $__require('28a');
  var ReactUpdates = $__require('23d');
  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventPluginUtils: EventPluginUtils.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    HostComponent: ReactHostComponent.injection,
    Updates: ReactUpdates.injection
  };
  module.exports = ReactInjection;
});
$__System.registerDynamic('28b', ['165', '28c', '232', '275', '28d', '253', '270', '26e', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var CallbackQueue = $__require('28c');
    var PooledClass = $__require('232');
    var ReactBrowserEventEmitter = $__require('275');
    var ReactInputSelection = $__require('28d');
    var ReactInstrumentation = $__require('253');
    var Transaction = $__require('270');
    var ReactUpdateQueue = $__require('26e');
    var SELECTION_RESTORATION = {
      initialize: ReactInputSelection.getSelectionInformation,
      close: ReactInputSelection.restoreSelection
    };
    var EVENT_SUPPRESSION = {
      initialize: function () {
        var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
        ReactBrowserEventEmitter.setEnabled(false);
        return currentlyEnabled;
      },
      close: function (previouslyEnabled) {
        ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
      }
    };
    var ON_DOM_READY_QUEUEING = {
      initialize: function () {
        this.reactMountReady.reset();
      },
      close: function () {
        this.reactMountReady.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
    if ('production' !== 'production') {
      TRANSACTION_WRAPPERS.push({
        initialize: ReactInstrumentation.debugTool.onBeginFlush,
        close: ReactInstrumentation.debugTool.onEndFlush
      });
    }
    function ReactReconcileTransaction(useCreateElement) {
      this.reinitializeTransaction();
      this.renderToStaticMarkup = false;
      this.reactMountReady = CallbackQueue.getPooled(null);
      this.useCreateElement = useCreateElement;
    }
    var Mixin = {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      getReactMountReady: function () {
        return this.reactMountReady;
      },
      getUpdateQueue: function () {
        return ReactUpdateQueue;
      },
      checkpoint: function () {
        return this.reactMountReady.checkpoint();
      },
      rollback: function (checkpoint) {
        this.reactMountReady.rollback(checkpoint);
      },
      destructor: function () {
        CallbackQueue.release(this.reactMountReady);
        this.reactMountReady = null;
      }
    };
    _assign(ReactReconcileTransaction.prototype, Transaction, Mixin);
    PooledClass.addPoolingTo(ReactReconcileTransaction);
    module.exports = ReactReconcileTransaction;
  })($__require('16'));
});
$__System.registerDynamic('28e', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };

  // We use attributes for everything SVG so let's avoid some duplication and run
  // code instead.
  // The following are all specified in the HTML config already so we exclude here.
  // - class (as className)
  // - color
  // - height
  // - id
  // - lang
  // - max
  // - media
  // - method
  // - min
  // - name
  // - style
  // - target
  // - type
  // - width
  var ATTRS = {
    accentHeight: 'accent-height',
    accumulate: 0,
    additive: 0,
    alignmentBaseline: 'alignment-baseline',
    allowReorder: 'allowReorder',
    alphabetic: 0,
    amplitude: 0,
    arabicForm: 'arabic-form',
    ascent: 0,
    attributeName: 'attributeName',
    attributeType: 'attributeType',
    autoReverse: 'autoReverse',
    azimuth: 0,
    baseFrequency: 'baseFrequency',
    baseProfile: 'baseProfile',
    baselineShift: 'baseline-shift',
    bbox: 0,
    begin: 0,
    bias: 0,
    by: 0,
    calcMode: 'calcMode',
    capHeight: 'cap-height',
    clip: 0,
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    clipPathUnits: 'clipPathUnits',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    contentScriptType: 'contentScriptType',
    contentStyleType: 'contentStyleType',
    cursor: 0,
    cx: 0,
    cy: 0,
    d: 0,
    decelerate: 0,
    descent: 0,
    diffuseConstant: 'diffuseConstant',
    direction: 0,
    display: 0,
    divisor: 0,
    dominantBaseline: 'dominant-baseline',
    dur: 0,
    dx: 0,
    dy: 0,
    edgeMode: 'edgeMode',
    elevation: 0,
    enableBackground: 'enable-background',
    end: 0,
    exponent: 0,
    externalResourcesRequired: 'externalResourcesRequired',
    fill: 0,
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    filter: 0,
    filterRes: 'filterRes',
    filterUnits: 'filterUnits',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    focusable: 0,
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    format: 0,
    from: 0,
    fx: 0,
    fy: 0,
    g1: 0,
    g2: 0,
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    glyphRef: 'glyphRef',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    hanging: 0,
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    ideographic: 0,
    imageRendering: 'image-rendering',
    'in': 0,
    in2: 0,
    intercept: 0,
    k: 0,
    k1: 0,
    k2: 0,
    k3: 0,
    k4: 0,
    kernelMatrix: 'kernelMatrix',
    kernelUnitLength: 'kernelUnitLength',
    kerning: 0,
    keyPoints: 'keyPoints',
    keySplines: 'keySplines',
    keyTimes: 'keyTimes',
    lengthAdjust: 'lengthAdjust',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    limitingConeAngle: 'limitingConeAngle',
    local: 0,
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    markerHeight: 'markerHeight',
    markerUnits: 'markerUnits',
    markerWidth: 'markerWidth',
    mask: 0,
    maskContentUnits: 'maskContentUnits',
    maskUnits: 'maskUnits',
    mathematical: 0,
    mode: 0,
    numOctaves: 'numOctaves',
    offset: 0,
    opacity: 0,
    operator: 0,
    order: 0,
    orient: 0,
    orientation: 0,
    origin: 0,
    overflow: 0,
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pathLength: 'pathLength',
    patternContentUnits: 'patternContentUnits',
    patternTransform: 'patternTransform',
    patternUnits: 'patternUnits',
    pointerEvents: 'pointer-events',
    points: 0,
    pointsAtX: 'pointsAtX',
    pointsAtY: 'pointsAtY',
    pointsAtZ: 'pointsAtZ',
    preserveAlpha: 'preserveAlpha',
    preserveAspectRatio: 'preserveAspectRatio',
    primitiveUnits: 'primitiveUnits',
    r: 0,
    radius: 0,
    refX: 'refX',
    refY: 'refY',
    renderingIntent: 'rendering-intent',
    repeatCount: 'repeatCount',
    repeatDur: 'repeatDur',
    requiredExtensions: 'requiredExtensions',
    requiredFeatures: 'requiredFeatures',
    restart: 0,
    result: 0,
    rotate: 0,
    rx: 0,
    ry: 0,
    scale: 0,
    seed: 0,
    shapeRendering: 'shape-rendering',
    slope: 0,
    spacing: 0,
    specularConstant: 'specularConstant',
    specularExponent: 'specularExponent',
    speed: 0,
    spreadMethod: 'spreadMethod',
    startOffset: 'startOffset',
    stdDeviation: 'stdDeviation',
    stemh: 0,
    stemv: 0,
    stitchTiles: 'stitchTiles',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    string: 0,
    stroke: 0,
    strokeDasharray: 'stroke-dasharray',
    strokeDashoffset: 'stroke-dashoffset',
    strokeLinecap: 'stroke-linecap',
    strokeLinejoin: 'stroke-linejoin',
    strokeMiterlimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    surfaceScale: 'surfaceScale',
    systemLanguage: 'systemLanguage',
    tableValues: 'tableValues',
    targetX: 'targetX',
    targetY: 'targetY',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    textLength: 'textLength',
    to: 0,
    transform: 0,
    u1: 0,
    u2: 0,
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicode: 0,
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    values: 0,
    vectorEffect: 'vector-effect',
    version: 0,
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    viewBox: 'viewBox',
    viewTarget: 'viewTarget',
    visibility: 0,
    widths: 0,
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    x: 0,
    xHeight: 'x-height',
    x1: 0,
    x2: 0,
    xChannelSelector: 'xChannelSelector',
    xlinkActuate: 'xlink:actuate',
    xlinkArcrole: 'xlink:arcrole',
    xlinkHref: 'xlink:href',
    xlinkRole: 'xlink:role',
    xlinkShow: 'xlink:show',
    xlinkTitle: 'xlink:title',
    xlinkType: 'xlink:type',
    xmlBase: 'xml:base',
    xmlns: 0,
    xmlnsXlink: 'xmlns:xlink',
    xmlLang: 'xml:lang',
    xmlSpace: 'xml:space',
    y: 0,
    y1: 0,
    y2: 0,
    yChannelSelector: 'yChannelSelector',
    z: 0,
    zoomAndPan: 'zoomAndPan'
  };

  var SVGDOMPropertyConfig = {
    Properties: {},
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {}
  };

  Object.keys(ATTRS).forEach(function (key) {
    SVGDOMPropertyConfig.Properties[key] = 0;
    if (ATTRS[key]) {
      SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
    }
  });

  module.exports = SVGDOMPropertyConfig;
});
$__System.registerDynamic('28f', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * Given any node return the first leaf node without children.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {DOMElement|DOMTextNode}
   */

  var global = this || self,
      GLOBAL = global;
  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }

  /**
   * Get the next sibling within a container. This will walk up the
   * DOM if a node's siblings have been exhausted.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {?DOMElement|DOMTextNode}
   */
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }

  /**
   * Get object describing the nodes which contain characters at offset.
   *
   * @param {DOMElement|DOMTextNode} root
   * @param {number} offset
   * @return {?object}
   */
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;

    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;

        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }

        nodeStart = nodeEnd;
      }

      node = getLeafNode(getSiblingNode(node));
    }
  }

  module.exports = getNodeForCharacterOffset;
});
$__System.registerDynamic('233', ['239'], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');

  var contentKey = null;

  /**
   * Gets the key used to access text content on a DOM node.
   *
   * @return {?string} Key used to access text content.
   * @internal
   */
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      // Prefer textContent to innerText because many browsers support both but
      // SVG <text> elements don't support innerText even when <div> does.
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }

  module.exports = getTextContentAccessor;
});
$__System.registerDynamic('290', ['239', '28f', '233'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');
  var getNodeForCharacterOffset = $__require('28f');
  var getTextContentAccessor = $__require('233');
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);
    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;
    return {
      start: startOffset,
      end: endOffset
    };
  }
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();
    if (!selection || selection.rangeCount === 0) {
      return null;
    }
    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;
    var currentRange = selection.getRangeAt(0);
    try {
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
    } catch (e) {
      return null;
    }
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;
    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start, end;
    if (offsets.end === undefined) {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }
    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }
    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }
    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);
    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();
      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }
  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
  var ReactDOMSelection = {
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };
  module.exports = ReactDOMSelection;
});
$__System.registerDynamic('291', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM node.
   */

  var global = this || self,
      GLOBAL = global;
  function isNode(object) {
    var doc = object ? object.ownerDocument || object : document;
    var defaultView = doc.defaultView || window;
    return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }

  module.exports = isNode;
});
$__System.registerDynamic('292', ['291'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isNode = $__require('291');
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }
  module.exports = isTextNode;
});
$__System.registerDynamic('293', ['292'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var isTextNode = $__require('292');
  function containsNode(outerNode, innerNode) {
    if (!outerNode || !innerNode) {
      return false;
    } else if (outerNode === innerNode) {
      return true;
    } else if (isTextNode(outerNode)) {
      return false;
    } else if (isTextNode(innerNode)) {
      return containsNode(outerNode, innerNode.parentNode);
    } else if ('contains' in outerNode) {
      return outerNode.contains(innerNode);
    } else if (outerNode.compareDocumentPosition) {
      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
    } else {
      return false;
    }
  }
  module.exports = containsNode;
});
$__System.registerDynamic('24b', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * @param {DOMElement} node input/textarea to focus
   */

  var global = this || self,
      GLOBAL = global;
  function focusNode(node) {
    // IE8 can throw "Can't move focus to the control because it is invisible,
    // not enabled, or of a type that does not accept the focus." for all kinds of
    // reasons that are too expensive and fragile to test.
    try {
      node.focus();
    } catch (e) {}
  }

  module.exports = focusNode;
});
$__System.registerDynamic('28d', ['290', '293', '24b', '294'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMSelection = $__require('290');
  var containsNode = $__require('293');
  var focusNode = $__require('24b');
  var getActiveElement = $__require('294');
  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }
  var ReactInputSelection = {
    hasSelectionCapabilities: function (elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },
    getSelectionInformation: function () {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },
    restoreSelection: function (priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },
    getSelection: function (input) {
      var selection;
      if ('selectionStart' in input) {
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = document.selection.createRange();
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        selection = ReactDOMSelection.getOffsets(input);
      }
      return selection || {
        start: 0,
        end: 0
      };
    },
    setSelection: function (input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (end === undefined) {
        end = start;
      }
      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };
  module.exports = ReactInputSelection;
});
$__System.registerDynamic('294', [], true, function ($__require, exports, module) {
  /* */
  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /* eslint-disable fb-www/typeof-undefined */

  /**
   * Same as document.activeElement but wraps in a try-catch block. In IE it is
   * not safe to call document.activeElement if there is nothing focused.
   *
   * The activeElement will be null only if the document or document body is not
   * yet defined.
   *
   * @param {?DOMDocument} doc Defaults to current document.
   * @return {?DOMElement}
   */

  var global = this || self,
      GLOBAL = global;
  function getActiveElement(doc) /*?DOMElement*/{
    doc = doc || (typeof document !== 'undefined' ? document : undefined);
    if (typeof doc === 'undefined') {
      return null;
    }
    try {
      return doc.activeElement || doc.body;
    } catch (e) {
      return doc.body;
    }
  }

  module.exports = getActiveElement;
});
$__System.registerDynamic('241', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /**
   * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
   */

  var global = this || self,
      GLOBAL = global;
  var supportedInputTypes = {
    color: true,
    date: true,
    datetime: true,
    'datetime-local': true,
    email: true,
    month: true,
    number: true,
    password: true,
    range: true,
    search: true,
    tel: true,
    text: true,
    time: true,
    url: true,
    week: true
  };

  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

    if (nodeName === 'input') {
      return !!supportedInputTypes[elem.type];
    }

    if (nodeName === 'textarea') {
      return true;
    }

    return false;
  }

  module.exports = isTextInputElement;
});
$__System.registerDynamic('295', ['238', '239', '23c', '28d', '235', '294', '241', '278'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPropagators = $__require('238');
  var ExecutionEnvironment = $__require('239');
  var ReactDOMComponentTree = $__require('23c');
  var ReactInputSelection = $__require('28d');
  var SyntheticEvent = $__require('235');
  var getActiveElement = $__require('294');
  var isTextInputElement = $__require('241');
  var shallowEqual = $__require('278');
  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
  var eventTypes = { select: {
      phasedRegistrationNames: {
        bubbled: 'onSelect',
        captured: 'onSelectCapture'
      },
      dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
    } };
  var activeElement = null;
  var activeElementInst = null;
  var lastSelection = null;
  var mouseDown = false;
  var hasListener = false;
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;
      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;
      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
      return syntheticEvent;
    }
    return null;
  }
  var SelectEventPlugin = {
    eventTypes: eventTypes,
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }
      var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
      switch (topLevelType) {
        case 'topFocus':
          if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
            activeElement = targetNode;
            activeElementInst = targetInst;
            lastSelection = null;
          }
          break;
        case 'topBlur':
          activeElement = null;
          activeElementInst = null;
          lastSelection = null;
          break;
        case 'topMouseDown':
          mouseDown = true;
          break;
        case 'topContextMenu':
        case 'topMouseUp':
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);
        case 'topSelectionChange':
          if (skipSelectionChangeEvent) {
            break;
          }
        case 'topKeyDown':
        case 'topKeyUp':
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }
      return null;
    },
    didPutListener: function (inst, registrationName, listener) {
      if (registrationName === 'onSelect') {
        hasListener = true;
      }
    }
  };
  module.exports = SelectEventPlugin;
});
$__System.registerDynamic('286', ['167', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('167');
    var EventListener = {
      listen: function listen(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, false);
          return { remove: function remove() {
              target.removeEventListener(eventType, callback, false);
            } };
        } else if (target.attachEvent) {
          target.attachEvent('on' + eventType, callback);
          return { remove: function remove() {
              target.detachEvent('on' + eventType, callback);
            } };
        }
      },
      capture: function capture(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, true);
          return { remove: function remove() {
              target.removeEventListener(eventType, callback, true);
            } };
        } else {
          if ('production' !== 'production') {
            console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
          }
          return { remove: emptyFunction };
        }
      },
      registerDefault: function registerDefault() {}
    };
    module.exports = EventListener;
  })($__require('16'));
});
$__System.registerDynamic('238', ['23b', '288', '296', '297', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var EventPluginHub = $__require('23b');
    var EventPluginUtils = $__require('288');
    var accumulateInto = $__require('296');
    var forEachAccumulated = $__require('297');
    var warning = $__require('16a');
    var getListener = EventPluginHub.getListener;
    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    function accumulateDirectionalDispatches(inst, phase, event) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
      }
      var listener = listenerAtPhase(inst, event, phase);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        var targetInst = event._targetInst;
        var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
        EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
      }
    }
    function accumulateDispatches(inst, ignoredDirection, event) {
      if (event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);
        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }
    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }
    function accumulateTwoPhaseDispatchesSkipTarget(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
    }
    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }
    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    var EventPropagators = {
      accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
      accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
      accumulateDirectDispatches: accumulateDirectDispatches,
      accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
    };
    module.exports = EventPropagators;
  })($__require('16'));
});
$__System.registerDynamic('298', ['235'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var AnimationEventInterface = {
    animationName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
  module.exports = SyntheticAnimationEvent;
});
$__System.registerDynamic('299', ['235'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var ClipboardEventInterface = { clipboardData: function (event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    } };
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
  module.exports = SyntheticClipboardEvent;
});
$__System.registerDynamic('29a', ['29b'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('29b');
  var FocusEventInterface = { relatedTarget: null };
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
  module.exports = SyntheticFocusEvent;
});
$__System.registerDynamic('29c', ['29d'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var getEventCharCode = $__require('29d');
  var normalizeKey = {
    Esc: 'Escape',
    Spacebar: ' ',
    Left: 'ArrowLeft',
    Up: 'ArrowUp',
    Right: 'ArrowRight',
    Down: 'ArrowDown',
    Del: 'Delete',
    Win: 'OS',
    Menu: 'ContextMenu',
    Apps: 'ContextMenu',
    Scroll: 'ScrollLock',
    MozPrintableKey: 'Unidentified'
  };
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1',
    113: 'F2',
    114: 'F3',
    115: 'F4',
    116: 'F5',
    117: 'F6',
    118: 'F7',
    119: 'F8',
    120: 'F9',
    121: 'F10',
    122: 'F11',
    123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }
  module.exports = getEventKey;
});
$__System.registerDynamic('29e', ['29b', '29d', '29c', '29f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('29b');
  var getEventCharCode = $__require('29d');
  var getEventKey = $__require('29c');
  var getEventModifierState = $__require('29f');
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    charCode: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function (event) {
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function (event) {
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
  module.exports = SyntheticKeyboardEvent;
});
$__System.registerDynamic('2a0', ['244'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('244');
  var DragEventInterface = { dataTransfer: null };
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
  module.exports = SyntheticDragEvent;
});
$__System.registerDynamic('2a1', ['29b', '29f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('29b');
  var getEventModifierState = $__require('29f');
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
  module.exports = SyntheticTouchEvent;
});
$__System.registerDynamic('2a2', ['235'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var TransitionEventInterface = {
    propertyName: null,
    elapsedTime: null,
    pseudoElement: null
  };
  function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
  module.exports = SyntheticTransitionEvent;
});
$__System.registerDynamic('235', ['165', '232', '167', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var PooledClass = $__require('232');
    var emptyFunction = $__require('167');
    var warning = $__require('16a');
    var didWarnForAddedNewProperty = false;
    var isProxySupported = typeof Proxy === 'function';
    var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
    var EventInterface = {
      type: null,
      target: null,
      currentTarget: emptyFunction.thatReturnsNull,
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };
    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      if ('production' !== 'production') {
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }
        if ('production' !== 'production') {
          delete this[propName];
        }
        var normalize = Interface[propName];
        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }
      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
      if (defaultPrevented) {
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      } else {
        this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
      }
      this.isPropagationStopped = emptyFunction.thatReturnsFalse;
      return this;
    }
    _assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.preventDefault) {
          event.preventDefault();
        } else if (typeof event.returnValue !== 'unknown') {
          event.returnValue = false;
        }
        this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;
        if (!event) {
          return;
        }
        if (event.stopPropagation) {
          event.stopPropagation();
        } else if (typeof event.cancelBubble !== 'unknown') {
          event.cancelBubble = true;
        }
        this.isPropagationStopped = emptyFunction.thatReturnsTrue;
      },
      persist: function () {
        this.isPersistent = emptyFunction.thatReturnsTrue;
      },
      isPersistent: emptyFunction.thatReturnsFalse,
      destructor: function () {
        var Interface = this.constructor.Interface;
        for (var propName in Interface) {
          if ('production' !== 'production') {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          } else {
            this[propName] = null;
          }
        }
        for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
          this[shouldBeReleasedProperties[i]] = null;
        }
        if ('production' !== 'production') {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
        }
      }
    });
    SyntheticEvent.Interface = EventInterface;
    SyntheticEvent.augmentClass = function (Class, Interface) {
      var Super = this;
      var E = function () {};
      E.prototype = Super.prototype;
      var prototype = new E();
      _assign(prototype, Class.prototype);
      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.augmentClass = Super.augmentClass;
      PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
    };
    if ('production' !== 'production') {
      if (isProxySupported) {
        SyntheticEvent = new Proxy(SyntheticEvent, {
          construct: function (target, args) {
            return this.apply(target, Object.create(target.prototype), args);
          },
          apply: function (constructor, that, args) {
            return new Proxy(constructor.apply(that, args), { set: function (target, prop, value) {
                if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
                  'production' !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
                  didWarnForAddedNewProperty = true;
                }
                target[prop] = value;
                return true;
              } });
          }
        });
      }
    }
    PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
    module.exports = SyntheticEvent;
    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };
      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }
      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }
      function warn(action, result) {
        var warningCondition = false;
        'production' !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }
  })($__require('16'));
});
$__System.registerDynamic('23f', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * Gets the target node from a native browser event by accounting for
   * inconsistencies in browser DOM APIs.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {DOMEventTarget} Target node.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;

    // Normalize SVG <use> element events #4963
    if (target.correspondingUseElement) {
      target = target.correspondingUseElement;
    }

    // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
    // @see http://www.quirksmode.org/js/events_properties.html
    return target.nodeType === 3 ? target.parentNode : target;
  }

  module.exports = getEventTarget;
});
$__System.registerDynamic('29b', ['235', '23f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticEvent = $__require('235');
  var getEventTarget = $__require('23f');
  var UIEventInterface = {
    view: function (event) {
      if (event.view) {
        return event.view;
      }
      var target = getEventTarget(event);
      if (target.window === target) {
        return target;
      }
      var doc = target.ownerDocument;
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function (event) {
      return event.detail || 0;
    }
  };
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
  module.exports = SyntheticUIEvent;
});
$__System.registerDynamic('29f', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * Translation from modifier key to the associated property in the event.
   * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
   */

  var global = this || self,
      GLOBAL = global;
  var modifierKeyToProp = {
    Alt: 'altKey',
    Control: 'ctrlKey',
    Meta: 'metaKey',
    Shift: 'shiftKey'
  };

  // IE8 does not implement getModifierState so we simply map it to the only
  // modifier keys exposed by the event itself, does not support Lock-keys.
  // Currently, all major browsers except Chrome seems to support Lock-keys.
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }

  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }

  module.exports = getEventModifierState;
});
$__System.registerDynamic('244', ['29b', '2a3', '29f'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticUIEvent = $__require('29b');
  var ViewportMetrics = $__require('2a3');
  var getEventModifierState = $__require('29f');
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function (event) {
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function (event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    pageX: function (event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function (event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
  module.exports = SyntheticMouseEvent;
});
$__System.registerDynamic('2a4', ['244'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var SyntheticMouseEvent = $__require('244');
  var WheelEventInterface = {
    deltaX: function (event) {
      return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function (event) {
      return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,
    deltaMode: null
  };
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }
  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
  module.exports = SyntheticWheelEvent;
});
$__System.registerDynamic('29d', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * `charCode` represents the actual "character code" and is safe to use with
   * `String.fromCharCode`. As such, only keys that correspond to printable
   * characters produce a valid `charCode`, the only exception to this is Enter.
   * The Tab-key is considered non-printable and does not have a `charCode`,
   * presumably because it does not produce a tab-character in browsers.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {number} Normalized `charCode` property.
   */

  var global = this || self,
      GLOBAL = global;
  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;

    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;

      // FF does not set `charCode` for the Enter-key, check against `keyCode`.
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      // IE8 does not implement `charCode`, but `keyCode` has the correct value.
      charCode = keyCode;
    }

    // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
    // Must not discard the (non-)printable Enter-key.
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }

    return 0;
  }

  module.exports = getEventCharCode;
});
$__System.registerDynamic('2a5', ['258', '286', '238', '23c', '298', '299', '235', '29a', '29e', '244', '2a0', '2a1', '2a2', '29b', '2a4', '167', '29d', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var EventListener = $__require('286');
    var EventPropagators = $__require('238');
    var ReactDOMComponentTree = $__require('23c');
    var SyntheticAnimationEvent = $__require('298');
    var SyntheticClipboardEvent = $__require('299');
    var SyntheticEvent = $__require('235');
    var SyntheticFocusEvent = $__require('29a');
    var SyntheticKeyboardEvent = $__require('29e');
    var SyntheticMouseEvent = $__require('244');
    var SyntheticDragEvent = $__require('2a0');
    var SyntheticTouchEvent = $__require('2a1');
    var SyntheticTransitionEvent = $__require('2a2');
    var SyntheticUIEvent = $__require('29b');
    var SyntheticWheelEvent = $__require('2a4');
    var emptyFunction = $__require('167');
    var getEventCharCode = $__require('29d');
    var invariant = $__require('169');
    var eventTypes = {};
    var topLevelEventsToDispatchConfig = {};
    ['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
      var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
      var onEvent = 'on' + capitalizedEvent;
      var topEvent = 'top' + capitalizedEvent;
      var type = {
        phasedRegistrationNames: {
          bubbled: onEvent,
          captured: onEvent + 'Capture'
        },
        dependencies: [topEvent]
      };
      eventTypes[event] = type;
      topLevelEventsToDispatchConfig[topEvent] = type;
    });
    var onClickListeners = {};
    function getDictionaryKey(inst) {
      return '.' + inst._rootNodeID;
    }
    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
        if (!dispatchConfig) {
          return null;
        }
        var EventConstructor;
        switch (topLevelType) {
          case 'topAbort':
          case 'topCanPlay':
          case 'topCanPlayThrough':
          case 'topDurationChange':
          case 'topEmptied':
          case 'topEncrypted':
          case 'topEnded':
          case 'topError':
          case 'topInput':
          case 'topInvalid':
          case 'topLoad':
          case 'topLoadedData':
          case 'topLoadedMetadata':
          case 'topLoadStart':
          case 'topPause':
          case 'topPlay':
          case 'topPlaying':
          case 'topProgress':
          case 'topRateChange':
          case 'topReset':
          case 'topSeeked':
          case 'topSeeking':
          case 'topStalled':
          case 'topSubmit':
          case 'topSuspend':
          case 'topTimeUpdate':
          case 'topVolumeChange':
          case 'topWaiting':
            EventConstructor = SyntheticEvent;
            break;
          case 'topKeyPress':
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }
          case 'topKeyDown':
          case 'topKeyUp':
            EventConstructor = SyntheticKeyboardEvent;
            break;
          case 'topBlur':
          case 'topFocus':
            EventConstructor = SyntheticFocusEvent;
            break;
          case 'topClick':
            if (nativeEvent.button === 2) {
              return null;
            }
          case 'topDoubleClick':
          case 'topMouseDown':
          case 'topMouseMove':
          case 'topMouseUp':
          case 'topMouseOut':
          case 'topMouseOver':
          case 'topContextMenu':
            EventConstructor = SyntheticMouseEvent;
            break;
          case 'topDrag':
          case 'topDragEnd':
          case 'topDragEnter':
          case 'topDragExit':
          case 'topDragLeave':
          case 'topDragOver':
          case 'topDragStart':
          case 'topDrop':
            EventConstructor = SyntheticDragEvent;
            break;
          case 'topTouchCancel':
          case 'topTouchEnd':
          case 'topTouchMove':
          case 'topTouchStart':
            EventConstructor = SyntheticTouchEvent;
            break;
          case 'topAnimationEnd':
          case 'topAnimationIteration':
          case 'topAnimationStart':
            EventConstructor = SyntheticAnimationEvent;
            break;
          case 'topTransitionEnd':
            EventConstructor = SyntheticTransitionEvent;
            break;
          case 'topScroll':
            EventConstructor = SyntheticUIEvent;
            break;
          case 'topWheel':
            EventConstructor = SyntheticWheelEvent;
            break;
          case 'topCopy':
          case 'topCut':
          case 'topPaste':
            EventConstructor = SyntheticClipboardEvent;
            break;
        }
        !EventConstructor ? 'production' !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      },
      didPutListener: function (inst, registrationName, listener) {
        if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
          var key = getDictionaryKey(inst);
          var node = ReactDOMComponentTree.getNodeFromInstance(inst);
          if (!onClickListeners[key]) {
            onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
          }
        }
      },
      willDeleteListener: function (inst, registrationName) {
        if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
          var key = getDictionaryKey(inst);
          onClickListeners[key].remove();
          delete onClickListeners[key];
        }
      }
    };
    module.exports = SimpleEventPlugin;
  })($__require('16'));
});
$__System.registerDynamic('2a6', ['230', '237', '23a', '242', '243', '245', '249', '271', '23c', '279', '27a', '282', '283', '285', '287', '28b', '28e', '295', '2a5'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ARIADOMPropertyConfig = $__require('230');
  var BeforeInputEventPlugin = $__require('237');
  var ChangeEventPlugin = $__require('23a');
  var DefaultEventPluginOrder = $__require('242');
  var EnterLeaveEventPlugin = $__require('243');
  var HTMLDOMPropertyConfig = $__require('245');
  var ReactComponentBrowserEnvironment = $__require('249');
  var ReactDOMComponent = $__require('271');
  var ReactDOMComponentTree = $__require('23c');
  var ReactDOMEmptyComponent = $__require('279');
  var ReactDOMTreeTraversal = $__require('27a');
  var ReactDOMTextComponent = $__require('282');
  var ReactDefaultBatchingStrategy = $__require('283');
  var ReactEventListener = $__require('285');
  var ReactInjection = $__require('287');
  var ReactReconcileTransaction = $__require('28b');
  var SVGDOMPropertyConfig = $__require('28e');
  var SelectEventPlugin = $__require('295');
  var SimpleEventPlugin = $__require('2a5');
  var alreadyInjected = false;
  function inject() {
    if (alreadyInjected) {
      return;
    }
    alreadyInjected = true;
    ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
    ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
    ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
    ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
    ReactInjection.EventPluginHub.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });
    ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
    ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
    ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
      return new ReactDOMEmptyComponent(instantiate);
    });
    ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
    ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
    ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  }
  module.exports = { inject: inject };
});
$__System.registerDynamic('2a7', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = '15.6.2';
});
$__System.registerDynamic('2a8', ['258', '268', '23c', '26c', '2a9', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactCurrentOwner = $__require('268');
    var ReactDOMComponentTree = $__require('23c');
    var ReactInstanceMap = $__require('26c');
    var getHostComponentFromComposite = $__require('2a9');
    var invariant = $__require('169');
    var warning = $__require('16a');
    function findDOMNode(componentOrElement) {
      if ('production' !== 'production') {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
          'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
          owner._warnedAboutRefsInRender = true;
        }
      }
      if (componentOrElement == null) {
        return null;
      }
      if (componentOrElement.nodeType === 1) {
        return componentOrElement;
      }
      var inst = ReactInstanceMap.get(componentOrElement);
      if (inst) {
        inst = getHostComponentFromComposite(inst);
        return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
      }
      if (typeof componentOrElement.render === 'function') {
        !false ? 'production' !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
      } else {
        !false ? 'production' !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
      }
    }
    module.exports = findDOMNode;
  })($__require('16'));
});
$__System.registerDynamic('2a9', ['2aa'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactNodeTypes = $__require('2aa');
  function getHostComponentFromComposite(inst) {
    var type;
    while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
      inst = inst._renderedComponent;
    }
    if (type === ReactNodeTypes.HOST) {
      return inst._renderedComponent;
    } else if (type === ReactNodeTypes.EMPTY) {
      return null;
    }
  }
  module.exports = getHostComponentFromComposite;
});
$__System.registerDynamic('255', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2016-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * Based on the escape-html library, which is used under the MIT License below:
   *
   * Copyright (c) 2012-2013 TJ Holowaychuk
   * Copyright (c) 2015 Andreas Lubbe
   * Copyright (c) 2015 Tiancheng "Timothy" Gu
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * 'Software'), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
   * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
   * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *
   */

  'use strict';

  // code copied and modified from escape-html
  /**
   * Module variables.
   * @private
   */

  var global = this || self,
      GLOBAL = global;
  var matchHtmlRegExp = /["'&<>]/;

  /**
   * Escape special characters in the given string of html.
   *
   * @param  {string} string The string to escape for inserting into HTML
   * @return {string}
   * @public
   */

  function escapeHtml(string) {
    var str = '' + string;
    var match = matchHtmlRegExp.exec(str);

    if (!match) {
      return str;
    }

    var escape;
    var html = '';
    var index = 0;
    var lastIndex = 0;

    for (index = match.index; index < str.length; index++) {
      switch (str.charCodeAt(index)) {
        case 34:
          // "
          escape = '&quot;';
          break;
        case 38:
          // &
          escape = '&amp;';
          break;
        case 39:
          // '
          escape = '&#x27;'; // modified from escape-html; used to be '&#39'
          break;
        case 60:
          // <
          escape = '&lt;';
          break;
        case 62:
          // >
          escape = '&gt;';
          break;
        default:
          continue;
      }

      if (lastIndex !== index) {
        html += str.substring(lastIndex, index);
      }

      lastIndex = index + 1;
      html += escape;
    }

    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
  }
  // end code copied and modified from escape-html

  /**
   * Escapes text to prevent scripting attacks.
   *
   * @param {*} text Text value to escape.
   * @return {string} An escaped string.
   */
  function escapeTextContentForBrowser(text) {
    if (typeof text === 'boolean' || typeof text === 'number') {
      // this shortcircuit helps perf for types that we know will never have
      // special characters, especially given that this function is used often
      // for numeric dom ids.
      return '' + text;
    }
    return escapeHtml(text);
  }

  module.exports = escapeTextContentForBrowser;
});
$__System.registerDynamic('281', ['239', '255', '280'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');
  var escapeTextContentForBrowser = $__require('255');
  var setInnerHTML = $__require('280');
  var setTextContent = function (node, text) {
    if (text) {
      var firstChild = node.firstChild;
      if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
        firstChild.nodeValue = text;
        return;
      }
    }
    node.textContent = text;
  };
  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function (node, text) {
        if (node.nodeType === 3) {
          node.nodeValue = text;
          return;
        }
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }
  module.exports = setTextContent;
});
$__System.registerDynamic('272', ['273', '280', '27f', '281'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMNamespaces = $__require('273');
  var setInnerHTML = $__require('280');
  var createMicrosoftUnsafeLocalFunction = $__require('27f');
  var setTextContent = $__require('281');
  var ELEMENT_NODE_TYPE = 1;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
  var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
  function insertTreeChildren(tree) {
    if (!enableLazy) {
      return;
    }
    var node = tree.node;
    var children = tree.children;
    if (children.length) {
      for (var i = 0; i < children.length; i++) {
        insertTreeBefore(node, children[i], null);
      }
    } else if (tree.html != null) {
      setInnerHTML(node, tree.html);
    } else if (tree.text != null) {
      setTextContent(node, tree.text);
    }
  }
  var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
      insertTreeChildren(tree);
      parentNode.insertBefore(tree.node, referenceNode);
    } else {
      parentNode.insertBefore(tree.node, referenceNode);
      insertTreeChildren(tree);
    }
  });
  function replaceChildWithTree(oldNode, newTree) {
    oldNode.parentNode.replaceChild(newTree.node, oldNode);
    insertTreeChildren(newTree);
  }
  function queueChild(parentTree, childTree) {
    if (enableLazy) {
      parentTree.children.push(childTree);
    } else {
      parentTree.node.appendChild(childTree.node);
    }
  }
  function queueHTML(tree, html) {
    if (enableLazy) {
      tree.html = html;
    } else {
      setInnerHTML(tree.node, html);
    }
  }
  function queueText(tree, text) {
    if (enableLazy) {
      tree.text = text;
    } else {
      setTextContent(tree.node, text);
    }
  }
  function toString() {
    return this.node.nodeName;
  }
  function DOMLazyTree(node) {
    return {
      node: node,
      children: [],
      html: null,
      text: null,
      toString: toString
    };
  }
  DOMLazyTree.insertTreeBefore = insertTreeBefore;
  DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
  DOMLazyTree.queueChild = queueChild;
  DOMLazyTree.queueHTML = queueHTML;
  DOMLazyTree.queueText = queueText;
  module.exports = DOMLazyTree;
});
$__System.registerDynamic('288', ['258', '2ab', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactErrorUtils = $__require('2ab');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var ComponentTree;
    var TreeTraversal;
    var injection = {
      injectComponentTree: function (Injected) {
        ComponentTree = Injected;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
        }
      },
      injectTreeTraversal: function (Injected) {
        TreeTraversal = Injected;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
        }
      }
    };
    function isEndish(topLevelType) {
      return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
    }
    function isMoveish(topLevelType) {
      return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
    }
    function isStartish(topLevelType) {
      return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
    }
    var validateEventDispatches;
    if ('production' !== 'production') {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        'production' !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    function executeDispatch(event, simulated, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
      if (simulated) {
        ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
      } else {
        ReactErrorUtils.invokeGuardedCallback(type, listener, event);
      }
      event.currentTarget = null;
    }
    function executeDispatchesInOrder(event, simulated) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
      }
      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    function executeDispatchesInOrderStopAtTrueImpl(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          }
          if (dispatchListeners[i](event, dispatchInstances[i])) {
            return dispatchInstances[i];
          }
        }
      } else if (dispatchListeners) {
        if (dispatchListeners(event, dispatchInstances)) {
          return dispatchInstances;
        }
      }
      return null;
    }
    function executeDispatchesInOrderStopAtTrue(event) {
      var ret = executeDispatchesInOrderStopAtTrueImpl(event);
      event._dispatchInstances = null;
      event._dispatchListeners = null;
      return ret;
    }
    function executeDirectDispatch(event) {
      if ('production' !== 'production') {
        validateEventDispatches(event);
      }
      var dispatchListener = event._dispatchListeners;
      var dispatchInstance = event._dispatchInstances;
      !!Array.isArray(dispatchListener) ? 'production' !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
      event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
      var res = dispatchListener ? dispatchListener(event) : null;
      event.currentTarget = null;
      event._dispatchListeners = null;
      event._dispatchInstances = null;
      return res;
    }
    function hasDispatches(event) {
      return !!event._dispatchListeners;
    }
    var EventPluginUtils = {
      isEndish: isEndish,
      isMoveish: isMoveish,
      isStartish: isStartish,
      executeDirectDispatch: executeDirectDispatch,
      executeDispatchesInOrder: executeDispatchesInOrder,
      executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
      hasDispatches: hasDispatches,
      getInstanceFromNode: function (node) {
        return ComponentTree.getInstanceFromNode(node);
      },
      getNodeFromInstance: function (node) {
        return ComponentTree.getNodeFromInstance(node);
      },
      isAncestor: function (a, b) {
        return TreeTraversal.isAncestor(a, b);
      },
      getLowestCommonAncestor: function (a, b) {
        return TreeTraversal.getLowestCommonAncestor(a, b);
      },
      getParentInstance: function (inst) {
        return TreeTraversal.getParentInstance(inst);
      },
      traverseTwoPhase: function (target, fn, arg) {
        return TreeTraversal.traverseTwoPhase(target, fn, arg);
      },
      traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
        return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
      },
      injection: injection
    };
    module.exports = EventPluginUtils;
  })($__require('16'));
});
$__System.registerDynamic('296', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    function accumulateInto(current, next) {
      !(next != null) ? 'production' !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
      if (current == null) {
        return next;
      }
      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }
        current.push(next);
        return current;
      }
      if (Array.isArray(next)) {
        return [current].concat(next);
      }
      return [current, next];
    }
    module.exports = accumulateInto;
  })($__require('16'));
});
$__System.registerDynamic('297', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /**
   * @param {array} arr an "accumulation" of items which is either an Array or
   * a single item. Useful when paired with the `accumulate` module. This is a
   * simple utility that allows us to reason about a collection of items, but
   * handling the case when there is exactly one item (and we do not need to
   * allocate an array).
   */

  var global = this || self,
      GLOBAL = global;
  function forEachAccumulated(arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  }

  module.exports = forEachAccumulated;
});
$__System.registerDynamic('23b', ['258', '274', '288', '2ab', '296', '297', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var EventPluginRegistry = $__require('274');
    var EventPluginUtils = $__require('288');
    var ReactErrorUtils = $__require('2ab');
    var accumulateInto = $__require('296');
    var forEachAccumulated = $__require('297');
    var invariant = $__require('169');
    var listenerBank = {};
    var eventQueue = null;
    var executeDispatchesAndRelease = function (event, simulated) {
      if (event) {
        EventPluginUtils.executeDispatchesInOrder(event, simulated);
        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };
    var executeDispatchesAndReleaseSimulated = function (e) {
      return executeDispatchesAndRelease(e, true);
    };
    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e, false);
    };
    var getDictionaryKey = function (inst) {
      return '.' + inst._rootNodeID;
    };
    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
          return !!(props.disabled && isInteractive(type));
        default:
          return false;
      }
    }
    var EventPluginHub = {
      injection: {
        injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
        injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
      },
      putListener: function (inst, registrationName, listener) {
        !(typeof listener === 'function') ? 'production' !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
        var key = getDictionaryKey(inst);
        var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
        bankForRegistrationName[key] = listener;
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.didPutListener) {
          PluginModule.didPutListener(inst, registrationName, listener);
        }
      },
      getListener: function (inst, registrationName) {
        var bankForRegistrationName = listenerBank[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
          return null;
        }
        var key = getDictionaryKey(inst);
        return bankForRegistrationName && bankForRegistrationName[key];
      },
      deleteListener: function (inst, registrationName) {
        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(inst, registrationName);
        }
        var bankForRegistrationName = listenerBank[registrationName];
        if (bankForRegistrationName) {
          var key = getDictionaryKey(inst);
          delete bankForRegistrationName[key];
        }
      },
      deleteAllListeners: function (inst) {
        var key = getDictionaryKey(inst);
        for (var registrationName in listenerBank) {
          if (!listenerBank.hasOwnProperty(registrationName)) {
            continue;
          }
          if (!listenerBank[registrationName][key]) {
            continue;
          }
          var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
          if (PluginModule && PluginModule.willDeleteListener) {
            PluginModule.willDeleteListener(inst, registrationName);
          }
          delete listenerBank[registrationName][key];
        }
      },
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        var events;
        var plugins = EventPluginRegistry.plugins;
        for (var i = 0; i < plugins.length; i++) {
          var possiblePlugin = plugins[i];
          if (possiblePlugin) {
            var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            if (extractedEvents) {
              events = accumulateInto(events, extractedEvents);
            }
          }
        }
        return events;
      },
      enqueueEvents: function (events) {
        if (events) {
          eventQueue = accumulateInto(eventQueue, events);
        }
      },
      processEventQueue: function (simulated) {
        var processingEventQueue = eventQueue;
        eventQueue = null;
        if (simulated) {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
        } else {
          forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
        }
        !!eventQueue ? 'production' !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
        ReactErrorUtils.rethrowCaughtError();
      },
      __purge: function () {
        listenerBank = {};
      },
      __getListenerBank: function () {
        return listenerBank;
      }
    };
    module.exports = EventPluginHub;
  })($__require('16'));
});
$__System.registerDynamic('2ac', ['23b'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var EventPluginHub = $__require('23b');
  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }
  var ReactEventEmitterMixin = { handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    } };
  module.exports = ReactEventEmitterMixin;
});
$__System.registerDynamic('2a3', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ViewportMetrics = {
    currentScrollLeft: 0,

    currentScrollTop: 0,

    refreshScrollValues: function (scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }
  };

  module.exports = ViewportMetrics;
});
$__System.registerDynamic('2ad', ['239'], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');

  /**
   * Generate a mapping of standard vendor prefixes using the defined style property and event name.
   *
   * @param {string} styleProp
   * @param {string} eventName
   * @returns {object}
   */
  function makePrefixMap(styleProp, eventName) {
    var prefixes = {};

    prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
    prefixes['Webkit' + styleProp] = 'webkit' + eventName;
    prefixes['Moz' + styleProp] = 'moz' + eventName;
    prefixes['ms' + styleProp] = 'MS' + eventName;
    prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

    return prefixes;
  }

  /**
   * A list of event names to a configurable list of vendor prefixes.
   */
  var vendorPrefixes = {
    animationend: makePrefixMap('Animation', 'AnimationEnd'),
    animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
    animationstart: makePrefixMap('Animation', 'AnimationStart'),
    transitionend: makePrefixMap('Transition', 'TransitionEnd')
  };

  /**
   * Event names that have already been detected and prefixed (if applicable).
   */
  var prefixedEventNames = {};

  /**
   * Element to check for prefixes on.
   */
  var style = {};

  /**
   * Bootstrap if a DOM exists.
   */
  if (ExecutionEnvironment.canUseDOM) {
    style = document.createElement('div').style;

    // On some platforms, in particular some releases of Android 4.x,
    // the un-prefixed "animation" and "transition" properties are defined on the
    // style object but the events that fire will still be prefixed, so we need
    // to check if the un-prefixed events are usable, and if not remove them from the map.
    if (!('AnimationEvent' in window)) {
      delete vendorPrefixes.animationend.animation;
      delete vendorPrefixes.animationiteration.animation;
      delete vendorPrefixes.animationstart.animation;
    }

    // Same as above
    if (!('TransitionEvent' in window)) {
      delete vendorPrefixes.transitionend.transition;
    }
  }

  /**
   * Attempts to determine the correct vendor prefixed event name.
   *
   * @param {string} eventName
   * @returns {string}
   */
  function getVendorPrefixedEventName(eventName) {
    if (prefixedEventNames[eventName]) {
      return prefixedEventNames[eventName];
    } else if (!vendorPrefixes[eventName]) {
      return eventName;
    }

    var prefixMap = vendorPrefixes[eventName];

    for (var styleProp in prefixMap) {
      if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
        return prefixedEventNames[eventName] = prefixMap[styleProp];
      }
    }

    return '';
  }

  module.exports = getVendorPrefixedEventName;
});
$__System.registerDynamic('240', ['239'], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');

  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
  }

  /**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @param {?boolean} capture Check if the capture phase is supported.
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   */
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }

    var eventName = 'on' + eventNameSuffix;
    var isSupported = eventName in document;

    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }

  module.exports = isEventSupported;
});
$__System.registerDynamic('275', ['165', '274', '2ac', '2a3', '2ad', '240', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var EventPluginRegistry = $__require('274');
    var ReactEventEmitterMixin = $__require('2ac');
    var ViewportMetrics = $__require('2a3');
    var getVendorPrefixedEventName = $__require('2ad');
    var isEventSupported = $__require('240');
    var hasEventPageXY;
    var alreadyListeningTo = {};
    var isMonitoringScrollValue = false;
    var reactTopListenersCounter = 0;
    var topEventMapping = {
      topAbort: 'abort',
      topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
      topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
      topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
      topBlur: 'blur',
      topCanPlay: 'canplay',
      topCanPlayThrough: 'canplaythrough',
      topChange: 'change',
      topClick: 'click',
      topCompositionEnd: 'compositionend',
      topCompositionStart: 'compositionstart',
      topCompositionUpdate: 'compositionupdate',
      topContextMenu: 'contextmenu',
      topCopy: 'copy',
      topCut: 'cut',
      topDoubleClick: 'dblclick',
      topDrag: 'drag',
      topDragEnd: 'dragend',
      topDragEnter: 'dragenter',
      topDragExit: 'dragexit',
      topDragLeave: 'dragleave',
      topDragOver: 'dragover',
      topDragStart: 'dragstart',
      topDrop: 'drop',
      topDurationChange: 'durationchange',
      topEmptied: 'emptied',
      topEncrypted: 'encrypted',
      topEnded: 'ended',
      topError: 'error',
      topFocus: 'focus',
      topInput: 'input',
      topKeyDown: 'keydown',
      topKeyPress: 'keypress',
      topKeyUp: 'keyup',
      topLoadedData: 'loadeddata',
      topLoadedMetadata: 'loadedmetadata',
      topLoadStart: 'loadstart',
      topMouseDown: 'mousedown',
      topMouseMove: 'mousemove',
      topMouseOut: 'mouseout',
      topMouseOver: 'mouseover',
      topMouseUp: 'mouseup',
      topPaste: 'paste',
      topPause: 'pause',
      topPlay: 'play',
      topPlaying: 'playing',
      topProgress: 'progress',
      topRateChange: 'ratechange',
      topScroll: 'scroll',
      topSeeked: 'seeked',
      topSeeking: 'seeking',
      topSelectionChange: 'selectionchange',
      topStalled: 'stalled',
      topSuspend: 'suspend',
      topTextInput: 'textInput',
      topTimeUpdate: 'timeupdate',
      topTouchCancel: 'touchcancel',
      topTouchEnd: 'touchend',
      topTouchMove: 'touchmove',
      topTouchStart: 'touchstart',
      topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
      topVolumeChange: 'volumechange',
      topWaiting: 'waiting',
      topWheel: 'wheel'
    };
    var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
    function getListeningForDocument(mountAt) {
      if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
        mountAt[topListenersIDKey] = reactTopListenersCounter++;
        alreadyListeningTo[mountAt[topListenersIDKey]] = {};
      }
      return alreadyListeningTo[mountAt[topListenersIDKey]];
    }
    var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
      ReactEventListener: null,
      injection: { injectReactEventListener: function (ReactEventListener) {
          ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
          ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
        } },
      setEnabled: function (enabled) {
        if (ReactBrowserEventEmitter.ReactEventListener) {
          ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
        }
      },
      isEnabled: function () {
        return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
      },
      listenTo: function (registrationName, contentDocumentHandle) {
        var mountAt = contentDocumentHandle;
        var isListening = getListeningForDocument(mountAt);
        var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
        for (var i = 0; i < dependencies.length; i++) {
          var dependency = dependencies[i];
          if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
            if (dependency === 'topWheel') {
              if (isEventSupported('wheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
              } else if (isEventSupported('mousewheel')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
              }
            } else if (dependency === 'topScroll') {
              if (isEventSupported('scroll', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
              } else {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
              }
            } else if (dependency === 'topFocus' || dependency === 'topBlur') {
              if (isEventSupported('focus', true)) {
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
              } else if (isEventSupported('focusin')) {
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
                ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
              }
              isListening.topBlur = true;
              isListening.topFocus = true;
            } else if (topEventMapping.hasOwnProperty(dependency)) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
            }
            isListening[dependency] = true;
          }
        }
      },
      trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
      },
      trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
        return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
      },
      supportsEventPageXY: function () {
        if (!document.createEvent) {
          return false;
        }
        var ev = document.createEvent('MouseEvent');
        return ev != null && 'pageX' in ev;
      },
      ensureScrollValueMonitoring: function () {
        if (hasEventPageXY === undefined) {
          hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
        }
        if (!hasEventPageXY && !isMonitoringScrollValue) {
          var refresh = ViewportMetrics.refreshScrollValues;
          ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
          isMonitoringScrollValue = true;
        }
      }
    });
    module.exports = ReactBrowserEventEmitter;
  })($__require('16'));
});
$__System.registerDynamic('276', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2015-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMComponentFlags = {
    hasCachedChildNodes: 1 << 0
  };

  module.exports = ReactDOMComponentFlags;
});
$__System.registerDynamic('23c', ['258', '246', '276', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var DOMProperty = $__require('246');
    var ReactDOMComponentFlags = $__require('276');
    var invariant = $__require('169');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var Flags = ReactDOMComponentFlags;
    var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
    function shouldPrecacheNode(node, nodeID) {
      return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
    }
    function getRenderedHostOrTextFromComponent(component) {
      var rendered;
      while (rendered = component._renderedComponent) {
        component = rendered;
      }
      return component;
    }
    function precacheNode(inst, node) {
      var hostInst = getRenderedHostOrTextFromComponent(inst);
      hostInst._hostNode = node;
      node[internalInstanceKey] = hostInst;
    }
    function uncacheNode(inst) {
      var node = inst._hostNode;
      if (node) {
        delete node[internalInstanceKey];
        inst._hostNode = null;
      }
    }
    function precacheChildNodes(inst, node) {
      if (inst._flags & Flags.hasCachedChildNodes) {
        return;
      }
      var children = inst._renderedChildren;
      var childNode = node.firstChild;
      outer: for (var name in children) {
        if (!children.hasOwnProperty(name)) {
          continue;
        }
        var childInst = children[name];
        var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
        if (childID === 0) {
          continue;
        }
        for (; childNode !== null; childNode = childNode.nextSibling) {
          if (shouldPrecacheNode(childNode, childID)) {
            precacheNode(childInst, childNode);
            continue outer;
          }
        }
        !false ? 'production' !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
      }
      inst._flags |= Flags.hasCachedChildNodes;
    }
    function getClosestInstanceFromNode(node) {
      if (node[internalInstanceKey]) {
        return node[internalInstanceKey];
      }
      var parents = [];
      while (!node[internalInstanceKey]) {
        parents.push(node);
        if (node.parentNode) {
          node = node.parentNode;
        } else {
          return null;
        }
      }
      var closest;
      var inst;
      for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
        closest = inst;
        if (parents.length) {
          precacheChildNodes(inst, node);
        }
      }
      return closest;
    }
    function getInstanceFromNode(node) {
      var inst = getClosestInstanceFromNode(node);
      if (inst != null && inst._hostNode === node) {
        return inst;
      } else {
        return null;
      }
    }
    function getNodeFromInstance(inst) {
      !(inst._hostNode !== undefined) ? 'production' !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
      if (inst._hostNode) {
        return inst._hostNode;
      }
      var parents = [];
      while (!inst._hostNode) {
        parents.push(inst);
        !inst._hostParent ? 'production' !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
        inst = inst._hostParent;
      }
      for (; parents.length; inst = parents.pop()) {
        precacheChildNodes(inst, inst._hostNode);
      }
      return inst._hostNode;
    }
    var ReactDOMComponentTree = {
      getClosestInstanceFromNode: getClosestInstanceFromNode,
      getInstanceFromNode: getInstanceFromNode,
      getNodeFromInstance: getNodeFromInstance,
      precacheChildNodes: precacheChildNodes,
      precacheNode: precacheNode,
      uncacheNode: uncacheNode
    };
    module.exports = ReactDOMComponentTree;
  })($__require('16'));
});
$__System.registerDynamic('277', ['165', '167', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var emptyFunction = $__require('167');
    var warning = $__require('16a');
    var validateDOMNesting = emptyFunction;
    if ('production' !== 'production') {
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', 'foreignObject', 'desc', 'title'];
      var buttonScopeTags = inScopeTags.concat(['button']);
      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };
      var updatedAncestorInfo = function (oldInfo, tag, instance) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
        var info = {
          tag: tag,
          instance: instance
        };
        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        }
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }
        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }
        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }
        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }
        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }
        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }
        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }
        return ancestorInfo;
      };
      var isTagValidWithParent = function (tag, parentTag) {
        switch (parentTag) {
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';
          case 'optgroup':
            return tag === 'option' || tag === '#text';
          case 'option':
            return tag === '#text';
          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'colgroup':
            return tag === 'col' || tag === 'template';
          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          case 'html':
            return tag === 'head' || tag === 'body';
          case '#document':
            return tag === 'html';
        }
        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;
          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            return parentTag == null;
        }
        return true;
      };
      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;
          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
          case 'li':
            return ancestorInfo.listItemTagAutoclosing;
          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;
          case 'button':
            return ancestorInfo.buttonTagInScope;
          case 'a':
            return ancestorInfo.aTagInScope;
          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }
        return null;
      };
      var findOwnerStack = function (instance) {
        if (!instance) {
          return [];
        }
        var stack = [];
        do {
          stack.push(instance);
        } while (instance = instance._currentElement._owner);
        stack.reverse();
        return stack;
      };
      var didWarn = {};
      validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
          'production' !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
          childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var problematic = invalidParent || invalidAncestor;
        if (problematic) {
          var ancestorTag = problematic.tag;
          var ancestorInstance = problematic.instance;
          var childOwner = childInstance && childInstance._currentElement._owner;
          var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
          var childOwners = findOwnerStack(childOwner);
          var ancestorOwners = findOwnerStack(ancestorOwner);
          var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
          var i;
          var deepestCommon = -1;
          for (i = 0; i < minStackLen; i++) {
            if (childOwners[i] === ancestorOwners[i]) {
              deepestCommon = i;
            } else {
              break;
            }
          }
          var UNKNOWN = '(unknown)';
          var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
            return inst.getName() || UNKNOWN;
          });
          var ownerInfo = [].concat(deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag, invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
          var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
          if (didWarn[warnKey]) {
            return;
          }
          didWarn[warnKey] = true;
          var tagDisplayName = childTag;
          var whitespaceInfo = '';
          if (childTag === '#text') {
            if (/\S/.test(childText)) {
              tagDisplayName = 'Text nodes';
            } else {
              tagDisplayName = 'Whitespace text nodes';
              whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
            }
          } else {
            tagDisplayName = '<' + childTag + '>';
          }
          if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') {
              info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
            }
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
          } else {
            'production' !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
          }
        }
      };
      validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
      validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
      };
    }
    module.exports = validateDOMNesting;
  })($__require('16'));
});
$__System.registerDynamic('2ae', ['277', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var validateDOMNesting = $__require('277');
    var DOC_NODE_TYPE = 9;
    function ReactDOMContainerInfo(topLevelWrapper, node) {
      var info = {
        _topLevelWrapper: topLevelWrapper,
        _idCounter: 1,
        _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
        _node: node,
        _tag: node ? node.nodeName.toLowerCase() : null,
        _namespaceURI: node ? node.namespaceURI : null
      };
      if ('production' !== 'production') {
        info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
      }
      return info;
    }
    module.exports = ReactDOMContainerInfo;
  })($__require('16'));
});
$__System.registerDynamic('2af', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactDOMFeatureFlags = {
    useCreateElement: true,
    useFiber: false
  };

  module.exports = ReactDOMFeatureFlags;
});
$__System.registerDynamic('2b0', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var MOD = 65521;

  // adler32 is not cryptographically strong, and is only used to sanity check that
  // markup generated on the server matches the markup generated on the client.
  // This implementation (a modified version of the SheetJS version) has been optimized
  // for our use case, at the expense of conforming to the adler32 specification
  // for non-ascii inputs.
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      var n = Math.min(i + 4096, m);
      for (; i < n; i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }

  module.exports = adler32;
});
$__System.registerDynamic('2b1', ['2b0'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var adler32 = $__require('2b0');
  var TAG_END = /\/?>/;
  var COMMENT_START = /^<\!\-\-/;
  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',
    addChecksumToMarkup: function (markup) {
      var checksum = adler32(markup);
      if (COMMENT_START.test(markup)) {
        return markup;
      } else {
        return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
      }
    },
    canReuseMarkup: function (markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };
  module.exports = ReactMarkupChecksum;
});
$__System.registerDynamic('26e', ['258', '268', '26c', '253', '23d', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactCurrentOwner = $__require('268');
    var ReactInstanceMap = $__require('26c');
    var ReactInstrumentation = $__require('253');
    var ReactUpdates = $__require('23d');
    var invariant = $__require('169');
    var warning = $__require('16a');
    function enqueueUpdate(internalInstance) {
      ReactUpdates.enqueueUpdate(internalInstance);
    }
    function formatUnexpectedArgument(arg) {
      var type = typeof arg;
      if (type !== 'object') {
        return type;
      }
      var displayName = arg.constructor && arg.constructor.name || type;
      var keys = Object.keys(arg);
      if (keys.length > 0 && keys.length < 20) {
        return displayName + ' (keys: ' + keys.join(', ') + ')';
      }
      return displayName;
    }
    function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (!internalInstance) {
        if ('production' !== 'production') {
          var ctor = publicInstance.constructor;
          'production' !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
        }
        return null;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
      }
      return internalInstance;
    }
    var ReactUpdateQueue = {
      isMounted: function (publicInstance) {
        if ('production' !== 'production') {
          var owner = ReactCurrentOwner.current;
          if (owner !== null) {
            'production' !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
            owner._warnedAboutRefsInRender = true;
          }
        }
        var internalInstance = ReactInstanceMap.get(publicInstance);
        if (internalInstance) {
          return !!internalInstance._renderedComponent;
        } else {
          return false;
        }
      },
      enqueueCallback: function (publicInstance, callback, callerName) {
        ReactUpdateQueue.validateCallback(callback, callerName);
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
        if (!internalInstance) {
          return null;
        }
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueCallbackInternal: function (internalInstance, callback) {
        if (internalInstance._pendingCallbacks) {
          internalInstance._pendingCallbacks.push(callback);
        } else {
          internalInstance._pendingCallbacks = [callback];
        }
        enqueueUpdate(internalInstance);
      },
      enqueueForceUpdate: function (publicInstance) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingForceUpdate = true;
        enqueueUpdate(internalInstance);
      },
      enqueueReplaceState: function (publicInstance, completeState, callback) {
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
        if (!internalInstance) {
          return;
        }
        internalInstance._pendingStateQueue = [completeState];
        internalInstance._pendingReplaceState = true;
        if (callback !== undefined && callback !== null) {
          ReactUpdateQueue.validateCallback(callback, 'replaceState');
          if (internalInstance._pendingCallbacks) {
            internalInstance._pendingCallbacks.push(callback);
          } else {
            internalInstance._pendingCallbacks = [callback];
          }
        }
        enqueueUpdate(internalInstance);
      },
      enqueueSetState: function (publicInstance, partialState) {
        if ('production' !== 'production') {
          ReactInstrumentation.debugTool.onSetState();
          'production' !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
        }
        var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
        if (!internalInstance) {
          return;
        }
        var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
        queue.push(partialState);
        enqueueUpdate(internalInstance);
      },
      enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
        internalInstance._pendingElement = nextElement;
        internalInstance._context = nextContext;
        enqueueUpdate(internalInstance);
      },
      validateCallback: function (callback, callerName) {
        !(!callback || typeof callback === 'function') ? 'production' !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
      }
    };
    module.exports = ReactUpdateQueue;
  })($__require('16'));
});
$__System.registerDynamic('28c', ['258', '232', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var PooledClass = $__require('232');
    var invariant = $__require('169');
    var CallbackQueue = function () {
      function CallbackQueue(arg) {
        _classCallCheck(this, CallbackQueue);
        this._callbacks = null;
        this._contexts = null;
        this._arg = arg;
      }
      CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
        this._callbacks = this._callbacks || [];
        this._callbacks.push(callback);
        this._contexts = this._contexts || [];
        this._contexts.push(context);
      };
      CallbackQueue.prototype.notifyAll = function notifyAll() {
        var callbacks = this._callbacks;
        var contexts = this._contexts;
        var arg = this._arg;
        if (callbacks && contexts) {
          !(callbacks.length === contexts.length) ? 'production' !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
          this._callbacks = null;
          this._contexts = null;
          for (var i = 0; i < callbacks.length; i++) {
            callbacks[i].call(contexts[i], arg);
          }
          callbacks.length = 0;
          contexts.length = 0;
        }
      };
      CallbackQueue.prototype.checkpoint = function checkpoint() {
        return this._callbacks ? this._callbacks.length : 0;
      };
      CallbackQueue.prototype.rollback = function rollback(len) {
        if (this._callbacks && this._contexts) {
          this._callbacks.length = len;
          this._contexts.length = len;
        }
      };
      CallbackQueue.prototype.reset = function reset() {
        this._callbacks = null;
        this._contexts = null;
      };
      CallbackQueue.prototype.destructor = function destructor() {
        this.reset();
      };
      return CallbackQueue;
    }();
    module.exports = PooledClass.addPoolingTo(CallbackQueue);
  })($__require('16'));
});
$__System.registerDynamic('232', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    var oneArgumentPooler = function (copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function (a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function (a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function (a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var standardReleaser = function (instance) {
      var Klass = this;
      !(instance instanceof Klass) ? 'production' !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function (CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('16'));
});
$__System.registerDynamic('2b2', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactFeatureFlags = {
    // When true, call console.time() before and .timeEnd() after each top-level
    // render (both initial renders and updates). Useful when looking at prod-mode
    // timeline profiles in Chrome, for example.
    logTopLevelRenders: false
  };

  module.exports = ReactFeatureFlags;
});
$__System.registerDynamic('270', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    var OBSERVED_ERROR = {};
    var TransactionImpl = {
      reinitializeTransaction: function () {
        this.transactionWrappers = this.getTransactionWrappers();
        if (this.wrapperInitData) {
          this.wrapperInitData.length = 0;
        } else {
          this.wrapperInitData = [];
        }
        this._isInTransaction = false;
      },
      _isInTransaction: false,
      getTransactionWrappers: null,
      isInTransaction: function () {
        return !!this._isInTransaction;
      },
      perform: function (method, scope, a, b, c, d, e, f) {
        !!this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
        var errorThrown;
        var ret;
        try {
          this._isInTransaction = true;
          errorThrown = true;
          this.initializeAll(0);
          ret = method.call(scope, a, b, c, d, e, f);
          errorThrown = false;
        } finally {
          try {
            if (errorThrown) {
              try {
                this.closeAll(0);
              } catch (err) {}
            } else {
              this.closeAll(0);
            }
          } finally {
            this._isInTransaction = false;
          }
        }
        return ret;
      },
      initializeAll: function (startIndex) {
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          try {
            this.wrapperInitData[i] = OBSERVED_ERROR;
            this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
          } finally {
            if (this.wrapperInitData[i] === OBSERVED_ERROR) {
              try {
                this.initializeAll(i + 1);
              } catch (err) {}
            }
          }
        }
      },
      closeAll: function (startIndex) {
        !this.isInTransaction() ? 'production' !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
        var transactionWrappers = this.transactionWrappers;
        for (var i = startIndex; i < transactionWrappers.length; i++) {
          var wrapper = transactionWrappers[i];
          var initData = this.wrapperInitData[i];
          var errorThrown;
          try {
            errorThrown = true;
            if (initData !== OBSERVED_ERROR && wrapper.close) {
              wrapper.close.call(this, initData);
            }
            errorThrown = false;
          } finally {
            if (errorThrown) {
              try {
                this.closeAll(i + 1);
              } catch (e) {}
            }
          }
        }
        this.wrapperInitData.length = 0;
      }
    };
    module.exports = TransactionImpl;
  })($__require('16'));
});
$__System.registerDynamic('23d', ['258', '165', '28c', '232', '2b2', '260', '270', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var CallbackQueue = $__require('28c');
    var PooledClass = $__require('232');
    var ReactFeatureFlags = $__require('2b2');
    var ReactReconciler = $__require('260');
    var Transaction = $__require('270');
    var invariant = $__require('169');
    var dirtyComponents = [];
    var updateBatchNumber = 0;
    var asapCallbackQueue = CallbackQueue.getPooled();
    var asapEnqueued = false;
    var batchingStrategy = null;
    function ensureInjected() {
      !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
    }
    var NESTED_UPDATES = {
      initialize: function () {
        this.dirtyComponentsLength = dirtyComponents.length;
      },
      close: function () {
        if (this.dirtyComponentsLength !== dirtyComponents.length) {
          dirtyComponents.splice(0, this.dirtyComponentsLength);
          flushBatchedUpdates();
        } else {
          dirtyComponents.length = 0;
        }
      }
    };
    var UPDATE_QUEUEING = {
      initialize: function () {
        this.callbackQueue.reset();
      },
      close: function () {
        this.callbackQueue.notifyAll();
      }
    };
    var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
    function ReactUpdatesFlushTransaction() {
      this.reinitializeTransaction();
      this.dirtyComponentsLength = null;
      this.callbackQueue = CallbackQueue.getPooled();
      this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(true);
    }
    _assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
      getTransactionWrappers: function () {
        return TRANSACTION_WRAPPERS;
      },
      destructor: function () {
        this.dirtyComponentsLength = null;
        CallbackQueue.release(this.callbackQueue);
        this.callbackQueue = null;
        ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
        this.reconcileTransaction = null;
      },
      perform: function (method, scope, a) {
        return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
      }
    });
    PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
    function batchedUpdates(callback, a, b, c, d, e) {
      ensureInjected();
      return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
    }
    function mountOrderComparator(c1, c2) {
      return c1._mountOrder - c2._mountOrder;
    }
    function runBatchedUpdates(transaction) {
      var len = transaction.dirtyComponentsLength;
      !(len === dirtyComponents.length) ? 'production' !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
      dirtyComponents.sort(mountOrderComparator);
      updateBatchNumber++;
      for (var i = 0; i < len; i++) {
        var component = dirtyComponents[i];
        var callbacks = component._pendingCallbacks;
        component._pendingCallbacks = null;
        var markerName;
        if (ReactFeatureFlags.logTopLevelRenders) {
          var namedComponent = component;
          if (component._currentElement.type.isReactTopLevelWrapper) {
            namedComponent = component._renderedComponent;
          }
          markerName = 'React update: ' + namedComponent.getName();
          console.time(markerName);
        }
        ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
        if (markerName) {
          console.timeEnd(markerName);
        }
        if (callbacks) {
          for (var j = 0; j < callbacks.length; j++) {
            transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
          }
        }
      }
    }
    var flushBatchedUpdates = function () {
      while (dirtyComponents.length || asapEnqueued) {
        if (dirtyComponents.length) {
          var transaction = ReactUpdatesFlushTransaction.getPooled();
          transaction.perform(runBatchedUpdates, null, transaction);
          ReactUpdatesFlushTransaction.release(transaction);
        }
        if (asapEnqueued) {
          asapEnqueued = false;
          var queue = asapCallbackQueue;
          asapCallbackQueue = CallbackQueue.getPooled();
          queue.notifyAll();
          CallbackQueue.release(queue);
        }
      }
    };
    function enqueueUpdate(component) {
      ensureInjected();
      if (!batchingStrategy.isBatchingUpdates) {
        batchingStrategy.batchedUpdates(enqueueUpdate, component);
        return;
      }
      dirtyComponents.push(component);
      if (component._updateBatchNumber == null) {
        component._updateBatchNumber = updateBatchNumber + 1;
      }
    }
    function asap(callback, context) {
      invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
      asapCallbackQueue.enqueue(callback, context);
      asapEnqueued = true;
    }
    var ReactUpdatesInjection = {
      injectReconcileTransaction: function (ReconcileTransaction) {
        !ReconcileTransaction ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
        ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
      },
      injectBatchingStrategy: function (_batchingStrategy) {
        !_batchingStrategy ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
        !(typeof _batchingStrategy.batchedUpdates === 'function') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
        !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? 'production' !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
        batchingStrategy = _batchingStrategy;
      }
    };
    var ReactUpdates = {
      ReactReconcileTransaction: null,
      batchedUpdates: batchedUpdates,
      enqueueUpdate: enqueueUpdate,
      flushBatchedUpdates: flushBatchedUpdates,
      injection: ReactUpdatesInjection,
      asap: asap
    };
    module.exports = ReactUpdates;
  })($__require('16'));
});
$__System.registerDynamic('26b', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    var injected = false;
    var ReactComponentEnvironment = {
      replaceNodeWithMarkup: null,
      processChildrenUpdates: null,
      injection: { injectEnvironment: function (environment) {
          !!injected ? 'production' !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
          ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
          ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
          injected = true;
        } }
    };
    module.exports = ReactComponentEnvironment;
  })($__require('16'));
});
$__System.registerDynamic('2ab', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var caughtError = null;
    function invokeGuardedCallback(name, func, a) {
      try {
        func(a);
      } catch (x) {
        if (caughtError === null) {
          caughtError = x;
        }
      }
    }
    var ReactErrorUtils = {
      invokeGuardedCallback: invokeGuardedCallback,
      invokeGuardedCallbackWithCatch: invokeGuardedCallback,
      rethrowCaughtError: function () {
        if (caughtError) {
          var error = caughtError;
          caughtError = null;
          throw error;
        }
      }
    };
    if ('production' !== 'production') {
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
          var boundFunc = function () {
            func(a);
          };
          var evtType = 'react-' + name;
          fakeNode.addEventListener(evtType, boundFunc, false);
          var evt = document.createEvent('Event');
          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);
          fakeNode.removeEventListener(evtType, boundFunc, false);
        };
      }
    }
    module.exports = ReactErrorUtils;
  })($__require('16'));
});
$__System.registerDynamic('26c', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * `ReactInstanceMap` maintains a mapping from a public facing stateful
   * instance (key) and the internal representation (value). This allows public
   * methods to accept the user facing instance as an argument and map them back
   * to internal methods.
   */

  // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

  var global = this || self,
      GLOBAL = global;
  var ReactInstanceMap = {
    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */
    remove: function (key) {
      key._reactInternalInstance = undefined;
    },

    get: function (key) {
      return key._reactInternalInstance;
    },

    has: function (key) {
      return key._reactInternalInstance !== undefined;
    },

    set: function (key, value) {
      key._reactInternalInstance = value;
    }
  };

  module.exports = ReactInstanceMap;
});
$__System.registerDynamic('2b3', ['2b4', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4');
    var invariant = $__require('169');
    var oneArgumentPooler = function (copyFieldsFrom) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, copyFieldsFrom);
        return instance;
      } else {
        return new Klass(copyFieldsFrom);
      }
    };
    var twoArgumentPooler = function (a1, a2) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2);
        return instance;
      } else {
        return new Klass(a1, a2);
      }
    };
    var threeArgumentPooler = function (a1, a2, a3) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3);
        return instance;
      } else {
        return new Klass(a1, a2, a3);
      }
    };
    var fourArgumentPooler = function (a1, a2, a3, a4) {
      var Klass = this;
      if (Klass.instancePool.length) {
        var instance = Klass.instancePool.pop();
        Klass.call(instance, a1, a2, a3, a4);
        return instance;
      } else {
        return new Klass(a1, a2, a3, a4);
      }
    };
    var standardReleaser = function (instance) {
      var Klass = this;
      !(instance instanceof Klass) ? 'production' !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
      instance.destructor();
      if (Klass.instancePool.length < Klass.poolSize) {
        Klass.instancePool.push(instance);
      }
    };
    var DEFAULT_POOL_SIZE = 10;
    var DEFAULT_POOLER = oneArgumentPooler;
    var addPoolingTo = function (CopyConstructor, pooler) {
      var NewKlass = CopyConstructor;
      NewKlass.instancePool = [];
      NewKlass.getPooled = pooler || DEFAULT_POOLER;
      if (!NewKlass.poolSize) {
        NewKlass.poolSize = DEFAULT_POOL_SIZE;
      }
      NewKlass.release = standardReleaser;
      return NewKlass;
    };
    var PooledClass = {
      addPoolingTo: addPoolingTo,
      oneArgumentPooler: oneArgumentPooler,
      twoArgumentPooler: twoArgumentPooler,
      threeArgumentPooler: threeArgumentPooler,
      fourArgumentPooler: fourArgumentPooler
    };
    module.exports = PooledClass;
  })($__require('16'));
});
$__System.registerDynamic('2b5', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  var global = this || self,
      GLOBAL = global;
  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;
});
$__System.registerDynamic('2b6', ['2b4', '268', '2b7', '2b8', '169', '2b5', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4');
    var ReactCurrentOwner = $__require('268');
    var REACT_ELEMENT_TYPE = $__require('2b7');
    var getIteratorFn = $__require('2b8');
    var invariant = $__require('169');
    var KeyEscapeUtils = $__require('2b5');
    var warning = $__require('16a');
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    var didWarnAboutMaps = false;
    function getComponentKey(component, index) {
      if (component && typeof component === 'object' && component.key != null) {
        return KeyEscapeUtils.escape(component.key);
      }
      return index.toString(36);
    }
    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;
      if (type === 'undefined' || type === 'boolean') {
        children = null;
      }
      if (children === null || type === 'string' || type === 'number' || type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
        callback(traverseContext, children, nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }
      var child;
      var nextName;
      var subtreeCount = 0;
      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);
        if (iteratorFn) {
          var iterator = iteratorFn.call(children);
          var step;
          if (iteratorFn !== children.entries) {
            var ii = 0;
            while (!(step = iterator.next()).done) {
              child = step.value;
              nextName = nextNamePrefix + getComponentKey(child, ii++);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            if ('production' !== 'production') {
              var mapsAsChildrenAddendum = '';
              if (ReactCurrentOwner.current) {
                var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
                if (mapsAsChildrenOwnerName) {
                  mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
                }
              }
              'production' !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
              didWarnAboutMaps = true;
            }
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                child = entry[1];
                nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            }
          }
        } else if (type === 'object') {
          var addendum = '';
          if ('production' !== 'production') {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
            if (children._isReactElement) {
              addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
            }
            if (ReactCurrentOwner.current) {
              var name = ReactCurrentOwner.current.getName();
              if (name) {
                addendum += ' Check the render method of `' + name + '`.';
              }
            }
          }
          var childrenString = String(children);
          !false ? 'production' !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
        }
      }
      return subtreeCount;
    }
    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }
      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    module.exports = traverseAllChildren;
  })($__require('16'));
});
$__System.registerDynamic('2b9', ['2b3', '2ba', '167', '2b6'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var PooledClass = $__require('2b3');
  var ReactElement = $__require('2ba');
  var emptyFunction = $__require('167');
  var traverseAllChildren = $__require('2b6');
  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;
  var userProvidedKeyEscapeRegex = /\/+/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
  }
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function () {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func,
        context = bookKeeping.context;
    func.call(context, child, bookKeeping.count++);
  }
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function () {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result,
        keyPrefix = bookKeeping.keyPrefix,
        func = bookKeeping.func,
        context = bookKeeping.context;
    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild, keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }
  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }
  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }
  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };
  module.exports = ReactChildren;
});
$__System.registerDynamic('2bb', ['2ba', '2bc', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactElement = $__require('2ba');
    var createDOMFactory = ReactElement.createFactory;
    if ('production' !== 'production') {
      var ReactElementValidator = $__require('2bc');
      createDOMFactory = ReactElementValidator.createFactory;
    }
    var ReactDOMFactories = {
      a: createDOMFactory('a'),
      abbr: createDOMFactory('abbr'),
      address: createDOMFactory('address'),
      area: createDOMFactory('area'),
      article: createDOMFactory('article'),
      aside: createDOMFactory('aside'),
      audio: createDOMFactory('audio'),
      b: createDOMFactory('b'),
      base: createDOMFactory('base'),
      bdi: createDOMFactory('bdi'),
      bdo: createDOMFactory('bdo'),
      big: createDOMFactory('big'),
      blockquote: createDOMFactory('blockquote'),
      body: createDOMFactory('body'),
      br: createDOMFactory('br'),
      button: createDOMFactory('button'),
      canvas: createDOMFactory('canvas'),
      caption: createDOMFactory('caption'),
      cite: createDOMFactory('cite'),
      code: createDOMFactory('code'),
      col: createDOMFactory('col'),
      colgroup: createDOMFactory('colgroup'),
      data: createDOMFactory('data'),
      datalist: createDOMFactory('datalist'),
      dd: createDOMFactory('dd'),
      del: createDOMFactory('del'),
      details: createDOMFactory('details'),
      dfn: createDOMFactory('dfn'),
      dialog: createDOMFactory('dialog'),
      div: createDOMFactory('div'),
      dl: createDOMFactory('dl'),
      dt: createDOMFactory('dt'),
      em: createDOMFactory('em'),
      embed: createDOMFactory('embed'),
      fieldset: createDOMFactory('fieldset'),
      figcaption: createDOMFactory('figcaption'),
      figure: createDOMFactory('figure'),
      footer: createDOMFactory('footer'),
      form: createDOMFactory('form'),
      h1: createDOMFactory('h1'),
      h2: createDOMFactory('h2'),
      h3: createDOMFactory('h3'),
      h4: createDOMFactory('h4'),
      h5: createDOMFactory('h5'),
      h6: createDOMFactory('h6'),
      head: createDOMFactory('head'),
      header: createDOMFactory('header'),
      hgroup: createDOMFactory('hgroup'),
      hr: createDOMFactory('hr'),
      html: createDOMFactory('html'),
      i: createDOMFactory('i'),
      iframe: createDOMFactory('iframe'),
      img: createDOMFactory('img'),
      input: createDOMFactory('input'),
      ins: createDOMFactory('ins'),
      kbd: createDOMFactory('kbd'),
      keygen: createDOMFactory('keygen'),
      label: createDOMFactory('label'),
      legend: createDOMFactory('legend'),
      li: createDOMFactory('li'),
      link: createDOMFactory('link'),
      main: createDOMFactory('main'),
      map: createDOMFactory('map'),
      mark: createDOMFactory('mark'),
      menu: createDOMFactory('menu'),
      menuitem: createDOMFactory('menuitem'),
      meta: createDOMFactory('meta'),
      meter: createDOMFactory('meter'),
      nav: createDOMFactory('nav'),
      noscript: createDOMFactory('noscript'),
      object: createDOMFactory('object'),
      ol: createDOMFactory('ol'),
      optgroup: createDOMFactory('optgroup'),
      option: createDOMFactory('option'),
      output: createDOMFactory('output'),
      p: createDOMFactory('p'),
      param: createDOMFactory('param'),
      picture: createDOMFactory('picture'),
      pre: createDOMFactory('pre'),
      progress: createDOMFactory('progress'),
      q: createDOMFactory('q'),
      rp: createDOMFactory('rp'),
      rt: createDOMFactory('rt'),
      ruby: createDOMFactory('ruby'),
      s: createDOMFactory('s'),
      samp: createDOMFactory('samp'),
      script: createDOMFactory('script'),
      section: createDOMFactory('section'),
      select: createDOMFactory('select'),
      small: createDOMFactory('small'),
      source: createDOMFactory('source'),
      span: createDOMFactory('span'),
      strong: createDOMFactory('strong'),
      style: createDOMFactory('style'),
      sub: createDOMFactory('sub'),
      summary: createDOMFactory('summary'),
      sup: createDOMFactory('sup'),
      table: createDOMFactory('table'),
      tbody: createDOMFactory('tbody'),
      td: createDOMFactory('td'),
      textarea: createDOMFactory('textarea'),
      tfoot: createDOMFactory('tfoot'),
      th: createDOMFactory('th'),
      thead: createDOMFactory('thead'),
      time: createDOMFactory('time'),
      title: createDOMFactory('title'),
      tr: createDOMFactory('tr'),
      track: createDOMFactory('track'),
      u: createDOMFactory('u'),
      ul: createDOMFactory('ul'),
      'var': createDOMFactory('var'),
      video: createDOMFactory('video'),
      wbr: createDOMFactory('wbr'),
      circle: createDOMFactory('circle'),
      clipPath: createDOMFactory('clipPath'),
      defs: createDOMFactory('defs'),
      ellipse: createDOMFactory('ellipse'),
      g: createDOMFactory('g'),
      image: createDOMFactory('image'),
      line: createDOMFactory('line'),
      linearGradient: createDOMFactory('linearGradient'),
      mask: createDOMFactory('mask'),
      path: createDOMFactory('path'),
      pattern: createDOMFactory('pattern'),
      polygon: createDOMFactory('polygon'),
      polyline: createDOMFactory('polyline'),
      radialGradient: createDOMFactory('radialGradient'),
      rect: createDOMFactory('rect'),
      stop: createDOMFactory('stop'),
      svg: createDOMFactory('svg'),
      text: createDOMFactory('text'),
      tspan: createDOMFactory('tspan')
    };
    module.exports = ReactDOMFactories;
  })($__require('16'));
});
$__System.registerDynamic('25d', ['2bd'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var factory = $__require('2bd');
  module.exports = function (isValidElement) {
    var throwOnDirectAccess = false;
    return factory(isValidElement, throwOnDirectAccess);
  };
});
$__System.registerDynamic('2be', ['2ba', '25d'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var _require = $__require('2ba'),
        isValidElement = _require.isValidElement;
    var factory = $__require('25d');
    module.exports = factory(isValidElement);
});
$__System.registerDynamic('2bf', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = '15.6.2';
});
$__System.registerDynamic('2c0', ['2b4', '165', '2c1', '2c2', '166', '169', '2c3', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4'),
        _assign = $__require('165');
    var ReactNoopUpdateQueue = $__require('2c1');
    var canDefineProperty = $__require('2c2');
    var emptyObject = $__require('166');
    var invariant = $__require('169');
    var lowPriorityWarning = $__require('2c3');
    function ReactComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    ReactComponent.prototype.isReactComponent = {};
    ReactComponent.prototype.setState = function (partialState, callback) {
      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? 'production' !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
      this.updater.enqueueSetState(this, partialState);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'setState');
      }
    };
    ReactComponent.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'forceUpdate');
      }
    };
    if ('production' !== 'production') {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };
      var defineDeprecationWarning = function (methodName, info) {
        if (canDefineProperty) {
          Object.defineProperty(ReactComponent.prototype, methodName, { get: function () {
              lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
              return undefined;
            } });
        }
      };
      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }
    function ReactPureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    ComponentDummy.prototype = ReactComponent.prototype;
    ReactPureComponent.prototype = new ComponentDummy();
    ReactPureComponent.prototype.constructor = ReactPureComponent;
    _assign(ReactPureComponent.prototype, ReactComponent.prototype);
    ReactPureComponent.prototype.isPureReactComponent = true;
    module.exports = {
      Component: ReactComponent,
      PureComponent: ReactPureComponent
    };
  })($__require('16'));
});
$__System.registerDynamic('2c1', ['16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = $__require('16a');
    function warnNoop(publicInstance, callerName) {
      if ('production' !== 'production') {
        var constructor = publicInstance.constructor;
        'production' !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
      }
    }
    var ReactNoopUpdateQueue = {
      isMounted: function (publicInstance) {
        return false;
      },
      enqueueCallback: function (publicInstance, callback) {},
      enqueueForceUpdate: function (publicInstance) {
        warnNoop(publicInstance, 'forceUpdate');
      },
      enqueueReplaceState: function (publicInstance, completeState) {
        warnNoop(publicInstance, 'replaceState');
      },
      enqueueSetState: function (publicInstance, partialState) {
        warnNoop(publicInstance, 'setState');
      }
    };
    module.exports = ReactNoopUpdateQueue;
  })($__require('16'));
});
$__System.registerDynamic('4a', ['165', '166', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var emptyObject = $__require('166');
    var _invariant = $__require('169');
    if ('production' !== 'production') {
      var warning = $__require('16a');
    }
    var MIXINS_KEY = 'mixins';
    function identity(fn) {
      return fn;
    }
    var ReactPropTypeLocationNames;
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    } else {
      ReactPropTypeLocationNames = {};
    }
    function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
      var injectedMixins = [];
      var ReactClassInterface = {
        mixins: 'DEFINE_MANY',
        statics: 'DEFINE_MANY',
        propTypes: 'DEFINE_MANY',
        contextTypes: 'DEFINE_MANY',
        childContextTypes: 'DEFINE_MANY',
        getDefaultProps: 'DEFINE_MANY_MERGED',
        getInitialState: 'DEFINE_MANY_MERGED',
        getChildContext: 'DEFINE_MANY_MERGED',
        render: 'DEFINE_ONCE',
        componentWillMount: 'DEFINE_MANY',
        componentDidMount: 'DEFINE_MANY',
        componentWillReceiveProps: 'DEFINE_MANY',
        shouldComponentUpdate: 'DEFINE_ONCE',
        componentWillUpdate: 'DEFINE_MANY',
        componentDidUpdate: 'DEFINE_MANY',
        componentWillUnmount: 'DEFINE_MANY',
        updateComponent: 'OVERRIDE_BASE'
      };
      var RESERVED_SPEC_KEYS = {
        displayName: function (Constructor, displayName) {
          Constructor.displayName = displayName;
        },
        mixins: function (Constructor, mixins) {
          if (mixins) {
            for (var i = 0; i < mixins.length; i++) {
              mixSpecIntoComponent(Constructor, mixins[i]);
            }
          }
        },
        childContextTypes: function (Constructor, childContextTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, childContextTypes, 'childContext');
          }
          Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
        },
        contextTypes: function (Constructor, contextTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, contextTypes, 'context');
          }
          Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
        },
        getDefaultProps: function (Constructor, getDefaultProps) {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
          } else {
            Constructor.getDefaultProps = getDefaultProps;
          }
        },
        propTypes: function (Constructor, propTypes) {
          if ('production' !== 'production') {
            validateTypeDef(Constructor, propTypes, 'prop');
          }
          Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
        },
        statics: function (Constructor, statics) {
          mixStaticSpecIntoComponent(Constructor, statics);
        },
        autobind: function () {}
      };
      function validateTypeDef(Constructor, typeDef, location) {
        for (var propName in typeDef) {
          if (typeDef.hasOwnProperty(propName)) {
            if ('production' !== 'production') {
              warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);
            }
          }
        }
      }
      function validateMethodOverride(isAlreadyDefined, name) {
        var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
        if (ReactClassMixin.hasOwnProperty(name)) {
          _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
        }
        if (isAlreadyDefined) {
          _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
        }
      }
      function mixSpecIntoComponent(Constructor, spec) {
        if (!spec) {
          if ('production' !== 'production') {
            var typeofSpec = typeof spec;
            var isMixinValid = typeofSpec === 'object' && spec !== null;
            if ('production' !== 'production') {
              warning(isMixinValid, "%s: You're attempting to include a mixin that is either null " + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);
            }
          }
          return;
        }
        _invariant(typeof spec !== 'function', "ReactClass: You're attempting to " + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
        _invariant(!isValidElement(spec), "ReactClass: You're attempting to " + 'use a component as a mixin. Instead, just use a regular object.');
        var proto = Constructor.prototype;
        var autoBindPairs = proto.__reactAutoBindPairs;
        if (spec.hasOwnProperty(MIXINS_KEY)) {
          RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
        }
        for (var name in spec) {
          if (!spec.hasOwnProperty(name)) {
            continue;
          }
          if (name === MIXINS_KEY) {
            continue;
          }
          var property = spec[name];
          var isAlreadyDefined = proto.hasOwnProperty(name);
          validateMethodOverride(isAlreadyDefined, name);
          if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
            RESERVED_SPEC_KEYS[name](Constructor, property);
          } else {
            var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
            var isFunction = typeof property === 'function';
            var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
            if (shouldAutoBind) {
              autoBindPairs.push(name, property);
              proto[name] = property;
            } else {
              if (isAlreadyDefined) {
                var specPolicy = ReactClassInterface[name];
                _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);
                if (specPolicy === 'DEFINE_MANY_MERGED') {
                  proto[name] = createMergedResultFunction(proto[name], property);
                } else if (specPolicy === 'DEFINE_MANY') {
                  proto[name] = createChainedFunction(proto[name], property);
                }
              } else {
                proto[name] = property;
                if ('production' !== 'production') {
                  if (typeof property === 'function' && spec.displayName) {
                    proto[name].displayName = spec.displayName + '_' + name;
                  }
                }
              }
            }
          }
        }
      }
      function mixStaticSpecIntoComponent(Constructor, statics) {
        if (!statics) {
          return;
        }
        for (var name in statics) {
          var property = statics[name];
          if (!statics.hasOwnProperty(name)) {
            continue;
          }
          var isReserved = name in RESERVED_SPEC_KEYS;
          _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);
          var isInherited = name in Constructor;
          _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
          Constructor[name] = property;
        }
      }
      function mergeIntoWithNoDuplicateKeys(one, two) {
        _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');
        for (var key in two) {
          if (two.hasOwnProperty(key)) {
            _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
            one[key] = two[key];
          }
        }
        return one;
      }
      function createMergedResultFunction(one, two) {
        return function mergedResult() {
          var a = one.apply(this, arguments);
          var b = two.apply(this, arguments);
          if (a == null) {
            return b;
          } else if (b == null) {
            return a;
          }
          var c = {};
          mergeIntoWithNoDuplicateKeys(c, a);
          mergeIntoWithNoDuplicateKeys(c, b);
          return c;
        };
      }
      function createChainedFunction(one, two) {
        return function chainedFunction() {
          one.apply(this, arguments);
          two.apply(this, arguments);
        };
      }
      function bindAutoBindMethod(component, method) {
        var boundMethod = method.bind(component);
        if ('production' !== 'production') {
          boundMethod.__reactBoundContext = component;
          boundMethod.__reactBoundMethod = method;
          boundMethod.__reactBoundArguments = null;
          var componentName = component.constructor.displayName;
          var _bind = boundMethod.bind;
          boundMethod.bind = function (newThis) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }
            if (newThis !== component && newThis !== null) {
              if ('production' !== 'production') {
                warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);
              }
            } else if (!args.length) {
              if ('production' !== 'production') {
                warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);
              }
              return boundMethod;
            }
            var reboundMethod = _bind.apply(boundMethod, arguments);
            reboundMethod.__reactBoundContext = component;
            reboundMethod.__reactBoundMethod = method;
            reboundMethod.__reactBoundArguments = args;
            return reboundMethod;
          };
        }
        return boundMethod;
      }
      function bindAutoBindMethods(component) {
        var pairs = component.__reactAutoBindPairs;
        for (var i = 0; i < pairs.length; i += 2) {
          var autoBindKey = pairs[i];
          var method = pairs[i + 1];
          component[autoBindKey] = bindAutoBindMethod(component, method);
        }
      }
      var IsMountedPreMixin = { componentDidMount: function () {
          this.__isMounted = true;
        } };
      var IsMountedPostMixin = { componentWillUnmount: function () {
          this.__isMounted = false;
        } };
      var ReactClassMixin = {
        replaceState: function (newState, callback) {
          this.updater.enqueueReplaceState(this, newState, callback);
        },
        isMounted: function () {
          if ('production' !== 'production') {
            warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');
            this.__didWarnIsMounted = true;
          }
          return !!this.__isMounted;
        }
      };
      var ReactClassComponent = function () {};
      _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
      function createClass(spec) {
        var Constructor = identity(function (props, context, updater) {
          if ('production' !== 'production') {
            warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');
          }
          if (this.__reactAutoBindPairs.length) {
            bindAutoBindMethods(this);
          }
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
          this.state = null;
          var initialState = this.getInitialState ? this.getInitialState() : null;
          if ('production' !== 'production') {
            if (initialState === undefined && this.getInitialState._isMockFunction) {
              initialState = null;
            }
          }
          _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');
          this.state = initialState;
        });
        Constructor.prototype = new ReactClassComponent();
        Constructor.prototype.constructor = Constructor;
        Constructor.prototype.__reactAutoBindPairs = [];
        injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
        mixSpecIntoComponent(Constructor, IsMountedPreMixin);
        mixSpecIntoComponent(Constructor, spec);
        mixSpecIntoComponent(Constructor, IsMountedPostMixin);
        if (Constructor.getDefaultProps) {
          Constructor.defaultProps = Constructor.getDefaultProps();
        }
        if ('production' !== 'production') {
          if (Constructor.getDefaultProps) {
            Constructor.getDefaultProps.isReactClassApproved = {};
          }
          if (Constructor.prototype.getInitialState) {
            Constructor.prototype.getInitialState.isReactClassApproved = {};
          }
        }
        _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');
        if ('production' !== 'production') {
          warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');
          warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');
        }
        for (var methodName in ReactClassInterface) {
          if (!Constructor.prototype[methodName]) {
            Constructor.prototype[methodName] = null;
          }
        }
        return Constructor;
      }
      return createClass;
    }
    module.exports = factory;
  })($__require('16'));
});
$__System.registerDynamic('2c4', ['2c0', '2ba', '2c1', '4a'], true, function ($__require, exports, module) {
    /* */
    'use strict';

    var global = this || self,
        GLOBAL = global;
    var _require = $__require('2c0'),
        Component = _require.Component;
    var _require2 = $__require('2ba'),
        isValidElement = _require2.isValidElement;
    var ReactNoopUpdateQueue = $__require('2c1');
    var factory = $__require('4a');
    module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);
});
$__System.registerDynamic('2c5', ['2b4', '2ba', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4');
    var ReactElement = $__require('2ba');
    var invariant = $__require('169');
    function onlyChild(children) {
      !ReactElement.isValidElement(children) ? 'production' !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
      return children;
    }
    module.exports = onlyChild;
  })($__require('16'));
});
$__System.registerDynamic('2b7', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var global = this || self,
      GLOBAL = global;
  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;
});
$__System.registerDynamic('2ba', ['165', '268', '16a', '2c2', '2b7', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var ReactCurrentOwner = $__require('268');
    var warning = $__require('16a');
    var canDefineProperty = $__require('2c2');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var REACT_ELEMENT_TYPE = $__require('2b7');
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown;
    function hasValidRef(config) {
      if ('production' !== 'production') {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }
    function hasValidKey(config) {
      if ('production' !== 'production') {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          'production' !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
        }
      };
      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }
    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          'production' !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
        }
      };
      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }
    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        ref: ref,
        props: props,
        _owner: owner
      };
      if ('production' !== 'production') {
        element._store = {};
        if (canDefineProperty) {
          Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
          });
          Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
          });
          Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
          });
        } else {
          element._store.validated = false;
          element._self = self;
          element._source = source;
        }
        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    ReactElement.createElement = function (type, config, children) {
      var propName;
      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;
      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source;
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        if ('production' !== 'production') {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      }
      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;
        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }
      if ('production' !== 'production') {
        if (key || ref) {
          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) {
              defineKeyPropWarningGetter(props, displayName);
            }
            if (ref) {
              defineRefPropWarningGetter(props, displayName);
            }
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    };
    ReactElement.createFactory = function (type) {
      var factory = ReactElement.createElement.bind(null, type);
      factory.type = type;
      return factory;
    };
    ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    };
    ReactElement.cloneElement = function (element, config, children) {
      var propName;
      var props = _assign({}, element.props);
      var key = element.key;
      var ref = element.ref;
      var self = element._self;
      var source = element._source;
      var owner = element._owner;
      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }
        if (hasValidKey(config)) {
          key = '' + config.key;
        }
        var defaultProps;
        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }
        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      }
      var childrenLength = arguments.length - 2;
      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }
        props.children = childArray;
      }
      return ReactElement(element.type, key, ref, self, source, owner, props);
    };
    ReactElement.isValidElement = function (object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    };
    module.exports = ReactElement;
  })($__require('16'));
});
$__System.registerDynamic('2c6', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypeLocationNames = {};
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('16'));
});
$__System.registerDynamic('2c7', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
$__System.registerDynamic('2c8', ['2b4', '2c6', '2c7', '169', '16a', '265', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4');
    var ReactPropTypeLocationNames = $__require('2c6');
    var ReactPropTypesSecret = $__require('2c7');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('265');
    }
    var loggedTypeFailures = {};
    function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
      for (var typeSpecName in typeSpecs) {
        if (typeSpecs.hasOwnProperty(typeSpecName)) {
          var error;
          try {
            !(typeof typeSpecs[typeSpecName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          'production' !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var componentStackInfo = '';
            if ('production' !== 'production') {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = $__require('265');
              }
              if (debugID !== null) {
                componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
              } else if (element !== null) {
                componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
              }
            }
            'production' !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
          }
        }
      }
    }
    module.exports = checkReactTypeSpec;
  })($__require('16'));
});
$__System.registerDynamic('2c2', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var canDefineProperty = false;
    if ('production' !== 'production') {
      try {
        Object.defineProperty({}, 'x', { get: function () {} });
        canDefineProperty = true;
      } catch (x) {}
    }
    module.exports = canDefineProperty;
  })($__require('16'));
});
$__System.registerDynamic('2b8', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var global = this || self,
      GLOBAL = global;
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;
});
$__System.registerDynamic('2c3', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var lowPriorityWarning = function () {};
    if ('production' !== 'production') {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.warn(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      lowPriorityWarning = function (condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    module.exports = lowPriorityWarning;
  })($__require('16'));
});
$__System.registerDynamic('2bc', ['268', '265', '2ba', '2c8', '2c2', '2b8', '16a', '2c3', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactCurrentOwner = $__require('268');
    var ReactComponentTreeHook = $__require('265');
    var ReactElement = $__require('2ba');
    var checkReactTypeSpec = $__require('2c8');
    var canDefineProperty = $__require('2c2');
    var getIteratorFn = $__require('2b8');
    var warning = $__require('16a');
    var lowPriorityWarning = $__require('2c3');
    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = ReactCurrentOwner.current.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function getSourceInfoErrorAddendum(elementProps) {
      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
        var source = elementProps.__source;
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return ' Check your code at ' + fileName + ':' + lineNumber + '.';
      }
      return '';
    }
    var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();
      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
        if (parentName) {
          info = ' Check the top-level render call using <' + parentName + '>.';
        }
      }
      return info;
    }
    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }
      element._store.validated = true;
      var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
      if (memoizer[currentComponentErrorInfo]) {
        return;
      }
      memoizer[currentComponentErrorInfo] = true;
      var childOwner = '';
      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
      }
      'production' !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
    }
    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }
      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];
          if (ReactElement.isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (ReactElement.isValidElement(node)) {
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);
        if (iteratorFn) {
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;
            while (!(step = iterator.next()).done) {
              if (ReactElement.isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    function validatePropTypes(element) {
      var componentClass = element.type;
      if (typeof componentClass !== 'function') {
        return;
      }
      var name = componentClass.displayName || componentClass.name;
      if (componentClass.propTypes) {
        checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
      }
      if (typeof componentClass.getDefaultProps === 'function') {
        'production' !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    var ReactElementValidator = {
      createElement: function (type, props, children) {
        var validType = typeof type === 'string' || typeof type === 'function';
        if (!validType) {
          if (typeof type !== 'function' && typeof type !== 'string') {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in.";
            }
            var sourceInfo = getSourceInfoErrorAddendum(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            info += ReactComponentTreeHook.getCurrentStackAddendum();
            var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
            ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
            'production' !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
            ReactComponentTreeHook.popNonStandardWarningStack();
          }
        }
        var element = ReactElement.createElement.apply(this, arguments);
        if (element == null) {
          return element;
        }
        if (validType) {
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], type);
          }
        }
        validatePropTypes(element);
        return element;
      },
      createFactory: function (type) {
        var validatedFactory = ReactElementValidator.createElement.bind(null, type);
        validatedFactory.type = type;
        if ('production' !== 'production') {
          if (canDefineProperty) {
            Object.defineProperty(validatedFactory, 'type', {
              enumerable: false,
              get: function () {
                lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
                Object.defineProperty(this, 'type', { value: type });
                return type;
              }
            });
          }
        }
        return validatedFactory;
      },
      cloneElement: function (element, props, children) {
        var newElement = ReactElement.cloneElement.apply(this, arguments);
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], newElement.type);
        }
        validatePropTypes(newElement);
        return newElement;
      }
    };
    module.exports = ReactElementValidator;
  })($__require('16'));
});
$__System.registerDynamic('22f', ['165', '2c0', '2b9', '2bb', '2ba', '2be', '2bf', '2c4', '2c5', '2c3', '2c2', '2bc', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _assign = $__require('165');
    var ReactBaseClasses = $__require('2c0');
    var ReactChildren = $__require('2b9');
    var ReactDOMFactories = $__require('2bb');
    var ReactElement = $__require('2ba');
    var ReactPropTypes = $__require('2be');
    var ReactVersion = $__require('2bf');
    var createReactClass = $__require('2c4');
    var onlyChild = $__require('2c5');
    var createElement = ReactElement.createElement;
    var createFactory = ReactElement.createFactory;
    var cloneElement = ReactElement.cloneElement;
    if ('production' !== 'production') {
      var lowPriorityWarning = $__require('2c3');
      var canDefineProperty = $__require('2c2');
      var ReactElementValidator = $__require('2bc');
      var didWarnPropTypesDeprecated = false;
      createElement = ReactElementValidator.createElement;
      createFactory = ReactElementValidator.createFactory;
      cloneElement = ReactElementValidator.cloneElement;
    }
    var __spread = _assign;
    var createMixin = function (mixin) {
      return mixin;
    };
    if ('production' !== 'production') {
      var warnedForSpread = false;
      var warnedForCreateMixin = false;
      __spread = function () {
        lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
        warnedForSpread = true;
        return _assign.apply(null, arguments);
      };
      createMixin = function (mixin) {
        lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
        warnedForCreateMixin = true;
        return mixin;
      };
    }
    var React = {
      Children: {
        map: ReactChildren.map,
        forEach: ReactChildren.forEach,
        count: ReactChildren.count,
        toArray: ReactChildren.toArray,
        only: onlyChild
      },
      Component: ReactBaseClasses.Component,
      PureComponent: ReactBaseClasses.PureComponent,
      createElement: createElement,
      cloneElement: cloneElement,
      isValidElement: ReactElement.isValidElement,
      PropTypes: ReactPropTypes,
      createClass: createReactClass,
      createFactory: createFactory,
      createMixin: createMixin,
      DOM: ReactDOMFactories,
      version: ReactVersion,
      __spread: __spread
    };
    if ('production' !== 'production') {
      var warnedForCreateClass = false;
      if (canDefineProperty) {
        Object.defineProperty(React, 'PropTypes', { get: function () {
            lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
            didWarnPropTypesDeprecated = true;
            return ReactPropTypes;
          } });
        Object.defineProperty(React, 'createClass', { get: function () {
            lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
            warnedForCreateClass = true;
            return createReactClass;
          } });
      }
      React.DOM = {};
      var warnedForFactories = false;
      Object.keys(ReactDOMFactories).forEach(function (factory) {
        React.DOM[factory] = function () {
          if (!warnedForFactories) {
            lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
            warnedForFactories = true;
          }
          return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
        };
      });
    }
    module.exports = React;
  })($__require('16'));
});
$__System.registerDynamic('2aa', ['258', '22f', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var React = $__require('22f');
    var invariant = $__require('169');
    var ReactNodeTypes = {
      HOST: 0,
      COMPOSITE: 1,
      EMPTY: 2,
      getType: function (node) {
        if (node === null || node === false) {
          return ReactNodeTypes.EMPTY;
        } else if (React.isValidElement(node)) {
          if (typeof node.type === 'function') {
            return ReactNodeTypes.COMPOSITE;
          } else {
            return ReactNodeTypes.HOST;
          }
        }
        !false ? 'production' !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
      }
    };
    module.exports = ReactNodeTypes;
  })($__require('16'));
});
$__System.registerDynamic('2c9', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    function isValidOwner(object) {
      return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
    }
    var ReactOwner = {
      addComponentAsRefTo: function (component, ref, owner) {
        !isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
        owner.attachRef(ref, component);
      },
      removeComponentAsRefFrom: function (component, ref, owner) {
        !isValidOwner(owner) ? 'production' !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
        var ownerPublicInstance = owner.getPublicInstance();
        if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
          owner.detachRef(ref);
        }
      }
    };
    module.exports = ReactOwner;
  })($__require('16'));
});
$__System.registerDynamic('2ca', ['2c9', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactOwner = $__require('2c9');
    var ReactRef = {};
    function attachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(component.getPublicInstance());
      } else {
        ReactOwner.addComponentAsRefTo(component, ref, owner);
      }
    }
    function detachRef(ref, component, owner) {
      if (typeof ref === 'function') {
        ref(null);
      } else {
        ReactOwner.removeComponentAsRefFrom(component, ref, owner);
      }
    }
    ReactRef.attachRefs = function (instance, element) {
      if (element === null || typeof element !== 'object') {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        attachRef(ref, instance, element._owner);
      }
    };
    ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
      var prevRef = null;
      var prevOwner = null;
      if (prevElement !== null && typeof prevElement === 'object') {
        prevRef = prevElement.ref;
        prevOwner = prevElement._owner;
      }
      var nextRef = null;
      var nextOwner = null;
      if (nextElement !== null && typeof nextElement === 'object') {
        nextRef = nextElement.ref;
        nextOwner = nextElement._owner;
      }
      return prevRef !== nextRef || typeof nextRef === 'string' && nextOwner !== prevOwner;
    };
    ReactRef.detachRefs = function (instance, element) {
      if (element === null || typeof element !== 'object') {
        return;
      }
      var ref = element.ref;
      if (ref != null) {
        detachRef(ref, instance, element._owner);
      }
    };
    module.exports = ReactRef;
  })($__require('16'));
});
$__System.registerDynamic('260', ['2ca', '253', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactRef = $__require('2ca');
    var ReactInstrumentation = $__require('253');
    var warning = $__require('16a');
    function attachRefs() {
      ReactRef.attachRefs(this, this._currentElement);
    }
    var ReactReconciler = {
      mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) {
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
          }
        }
        var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
        if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
          }
        }
        return markup;
      },
      getHostNode: function (internalInstance) {
        return internalInstance.getHostNode();
      },
      unmountComponent: function (internalInstance, safely) {
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
          }
        }
        ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
        internalInstance.unmountComponent(safely);
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
          }
        }
      },
      receiveComponent: function (internalInstance, nextElement, transaction, context) {
        var prevElement = internalInstance._currentElement;
        if (nextElement === prevElement && context === internalInstance._context) {
          return;
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
          }
        }
        var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
        if (refsChanged) {
          ReactRef.detachRefs(internalInstance, prevElement);
        }
        internalInstance.receiveComponent(nextElement, transaction, context);
        if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
          transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      },
      performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
        if (internalInstance._updateBatchNumber !== updateBatchNumber) {
          'production' !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
          return;
        }
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
          }
        }
        internalInstance.performUpdateIfNecessary(transaction);
        if ('production' !== 'production') {
          if (internalInstance._debugID !== 0) {
            ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
          }
        }
      }
    };
    module.exports = ReactReconciler;
  })($__require('16'));
});
$__System.registerDynamic('2cb', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactPropTypeLocationNames = {};
    if ('production' !== 'production') {
      ReactPropTypeLocationNames = {
        prop: 'prop',
        context: 'context',
        childContext: 'child context'
      };
    }
    module.exports = ReactPropTypeLocationNames;
  })($__require('16'));
});
$__System.registerDynamic('25c', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
$__System.registerDynamic('2cc', ['258', '2cb', '25c', '169', '16a', '265', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var ReactPropTypeLocationNames = $__require('2cb');
    var ReactPropTypesSecret = $__require('25c');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var ReactComponentTreeHook;
    if (typeof process !== 'undefined' && process.env && 'production' === 'test') {
      ReactComponentTreeHook = $__require('265');
    }
    var loggedTypeFailures = {};
    function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
      for (var typeSpecName in typeSpecs) {
        if (typeSpecs.hasOwnProperty(typeSpecName)) {
          var error;
          try {
            !(typeof typeSpecs[typeSpecName] === 'function') ? 'production' !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          'production' !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
          if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = true;
            var componentStackInfo = '';
            if ('production' !== 'production') {
              if (!ReactComponentTreeHook) {
                ReactComponentTreeHook = $__require('265');
              }
              if (debugID !== null) {
                componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
              } else if (element !== null) {
                componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
              }
            }
            'production' !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
          }
        }
      }
    }
    module.exports = checkReactTypeSpec;
  })($__require('16'));
});
$__System.registerDynamic('166', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyObject = {};
    if ('production' !== 'production') {
      Object.freeze(emptyObject);
    }
    module.exports = emptyObject;
  })($__require('16'));
});
$__System.registerDynamic('278', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   * 
   */

  /*eslint-disable no-self-compare */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      // Added the nonzero y check to make Flow happy, but it is redundant
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }

  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  module.exports = shallowEqual;
});
$__System.registerDynamic('2cd', ['258', '165', '22f', '26b', '268', '2ab', '26c', '253', '2aa', '260', '2cc', '166', '169', '278', '263', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var React = $__require('22f');
    var ReactComponentEnvironment = $__require('26b');
    var ReactCurrentOwner = $__require('268');
    var ReactErrorUtils = $__require('2ab');
    var ReactInstanceMap = $__require('26c');
    var ReactInstrumentation = $__require('253');
    var ReactNodeTypes = $__require('2aa');
    var ReactReconciler = $__require('260');
    if ('production' !== 'production') {
      var checkReactTypeSpec = $__require('2cc');
    }
    var emptyObject = $__require('166');
    var invariant = $__require('169');
    var shallowEqual = $__require('278');
    var shouldUpdateReactComponent = $__require('263');
    var warning = $__require('16a');
    var CompositeTypes = {
      ImpureClass: 0,
      PureClass: 1,
      StatelessFunctional: 2
    };
    function StatelessComponent(Component) {}
    StatelessComponent.prototype.render = function () {
      var Component = ReactInstanceMap.get(this)._currentElement.type;
      var element = Component(this.props, this.context, this.updater);
      warnIfInvalidElement(Component, element);
      return element;
    };
    function warnIfInvalidElement(Component, element) {
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
        'production' !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
      }
    }
    function shouldConstruct(Component) {
      return !!(Component.prototype && Component.prototype.isReactComponent);
    }
    function isPureComponent(Component) {
      return !!(Component.prototype && Component.prototype.isPureReactComponent);
    }
    function measureLifeCyclePerf(fn, debugID, timerType) {
      if (debugID === 0) {
        return fn();
      }
      ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
      try {
        return fn();
      } finally {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
      }
    }
    var nextMountID = 1;
    var ReactCompositeComponent = {
      construct: function (element) {
        this._currentElement = element;
        this._rootNodeID = 0;
        this._compositeType = null;
        this._instance = null;
        this._hostParent = null;
        this._hostContainerInfo = null;
        this._updateBatchNumber = null;
        this._pendingElement = null;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._renderedNodeType = null;
        this._renderedComponent = null;
        this._context = null;
        this._mountOrder = 0;
        this._topLevelWrapper = null;
        this._pendingCallbacks = null;
        this._calledComponentWillUnmount = false;
        if ('production' !== 'production') {
          this._warnedAboutRefsInRender = false;
        }
      },
      mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
        var _this = this;
        this._context = context;
        this._mountOrder = nextMountID++;
        this._hostParent = hostParent;
        this._hostContainerInfo = hostContainerInfo;
        var publicProps = this._currentElement.props;
        var publicContext = this._processContext(context);
        var Component = this._currentElement.type;
        var updateQueue = transaction.getUpdateQueue();
        var doConstruct = shouldConstruct(Component);
        var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
        var renderedElement;
        if (!doConstruct && (inst == null || inst.render == null)) {
          renderedElement = inst;
          warnIfInvalidElement(Component, renderedElement);
          !(inst === null || inst === false || React.isValidElement(inst)) ? 'production' !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
          inst = new StatelessComponent(Component);
          this._compositeType = CompositeTypes.StatelessFunctional;
        } else {
          if (isPureComponent(Component)) {
            this._compositeType = CompositeTypes.PureClass;
          } else {
            this._compositeType = CompositeTypes.ImpureClass;
          }
        }
        if ('production' !== 'production') {
          if (inst.render == null) {
            'production' !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
          }
          var propsMutated = inst.props !== publicProps;
          var componentName = Component.displayName || Component.name || 'Component';
          'production' !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
        }
        inst.props = publicProps;
        inst.context = publicContext;
        inst.refs = emptyObject;
        inst.updater = updateQueue;
        this._instance = inst;
        ReactInstanceMap.set(inst, this);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
          'production' !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
        }
        var initialState = inst.state;
        if (initialState === undefined) {
          inst.state = initialState = null;
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ? 'production' !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        var markup;
        if (inst.unstable_handleError) {
          markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } else {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        if (inst.componentDidMount) {
          if ('production' !== 'production') {
            transaction.getReactMountReady().enqueue(function () {
              measureLifeCyclePerf(function () {
                return inst.componentDidMount();
              }, _this._debugID, 'componentDidMount');
            });
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
          }
        }
        return markup;
      },
      _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
        if ('production' !== 'production' && !doConstruct) {
          ReactCurrentOwner.current = this;
          try {
            return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
        }
      },
      _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
        var Component = this._currentElement.type;
        if (doConstruct) {
          if ('production' !== 'production') {
            return measureLifeCyclePerf(function () {
              return new Component(publicProps, publicContext, updateQueue);
            }, this._debugID, 'ctor');
          } else {
            return new Component(publicProps, publicContext, updateQueue);
          }
        }
        if ('production' !== 'production') {
          return measureLifeCyclePerf(function () {
            return Component(publicProps, publicContext, updateQueue);
          }, this._debugID, 'render');
        } else {
          return Component(publicProps, publicContext, updateQueue);
        }
      },
      performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var markup;
        var checkpoint = transaction.checkpoint();
        try {
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        } catch (e) {
          transaction.rollback(checkpoint);
          this._instance.unstable_handleError(e);
          if (this._pendingStateQueue) {
            this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
          }
          checkpoint = transaction.checkpoint();
          this._renderedComponent.unmountComponent(true);
          transaction.rollback(checkpoint);
          markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
        }
        return markup;
      },
      performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
        var inst = this._instance;
        var debugID = 0;
        if ('production' !== 'production') {
          debugID = this._debugID;
        }
        if (inst.componentWillMount) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillMount();
            }, debugID, 'componentWillMount');
          } else {
            inst.componentWillMount();
          }
          if (this._pendingStateQueue) {
            inst.state = this._processPendingState(inst.props, inst.context);
          }
        }
        if (renderedElement === undefined) {
          renderedElement = this._renderValidatedComponent();
        }
        var nodeType = ReactNodeTypes.getType(renderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY);
        this._renderedComponent = child;
        var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);
        if ('production' !== 'production') {
          if (debugID !== 0) {
            var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
            ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
          }
        }
        return markup;
      },
      getHostNode: function () {
        return ReactReconciler.getHostNode(this._renderedComponent);
      },
      unmountComponent: function (safely) {
        if (!this._renderedComponent) {
          return;
        }
        var inst = this._instance;
        if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
          inst._calledComponentWillUnmount = true;
          if (safely) {
            var name = this.getName() + '.componentWillUnmount()';
            ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
          } else {
            if ('production' !== 'production') {
              measureLifeCyclePerf(function () {
                return inst.componentWillUnmount();
              }, this._debugID, 'componentWillUnmount');
            } else {
              inst.componentWillUnmount();
            }
          }
        }
        if (this._renderedComponent) {
          ReactReconciler.unmountComponent(this._renderedComponent, safely);
          this._renderedNodeType = null;
          this._renderedComponent = null;
          this._instance = null;
        }
        this._pendingStateQueue = null;
        this._pendingReplaceState = false;
        this._pendingForceUpdate = false;
        this._pendingCallbacks = null;
        this._pendingElement = null;
        this._context = null;
        this._rootNodeID = 0;
        this._topLevelWrapper = null;
        ReactInstanceMap.remove(inst);
      },
      _maskContext: function (context) {
        var Component = this._currentElement.type;
        var contextTypes = Component.contextTypes;
        if (!contextTypes) {
          return emptyObject;
        }
        var maskedContext = {};
        for (var contextName in contextTypes) {
          maskedContext[contextName] = context[contextName];
        }
        return maskedContext;
      },
      _processContext: function (context) {
        var maskedContext = this._maskContext(context);
        if ('production' !== 'production') {
          var Component = this._currentElement.type;
          if (Component.contextTypes) {
            this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
          }
        }
        return maskedContext;
      },
      _processChildContext: function (currentContext) {
        var Component = this._currentElement.type;
        var inst = this._instance;
        var childContext;
        if (inst.getChildContext) {
          if ('production' !== 'production') {
            ReactInstrumentation.debugTool.onBeginProcessingChildContext();
            try {
              childContext = inst.getChildContext();
            } finally {
              ReactInstrumentation.debugTool.onEndProcessingChildContext();
            }
          } else {
            childContext = inst.getChildContext();
          }
        }
        if (childContext) {
          !(typeof Component.childContextTypes === 'object') ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
          if ('production' !== 'production') {
            this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
          }
          for (var name in childContext) {
            !(name in Component.childContextTypes) ? 'production' !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
          }
          return _assign({}, currentContext, childContext);
        }
        return currentContext;
      },
      _checkContextTypes: function (typeSpecs, values, location) {
        if ('production' !== 'production') {
          checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
        }
      },
      receiveComponent: function (nextElement, transaction, nextContext) {
        var prevElement = this._currentElement;
        var prevContext = this._context;
        this._pendingElement = null;
        this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
      },
      performUpdateIfNecessary: function (transaction) {
        if (this._pendingElement != null) {
          ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
        } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
          this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
        } else {
          this._updateBatchNumber = null;
        }
      },
      updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
        var inst = this._instance;
        !(inst != null) ? 'production' !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
        var willReceive = false;
        var nextContext;
        if (this._context === nextUnmaskedContext) {
          nextContext = inst.context;
        } else {
          nextContext = this._processContext(nextUnmaskedContext);
          willReceive = true;
        }
        var prevProps = prevParentElement.props;
        var nextProps = nextParentElement.props;
        if (prevParentElement !== nextParentElement) {
          willReceive = true;
        }
        if (willReceive && inst.componentWillReceiveProps) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillReceiveProps(nextProps, nextContext);
            }, this._debugID, 'componentWillReceiveProps');
          } else {
            inst.componentWillReceiveProps(nextProps, nextContext);
          }
        }
        var nextState = this._processPendingState(nextProps, nextContext);
        var shouldUpdate = true;
        if (!this._pendingForceUpdate) {
          if (inst.shouldComponentUpdate) {
            if ('production' !== 'production') {
              shouldUpdate = measureLifeCyclePerf(function () {
                return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
              }, this._debugID, 'shouldComponentUpdate');
            } else {
              shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
            }
          } else {
            if (this._compositeType === CompositeTypes.PureClass) {
              shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
            }
          }
        }
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
        }
        this._updateBatchNumber = null;
        if (shouldUpdate) {
          this._pendingForceUpdate = false;
          this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
        } else {
          this._currentElement = nextParentElement;
          this._context = nextUnmaskedContext;
          inst.props = nextProps;
          inst.state = nextState;
          inst.context = nextContext;
        }
      },
      _processPendingState: function (props, context) {
        var inst = this._instance;
        var queue = this._pendingStateQueue;
        var replace = this._pendingReplaceState;
        this._pendingReplaceState = false;
        this._pendingStateQueue = null;
        if (!queue) {
          return inst.state;
        }
        if (replace && queue.length === 1) {
          return queue[0];
        }
        var nextState = _assign({}, replace ? queue[0] : inst.state);
        for (var i = replace ? 1 : 0; i < queue.length; i++) {
          var partial = queue[i];
          _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
        }
        return nextState;
      },
      _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
        var _this2 = this;
        var inst = this._instance;
        var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
        var prevProps;
        var prevState;
        var prevContext;
        if (hasComponentDidUpdate) {
          prevProps = inst.props;
          prevState = inst.state;
          prevContext = inst.context;
        }
        if (inst.componentWillUpdate) {
          if ('production' !== 'production') {
            measureLifeCyclePerf(function () {
              return inst.componentWillUpdate(nextProps, nextState, nextContext);
            }, this._debugID, 'componentWillUpdate');
          } else {
            inst.componentWillUpdate(nextProps, nextState, nextContext);
          }
        }
        this._currentElement = nextElement;
        this._context = unmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
        this._updateRenderedComponent(transaction, unmaskedContext);
        if (hasComponentDidUpdate) {
          if ('production' !== 'production') {
            transaction.getReactMountReady().enqueue(function () {
              measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
            });
          } else {
            transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
          }
        }
      },
      _updateRenderedComponent: function (transaction, context) {
        var prevComponentInstance = this._renderedComponent;
        var prevRenderedElement = prevComponentInstance._currentElement;
        var nextRenderedElement = this._renderValidatedComponent();
        var debugID = 0;
        if ('production' !== 'production') {
          debugID = this._debugID;
        }
        if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
          ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
        } else {
          var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
          ReactReconciler.unmountComponent(prevComponentInstance, false);
          var nodeType = ReactNodeTypes.getType(nextRenderedElement);
          this._renderedNodeType = nodeType;
          var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY);
          this._renderedComponent = child;
          var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);
          if ('production' !== 'production') {
            if (debugID !== 0) {
              var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
              ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
            }
          }
          this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
        }
      },
      _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
        ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
      },
      _renderValidatedComponentWithoutOwnerOrContext: function () {
        var inst = this._instance;
        var renderedElement;
        if ('production' !== 'production') {
          renderedElement = measureLifeCyclePerf(function () {
            return inst.render();
          }, this._debugID, 'render');
        } else {
          renderedElement = inst.render();
        }
        if ('production' !== 'production') {
          if (renderedElement === undefined && inst.render._isMockFunction) {
            renderedElement = null;
          }
        }
        return renderedElement;
      },
      _renderValidatedComponent: function () {
        var renderedElement;
        if ('production' !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
          ReactCurrentOwner.current = this;
          try {
            renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
          } finally {
            ReactCurrentOwner.current = null;
          }
        } else {
          renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
        }
        !(renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? 'production' !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
        return renderedElement;
      },
      attachRef: function (ref, component) {
        var inst = this.getPublicInstance();
        !(inst != null) ? 'production' !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
        var publicComponentInstance = component.getPublicInstance();
        if ('production' !== 'production') {
          var componentName = component && component.getName ? component.getName() : 'a component';
          'production' !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
        }
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        refs[ref] = publicComponentInstance;
      },
      detachRef: function (ref) {
        var refs = this.getPublicInstance().refs;
        delete refs[ref];
      },
      getName: function () {
        var type = this._currentElement.type;
        var constructor = this._instance && this._instance.constructor;
        return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
      },
      getPublicInstance: function () {
        var inst = this._instance;
        if (this._compositeType === CompositeTypes.StatelessFunctional) {
          return null;
        }
        return inst;
      },
      _instantiateReactComponent: null
    };
    module.exports = ReactCompositeComponent;
  })($__require('16'));
});
$__System.registerDynamic('289', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2014-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var emptyComponentFactory;

  var ReactEmptyComponentInjection = {
    injectEmptyComponentFactory: function (factory) {
      emptyComponentFactory = factory;
    }
  };

  var ReactEmptyComponent = {
    create: function (instantiate) {
      return emptyComponentFactory(instantiate);
    }
  };

  ReactEmptyComponent.injection = ReactEmptyComponentInjection;

  module.exports = ReactEmptyComponent;
});
$__System.registerDynamic('28a', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    var genericComponentClass = null;
    var textComponentClass = null;
    var ReactHostComponentInjection = {
      injectGenericComponentClass: function (componentClass) {
        genericComponentClass = componentClass;
      },
      injectTextComponentClass: function (componentClass) {
        textComponentClass = componentClass;
      }
    };
    function createInternalComponent(element) {
      !genericComponentClass ? 'production' !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
      return new genericComponentClass(element);
    }
    function createInstanceForText(text) {
      return new textComponentClass(text);
    }
    function isTextComponent(component) {
      return component instanceof textComponentClass;
    }
    var ReactHostComponent = {
      createInternalComponent: createInternalComponent,
      createInstanceForText: createInstanceForText,
      isTextComponent: isTextComponent,
      injection: ReactHostComponentInjection
    };
    module.exports = ReactHostComponent;
  })($__require('16'));
});
$__System.registerDynamic('2ce', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var nextDebugID = 1;

  function getNextDebugID() {
    return nextDebugID++;
  }

  module.exports = getNextDebugID;
});
$__System.registerDynamic('261', ['258', '165', '2cd', '289', '28a', '2ce', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258'),
        _assign = $__require('165');
    var ReactCompositeComponent = $__require('2cd');
    var ReactEmptyComponent = $__require('289');
    var ReactHostComponent = $__require('28a');
    var getNextDebugID = $__require('2ce');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var ReactCompositeComponentWrapper = function (element) {
      this.construct(element);
    };
    function getDeclarationErrorAddendum(owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    }
    function isInternalComponentType(type) {
      return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
    }
    function instantiateReactComponent(node, shouldHaveDebugID) {
      var instance;
      if (node === null || node === false) {
        instance = ReactEmptyComponent.create(instantiateReactComponent);
      } else if (typeof node === 'object') {
        var element = node;
        var type = element.type;
        if (typeof type !== 'function' && typeof type !== 'string') {
          var info = '';
          if ('production' !== 'production') {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in.";
            }
          }
          info += getDeclarationErrorAddendum(element._owner);
          !false ? 'production' !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
        }
        if (typeof element.type === 'string') {
          instance = ReactHostComponent.createInternalComponent(element);
        } else if (isInternalComponentType(element.type)) {
          instance = new element.type(element);
          if (!instance.getHostNode) {
            instance.getHostNode = instance.getNativeNode;
          }
        } else {
          instance = new ReactCompositeComponentWrapper(element);
        }
      } else if (typeof node === 'string' || typeof node === 'number') {
        instance = ReactHostComponent.createInstanceForText(node);
      } else {
        !false ? 'production' !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
      }
      if ('production' !== 'production') {
        'production' !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
      }
      instance._mountIndex = 0;
      instance._mountImage = null;
      if ('production' !== 'production') {
        instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
      }
      if ('production' !== 'production') {
        if (Object.preventExtensions) {
          Object.preventExtensions(instance);
        }
      }
      return instance;
    }
    _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, { _instantiateReactComponent: instantiateReactComponent });
    module.exports = instantiateReactComponent;
  })($__require('16'));
});
$__System.registerDynamic('273', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var DOMNamespaces = {
    html: 'http://www.w3.org/1999/xhtml',
    mathml: 'http://www.w3.org/1998/Math/MathML',
    svg: 'http://www.w3.org/2000/svg'
  };

  module.exports = DOMNamespaces;
});
$__System.registerDynamic('27f', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  /* globals MSApp */

  'use strict';

  /**
   * Create a function which has 'unsafe' privileges (required by windows8 apps)
   */

  var global = this || self,
      GLOBAL = global;
  var createMicrosoftUnsafeLocalFunction = function (func) {
    if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
      return function (arg0, arg1, arg2, arg3) {
        MSApp.execUnsafeLocalFunction(function () {
          return func(arg0, arg1, arg2, arg3);
        });
      };
    } else {
      return func;
    }
  };

  module.exports = createMicrosoftUnsafeLocalFunction;
});
$__System.registerDynamic('280', ['239', '273', '27f', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ExecutionEnvironment = $__require('239');
    var DOMNamespaces = $__require('273');
    var WHITESPACE_TEST = /^[ \r\n\t\f]/;
    var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
    var createMicrosoftUnsafeLocalFunction = $__require('27f');
    var reusableSVGContainer;
    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
        reusableSVGContainer = reusableSVGContainer || document.createElement('div');
        reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
        var svgNode = reusableSVGContainer.firstChild;
        while (svgNode.firstChild) {
          node.appendChild(svgNode.firstChild);
        }
      } else {
        node.innerHTML = html;
      }
    });
    if (ExecutionEnvironment.canUseDOM) {
      var testElement = document.createElement('div');
      testElement.innerHTML = ' ';
      if (testElement.innerHTML === '') {
        setInnerHTML = function (node, html) {
          if (node.parentNode) {
            node.parentNode.replaceChild(node, node);
          }
          if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
            node.innerHTML = String.fromCharCode(0xfeff) + html;
            var textNode = node.firstChild;
            if (textNode.data.length === 1) {
              node.removeChild(textNode);
            } else {
              textNode.deleteData(0, 1);
            }
          } else {
            node.innerHTML = html;
          }
        };
      }
      testElement = null;
    }
    module.exports = setInnerHTML;
  })($__require('16'));
});
$__System.registerDynamic('263', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  /**
   * Given a `prevElement` and `nextElement`, determines if the existing
   * instance should be updated as opposed to being destroyed or replaced by a new
   * instance. Both arguments are elements. This ensures that this logic can
   * operate on stateless trees without any backing instance.
   *
   * @param {?object} prevElement
   * @param {?object} nextElement
   * @return {boolean} True if the existing instance should be updated.
   * @protected
   */

  var global = this || self,
      GLOBAL = global;
  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }

    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
  }

  module.exports = shouldUpdateReactComponent;
});
$__System.registerDynamic('2cf', ['258', '272', '246', '22f', '275', '268', '23c', '2ae', '2af', '2b2', '26c', '253', '2b1', '260', '26e', '23d', '166', '261', '169', '280', '263', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var DOMLazyTree = $__require('272');
    var DOMProperty = $__require('246');
    var React = $__require('22f');
    var ReactBrowserEventEmitter = $__require('275');
    var ReactCurrentOwner = $__require('268');
    var ReactDOMComponentTree = $__require('23c');
    var ReactDOMContainerInfo = $__require('2ae');
    var ReactDOMFeatureFlags = $__require('2af');
    var ReactFeatureFlags = $__require('2b2');
    var ReactInstanceMap = $__require('26c');
    var ReactInstrumentation = $__require('253');
    var ReactMarkupChecksum = $__require('2b1');
    var ReactReconciler = $__require('260');
    var ReactUpdateQueue = $__require('26e');
    var ReactUpdates = $__require('23d');
    var emptyObject = $__require('166');
    var instantiateReactComponent = $__require('261');
    var invariant = $__require('169');
    var setInnerHTML = $__require('280');
    var shouldUpdateReactComponent = $__require('263');
    var warning = $__require('16a');
    var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
    var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
    var ELEMENT_NODE_TYPE = 1;
    var DOC_NODE_TYPE = 9;
    var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
    var instancesByReactRootID = {};
    function firstDifferenceIndex(string1, string2) {
      var minLen = Math.min(string1.length, string2.length);
      for (var i = 0; i < minLen; i++) {
        if (string1.charAt(i) !== string2.charAt(i)) {
          return i;
        }
      }
      return string1.length === string2.length ? -1 : minLen;
    }
    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }
    function internalGetID(node) {
      return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
    }
    function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
      var markerName;
      if (ReactFeatureFlags.logTopLevelRenders) {
        var wrappedElement = wrapperInstance._currentElement.props.child;
        var type = wrappedElement.type;
        markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
        console.time(markerName);
      }
      var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0);
      if (markerName) {
        console.timeEnd(markerName);
      }
      wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
      ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
    }
    function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(!shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
      transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    }
    function unmountComponentFromNode(instance, container, safely) {
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onBeginFlush();
      }
      ReactReconciler.unmountComponent(instance, safely);
      if ('production' !== 'production') {
        ReactInstrumentation.debugTool.onEndFlush();
      }
      if (container.nodeType === DOC_NODE_TYPE) {
        container = container.documentElement;
      }
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
    }
    function hasNonRootReactChild(container) {
      var rootEl = getReactRootElementInContainer(container);
      if (rootEl) {
        var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
        return !!(inst && inst._hostParent);
      }
    }
    function nodeIsRenderedByOtherInstance(container) {
      var rootEl = getReactRootElementInContainer(container);
      return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
    }
    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
    }
    function isReactNode(node) {
      return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
    }
    function getHostRootInstanceInContainer(container) {
      var rootEl = getReactRootElementInContainer(container);
      var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
      return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
    }
    function getTopLevelWrapperInContainer(container) {
      var root = getHostRootInstanceInContainer(container);
      return root ? root._hostContainerInfo._topLevelWrapper : null;
    }
    var topLevelRootCounter = 1;
    var TopLevelWrapper = function () {
      this.rootID = topLevelRootCounter++;
    };
    TopLevelWrapper.prototype.isReactComponent = {};
    if ('production' !== 'production') {
      TopLevelWrapper.displayName = 'TopLevelWrapper';
    }
    TopLevelWrapper.prototype.render = function () {
      return this.props.child;
    };
    TopLevelWrapper.isReactTopLevelWrapper = true;
    var ReactMount = {
      TopLevelWrapper: TopLevelWrapper,
      _instancesByReactRootID: instancesByReactRootID,
      scrollMonitor: function (container, renderCallback) {
        renderCallback();
      },
      _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
        ReactMount.scrollMonitor(container, function () {
          ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
          if (callback) {
            ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
          }
        });
        return prevComponent;
      },
      _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
        ReactBrowserEventEmitter.ensureScrollValueMonitoring();
        var componentInstance = instantiateReactComponent(nextElement, false);
        ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
        var wrapperID = componentInstance._instance.rootID;
        instancesByReactRootID[wrapperID] = componentInstance;
        return componentInstance;
      },
      renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? 'production' !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
        return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
      },
      _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
        ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
        !React.isValidElement(nextElement) ? 'production' !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
        'production' !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
        var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });
        var nextContext;
        if (parentComponent) {
          var parentInst = ReactInstanceMap.get(parentComponent);
          nextContext = parentInst._processChildContext(parentInst._context);
        } else {
          nextContext = emptyObject;
        }
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (prevComponent) {
          var prevWrappedElement = prevComponent._currentElement;
          var prevElement = prevWrappedElement.props.child;
          if (shouldUpdateReactComponent(prevElement, nextElement)) {
            var publicInst = prevComponent._renderedComponent.getPublicInstance();
            var updatedCallback = callback && function () {
              callback.call(publicInst);
            };
            ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
            return publicInst;
          } else {
            ReactMount.unmountComponentAtNode(container);
          }
        }
        var reactRootElement = getReactRootElementInContainer(container);
        var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
        var containerHasNonRootReactChild = hasNonRootReactChild(container);
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
          if (!containerHasReactMarkup || reactRootElement.nextSibling) {
            var rootElementSibling = reactRootElement;
            while (rootElementSibling) {
              if (internalGetID(rootElementSibling)) {
                'production' !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
                break;
              }
              rootElementSibling = rootElementSibling.nextSibling;
            }
          }
        }
        var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
        var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
        if (callback) {
          callback.call(component);
        }
        return component;
      },
      render: function (nextElement, container, callback) {
        return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
      },
      unmountComponentAtNode: function (container) {
        'production' !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
        if ('production' !== 'production') {
          'production' !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
        }
        var prevComponent = getTopLevelWrapperInContainer(container);
        if (!prevComponent) {
          var containerHasNonRootReactChild = hasNonRootReactChild(container);
          var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
          if ('production' !== 'production') {
            'production' !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
          }
          return false;
        }
        delete instancesByReactRootID[prevComponent._instance.rootID];
        ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
        return true;
      },
      _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
        !isValidContainer(container) ? 'production' !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
        if (shouldReuseMarkup) {
          var rootElement = getReactRootElementInContainer(container);
          if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
            ReactDOMComponentTree.precacheNode(instance, rootElement);
            return;
          } else {
            var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
            var rootMarkup = rootElement.outerHTML;
            rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
            var normalizedMarkup = markup;
            if ('production' !== 'production') {
              var normalizer;
              if (container.nodeType === ELEMENT_NODE_TYPE) {
                normalizer = document.createElement('div');
                normalizer.innerHTML = markup;
                normalizedMarkup = normalizer.innerHTML;
              } else {
                normalizer = document.createElement('iframe');
                document.body.appendChild(normalizer);
                normalizer.contentDocument.write(markup);
                normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
                document.body.removeChild(normalizer);
              }
            }
            var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
            var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
            !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
            if ('production' !== 'production') {
              'production' !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
            }
          }
        }
        !(container.nodeType !== DOC_NODE_TYPE) ? 'production' !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
        if (transaction.useCreateElement) {
          while (container.lastChild) {
            container.removeChild(container.lastChild);
          }
          DOMLazyTree.insertTreeBefore(container, markup, null);
        } else {
          setInnerHTML(container, markup);
          ReactDOMComponentTree.precacheNode(instance, container.firstChild);
        }
        if ('production' !== 'production') {
          var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
          if (hostNode._debugID !== 0) {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: hostNode._debugID,
              type: 'mount',
              payload: markup.toString()
            });
          }
        }
      }
    };
    module.exports = ReactMount;
  })($__require('16'));
});
$__System.registerDynamic('2d0', ['2cf'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactMount = $__require('2cf');
  module.exports = ReactMount.renderSubtreeIntoContainer;
});
$__System.registerDynamic('2d1', ['16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var warning = $__require('16a');
    if ('production' !== 'production') {
      var processingChildContext = false;
      var warnInvalidSetState = function () {
        'production' !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
      };
    }
    var ReactInvalidSetStateWarningHook = {
      onBeginProcessingChildContext: function () {
        processingChildContext = true;
      },
      onEndProcessingChildContext: function () {
        processingChildContext = false;
      },
      onSetState: function () {
        warnInvalidSetState();
      }
    };
    module.exports = ReactInvalidSetStateWarningHook;
  })($__require('16'));
});
$__System.registerDynamic('2d2', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2016-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var history = [];

  var ReactHostOperationHistoryHook = {
    onHostOperation: function (operation) {
      history.push(operation);
    },
    clearHistory: function () {
      if (ReactHostOperationHistoryHook._preventClearing) {
        // Should only be used for tests.
        return;
      }

      history = [];
    },
    getHistory: function () {
      return history;
    }
  };

  module.exports = ReactHostOperationHistoryHook;
});
$__System.registerDynamic('239', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * Simple, lightweight module assisting with the detection and context of
   * Worker. Helps avoid circular dependencies and allows code to reason about
   * whether or not they are in a Worker, even if they never include the main
   * `ReactWorker` dependency.
   */
  var ExecutionEnvironment = {

    canUseDOM: canUseDOM,

    canUseWorkers: typeof Worker !== 'undefined',

    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

    canUseViewport: canUseDOM && !!window.screen,

    isInWorker: !canUseDOM // For now, this is true - might change in the future.

  };

  module.exports = ExecutionEnvironment;
});
$__System.registerDynamic('2d3', ['239'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ExecutionEnvironment = $__require('239');
  var performance;
  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }
  module.exports = performance || {};
});
$__System.registerDynamic('2d4', ['2d3'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var performance = $__require('2d3');
  var performanceNow;
  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }
  module.exports = performanceNow;
});
$__System.registerDynamic('2d5', ['2d1', '2d2', '265', '239', '2d4', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactInvalidSetStateWarningHook = $__require('2d1');
    var ReactHostOperationHistoryHook = $__require('2d2');
    var ReactComponentTreeHook = $__require('265');
    var ExecutionEnvironment = $__require('239');
    var performanceNow = $__require('2d4');
    var warning = $__require('16a');
    var hooks = [];
    var didHookThrowForEvent = {};
    function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
      try {
        fn.call(context, arg1, arg2, arg3, arg4, arg5);
      } catch (e) {
        'production' !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
        didHookThrowForEvent[event] = true;
      }
    }
    function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
      for (var i = 0; i < hooks.length; i++) {
        var hook = hooks[i];
        var fn = hook[event];
        if (fn) {
          callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
        }
      }
    }
    var isProfiling = false;
    var flushHistory = [];
    var lifeCycleTimerStack = [];
    var currentFlushNesting = 0;
    var currentFlushMeasurements = [];
    var currentFlushStartTime = 0;
    var currentTimerDebugID = null;
    var currentTimerStartTime = 0;
    var currentTimerNestedFlushDuration = 0;
    var currentTimerType = null;
    var lifeCycleTimerHasWarned = false;
    function clearHistory() {
      ReactComponentTreeHook.purgeUnmountedComponents();
      ReactHostOperationHistoryHook.clearHistory();
    }
    function getTreeSnapshot(registeredIDs) {
      return registeredIDs.reduce(function (tree, id) {
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        tree[id] = {
          displayName: ReactComponentTreeHook.getDisplayName(id),
          text: ReactComponentTreeHook.getText(id),
          updateCount: ReactComponentTreeHook.getUpdateCount(id),
          childIDs: ReactComponentTreeHook.getChildIDs(id),
          ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
          parentID: parentID
        };
        return tree;
      }, {});
    }
    function resetMeasurements() {
      var previousStartTime = currentFlushStartTime;
      var previousMeasurements = currentFlushMeasurements;
      var previousOperations = ReactHostOperationHistoryHook.getHistory();
      if (currentFlushNesting === 0) {
        currentFlushStartTime = 0;
        currentFlushMeasurements = [];
        clearHistory();
        return;
      }
      if (previousMeasurements.length || previousOperations.length) {
        var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
        flushHistory.push({
          duration: performanceNow() - previousStartTime,
          measurements: previousMeasurements || [],
          operations: previousOperations || [],
          treeSnapshot: getTreeSnapshot(registeredIDs)
        });
      }
      clearHistory();
      currentFlushStartTime = performanceNow();
      currentFlushMeasurements = [];
    }
    function checkDebugID(debugID) {
      var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (allowRoot && debugID === 0) {
        return;
      }
      if (!debugID) {
        'production' !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
      }
    }
    function beginLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType && !lifeCycleTimerHasWarned) {
        'production' !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      currentTimerStartTime = performanceNow();
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    function endLifeCycleTimer(debugID, timerType) {
      if (currentFlushNesting === 0) {
        return;
      }
      if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
        'production' !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
        lifeCycleTimerHasWarned = true;
      }
      if (isProfiling) {
        currentFlushMeasurements.push({
          timerType: timerType,
          instanceID: debugID,
          duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
        });
      }
      currentTimerStartTime = 0;
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function pauseCurrentLifeCycleTimer() {
      var currentTimer = {
        startTime: currentTimerStartTime,
        nestedFlushStartTime: performanceNow(),
        debugID: currentTimerDebugID,
        timerType: currentTimerType
      };
      lifeCycleTimerStack.push(currentTimer);
      currentTimerStartTime = 0;
      currentTimerNestedFlushDuration = 0;
      currentTimerDebugID = null;
      currentTimerType = null;
    }
    function resumeCurrentLifeCycleTimer() {
      var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
          startTime = _lifeCycleTimerStack$.startTime,
          nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
          debugID = _lifeCycleTimerStack$.debugID,
          timerType = _lifeCycleTimerStack$.timerType;
      var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
      currentTimerStartTime = startTime;
      currentTimerNestedFlushDuration += nestedFlushDuration;
      currentTimerDebugID = debugID;
      currentTimerType = timerType;
    }
    var lastMarkTimeStamp = 0;
    var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';
    function shouldMark(debugID) {
      if (!isProfiling || !canUsePerformanceMeasure) {
        return false;
      }
      var element = ReactComponentTreeHook.getElement(debugID);
      if (element == null || typeof element !== 'object') {
        return false;
      }
      var isHostElement = typeof element.type === 'string';
      if (isHostElement) {
        return false;
      }
      return true;
    }
    function markBegin(debugID, markType) {
      if (!shouldMark(debugID)) {
        return;
      }
      var markName = debugID + '::' + markType;
      lastMarkTimeStamp = performanceNow();
      performance.mark(markName);
    }
    function markEnd(debugID, markType) {
      if (!shouldMark(debugID)) {
        return;
      }
      var markName = debugID + '::' + markType;
      var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';
      var timeStamp = performanceNow();
      if (timeStamp - lastMarkTimeStamp > 0.1) {
        var measurementName = displayName + ' [' + markType + ']';
        performance.measure(measurementName, markName);
      }
      performance.clearMarks(markName);
      if (measurementName) {
        performance.clearMeasures(measurementName);
      }
    }
    var ReactDebugTool = {
      addHook: function (hook) {
        hooks.push(hook);
      },
      removeHook: function (hook) {
        for (var i = 0; i < hooks.length; i++) {
          if (hooks[i] === hook) {
            hooks.splice(i, 1);
            i--;
          }
        }
      },
      isProfiling: function () {
        return isProfiling;
      },
      beginProfiling: function () {
        if (isProfiling) {
          return;
        }
        isProfiling = true;
        flushHistory.length = 0;
        resetMeasurements();
        ReactDebugTool.addHook(ReactHostOperationHistoryHook);
      },
      endProfiling: function () {
        if (!isProfiling) {
          return;
        }
        isProfiling = false;
        resetMeasurements();
        ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
      },
      getFlushHistory: function () {
        return flushHistory;
      },
      onBeginFlush: function () {
        currentFlushNesting++;
        resetMeasurements();
        pauseCurrentLifeCycleTimer();
        emitEvent('onBeginFlush');
      },
      onEndFlush: function () {
        resetMeasurements();
        currentFlushNesting--;
        resumeCurrentLifeCycleTimer();
        emitEvent('onEndFlush');
      },
      onBeginLifeCycleTimer: function (debugID, timerType) {
        checkDebugID(debugID);
        emitEvent('onBeginLifeCycleTimer', debugID, timerType);
        markBegin(debugID, timerType);
        beginLifeCycleTimer(debugID, timerType);
      },
      onEndLifeCycleTimer: function (debugID, timerType) {
        checkDebugID(debugID);
        endLifeCycleTimer(debugID, timerType);
        markEnd(debugID, timerType);
        emitEvent('onEndLifeCycleTimer', debugID, timerType);
      },
      onBeginProcessingChildContext: function () {
        emitEvent('onBeginProcessingChildContext');
      },
      onEndProcessingChildContext: function () {
        emitEvent('onEndProcessingChildContext');
      },
      onHostOperation: function (operation) {
        checkDebugID(operation.instanceID);
        emitEvent('onHostOperation', operation);
      },
      onSetState: function () {
        emitEvent('onSetState');
      },
      onSetChildren: function (debugID, childDebugIDs) {
        checkDebugID(debugID);
        childDebugIDs.forEach(checkDebugID);
        emitEvent('onSetChildren', debugID, childDebugIDs);
      },
      onBeforeMountComponent: function (debugID, element, parentDebugID) {
        checkDebugID(debugID);
        checkDebugID(parentDebugID, true);
        emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
        markBegin(debugID, 'mount');
      },
      onMountComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'mount');
        emitEvent('onMountComponent', debugID);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        checkDebugID(debugID);
        emitEvent('onBeforeUpdateComponent', debugID, element);
        markBegin(debugID, 'update');
      },
      onUpdateComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'update');
        emitEvent('onUpdateComponent', debugID);
      },
      onBeforeUnmountComponent: function (debugID) {
        checkDebugID(debugID);
        emitEvent('onBeforeUnmountComponent', debugID);
        markBegin(debugID, 'unmount');
      },
      onUnmountComponent: function (debugID) {
        checkDebugID(debugID);
        markEnd(debugID, 'unmount');
        emitEvent('onUnmountComponent', debugID);
      },
      onTestEvent: function () {
        emitEvent('onTestEvent');
      }
    };
    ReactDebugTool.addDevtool = ReactDebugTool.addHook;
    ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;
    ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
    ReactDebugTool.addHook(ReactComponentTreeHook);
    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
    if (/[?&]react_perf\b/.test(url)) {
      ReactDebugTool.beginProfiling();
    }
    module.exports = ReactDebugTool;
  })($__require('16'));
});
$__System.registerDynamic('253', ['2d5', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var debugTool = null;
    if ('production' !== 'production') {
      var ReactDebugTool = $__require('2d5');
      debugTool = ReactDebugTool;
    }
    module.exports = { debugTool: debugTool };
  })($__require('16'));
});
$__System.registerDynamic('274', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    var eventPluginOrder = null;
    var namesToPlugins = {};
    function recomputePluginOrdering() {
      if (!eventPluginOrder) {
        return;
      }
      for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName];
        var pluginIndex = eventPluginOrder.indexOf(pluginName);
        !(pluginIndex > -1) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
        if (EventPluginRegistry.plugins[pluginIndex]) {
          continue;
        }
        !pluginModule.extractEvents ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
        EventPluginRegistry.plugins[pluginIndex] = pluginModule;
        var publishedEvents = pluginModule.eventTypes;
        for (var eventName in publishedEvents) {
          !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
        }
      }
    }
    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
      !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
      EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
          }
        }
        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
        return true;
      }
      return false;
    }
    function publishRegistrationName(registrationName, pluginModule, eventName) {
      !!EventPluginRegistry.registrationNameModules[registrationName] ? 'production' !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
      EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
      EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
      if ('production' !== 'production') {
        var lowerCasedName = registrationName.toLowerCase();
        EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') {
          EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    var EventPluginRegistry = {
      plugins: [],
      eventNameDispatchConfigs: {},
      registrationNameModules: {},
      registrationNameDependencies: {},
      possibleRegistrationNames: 'production' !== 'production' ? {} : null,
      injectEventPluginOrder: function (injectedEventPluginOrder) {
        !!eventPluginOrder ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
        eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
        recomputePluginOrdering();
      },
      injectEventPluginsByName: function (injectedNamesToPlugins) {
        var isOrderingDirty = false;
        for (var pluginName in injectedNamesToPlugins) {
          if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
            continue;
          }
          var pluginModule = injectedNamesToPlugins[pluginName];
          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            !!namesToPlugins[pluginName] ? 'production' !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
        if (isOrderingDirty) {
          recomputePluginOrdering();
        }
      },
      getPluginModuleForEvent: function (event) {
        var dispatchConfig = event.dispatchConfig;
        if (dispatchConfig.registrationName) {
          return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
        }
        if (dispatchConfig.phasedRegistrationNames !== undefined) {
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          for (var phase in phasedRegistrationNames) {
            if (!phasedRegistrationNames.hasOwnProperty(phase)) {
              continue;
            }
            var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
            if (pluginModule) {
              return pluginModule;
            }
          }
        }
        return null;
      },
      _resetEventPlugins: function () {
        eventPluginOrder = null;
        for (var pluginName in namesToPlugins) {
          if (namesToPlugins.hasOwnProperty(pluginName)) {
            delete namesToPlugins[pluginName];
          }
        }
        EventPluginRegistry.plugins.length = 0;
        var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
        for (var eventName in eventNameDispatchConfigs) {
          if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
            delete eventNameDispatchConfigs[eventName];
          }
        }
        var registrationNameModules = EventPluginRegistry.registrationNameModules;
        for (var registrationName in registrationNameModules) {
          if (registrationNameModules.hasOwnProperty(registrationName)) {
            delete registrationNameModules[registrationName];
          }
        }
        if ('production' !== 'production') {
          var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
          for (var lowerCasedName in possibleRegistrationNames) {
            if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
              delete possibleRegistrationNames[lowerCasedName];
            }
          }
        }
      }
    };
    module.exports = EventPluginRegistry;
  })($__require('16'));
});
$__System.registerDynamic('2d6', ['246', '274', '265', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('246');
    var EventPluginRegistry = $__require('274');
    var ReactComponentTreeHook = $__require('265');
    var warning = $__require('16a');
    if ('production' !== 'production') {
      var reactProps = {
        children: true,
        dangerouslySetInnerHTML: true,
        key: true,
        ref: true,
        autoFocus: true,
        defaultValue: true,
        valueLink: true,
        defaultChecked: true,
        checkedLink: true,
        innerHTML: true,
        suppressContentEditableWarning: true,
        onFocusIn: true,
        onFocusOut: true
      };
      var warnedProperties = {};
      var validateProperty = function (tagName, name, debugID) {
        if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
          return true;
        }
        if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
          return true;
        }
        if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
          return true;
        }
        warnedProperties[name] = true;
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
        if (standardName != null) {
          'production' !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else if (registrationName != null) {
          'production' !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          return true;
        } else {
          return false;
        }
      };
    }
    var warnUnknownProperties = function (debugID, element) {
      var unknownProps = [];
      for (var key in element.props) {
        var isValid = validateProperty(element.type, key, debugID);
        if (!isValid) {
          unknownProps.push(key);
        }
      }
      var unknownPropString = unknownProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');
      if (unknownProps.length === 1) {
        'production' !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      } else if (unknownProps.length > 1) {
        'production' !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      }
    };
    function handleElement(debugID, element) {
      if (element == null || typeof element.type !== 'string') {
        return;
      }
      if (element.type.indexOf('-') >= 0 || element.props.is) {
        return;
      }
      warnUnknownProperties(debugID, element);
    }
    var ReactDOMUnknownPropertyHook = {
      onBeforeMountComponent: function (debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMUnknownPropertyHook;
  })($__require('16'));
});
$__System.registerDynamic('2d7', ['265', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactComponentTreeHook = $__require('265');
    var warning = $__require('16a');
    var didWarnValueNull = false;
    function handleElement(debugID, element) {
      if (element == null) {
        return;
      }
      if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
        return;
      }
      if (element.props != null && element.props.value === null && !didWarnValueNull) {
        'production' !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
        didWarnValueNull = true;
      }
    }
    var ReactDOMNullInputValuePropHook = {
      onBeforeMountComponent: function (debugID, element) {
        handleElement(debugID, element);
      },
      onBeforeUpdateComponent: function (debugID, element) {
        handleElement(debugID, element);
      }
    };
    module.exports = ReactDOMNullInputValuePropHook;
  })($__require('16'));
});
$__System.registerDynamic('258', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  var global = this || self,
      GLOBAL = global;
  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;
});
$__System.registerDynamic('246', ['258', '169', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('258');
    var invariant = $__require('169');
    function checkMask(value, bitmask) {
      return (value & bitmask) === bitmask;
    }
    var DOMPropertyInjection = {
      MUST_USE_PROPERTY: 0x1,
      HAS_BOOLEAN_VALUE: 0x4,
      HAS_NUMERIC_VALUE: 0x8,
      HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
      HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
      injectDOMPropertyConfig: function (domPropertyConfig) {
        var Injection = DOMPropertyInjection;
        var Properties = domPropertyConfig.Properties || {};
        var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
        var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
        var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
        var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
        if (domPropertyConfig.isCustomAttribute) {
          DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
        }
        for (var propName in Properties) {
          !!DOMProperty.properties.hasOwnProperty(propName) ? 'production' !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
          var lowerCased = propName.toLowerCase();
          var propConfig = Properties[propName];
          var propertyInfo = {
            attributeName: lowerCased,
            attributeNamespace: null,
            propertyName: propName,
            mutationMethod: null,
            mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
            hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
            hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
            hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
            hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
          };
          !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? 'production' !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
          if ('production' !== 'production') {
            DOMProperty.getPossibleStandardName[lowerCased] = propName;
          }
          if (DOMAttributeNames.hasOwnProperty(propName)) {
            var attributeName = DOMAttributeNames[propName];
            propertyInfo.attributeName = attributeName;
            if ('production' !== 'production') {
              DOMProperty.getPossibleStandardName[attributeName] = propName;
            }
          }
          if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
            propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
          }
          if (DOMPropertyNames.hasOwnProperty(propName)) {
            propertyInfo.propertyName = DOMPropertyNames[propName];
          }
          if (DOMMutationMethods.hasOwnProperty(propName)) {
            propertyInfo.mutationMethod = DOMMutationMethods[propName];
          }
          DOMProperty.properties[propName] = propertyInfo;
        }
      }
    };
    var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
    var DOMProperty = {
      ID_ATTRIBUTE_NAME: 'data-reactid',
      ROOT_ATTRIBUTE_NAME: 'data-reactroot',
      ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
      ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
      properties: {},
      getPossibleStandardName: 'production' !== 'production' ? { autofocus: 'autoFocus' } : null,
      _isCustomAttributeFunctions: [],
      isCustomAttribute: function (attributeName) {
        for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
          var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
          if (isCustomAttributeFn(attributeName)) {
            return true;
          }
        }
        return false;
      },
      injection: DOMPropertyInjection
    };
    module.exports = DOMProperty;
  })($__require('16'));
});
$__System.registerDynamic('2b4', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  var global = this || self,
      GLOBAL = global;
  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;
});
$__System.registerDynamic('268', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  'use strict';

  /**
   * Keeps track of the current owner.
   *
   * The current owner is the component who should own any components that are
   * currently being constructed.
   */

  var global = this || self,
      GLOBAL = global;
  var ReactCurrentOwner = {
    /**
     * @internal
     * @type {ReactComponent}
     */
    current: null
  };

  module.exports = ReactCurrentOwner;
});
$__System.registerDynamic('265', ['2b4', '268', '169', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var _prodInvariant = $__require('2b4');
    var ReactCurrentOwner = $__require('268');
    var invariant = $__require('169');
    var warning = $__require('16a');
    function isNative(fn) {
      var funcToString = Function.prototype.toString;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      try {
        var source = funcToString.call(fn);
        return reIsNative.test(source);
      } catch (err) {
        return false;
      }
    }
    var canUseCollections = typeof Array.from === 'function' && typeof Map === 'function' && isNative(Map) && Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) && typeof Set === 'function' && isNative(Set) && Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);
    var setItem;
    var getItem;
    var removeItem;
    var getItemIDs;
    var addRoot;
    var removeRoot;
    var getRootIDs;
    if (canUseCollections) {
      var itemMap = new Map();
      var rootIDSet = new Set();
      setItem = function (id, item) {
        itemMap.set(id, item);
      };
      getItem = function (id) {
        return itemMap.get(id);
      };
      removeItem = function (id) {
        itemMap['delete'](id);
      };
      getItemIDs = function () {
        return Array.from(itemMap.keys());
      };
      addRoot = function (id) {
        rootIDSet.add(id);
      };
      removeRoot = function (id) {
        rootIDSet['delete'](id);
      };
      getRootIDs = function () {
        return Array.from(rootIDSet.keys());
      };
    } else {
      var itemByKey = {};
      var rootByKey = {};
      var getKeyFromID = function (id) {
        return '.' + id;
      };
      var getIDFromKey = function (key) {
        return parseInt(key.substr(1), 10);
      };
      setItem = function (id, item) {
        var key = getKeyFromID(id);
        itemByKey[key] = item;
      };
      getItem = function (id) {
        var key = getKeyFromID(id);
        return itemByKey[key];
      };
      removeItem = function (id) {
        var key = getKeyFromID(id);
        delete itemByKey[key];
      };
      getItemIDs = function () {
        return Object.keys(itemByKey).map(getIDFromKey);
      };
      addRoot = function (id) {
        var key = getKeyFromID(id);
        rootByKey[key] = true;
      };
      removeRoot = function (id) {
        var key = getKeyFromID(id);
        delete rootByKey[key];
      };
      getRootIDs = function () {
        return Object.keys(rootByKey).map(getIDFromKey);
      };
    }
    var unmountedIDs = [];
    function purgeDeep(id) {
      var item = getItem(id);
      if (item) {
        var childIDs = item.childIDs;
        removeItem(id);
        childIDs.forEach(purgeDeep);
      }
    }
    function describeComponentFrame(name, source, ownerName) {
      return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
    }
    function getDisplayName(element) {
      if (element == null) {
        return '#empty';
      } else if (typeof element === 'string' || typeof element === 'number') {
        return '#text';
      } else if (typeof element.type === 'string') {
        return element.type;
      } else {
        return element.type.displayName || element.type.name || 'Unknown';
      }
    }
    function describeID(id) {
      var name = ReactComponentTreeHook.getDisplayName(id);
      var element = ReactComponentTreeHook.getElement(id);
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var ownerName;
      if (ownerID) {
        ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
      }
      'production' !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
      return describeComponentFrame(name, element && element._source, ownerName);
    }
    var ReactComponentTreeHook = {
      onSetChildren: function (id, nextChildIDs) {
        var item = getItem(id);
        !item ? 'production' !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
        item.childIDs = nextChildIDs;
        for (var i = 0; i < nextChildIDs.length; i++) {
          var nextChildID = nextChildIDs[i];
          var nextChild = getItem(nextChildID);
          !nextChild ? 'production' !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
          !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? 'production' !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
          !nextChild.isMounted ? 'production' !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
          if (nextChild.parentID == null) {
            nextChild.parentID = id;
          }
          !(nextChild.parentID === id) ? 'production' !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
        }
      },
      onBeforeMountComponent: function (id, element, parentID) {
        var item = {
          element: element,
          parentID: parentID,
          text: null,
          childIDs: [],
          isMounted: false,
          updateCount: 0
        };
        setItem(id, item);
      },
      onBeforeUpdateComponent: function (id, element) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.element = element;
      },
      onMountComponent: function (id) {
        var item = getItem(id);
        !item ? 'production' !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
        item.isMounted = true;
        var isRoot = item.parentID === 0;
        if (isRoot) {
          addRoot(id);
        }
      },
      onUpdateComponent: function (id) {
        var item = getItem(id);
        if (!item || !item.isMounted) {
          return;
        }
        item.updateCount++;
      },
      onUnmountComponent: function (id) {
        var item = getItem(id);
        if (item) {
          item.isMounted = false;
          var isRoot = item.parentID === 0;
          if (isRoot) {
            removeRoot(id);
          }
        }
        unmountedIDs.push(id);
      },
      purgeUnmountedComponents: function () {
        if (ReactComponentTreeHook._preventPurging) {
          return;
        }
        for (var i = 0; i < unmountedIDs.length; i++) {
          var id = unmountedIDs[i];
          purgeDeep(id);
        }
        unmountedIDs.length = 0;
      },
      isMounted: function (id) {
        var item = getItem(id);
        return item ? item.isMounted : false;
      },
      getCurrentStackAddendum: function (topElement) {
        var info = '';
        if (topElement) {
          var name = getDisplayName(topElement);
          var owner = topElement._owner;
          info += describeComponentFrame(name, topElement._source, owner && owner.getName());
        }
        var currentOwner = ReactCurrentOwner.current;
        var id = currentOwner && currentOwner._debugID;
        info += ReactComponentTreeHook.getStackAddendumByID(id);
        return info;
      },
      getStackAddendumByID: function (id) {
        var info = '';
        while (id) {
          info += describeID(id);
          id = ReactComponentTreeHook.getParentID(id);
        }
        return info;
      },
      getChildIDs: function (id) {
        var item = getItem(id);
        return item ? item.childIDs : [];
      },
      getDisplayName: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element) {
          return null;
        }
        return getDisplayName(element);
      },
      getElement: function (id) {
        var item = getItem(id);
        return item ? item.element : null;
      },
      getOwnerID: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (!element || !element._owner) {
          return null;
        }
        return element._owner._debugID;
      },
      getParentID: function (id) {
        var item = getItem(id);
        return item ? item.parentID : null;
      },
      getSource: function (id) {
        var item = getItem(id);
        var element = item ? item.element : null;
        var source = element != null ? element._source : null;
        return source;
      },
      getText: function (id) {
        var element = ReactComponentTreeHook.getElement(id);
        if (typeof element === 'string') {
          return element;
        } else if (typeof element === 'number') {
          return '' + element;
        } else {
          return null;
        }
      },
      getUpdateCount: function (id) {
        var item = getItem(id);
        return item ? item.updateCount : 0;
      },
      getRootIDs: getRootIDs,
      getRegisteredIDs: getItemIDs,
      pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
        if (typeof console.reactStack !== 'function') {
          return;
        }
        var stack = [];
        var currentOwner = ReactCurrentOwner.current;
        var id = currentOwner && currentOwner._debugID;
        try {
          if (isCreatingElement) {
            stack.push({
              name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
              fileName: currentSource ? currentSource.fileName : null,
              lineNumber: currentSource ? currentSource.lineNumber : null
            });
          }
          while (id) {
            var element = ReactComponentTreeHook.getElement(id);
            var parentID = ReactComponentTreeHook.getParentID(id);
            var ownerID = ReactComponentTreeHook.getOwnerID(id);
            var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
            var source = element && element._source;
            stack.push({
              name: ownerName,
              fileName: source ? source.fileName : null,
              lineNumber: source ? source.lineNumber : null
            });
            id = parentID;
          }
        } catch (err) {}
        console.reactStack(stack);
      },
      popNonStandardWarningStack: function () {
        if (typeof console.reactStackEnd !== 'function') {
          return;
        }
        console.reactStackEnd();
      }
    };
    module.exports = ReactComponentTreeHook;
  })($__require('16'));
});
$__System.registerDynamic('2d8', ['246', '265', '16a', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var DOMProperty = $__require('246');
    var ReactComponentTreeHook = $__require('265');
    var warning = $__require('16a');
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
    function validateProperty(tagName, name, debugID) {
      if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
        return true;
      }
      if (rARIA.test(name)) {
        var lowerCasedName = name.toLowerCase();
        var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
        if (standardName == null) {
          warnedProperties[name] = true;
          return false;
        }
        if (name !== standardName) {
          'production' !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
          warnedProperties[name] = true;
          return true;
        }
      }
      return true;
    }
    function warnInvalidARIAProps(debugID, element) {
      var invalidProps = [];
      for (var key in element.props) {
        var isValid = validateProperty(element.type, key, debugID);
        if (!isValid) {
          invalidProps.push(key);
        }
      }
      var unknownPropString = invalidProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');
      if (invalidProps.length === 1) {
        'production' !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      } else if (invalidProps.length > 1) {
        'production' !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      }
    }
    function handleElement(debugID, element) {
      if (element == null || typeof element.type !== 'string') {
        return;
      }
      if (element.type.indexOf('-') >= 0 || element.props.is) {
        return;
      }
      warnInvalidARIAProps(debugID, element);
    }
    var ReactDOMInvalidARIAHook = {
      onBeforeMountComponent: function (debugID, element) {
        if ('production' !== 'production') {
          handleElement(debugID, element);
        }
      },
      onBeforeUpdateComponent: function (debugID, element) {
        if ('production' !== 'production') {
          handleElement(debugID, element);
        }
      }
    };
    module.exports = ReactDOMInvalidARIAHook;
  })($__require('16'));
});
$__System.registerDynamic('2d9', ['23c', '2a6', '2cf', '260', '23d', '2a7', '2a8', '2a9', '2d0', '16a', '239', '253', '2d6', '2d7', '2d8', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var ReactDOMComponentTree = $__require('23c');
    var ReactDefaultInjection = $__require('2a6');
    var ReactMount = $__require('2cf');
    var ReactReconciler = $__require('260');
    var ReactUpdates = $__require('23d');
    var ReactVersion = $__require('2a7');
    var findDOMNode = $__require('2a8');
    var getHostComponentFromComposite = $__require('2a9');
    var renderSubtreeIntoContainer = $__require('2d0');
    var warning = $__require('16a');
    ReactDefaultInjection.inject();
    var ReactDOM = {
      findDOMNode: findDOMNode,
      render: ReactMount.render,
      unmountComponentAtNode: ReactMount.unmountComponentAtNode,
      version: ReactVersion,
      unstable_batchedUpdates: ReactUpdates.batchedUpdates,
      unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
    };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
        ComponentTree: {
          getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
          getNodeFromInstance: function (inst) {
            if (inst._renderedComponent) {
              inst = getHostComponentFromComposite(inst);
            }
            if (inst) {
              return ReactDOMComponentTree.getNodeFromInstance(inst);
            } else {
              return null;
            }
          }
        },
        Mount: ReactMount,
        Reconciler: ReactReconciler
      });
    }
    if ('production' !== 'production') {
      var ExecutionEnvironment = $__require('239');
      if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
          if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
            console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
          }
        }
        var testFunc = function testFn() {};
        'production' !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
        var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
        'production' !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
        var expectedFeatures = [Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];
        for (var i = 0; i < expectedFeatures.length; i++) {
          if (!expectedFeatures[i]) {
            'production' !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
            break;
          }
        }
      }
    }
    if ('production' !== 'production') {
      var ReactInstrumentation = $__require('253');
      var ReactDOMUnknownPropertyHook = $__require('2d6');
      var ReactDOMNullInputValuePropHook = $__require('2d7');
      var ReactDOMInvalidARIAHook = $__require('2d8');
      ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
      ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
      ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
    }
    module.exports = ReactDOM;
  })($__require('16'));
});
$__System.registerDynamic('2da', ['2d9'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  module.exports = $__require('2d9');
});
$__System.registerDynamic("4c", ["2da"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2da");
});
$__System.registerDynamic('2db', [], true, function ($__require, exports, module) {
	/*
 object-assign
 (c) Sindre Sorhus
 @license MIT
 */

	'use strict';
	/* eslint-disable no-unused-vars */

	var global = this || self,
	    GLOBAL = global;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};
});
$__System.registerDynamic("165", ["2db"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2db");
});
$__System.registerDynamic('16a', ['167', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('167');
    var warning = emptyFunction;
    if ('production' !== 'production') {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }
        if (format.indexOf('Failed Composite propType: ') === 0) {
          return;
        }
        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }
          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }
    module.exports = warning;
  })($__require('16'));
});
$__System.registerDynamic('16b', ['169', '16a', '2dc', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    if ('production' !== 'production') {
      var invariant = $__require('169');
      var warning = $__require('16a');
      var ReactPropTypesSecret = $__require('2dc');
      var loggedTypeFailures = {};
    }
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if ('production' !== 'production') {
        for (var typeSpecName in typeSpecs) {
          if (typeSpecs.hasOwnProperty(typeSpecName)) {
            var error;
            try {
              invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : '';
              warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
            }
          }
        }
      }
    }
    module.exports = checkPropTypes;
  })($__require('16'));
});
$__System.registerDynamic('2bd', ['167', '169', '16a', '165', '2dc', '16b', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var emptyFunction = $__require('167');
    var invariant = $__require('169');
    var warning = $__require('16a');
    var assign = $__require('165');
    var ReactPropTypesSecret = $__require('2dc');
    var checkPropTypes = $__require('16b');
    module.exports = function (isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator';
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }
      var ANONYMOUS = '<<anonymous>>';
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message) {
        this.message = message;
        this.stack = '';
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if ('production' !== 'production') {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
            } else if ('production' !== 'production' && typeof console !== 'undefined') {
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
              }
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunction.thatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          'production' !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          'production' !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== 'function') {
            warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
            return emptyFunction.thatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === 'symbol') {
          return true;
        }
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
          return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case 'array':
          case 'object':
            return 'an ' + type;
          case 'boolean':
          case 'date':
          case 'regexp':
            return 'a ' + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  })($__require('16'));
});
$__System.registerDynamic("167", [], true, function ($__require, exports, module) {
  /* */
  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  var global = this || self,
      GLOBAL = global;
  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
});
$__System.registerDynamic('169', ['16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    'use strict';

    var validateFormat = function validateFormat(format) {};
    if ('production' !== 'production') {
      validateFormat = function validateFormat(format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }
    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);
      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }
        error.framesToPop = 1;
        throw error;
      }
    }
    module.exports = invariant;
  })($__require('16'));
});
$__System.registerDynamic('2dc', [], true, function ($__require, exports, module) {
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  'use strict';

  var global = this || self,
      GLOBAL = global;
  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;
});
$__System.registerDynamic('2dd', ['167', '169', '2dc'], true, function ($__require, exports, module) {
  /* */
  'use strict';

  var global = this || self,
      GLOBAL = global;
  var emptyFunction = $__require('167');
  var invariant = $__require('169');
  var ReactPropTypesSecret = $__require('2dc');
  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        return;
      }
      invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    }
    ;
    shim.isRequired = shim;
    function getShim() {
      return shim;
    }
    ;
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,
      any: shim,
      arrayOf: getShim,
      element: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim
    };
    ReactPropTypes.checkPropTypes = emptyFunction;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
  };
});
$__System.registerDynamic('2de', [], true, function ($__require, exports, module) {
    var global = this || self,
        GLOBAL = global;
    // shim for using process in browser
    var process = module.exports = {};

    // cached from whatever global is present so that test runners that stub it
    // don't break things.  But we need to wrap it in a try catch in case it is
    // wrapped in strict mode code which doesn't define any globals.  It's inside a
    // function because try/catches deoptimize in certain engines.

    var cachedSetTimeout;
    var cachedClearTimeout;

    function defaultSetTimout() {
        throw new Error('setTimeout has not been defined');
    }
    function defaultClearTimeout() {
        throw new Error('clearTimeout has not been defined');
    }
    (function () {
        try {
            if (typeof setTimeout === 'function') {
                cachedSetTimeout = setTimeout;
            } else {
                cachedSetTimeout = defaultSetTimout;
            }
        } catch (e) {
            cachedSetTimeout = defaultSetTimout;
        }
        try {
            if (typeof clearTimeout === 'function') {
                cachedClearTimeout = clearTimeout;
            } else {
                cachedClearTimeout = defaultClearTimeout;
            }
        } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
        }
    })();
    function runTimeout(fun) {
        if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
        }
        // if setTimeout wasn't available but was latter defined
        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                return cachedSetTimeout.call(this, fun, 0);
            }
        }
    }
    function runClearTimeout(marker) {
        if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
        }
        // if clearTimeout wasn't available but was latter defined
        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
        }
        try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
        } catch (e) {
            try {
                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                return cachedClearTimeout.call(null, marker);
            } catch (e) {
                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                return cachedClearTimeout.call(this, marker);
            }
        }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;

    function cleanUpNextTick() {
        if (!draining || !currentQueue) {
            return;
        }
        draining = false;
        if (currentQueue.length) {
            queue = currentQueue.concat(queue);
        } else {
            queueIndex = -1;
        }
        if (queue.length) {
            drainQueue();
        }
    }

    function drainQueue() {
        if (draining) {
            return;
        }
        var timeout = runTimeout(cleanUpNextTick);
        draining = true;

        var len = queue.length;
        while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
                if (currentQueue) {
                    currentQueue[queueIndex].run();
                }
            }
            queueIndex = -1;
            len = queue.length;
        }
        currentQueue = null;
        draining = false;
        runClearTimeout(timeout);
    }

    process.nextTick = function (fun) {
        var args = new Array(arguments.length - 1);
        if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
                args[i - 1] = arguments[i];
            }
        }
        queue.push(new Item(fun, args));
        if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
        }
    };

    // v8 likes predictible objects
    function Item(fun, array) {
        this.fun = fun;
        this.array = array;
    }
    Item.prototype.run = function () {
        this.fun.apply(null, this.array);
    };
    process.title = 'browser';
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = ''; // empty string to avoid regexp issues
    process.versions = {};

    function noop() {}

    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;
    process.prependListener = noop;
    process.prependOnceListener = noop;

    process.listeners = function (name) {
        return [];
    };

    process.binding = function (name) {
        throw new Error('process.binding is not supported');
    };

    process.cwd = function () {
        return '/';
    };
    process.chdir = function (dir) {
        throw new Error('process.chdir is not supported');
    };
    process.umask = function () {
        return 0;
    };
});
$__System.registerDynamic("2df", ["2de"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2de");
});
$__System.registerDynamic('2e0', ['2df'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__System._nodeRequire ? process : $__require('2df');
});
$__System.registerDynamic("16", ["2e0"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e0");
});
$__System.registerDynamic('2e1', ['2bd', '2dd', '16'], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  /* */
  (function (process) {
    if ('production' !== 'production') {
      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;
      var isValidElement = function (object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      };
      var throwOnDirectAccess = true;
      module.exports = $__require('2bd')(isValidElement, throwOnDirectAccess);
    } else {
      module.exports = $__require('2dd')();
    }
  })($__require('16'));
});
$__System.registerDynamic("50", ["2e1"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e1");
});
$__System.registerDynamic('2e2', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-axis/ Version 1.0.8. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var slice = Array.prototype.slice;

    var identity = function (x) {
      return x;
    };

    var top = 1;
    var right = 2;
    var bottom = 3;
    var left = 4;
    var epsilon = 1e-6;

    function translateX(x) {
      return "translate(" + (x + 0.5) + ",0)";
    }

    function translateY(y) {
      return "translate(0," + (y + 0.5) + ")";
    }

    function number(scale) {
      return function (d) {
        return +scale(d);
      };
    }

    function center(scale) {
      var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.
      if (scale.round()) offset = Math.round(offset);
      return function (d) {
        return +scale(d) + offset;
      };
    }

    function entering() {
      return !this.__axis;
    }

    function axis(orient, scale) {
      var tickArguments = [],
          tickValues = null,
          tickFormat = null,
          tickSizeInner = 6,
          tickSizeOuter = 6,
          tickPadding = 3,
          k = orient === top || orient === left ? -1 : 1,
          x = orient === left || orient === right ? "x" : "y",
          transform = orient === top || orient === bottom ? translateX : translateY;

      function axis(context) {
        var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
            format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity : tickFormat,
            spacing = Math.max(tickSizeInner, 0) + tickPadding,
            range = scale.range(),
            range0 = +range[0] + 0.5,
            range1 = +range[range.length - 1] + 0.5,
            position = (scale.bandwidth ? center : number)(scale.copy()),
            selection = context.selection ? context.selection() : context,
            path = selection.selectAll(".domain").data([null]),
            tick = selection.selectAll(".tick").data(values, scale).order(),
            tickExit = tick.exit(),
            tickEnter = tick.enter().append("g").attr("class", "tick"),
            line = tick.select("line"),
            text = tick.select("text");

        path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "#000"));

        tick = tick.merge(tickEnter);

        line = line.merge(tickEnter.append("line").attr("stroke", "#000").attr(x + "2", k * tickSizeInner));

        text = text.merge(tickEnter.append("text").attr("fill", "#000").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

        if (context !== selection) {
          path = path.transition(context);
          tick = tick.transition(context);
          line = line.transition(context);
          text = text.transition(context);

          tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
            return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
          });

          tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
            var p = this.parentNode.__axis;return transform(p && isFinite(p = p(d)) ? p : position(d));
          });
        }

        tickExit.remove();

        path.attr("d", orient === left || orient == right ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter);

        tick.attr("opacity", 1).attr("transform", function (d) {
          return transform(position(d));
        });

        line.attr(x + "2", k * tickSizeInner);

        text.attr(x, k * spacing).text(format);

        selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

        selection.each(function () {
          this.__axis = position;
        });
      }

      axis.scale = function (_) {
        return arguments.length ? (scale = _, axis) : scale;
      };

      axis.ticks = function () {
        return tickArguments = slice.call(arguments), axis;
      };

      axis.tickArguments = function (_) {
        return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();
      };

      axis.tickValues = function (_) {
        return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();
      };

      axis.tickFormat = function (_) {
        return arguments.length ? (tickFormat = _, axis) : tickFormat;
      };

      axis.tickSize = function (_) {
        return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
      };

      axis.tickSizeInner = function (_) {
        return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
      };

      axis.tickSizeOuter = function (_) {
        return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
      };

      axis.tickPadding = function (_) {
        return arguments.length ? (tickPadding = +_, axis) : tickPadding;
      };

      return axis;
    }

    function axisTop(scale) {
      return axis(top, scale);
    }

    function axisRight(scale) {
      return axis(right, scale);
    }

    function axisBottom(scale) {
      return axis(bottom, scale);
    }

    function axisLeft(scale) {
      return axis(left, scale);
    }

    exports.axisTop = axisTop;
    exports.axisRight = axisRight;
    exports.axisBottom = axisBottom;
    exports.axisLeft = axisLeft;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("184", ["2e2"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e2");
});
$__System.registerDynamic('2e3', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    function linear(t) {
      return +t;
    }

    function quadIn(t) {
      return t * t;
    }

    function quadOut(t) {
      return t * (2 - t);
    }

    function quadInOut(t) {
      return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
    }

    function cubicIn(t) {
      return t * t * t;
    }

    function cubicOut(t) {
      return --t * t * t + 1;
    }

    function cubicInOut(t) {
      return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }

    var exponent = 3;

    var polyIn = function custom(e) {
      e = +e;

      function polyIn(t) {
        return Math.pow(t, e);
      }

      polyIn.exponent = custom;

      return polyIn;
    }(exponent);

    var polyOut = function custom(e) {
      e = +e;

      function polyOut(t) {
        return 1 - Math.pow(1 - t, e);
      }

      polyOut.exponent = custom;

      return polyOut;
    }(exponent);

    var polyInOut = function custom(e) {
      e = +e;

      function polyInOut(t) {
        return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
      }

      polyInOut.exponent = custom;

      return polyInOut;
    }(exponent);

    var pi = Math.PI;
    var halfPi = pi / 2;

    function sinIn(t) {
      return 1 - Math.cos(t * halfPi);
    }

    function sinOut(t) {
      return Math.sin(t * halfPi);
    }

    function sinInOut(t) {
      return (1 - Math.cos(pi * t)) / 2;
    }

    function expIn(t) {
      return Math.pow(2, 10 * t - 10);
    }

    function expOut(t) {
      return 1 - Math.pow(2, -10 * t);
    }

    function expInOut(t) {
      return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
    }

    function circleIn(t) {
      return 1 - Math.sqrt(1 - t * t);
    }

    function circleOut(t) {
      return Math.sqrt(1 - --t * t);
    }

    function circleInOut(t) {
      return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
    }

    var b1 = 4 / 11;
    var b2 = 6 / 11;
    var b3 = 8 / 11;
    var b4 = 3 / 4;
    var b5 = 9 / 11;
    var b6 = 10 / 11;
    var b7 = 15 / 16;
    var b8 = 21 / 22;
    var b9 = 63 / 64;
    var b0 = 1 / b1 / b1;

    function bounceIn(t) {
      return 1 - bounceOut(1 - t);
    }

    function bounceOut(t) {
      return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
    }

    function bounceInOut(t) {
      return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
    }

    var overshoot = 1.70158;

    var backIn = function custom(s) {
      s = +s;

      function backIn(t) {
        return t * t * ((s + 1) * t - s);
      }

      backIn.overshoot = custom;

      return backIn;
    }(overshoot);

    var backOut = function custom(s) {
      s = +s;

      function backOut(t) {
        return --t * t * ((s + 1) * t + s) + 1;
      }

      backOut.overshoot = custom;

      return backOut;
    }(overshoot);

    var backInOut = function custom(s) {
      s = +s;

      function backInOut(t) {
        return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
      }

      backInOut.overshoot = custom;

      return backInOut;
    }(overshoot);

    var tau = 2 * Math.PI;
    var amplitude = 1;
    var period = 0.3;

    var elasticIn = function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticIn(t) {
        return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
      }

      elasticIn.amplitude = function (a) {
        return custom(a, p * tau);
      };
      elasticIn.period = function (p) {
        return custom(a, p);
      };

      return elasticIn;
    }(amplitude, period);

    var elasticOut = function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticOut(t) {
        return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
      }

      elasticOut.amplitude = function (a) {
        return custom(a, p * tau);
      };
      elasticOut.period = function (p) {
        return custom(a, p);
      };

      return elasticOut;
    }(amplitude, period);

    var elasticInOut = function custom(a, p) {
      var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

      function elasticInOut(t) {
        return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
      }

      elasticInOut.amplitude = function (a) {
        return custom(a, p * tau);
      };
      elasticInOut.period = function (p) {
        return custom(a, p);
      };

      return elasticInOut;
    }(amplitude, period);

    exports.easeLinear = linear;
    exports.easeQuad = quadInOut;
    exports.easeQuadIn = quadIn;
    exports.easeQuadOut = quadOut;
    exports.easeQuadInOut = quadInOut;
    exports.easeCubic = cubicInOut;
    exports.easeCubicIn = cubicIn;
    exports.easeCubicOut = cubicOut;
    exports.easeCubicInOut = cubicInOut;
    exports.easePoly = polyInOut;
    exports.easePolyIn = polyIn;
    exports.easePolyOut = polyOut;
    exports.easePolyInOut = polyInOut;
    exports.easeSin = sinInOut;
    exports.easeSinIn = sinIn;
    exports.easeSinOut = sinOut;
    exports.easeSinInOut = sinInOut;
    exports.easeExp = expInOut;
    exports.easeExpIn = expIn;
    exports.easeExpOut = expOut;
    exports.easeExpInOut = expInOut;
    exports.easeCircle = circleInOut;
    exports.easeCircleIn = circleIn;
    exports.easeCircleOut = circleOut;
    exports.easeCircleInOut = circleInOut;
    exports.easeBounce = bounceOut;
    exports.easeBounceIn = bounceIn;
    exports.easeBounceOut = bounceOut;
    exports.easeBounceInOut = bounceInOut;
    exports.easeBack = backInOut;
    exports.easeBackIn = backIn;
    exports.easeBackOut = backOut;
    exports.easeBackInOut = backInOut;
    exports.easeElastic = elasticOut;
    exports.easeElasticIn = elasticIn;
    exports.easeElasticOut = elasticOut;
    exports.easeElasticInOut = elasticInOut;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("13e", ["2e3"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e3");
});
$__System.registerDynamic('2e4', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-format/ Version 1.2.1. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    // Computes the decimal coefficient and exponent of the specified number x with
    // significant digits p, where x is positive and p is in [1, 21] or undefined.
    // For example, formatDecimal(1.23) returns ["123", 0].

    var formatDecimal = function (x, p) {
      if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
      var i,
          coefficient = x.slice(0, i);

      // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
      // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
      return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
    };

    var exponent = function (x) {
      return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
    };

    var formatGroup = function (grouping, thousands) {
      return function (value, width) {
        var i = value.length,
            t = [],
            j = 0,
            g = grouping[0],
            length = 0;

        while (i > 0 && g > 0) {
          if (length + g + 1 > width) g = Math.max(1, width - length);
          t.push(value.substring(i -= g, i + g));
          if ((length += g + 1) > width) break;
          g = grouping[j = (j + 1) % grouping.length];
        }

        return t.reverse().join(thousands);
      };
    };

    var formatNumerals = function (numerals) {
      return function (value) {
        return value.replace(/[0-9]/g, function (i) {
          return numerals[+i];
        });
      };
    };

    var formatDefault = function (x, p) {
      x = x.toPrecision(p);

      out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
        switch (x[i]) {
          case ".":
            i0 = i1 = i;break;
          case "0":
            if (i0 === 0) i0 = i;i1 = i;break;
          case "e":
            break out;
          default:
            if (i0 > 0) i0 = 0;break;
        }
      }

      return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
    };

    var prefixExponent;

    var formatPrefixAuto = function (x, p) {
      var d = formatDecimal(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1],
          i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
          n = coefficient.length;
      return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
    };

    var formatRounded = function (x, p) {
      var d = formatDecimal(x, p);
      if (!d) return x + "";
      var coefficient = d[0],
          exponent = d[1];
      return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    };

    var formatTypes = {
      "": formatDefault,
      "%": function (x, p) {
        return (x * 100).toFixed(p);
      },
      "b": function (x) {
        return Math.round(x).toString(2);
      },
      "c": function (x) {
        return x + "";
      },
      "d": function (x) {
        return Math.round(x).toString(10);
      },
      "e": function (x, p) {
        return x.toExponential(p);
      },
      "f": function (x, p) {
        return x.toFixed(p);
      },
      "g": function (x, p) {
        return x.toPrecision(p);
      },
      "o": function (x) {
        return Math.round(x).toString(8);
      },
      "p": function (x, p) {
        return formatRounded(x * 100, p);
      },
      "r": formatRounded,
      "s": formatPrefixAuto,
      "X": function (x) {
        return Math.round(x).toString(16).toUpperCase();
      },
      "x": function (x) {
        return Math.round(x).toString(16);
      }
    };

    // [[fill]align][sign][symbol][0][width][,][.precision][type]
    var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;

    function formatSpecifier(specifier) {
      return new FormatSpecifier(specifier);
    }

    formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

    function FormatSpecifier(specifier) {
      if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);

      var match,
          fill = match[1] || " ",
          align = match[2] || ">",
          sign = match[3] || "-",
          symbol = match[4] || "",
          zero = !!match[5],
          width = match[6] && +match[6],
          comma = !!match[7],
          precision = match[8] && +match[8].slice(1),
          type = match[9] || "";

      // The "n" type is an alias for ",g".
      if (type === "n") comma = true, type = "g";

      // Map invalid types to the default format.
      else if (!formatTypes[type]) type = "";

      // If zero fill is specified, padding goes after sign and before digits.
      if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";

      this.fill = fill;
      this.align = align;
      this.sign = sign;
      this.symbol = symbol;
      this.zero = zero;
      this.width = width;
      this.comma = comma;
      this.precision = precision;
      this.type = type;
    }

    FormatSpecifier.prototype.toString = function () {
      return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width == null ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0)) + this.type;
    };

    var identity = function (x) {
      return x;
    };

    var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

    var formatLocale = function (locale) {
      var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
          currency = locale.currency,
          decimal = locale.decimal,
          numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,
          percent = locale.percent || "%";

      function newFormat(specifier) {
        specifier = formatSpecifier(specifier);

        var fill = specifier.fill,
            align = specifier.align,
            sign = specifier.sign,
            symbol = specifier.symbol,
            zero = specifier.zero,
            width = specifier.width,
            comma = specifier.comma,
            precision = specifier.precision,
            type = specifier.type;

        // Compute the prefix and suffix.
        // For SI-prefix, the suffix is lazily computed.
        var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
            suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? percent : "";

        // What format function should we use?
        // Is this an integer type?
        // Can this type generate exponential notation?
        var formatType = formatTypes[type],
            maybeSuffix = !type || /[defgprs%]/.test(type);

        // Set the default precision if not specified,
        // or clamp the specified precision to the supported range.
        // For significant precision, it must be in [1, 21].
        // For fixed precision, it must be in [0, 20].
        precision = precision == null ? type ? 6 : 12 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

        function format(value) {
          var valuePrefix = prefix,
              valueSuffix = suffix,
              i,
              n,
              c;

          if (type === "c") {
            valueSuffix = formatType(value) + valueSuffix;
            value = "";
          } else {
            value = +value;

            // Perform the initial formatting.
            var valueNegative = value < 0;
            value = formatType(Math.abs(value), precision);

            // If a negative value rounds to zero during formatting, treat as positive.
            if (valueNegative && +value === 0) valueNegative = false;

            // Compute the prefix and suffix.
            valuePrefix = (valueNegative ? sign === "(" ? sign : "-" : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
            valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");

            // Break the formatted value into the integer “value” part that can be
            // grouped, and fractional or exponential “suffix” part that is not.
            if (maybeSuffix) {
              i = -1, n = value.length;
              while (++i < n) {
                if (c = value.charCodeAt(i), 48 > c || c > 57) {
                  valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                  value = value.slice(0, i);
                  break;
                }
              }
            }
          }

          // If the fill character is not "0", grouping is applied before padding.
          if (comma && !zero) value = group(value, Infinity);

          // Compute the padding.
          var length = valuePrefix.length + value.length + valueSuffix.length,
              padding = length < width ? new Array(width - length + 1).join(fill) : "";

          // If the fill character is "0", grouping is applied after padding.
          if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

          // Reconstruct the final output based on the desired alignment.
          switch (align) {
            case "<":
              value = valuePrefix + value + valueSuffix + padding;break;
            case "=":
              value = valuePrefix + padding + value + valueSuffix;break;
            case "^":
              value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);break;
            default:
              value = padding + valuePrefix + value + valueSuffix;break;
          }

          return numerals(value);
        }

        format.toString = function () {
          return specifier + "";
        };

        return format;
      }

      function formatPrefix(specifier, value) {
        var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
            e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
            k = Math.pow(10, -e),
            prefix = prefixes[8 + e / 3];
        return function (value) {
          return f(k * value) + prefix;
        };
      }

      return {
        format: newFormat,
        formatPrefix: formatPrefix
      };
    };

    var locale;

    defaultLocale({
      decimal: ".",
      thousands: ",",
      grouping: [3],
      currency: ["$", ""]
    });

    function defaultLocale(definition) {
      locale = formatLocale(definition);
      exports.format = locale.format;
      exports.formatPrefix = locale.formatPrefix;
      return locale;
    }

    var precisionFixed = function (step) {
      return Math.max(0, -exponent(Math.abs(step)));
    };

    var precisionPrefix = function (step, value) {
      return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
    };

    var precisionRound = function (step, max) {
      step = Math.abs(step), max = Math.abs(max) - step;
      return Math.max(0, exponent(max) - exponent(step)) + 1;
    };

    exports.formatDefaultLocale = defaultLocale;
    exports.formatLocale = formatLocale;
    exports.formatSpecifier = formatSpecifier;
    exports.precisionFixed = precisionFixed;
    exports.precisionPrefix = precisionPrefix;
    exports.precisionRound = precisionRound;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("137", ["2e4"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e4");
});
$__System.registerDynamic('2e5', [], true, function ($__require, exports, module) {
  /* */
  "format cjs";
  // https://d3js.org/d3-selection/ Version 1.2.0. Copyright 2017 Mike Bostock.

  var global = this || self,
      GLOBAL = global;
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof undefined === 'function' && define.amd ? define(['exports'], factory) : factory(global.d3 = global.d3 || {});
  })(this, function (exports) {
    'use strict';

    var xhtml = "http://www.w3.org/1999/xhtml";

    var namespaces = {
      svg: "http://www.w3.org/2000/svg",
      xhtml: xhtml,
      xlink: "http://www.w3.org/1999/xlink",
      xml: "http://www.w3.org/XML/1998/namespace",
      xmlns: "http://www.w3.org/2000/xmlns/"
    };

    var namespace = function (name) {
      var prefix = name += "",
          i = prefix.indexOf(":");
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return namespaces.hasOwnProperty(prefix) ? { space: namespaces[prefix], local: name } : name;
    };

    function creatorInherit(name) {
      return function () {
        var document = this.ownerDocument,
            uri = this.namespaceURI;
        return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);
      };
    }

    function creatorFixed(fullname) {
      return function () {
        return this.ownerDocument.createElementNS(fullname.space, fullname.local);
      };
    }

    var creator = function (name) {
      var fullname = namespace(name);
      return (fullname.local ? creatorFixed : creatorInherit)(fullname);
    };

    var nextId = 0;

    function local() {
      return new Local();
    }

    function Local() {
      this._ = "@" + (++nextId).toString(36);
    }

    Local.prototype = local.prototype = {
      constructor: Local,
      get: function (node) {
        var id = this._;
        while (!(id in node)) if (!(node = node.parentNode)) return;
        return node[id];
      },
      set: function (node, value) {
        return node[this._] = value;
      },
      remove: function (node) {
        return this._ in node && delete node[this._];
      },
      toString: function () {
        return this._;
      }
    };

    var matcher = function (selector) {
      return function () {
        return this.matches(selector);
      };
    };

    if (typeof document !== "undefined") {
      var element = document.documentElement;
      if (!element.matches) {
        var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;
        matcher = function (selector) {
          return function () {
            return vendorMatches.call(this, selector);
          };
        };
      }
    }

    var matcher$1 = matcher;

    var filterEvents = {};

    exports.event = null;

    if (typeof document !== "undefined") {
      var element$1 = document.documentElement;
      if (!("onmouseenter" in element$1)) {
        filterEvents = { mouseenter: "mouseover", mouseleave: "mouseout" };
      }
    }

    function filterContextListener(listener, index, group) {
      listener = contextListener(listener, index, group);
      return function (event) {
        var related = event.relatedTarget;
        if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
          listener.call(this, event);
        }
      };
    }

    function contextListener(listener, index, group) {
      return function (event1) {
        var event0 = exports.event; // Events can be reentrant (e.g., focus).
        exports.event = event1;
        try {
          listener.call(this, this.__data__, index, group);
        } finally {
          exports.event = event0;
        }
      };
    }

    function parseTypenames(typenames) {
      return typenames.trim().split(/^|\s+/).map(function (t) {
        var name = "",
            i = t.indexOf(".");
        if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
        return { type: t, name: name };
      });
    }

    function onRemove(typename) {
      return function () {
        var on = this.__on;
        if (!on) return;
        for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
          if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
          } else {
            on[++i] = o;
          }
        }
        if (++i) on.length = i;else delete this.__on;
      };
    }

    function onAdd(typename, value, capture) {
      var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
      return function (d, i, group) {
        var on = this.__on,
            o,
            listener = wrap(value, i, group);
        if (on) for (var j = 0, m = on.length; j < m; ++j) {
          if ((o = on[j]).type === typename.type && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
            this.addEventListener(o.type, o.listener = listener, o.capture = capture);
            o.value = value;
            return;
          }
        }
        this.addEventListener(typename.type, listener, capture);
        o = { type: typename.type, name: typename.name, value: value, listener: listener, capture: capture };
        if (!on) this.__on = [o];else on.push(o);
      };
    }

    var selection_on = function (typename, value, capture) {
      var typenames = parseTypenames(typename + ""),
          i,
          n = typenames.length,
          t;

      if (arguments.length < 2) {
        var on = this.node().__on;
        if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
          for (i = 0, o = on[j]; i < n; ++i) {
            if ((t = typenames[i]).type === o.type && t.name === o.name) {
              return o.value;
            }
          }
        }
        return;
      }

      on = value ? onAdd : onRemove;
      if (capture == null) capture = false;
      for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
      return this;
    };

    function customEvent(event1, listener, that, args) {
      var event0 = exports.event;
      event1.sourceEvent = exports.event;
      exports.event = event1;
      try {
        return listener.apply(that, args);
      } finally {
        exports.event = event0;
      }
    }

    var sourceEvent = function () {
      var current = exports.event,
          source;
      while (source = current.sourceEvent) current = source;
      return current;
    };

    var point = function (node, event) {
      var svg = node.ownerSVGElement || node;

      if (svg.createSVGPoint) {
        var point = svg.createSVGPoint();
        point.x = event.clientX, point.y = event.clientY;
        point = point.matrixTransform(node.getScreenCTM().inverse());
        return [point.x, point.y];
      }

      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    };

    var mouse = function (node) {
      var event = sourceEvent();
      if (event.changedTouches) event = event.changedTouches[0];
      return point(node, event);
    };

    function none() {}

    var selector = function (selector) {
      return selector == null ? none : function () {
        return this.querySelector(selector);
      };
    };

    var selection_select = function (select) {
      if (typeof select !== "function") select = selector(select);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
          if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
            if ("__data__" in node) subnode.__data__ = node.__data__;
            subgroup[i] = subnode;
          }
        }
      }

      return new Selection(subgroups, this._parents);
    };

    function empty() {
      return [];
    }

    var selectorAll = function (selector) {
      return selector == null ? empty : function () {
        return this.querySelectorAll(selector);
      };
    };

    var selection_selectAll = function (select) {
      if (typeof select !== "function") select = selectorAll(select);

      for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            subgroups.push(select.call(node, node.__data__, i, group));
            parents.push(node);
          }
        }
      }

      return new Selection(subgroups, parents);
    };

    var selection_filter = function (match) {
      if (typeof match !== "function") match = matcher$1(match);

      for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
          if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
            subgroup.push(node);
          }
        }
      }

      return new Selection(subgroups, this._parents);
    };

    var sparse = function (update) {
      return new Array(update.length);
    };

    var selection_enter = function () {
      return new Selection(this._enter || this._groups.map(sparse), this._parents);
    };

    function EnterNode(parent, datum) {
      this.ownerDocument = parent.ownerDocument;
      this.namespaceURI = parent.namespaceURI;
      this._next = null;
      this._parent = parent;
      this.__data__ = datum;
    }

    EnterNode.prototype = {
      constructor: EnterNode,
      appendChild: function (child) {
        return this._parent.insertBefore(child, this._next);
      },
      insertBefore: function (child, next) {
        return this._parent.insertBefore(child, next);
      },
      querySelector: function (selector) {
        return this._parent.querySelector(selector);
      },
      querySelectorAll: function (selector) {
        return this._parent.querySelectorAll(selector);
      }
    };

    var constant = function (x) {
      return function () {
        return x;
      };
    };

    var keyPrefix = "$"; // Protect against keys like “__proto__”.

    function bindIndex(parent, group, enter, update, exit, data) {
      var i = 0,
          node,
          groupLength = group.length,
          dataLength = data.length;

      // Put any non-null nodes that fit into update.
      // Put any null nodes into enter.
      // Put any remaining data into enter.
      for (; i < dataLength; ++i) {
        if (node = group[i]) {
          node.__data__ = data[i];
          update[i] = node;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Put any non-null nodes that don’t fit into exit.
      for (; i < groupLength; ++i) {
        if (node = group[i]) {
          exit[i] = node;
        }
      }
    }

    function bindKey(parent, group, enter, update, exit, data, key) {
      var i,
          node,
          nodeByKeyValue = {},
          groupLength = group.length,
          dataLength = data.length,
          keyValues = new Array(groupLength),
          keyValue;

      // Compute the key for each node.
      // If multiple nodes have the same key, the duplicates are added to exit.
      for (i = 0; i < groupLength; ++i) {
        if (node = group[i]) {
          keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
          if (keyValue in nodeByKeyValue) {
            exit[i] = node;
          } else {
            nodeByKeyValue[keyValue] = node;
          }
        }
      }

      // Compute the key for each datum.
      // If there a node associated with this key, join and add it to update.
      // If there is not (or the key is a duplicate), add it to enter.
      for (i = 0; i < dataLength; ++i) {
        keyValue = keyPrefix + key.call(parent, data[i], i, data);
        if (node = nodeByKeyValue[keyValue]) {
          update[i] = node;
          node.__data__ = data[i];
          nodeByKeyValue[keyValue] = null;
        } else {
          enter[i] = new EnterNode(parent, data[i]);
        }
      }

      // Add any remaining nodes that were not bound to data to exit.
      for (i = 0; i < groupLength; ++i) {
        if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
          exit[i] = node;
        }
      }
    }

    var selection_data = function (value, key) {
      if (!value) {
        data = new Array(this.size()), j = -1;
        this.each(function (d) {
          data[++j] = d;
        });
        return data;
      }

      var bind = key ? bindKey : bindIndex,
          parents = this._parents,
          groups = this._groups;

      if (typeof value !== "function") value = constant(value);

      for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
        var parent = parents[j],
            group = groups[j],
            groupLength = group.length,
            data = value.call(parent, parent && parent.__data__, j, parents),
            dataLength = data.length,
            enterGroup = enter[j] = new Array(dataLength),
            updateGroup = update[j] = new Array(dataLength),
            exitGroup = exit[j] = new Array(groupLength);

        bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

        // Now connect the enter nodes to their following update node, such that
        // appendChild can insert the materialized enter node before this node,
        // rather than at the end of the parent node.
        for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
          if (previous = enterGroup[i0]) {
            if (i0 >= i1) i1 = i0 + 1;
            while (!(next = updateGroup[i1]) && ++i1 < dataLength);
            previous._next = next || null;
          }
        }
      }

      update = new Selection(update, parents);
      update._enter = enter;
      update._exit = exit;
      return update;
    };

    var selection_exit = function () {
      return new Selection(this._exit || this._groups.map(sparse), this._parents);
    };

    var selection_merge = function (selection) {

      for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
        for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group0[i] || group1[i]) {
            merge[i] = node;
          }
        }
      }

      for (; j < m0; ++j) {
        merges[j] = groups0[j];
      }

      return new Selection(merges, this._parents);
    };

    var selection_order = function () {

      for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
        for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
          if (node = group[i]) {
            if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
            next = node;
          }
        }
      }

      return this;
    };

    var selection_sort = function (compare) {
      if (!compare) compare = ascending;

      function compareNode(a, b) {
        return a && b ? compare(a.__data__, b.__data__) : !a - !b;
      }

      for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
        for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
          if (node = group[i]) {
            sortgroup[i] = node;
          }
        }
        sortgroup.sort(compareNode);
      }

      return new Selection(sortgroups, this._parents).order();
    };

    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }

    var selection_call = function () {
      var callback = arguments[0];
      arguments[0] = this;
      callback.apply(null, arguments);
      return this;
    };

    var selection_nodes = function () {
      var nodes = new Array(this.size()),
          i = -1;
      this.each(function () {
        nodes[++i] = this;
      });
      return nodes;
    };

    var selection_node = function () {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
          var node = group[i];
          if (node) return node;
        }
      }

      return null;
    };

    var selection_size = function () {
      var size = 0;
      this.each(function () {
        ++size;
      });
      return size;
    };

    var selection_empty = function () {
      return !this.node();
    };

    var selection_each = function (callback) {

      for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
        for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
          if (node = group[i]) callback.call(node, node.__data__, i, group);
        }
      }

      return this;
    };

    function attrRemove(name) {
      return function () {
        this.removeAttribute(name);
      };
    }

    function attrRemoveNS(fullname) {
      return function () {
        this.removeAttributeNS(fullname.space, fullname.local);
      };
    }

    function attrConstant(name, value) {
      return function () {
        this.setAttribute(name, value);
      };
    }

    function attrConstantNS(fullname, value) {
      return function () {
        this.setAttributeNS(fullname.space, fullname.local, value);
      };
    }

    function attrFunction(name, value) {
      return function () {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
      };
    }

    function attrFunctionNS(fullname, value) {
      return function () {
        var v = value.apply(this, arguments);
        if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
      };
    }

    var selection_attr = function (name, value) {
      var fullname = namespace(name);

      if (arguments.length < 2) {
        var node = this.node();
        return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
      }

      return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
    };

    var defaultView = function (node) {
      return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
      node.document && node // node is a Window
      || node.defaultView; // node is a Document
    };

    function styleRemove(name) {
      return function () {
        this.style.removeProperty(name);
      };
    }

    function styleConstant(name, value, priority) {
      return function () {
        this.style.setProperty(name, value, priority);
      };
    }

    function styleFunction(name, value, priority) {
      return function () {
        var v = value.apply(this, arguments);
        if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
      };
    }

    var selection_style = function (name, value, priority) {
      return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
    };

    function styleValue(node, name) {
      return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
    }

    function propertyRemove(name) {
      return function () {
        delete this[name];
      };
    }

    function propertyConstant(name, value) {
      return function () {
        this[name] = value;
      };
    }

    function propertyFunction(name, value) {
      return function () {
        var v = value.apply(this, arguments);
        if (v == null) delete this[name];else this[name] = v;
      };
    }

    var selection_property = function (name, value) {
      return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
    };

    function classArray(string) {
      return string.trim().split(/^|\s+/);
    }

    function classList(node) {
      return node.classList || new ClassList(node);
    }

    function ClassList(node) {
      this._node = node;
      this._names = classArray(node.getAttribute("class") || "");
    }

    ClassList.prototype = {
      add: function (name) {
        var i = this._names.indexOf(name);
        if (i < 0) {
          this._names.push(name);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      remove: function (name) {
        var i = this._names.indexOf(name);
        if (i >= 0) {
          this._names.splice(i, 1);
          this._node.setAttribute("class", this._names.join(" "));
        }
      },
      contains: function (name) {
        return this._names.indexOf(name) >= 0;
      }
    };

    function classedAdd(node, names) {
      var list = classList(node),
          i = -1,
          n = names.length;
      while (++i < n) list.add(names[i]);
    }

    function classedRemove(node, names) {
      var list = classList(node),
          i = -1,
          n = names.length;
      while (++i < n) list.remove(names[i]);
    }

    function classedTrue(names) {
      return function () {
        classedAdd(this, names);
      };
    }

    function classedFalse(names) {
      return function () {
        classedRemove(this, names);
      };
    }

    function classedFunction(names, value) {
      return function () {
        (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
      };
    }

    var selection_classed = function (name, value) {
      var names = classArray(name + "");

      if (arguments.length < 2) {
        var list = classList(this.node()),
            i = -1,
            n = names.length;
        while (++i < n) if (!list.contains(names[i])) return false;
        return true;
      }

      return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
    };

    function textRemove() {
      this.textContent = "";
    }

    function textConstant(value) {
      return function () {
        this.textContent = value;
      };
    }

    function textFunction(value) {
      return function () {
        var v = value.apply(this, arguments);
        this.textContent = v == null ? "" : v;
      };
    }

    var selection_text = function (value) {
      return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
    };

    function htmlRemove() {
      this.innerHTML = "";
    }

    function htmlConstant(value) {
      return function () {
        this.innerHTML = value;
      };
    }

    function htmlFunction(value) {
      return function () {
        var v = value.apply(this, arguments);
        this.innerHTML = v == null ? "" : v;
      };
    }

    var selection_html = function (value) {
      return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
    };

    function raise() {
      if (this.nextSibling) this.parentNode.appendChild(this);
    }

    var selection_raise = function () {
      return this.each(raise);
    };

    function lower() {
      if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }

    var selection_lower = function () {
      return this.each(lower);
    };

    var selection_append = function (name) {
      var create = typeof name === "function" ? name : creator(name);
      return this.select(function () {
        return this.appendChild(create.apply(this, arguments));
      });
    };

    function constantNull() {
      return null;
    }

    var selection_insert = function (name, before) {
      var create = typeof name === "function" ? name : creator(name),
          select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
      return this.select(function () {
        return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
      });
    };

    function remove() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    }

    var selection_remove = function () {
      return this.each(remove);
    };

    var selection_datum = function (value) {
      return arguments.length ? this.property("__data__", value) : this.node().__data__;
    };

    function dispatchEvent(node, type, params) {
      var window = defaultView(node),
          event = window.CustomEvent;

      if (typeof event === "function") {
        event = new event(type, params);
      } else {
        event = window.document.createEvent("Event");
        if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
      }

      node.dispatchEvent(event);
    }

    function dispatchConstant(type, params) {
      return function () {
        return dispatchEvent(this, type, params);
      };
    }

    function dispatchFunction(type, params) {
      return function () {
        return dispatchEvent(this, type, params.apply(this, arguments));
      };
    }

    var selection_dispatch = function (type, params) {
      return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
    };

    var root = [null];

    function Selection(groups, parents) {
      this._groups = groups;
      this._parents = parents;
    }

    function selection() {
      return new Selection([[document.documentElement]], root);
    }

    Selection.prototype = selection.prototype = {
      constructor: Selection,
      select: selection_select,
      selectAll: selection_selectAll,
      filter: selection_filter,
      data: selection_data,
      enter: selection_enter,
      exit: selection_exit,
      merge: selection_merge,
      order: selection_order,
      sort: selection_sort,
      call: selection_call,
      nodes: selection_nodes,
      node: selection_node,
      size: selection_size,
      empty: selection_empty,
      each: selection_each,
      attr: selection_attr,
      style: selection_style,
      property: selection_property,
      classed: selection_classed,
      text: selection_text,
      html: selection_html,
      raise: selection_raise,
      lower: selection_lower,
      append: selection_append,
      insert: selection_insert,
      remove: selection_remove,
      datum: selection_datum,
      on: selection_on,
      dispatch: selection_dispatch
    };

    var select = function (selector) {
      return typeof selector === "string" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);
    };

    var selectAll = function (selector) {
      return typeof selector === "string" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([selector == null ? [] : selector], root);
    };

    var touch = function (node, touches, identifier) {
      if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;

      for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
        if ((touch = touches[i]).identifier === identifier) {
          return point(node, touch);
        }
      }

      return null;
    };

    var touches = function (node, touches) {
      if (touches == null) touches = sourceEvent().touches;

      for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
        points[i] = point(node, touches[i]);
      }

      return points;
    };

    exports.creator = creator;
    exports.local = local;
    exports.matcher = matcher$1;
    exports.mouse = mouse;
    exports.namespace = namespace;
    exports.namespaces = namespaces;
    exports.clientPoint = point;
    exports.select = select;
    exports.selectAll = selectAll;
    exports.selection = selection;
    exports.selector = selector;
    exports.selectorAll = selectorAll;
    exports.style = styleValue;
    exports.touch = touch;
    exports.touches = touches;
    exports.window = defaultView;
    exports.customEvent = customEvent;

    Object.defineProperty(exports, '__esModule', { value: true });
  });
});
$__System.registerDynamic("185", ["2e5"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e5");
});
$__System.registerDynamic("11f", [], true, function ($__require, exports, module) {
    /* */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.scaleAsString = scaleAsString;
    exports.getElementOffset = getElementOffset;
    /**
     *  Copyright (c) 2016, The Regents of the University of California,
     *  through Lawrence Berkeley National Laboratory (subject to receipt
     *  of any required approvals from the U.S. Dept. of Energy).
     *  All rights reserved.
     *
     *  This source code is licensed under the BSD-style license found in the
     *  LICENSE file in the root directory of this source tree.
     */

    function scaleAsString(scale) {
        return scale.domain() + "-" + scale.range();
    }

    // http://stackoverflow.com/a/28857255
    function getElementOffset(element) {
        var de = document.documentElement;
        var box = element.getBoundingClientRect();
        var top = box.top + window.pageYOffset - de.clientTop;
        var left = box.left + window.pageXOffset - de.clientLeft;
        return { top: top, left: left };
    }
});
$__System.registerDynamic("13d", ["22c", "123", "1c", "4c", "50", "184", "13e", "137", "185", "11f"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();
  $__require("22c");
  var _merge = $__require("123");
  var _merge2 = _interopRequireDefault(_merge);
  var _react = $__require("1c");
  var _react2 = _interopRequireDefault(_react);
  var _reactDom = $__require("4c");
  var _reactDom2 = _interopRequireDefault(_reactDom);
  var _propTypes = $__require("50");
  var _propTypes2 = _interopRequireDefault(_propTypes);
  var _d3Axis = $__require("184");
  var _d3Ease = $__require("13e");
  var _d3Format = $__require("137");
  var _d3Selection = $__require("185");
  var _util = $__require("11f");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      } });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var MARGIN = 0;
  var defaultStyle = {
    labels: {
      labelColor: "#8B7E7E",
      labelWeight: 100,
      labelSize: 11
    },
    axis: { axisColor: "#C0C0C0" }
  };
  var YAxis = function (_React$Component) {
    _inherits(YAxis, _React$Component);
    function YAxis() {
      _classCallCheck(this, YAxis);
      return _possibleConstructorReturn(this, (YAxis.__proto__ || Object.getPrototypeOf(YAxis)).apply(this, arguments));
    }
    _createClass(YAxis, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.renderAxis(this.props.align, this.props.scale, +this.props.width, this.props.absolute, this.props.format);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var scale = nextProps.scale;
        var align = nextProps.align;
        var width = nextProps.width;
        var absolute = nextProps.absolute;
        var fmt = nextProps.format;
        var type = nextProps.type;
        if ((0, _util.scaleAsString)(this.props.scale) !== (0, _util.scaleAsString)(scale) || this.props.type !== nextProps.type) {
          this.updateAxis(align, scale, width, absolute, type, fmt);
        }
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate() {
        return false;
      }
    }, {
      key: "updateAxis",
      value: function updateAxis(align, scale, width, absolute, type, fmt) {
        var yformat = (0, _d3Format.format)(fmt);
        var axis = align === "left" ? _d3Axis.axisLeft : _d3Axis.axisRight;
        var axisStyle = (0, _merge2.default)(true, defaultStyle.axis, this.props.style.axis ? this.props.style.axis : {});
        var axisColor = axisStyle.axisColor;
        var axisGenerator = void 0;
        if (type === "linear" || type === "power") {
          if (this.props.height <= 200) {
            axisGenerator = axis(scale).ticks(5).tickFormat(function (d) {
              if (absolute) {
                return yformat(Math.abs(d));
              }
              return yformat(d);
            });
          } else {
            axisGenerator = axis(scale).tickFormat(function (d) {
              if (absolute) {
                return yformat(Math.abs(d));
              }
              return yformat(d);
            });
          }
        } else if (type === "log") {
          axisGenerator = axis(scale).ticks(10, ".2s");
        }
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select(".yaxis").transition().duration(this.props.transition).ease(_d3Ease.easeSinOut).call(axisGenerator);
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").selectAll(".tick").select("text").style("fill", axisColor).style("stroke", "none");
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").selectAll(".tick").select("line").style("stroke", axisColor);
      }
    }, {
      key: "renderAxis",
      value: function renderAxis(align, scale, width, absolute, fmt) {
        var yformat = (0, _d3Format.format)(fmt);
        var axisGenerator = void 0;
        var axis = align === "left" ? _d3Axis.axisLeft : _d3Axis.axisRight;
        if (this.props.type === "linear" || this.props.type === "power") {
          if (this.props.height <= 200) {
            if (this.props.tickCount > 0) {
              axisGenerator = axis(scale).ticks(this.props.tickCount).tickFormat(function (d) {
                if (absolute) {
                  return yformat(Math.abs(d));
                }
                return yformat(d);
              }).tickSizeOuter(0);
            } else {
              axisGenerator = axis(scale).ticks(5).tickFormat(function (d) {
                if (absolute) {
                  return yformat(Math.abs(d));
                }
                return yformat(d);
              }).tickSizeOuter(0);
            }
          } else {
            axisGenerator = axis(scale).tickFormat(function (d) {
              if (absolute) {
                return yformat(Math.abs(d));
              }
              return yformat(d);
            }).tickSizeOuter(0);
          }
        } else if (this.props.type === "log") {
          axisGenerator = axis().scale(scale).ticks(10, ".2s").tickSizeOuter(0);
        }
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).selectAll("*").remove();
        var x = align === "left" ? width - MARGIN : 0;
        var labelOffset = align === "left" ? this.props.labelOffset - 50 : 40 + this.props.labelOffset;
        var labelStyle = (0, _merge2.default)(true, defaultStyle.labels, this.props.style.labels ? this.props.style.labels : {});
        var axisStyle = (0, _merge2.default)(true, defaultStyle.axis, this.props.style.axis ? this.props.style.axis : {});
        var axisColor = axisStyle.axisColor;
        var labelColor = labelStyle.labelColor,
            labelWeight = labelStyle.labelWeight,
            labelSize = labelStyle.labelSize;
        this.axis = (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).append("g").attr("transform", "translate(" + x + ",0)").style("stroke", "none").attr("class", "yaxis").style("fill", labelColor).style("font-weight", labelWeight).style("font-size", labelSize).call(axisGenerator).append("text").text(this.props.label).attr("transform", "rotate(-90)").attr("y", labelOffset).attr("dy", ".71em").attr("text-anchor", "end").style("fill", this.props.style.labelColor).style("font-family", this.props.style.labelFont || '"Goudy Bookletter 1911", sans-serif"').style("font-weight", this.props.style.labelWeight || 100).style("font-size", this.props.style.labelSize ? this.props.style.width + "px" : "12px");
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").selectAll(".tick").select("text").style("fill", axisColor).style("stroke", "none");
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").selectAll(".tick").select("line").style("stroke", axisColor);
        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select("g").select("path").style("fill", "none").style("stroke", axisColor);
      }
    }, {
      key: "render",
      value: function render() {
        return _react2.default.createElement("g", null);
      }
    }]);
    return YAxis;
  }(_react2.default.Component);
  exports.default = YAxis;
  YAxis.defaultProps = {
    id: "yaxis",
    align: "left",
    min: 0,
    max: 1,
    type: "linear",
    absolute: false,
    format: ".2s",
    labelOffset: 0,
    transition: 100,
    width: 80,
    style: defaultStyle
  };
  YAxis.propTypes = {
    id: _propTypes2.default.string.isRequired,
    label: _propTypes2.default.string,
    type: _propTypes2.default.oneOf(["linear", "power", "log"]),
    min: _propTypes2.default.number.isRequired,
    max: _propTypes2.default.number.isRequired,
    absolute: _propTypes2.default.bool,
    style: _propTypes2.default.shape({
      labels: _propTypes2.default.object,
      axis: _propTypes2.default.object,
      labelColor: _propTypes2.default.string,
      labelFont: _propTypes2.default.string,
      labelWeight: _propTypes2.default.string,
      labelSize: _propTypes2.default.string,
      width: _propTypes2.default.number
    }),
    transition: _propTypes2.default.number,
    width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
    labelOffset: _propTypes2.default.number,
    format: _propTypes2.default.string,
    align: _propTypes2.default.string,
    scale: _propTypes2.default.func,
    height: _propTypes2.default.number,
    tickCount: _propTypes2.default.number
  };
});
$__System.registerDynamic("2e6", ["11e", "125", "127", "128", "12c", "12b", "12d", "12e", "13f", "126", "140", "17a", "17e", "17f", "181", "120", "12f", "130", "223", "224", "141", "13d"], true, function ($__require, exports, module) {
  /* */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.YAxis = exports.ValueList = exports.ValueAxis = exports.TimeRangeMarker = exports.TimeMarker = exports.TimeAxis = exports.styler = exports.ScatterChart = exports.Resizable = exports.LineChart = exports.Legend = exports.LabelAxis = exports.EventMarker = exports.EventChart = exports.Charts = exports.ChartRow = exports.ChartContainer = exports.Brush = exports.Baseline = exports.BoxChart = exports.BarChart = exports.AreaChart = undefined;
  var _AreaChart2 = $__require("11e");
  var _AreaChart3 = _interopRequireDefault(_AreaChart2);
  var _BarChart2 = $__require("125");
  var _BarChart3 = _interopRequireDefault(_BarChart2);
  var _BoxChart2 = $__require("127");
  var _BoxChart3 = _interopRequireDefault(_BoxChart2);
  var _Baseline2 = $__require("128");
  var _Baseline3 = _interopRequireDefault(_Baseline2);
  var _Brush2 = $__require("12c");
  var _Brush3 = _interopRequireDefault(_Brush2);
  var _ChartContainer2 = $__require("12b");
  var _ChartContainer3 = _interopRequireDefault(_ChartContainer2);
  var _ChartRow2 = $__require("12d");
  var _ChartRow3 = _interopRequireDefault(_ChartRow2);
  var _Charts2 = $__require("12e");
  var _Charts3 = _interopRequireDefault(_Charts2);
  var _EventChart2 = $__require("13f");
  var _EventChart3 = _interopRequireDefault(_EventChart2);
  var _EventMarker2 = $__require("126");
  var _EventMarker3 = _interopRequireDefault(_EventMarker2);
  var _LabelAxis2 = $__require("140");
  var _LabelAxis3 = _interopRequireDefault(_LabelAxis2);
  var _Legend2 = $__require("17a");
  var _Legend3 = _interopRequireDefault(_Legend2);
  var _LineChart2 = $__require("17e");
  var _LineChart3 = _interopRequireDefault(_LineChart2);
  var _Resizable2 = $__require("17f");
  var _Resizable3 = _interopRequireDefault(_Resizable2);
  var _ScatterChart2 = $__require("181");
  var _ScatterChart3 = _interopRequireDefault(_ScatterChart2);
  var _styler2 = $__require("120");
  var _styler3 = _interopRequireDefault(_styler2);
  var _TimeAxis2 = $__require("12f");
  var _TimeAxis3 = _interopRequireDefault(_TimeAxis2);
  var _TimeMarker2 = $__require("130");
  var _TimeMarker3 = _interopRequireDefault(_TimeMarker2);
  var _TimeRangeMarker2 = $__require("223");
  var _TimeRangeMarker3 = _interopRequireDefault(_TimeRangeMarker2);
  var _ValueAxis2 = $__require("224");
  var _ValueAxis3 = _interopRequireDefault(_ValueAxis2);
  var _ValueList2 = $__require("141");
  var _ValueList3 = _interopRequireDefault(_ValueList2);
  var _YAxis2 = $__require("13d");
  var _YAxis3 = _interopRequireDefault(_YAxis2);
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
  exports.AreaChart = _AreaChart3.default;
  exports.BarChart = _BarChart3.default;
  exports.BoxChart = _BoxChart3.default;
  exports.Baseline = _Baseline3.default;
  exports.Brush = _Brush3.default;
  exports.ChartContainer = _ChartContainer3.default;
  exports.ChartRow = _ChartRow3.default;
  exports.Charts = _Charts3.default;
  exports.EventChart = _EventChart3.default;
  exports.EventMarker = _EventMarker3.default;
  exports.LabelAxis = _LabelAxis3.default;
  exports.Legend = _Legend3.default;
  exports.LineChart = _LineChart3.default;
  exports.Resizable = _Resizable3.default;
  exports.ScatterChart = _ScatterChart3.default;
  exports.styler = _styler3.default;
  exports.TimeAxis = _TimeAxis3.default;
  exports.TimeMarker = _TimeMarker3.default;
  exports.TimeRangeMarker = _TimeRangeMarker3.default;
  exports.ValueAxis = _ValueAxis3.default;
  exports.ValueList = _ValueList3.default;
  exports.YAxis = _YAxis3.default;
});
$__System.registerDynamic("2e7", ["2e6"], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = $__require("2e6");
});
$__System.register("2e8", ["12", "13", "19", "20", "1f", "1c", "1d", "1e", "2e7"], function (_export) {
    var _createClass, _classCallCheck, TimeSeries, TimeRange, _inherits, _get, React, observer, Grid, Row, Col, Table, FormGroup, Checkbox, ControlLabel, Charts, ChartContainer, ChartRow, YAxis, AreaChart, styler, Resizable, Brush, TimeMarker, _class, customColorsList, ChartView;

    return {
        setters: [function (_2) {
            _createClass = _2["default"];
        }, function (_3) {
            _classCallCheck = _3["default"];
        }, function (_4) {
            TimeSeries = _4.TimeSeries;
            TimeRange = _4.TimeRange;
        }, function (_) {
            _inherits = _["default"];
        }, function (_f) {
            _get = _f["default"];
        }, function (_c) {
            React = _c;
        }, function (_d) {
            observer = _d.observer;
        }, function (_e) {
            Grid = _e.Grid;
            Row = _e.Row;
            Col = _e.Col;
            Table = _e.Table;
            FormGroup = _e.FormGroup;
            Checkbox = _e.Checkbox;
            ControlLabel = _e.ControlLabel;
        }, function (_e7) {
            Charts = _e7.Charts;
            ChartContainer = _e7.ChartContainer;
            ChartRow = _e7.ChartRow;
            YAxis = _e7.YAxis;
            AreaChart = _e7.AreaChart;
            styler = _e7.styler;
            Resizable = _e7.Resizable;
            Brush = _e7.Brush;
            TimeMarker = _e7.TimeMarker;
        }],
        execute: function () {
            "use strict";

            customColorsList = ["#1f77b4", "#aec7e8", "#ff7f0e", "#ffbb78", "#2ca02c", "#98df8a", "#d62728", "#ff9896", "#9467bd", "#c5b0d5", "#8c564b", "#c49c94", "#e377c2", "#f7b6d2", "#7f7f7f", "#c7c7c7", "#bcbd22", "#dbdb8d", "#17becf", "#9edae5"];
            ChartView = observer(_class = (function (_React$Component) {
                _inherits(ChartView, _React$Component);

                function ChartView(props) {
                    _classCallCheck(this, ChartView);

                    _get(Object.getPrototypeOf(ChartView.prototype), "constructor", this).call(this, props);
                    this.handleTimeRangeChange = this.handleTimeRangeChange.bind(this);
                    this.handleDateChanged = this.handleDateChanged.bind(this);
                }

                _createClass(ChartView, [{
                    key: "handleTimeRangeChange",
                    value: function handleTimeRangeChange(newRange) {
                        this.props.vm.selectedRange = newRange;
                    }
                }, {
                    key: "handleDateChanged",
                    value: function handleDateChanged(newDate) {
                        this.props.vm.selectedDate = newDate;
                    }
                }, {
                    key: "render",
                    value: function render() {
                        var _this = this;

                        if (!this.props.vm.timeseries) {
                            return React.createElement("div", null, "Loading...");
                        }

                        var stylerForArea = styler(this.props.vm.categories.map(function (c, i) {
                            return {
                                key: c.name,
                                color: customColorsList[i]
                            };
                        }));

                        var stlyerForSelector = styler([{ key: "_total", color: "#777" }]);

                        var rangeToShow = this.props.vm.selectedRange || this.props.vm.timeseries.range();

                        return React.createElement(Grid, { fluid: true }, React.createElement(Row, null, React.createElement(Col, { lg: 9, sm: 12 }, React.createElement(Resizable, null, React.createElement(ChartContainer, {
                            timeRange: rangeToShow,
                            trackerPosition: this.props.vm.selectedDate,
                            onTrackerChanged: this.handleDateChanged
                        }, React.createElement(ChartRow, { height: "350" }, React.createElement(YAxis, {
                            id: "y",
                            min: 0,
                            max: 5000,
                            width: "60",
                            type: "linear" }), React.createElement(Charts, null, React.createElement(AreaChart, {
                            axis: "y",
                            style: stylerForArea,
                            series: this.props.vm.timeseries,
                            columns: { up: this.props.vm.selectedCategories.slice().sort() },
                            //fillOpacity={0.4}
                            interpolation: "curveStepAfter" }))))), React.createElement(Resizable, null, React.createElement(ChartContainer, { timeRange: this.props.vm.timeseries.range() }, React.createElement(ChartRow, { height: "150" }, React.createElement(YAxis, {
                            id: "y",
                            min: 0,
                            max: 5000,
                            width: "60",
                            type: "linear" }), React.createElement(Charts, null, React.createElement(Brush, {
                            timeRange: this.props.vm.selectedRange,
                            allowSelectionClear: true,
                            onTimeRangeChanged: this.handleTimeRangeChange
                        }), React.createElement(AreaChart, {
                            axis: "y",
                            style: stlyerForSelector,
                            series: this.props.vm.timeseries,
                            columns: { up: ['_total'] },
                            //fillOpacity={0.4}
                            interpolation: "curveStepBefore" })))))), React.createElement(Col, { lg: 3, sm: 12 }, React.createElement(FormGroup, null, React.createElement(ControlLabel, null, "Ausgaben anzeigen von "), ' ', this.props.vm.people.map(function (person) {
                            var checked = _this.props.vm.selectedPeople.find(function (x) {
                                return x === person.name;
                            });
                            return React.createElement(Checkbox, {
                                key: person.name,
                                inline: true,
                                checked: !!checked,
                                onChange: function onChange() {
                                    return _this.props.vm.togglePerson(person.name);
                                }
                            }, person.fullName);
                        })), React.createElement(Table, { responsive: true }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "#"), React.createElement("th", null, "Name"), React.createElement("th", null, "Wert"))), React.createElement("tbody", null, this.props.vm.categories.map(function (category) {
                            var color = stylerForArea.columnStyles[category.name].color;
                            var checked = _this.props.vm.selectedCategories.find(function (x) {
                                return x === category.name;
                            });
                            return React.createElement("tr", { key: category.name }, React.createElement("td", { style: { backgroundColor: color } }, React.createElement(Checkbox, {
                                inline: true,
                                checked: !!checked,
                                onChange: function onChange() {
                                    return _this.props.vm.toggleCategory(category.name);
                                }
                            })), React.createElement("td", null, category.fullName), React.createElement("td", { style: { textAlign: "right" } }, _this.props.vm.selectedDateValues[category.name]));
                        }))))));
                    }
                }]);

                return ChartView;
            })(React.Component)) || _class;

            _export("ChartView", ChartView);
        }
    };
});
$__System.register("1", ["12", "13", "20", "53", "1f", "1c", "4c", "1d", "1e", "1a", "2e8"], function (_export) {
  var _createClass, _classCallCheck, _inherits, TableView, _get, React, ReactDOM, observer, Navbar, Nav, NavItem, MainViewModel, ChartView, _class, App, vm;

  return {
    setters: [function (_2) {
      _createClass = _2["default"];
    }, function (_3) {
      _classCallCheck = _3["default"];
    }, function (_) {
      _inherits = _["default"];
    }, function (_4) {
      TableView = _4.TableView;
    }, function (_f) {
      _get = _f["default"];
    }, function (_c) {
      React = _c;
    }, function (_c2) {
      ReactDOM = _c2;
    }, function (_d) {
      observer = _d.observer;
    }, function (_e) {
      Navbar = _e.Navbar;
      Nav = _e.Nav;
      NavItem = _e.NavItem;
    }, function (_a) {
      MainViewModel = _a.MainViewModel;
    }, function (_e8) {
      ChartView = _e8.ChartView;
    }],
    execute: function () {
      "use strict";

      App = observer(_class = (function (_React$Component) {
        _inherits(App, _React$Component);

        function App() {
          _classCallCheck(this, App);

          _get(Object.getPrototypeOf(App.prototype), "constructor", this).call(this);
          this.handleNavSelect = this.handleNavSelect.bind(this);
        }

        _createClass(App, [{
          key: "handleNavSelect",
          value: function handleNavSelect(tabKey) {
            this.props.vm.selectedTabKey = tabKey;
          }
        }, {
          key: "renderContent",
          value: function renderContent() {
            switch (this.props.vm.selectedTabKey) {
              case 'table':
                return React.createElement(TableView, { vm: this.props.vm.tableViewModel });
              case 'chart':
                return React.createElement(ChartView, { vm: this.props.vm.chartViewModel });
              default:
                return React.createElement("span", null, "Tab key not found");
            }
          }
        }, {
          key: "render",
          value: function render() {
            return React.createElement("div", null, React.createElement(Navbar, { inverse: true }, React.createElement(Navbar.Header, null, React.createElement(Navbar.Brand, null, React.createElement("a", { href: "#" }, "🐞 AJExpenditor 2"))), React.createElement(Nav, { bsStyle: "pills", activeKey: this.props.vm.selectedTabKey, onSelect: this.handleNavSelect }, React.createElement(NavItem, { eventKey: 'table' }, "Table"), React.createElement(NavItem, { eventKey: 'chart' }, "Chart"))), this.renderContent());
          }
        }]);

        return App;
      })(React.Component)) || _class;
      vm = new MainViewModel();

      window.vm = vm;

      ReactDOM.render(React.createElement(App, { vm: vm }), document.getElementById('root'));
    }
  };
});
})
(function(factory) {
  factory();
});
//# sourceMappingURL=index.js.map