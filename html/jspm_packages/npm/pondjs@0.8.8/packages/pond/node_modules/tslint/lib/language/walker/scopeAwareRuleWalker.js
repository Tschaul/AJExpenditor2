/* */ 
"use strict";
Object.defineProperty(exports, "__esModule", {value: true});
var tslib_1 = require('../../../../tslib/tslib');
var ts = require('../../../../typescript/lib/typescript');
var utils_1 = require('../utils');
var ruleWalker_1 = require('./ruleWalker');
var ScopeAwareRuleWalker = (function(_super) {
  tslib_1.__extends(ScopeAwareRuleWalker, _super);
  function ScopeAwareRuleWalker(sourceFile, options) {
    var _this = _super.call(this, sourceFile, options) || this;
    _this.scopeStack = ts.isExternalModule(sourceFile) ? [] : [_this.createScope(sourceFile)];
    return _this;
  }
  ScopeAwareRuleWalker.prototype.getCurrentScope = function() {
    return this.scopeStack[this.scopeStack.length - 1];
  };
  ScopeAwareRuleWalker.prototype.getAllScopes = function() {
    return this.scopeStack;
  };
  ScopeAwareRuleWalker.prototype.getCurrentDepth = function() {
    return this.scopeStack.length;
  };
  ScopeAwareRuleWalker.prototype.onScopeStart = function() {
    return;
  };
  ScopeAwareRuleWalker.prototype.onScopeEnd = function() {
    return;
  };
  ScopeAwareRuleWalker.prototype.visitNode = function(node) {
    var isNewScope = this.isScopeBoundary(node);
    if (isNewScope) {
      this.scopeStack.push(this.createScope(node));
      this.onScopeStart();
    }
    _super.prototype.visitNode.call(this, node);
    if (isNewScope) {
      this.onScopeEnd();
      this.scopeStack.pop();
    }
  };
  ScopeAwareRuleWalker.prototype.isScopeBoundary = function(node) {
    return utils_1.isScopeBoundary(node);
  };
  return ScopeAwareRuleWalker;
}(ruleWalker_1.RuleWalker));
exports.ScopeAwareRuleWalker = ScopeAwareRuleWalker;
