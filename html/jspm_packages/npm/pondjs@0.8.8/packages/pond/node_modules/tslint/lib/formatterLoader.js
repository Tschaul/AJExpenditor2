/* */ 
"use strict";
Object.defineProperty(exports, "__esModule", {value: true});
var fs = require('fs');
var path = require('path');
var utils_1 = require('./utils');
var moduleDirectory = path.dirname(module.filename);
var CORE_FORMATTERS_DIRECTORY = path.resolve(moduleDirectory, ".", "formatters");
function findFormatter(name, formattersDirectory) {
  if (typeof name === "function") {
    return name;
  } else if (typeof name === "string") {
    name = name.trim();
    var camelizedName = utils_1.camelize(name + "Formatter");
    var Formatter = loadFormatter(CORE_FORMATTERS_DIRECTORY, camelizedName);
    if (Formatter != null) {
      return Formatter;
    }
    if (formattersDirectory !== undefined) {
      Formatter = loadFormatter(formattersDirectory, camelizedName);
      if (Formatter !== undefined) {
        return Formatter;
      }
    }
    return loadFormatterModule(name);
  } else {
    throw new Error("Name of type " + typeof name + " is not supported.");
  }
}
exports.findFormatter = findFormatter;
function loadFormatter() {
  var paths = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    paths[_i] = arguments[_i];
  }
  var formatterPath = paths.reduce(function(p, c) {
    return path.join(p, c);
  }, "");
  var fullPath = path.resolve(moduleDirectory, formatterPath);
  if (fs.existsSync(fullPath + ".js")) {
    var formatterModule = require(fullPath);
    return formatterModule.Formatter;
  }
  return undefined;
}
function loadFormatterModule(name) {
  var src;
  try {
    src = require.resolve(name);
  } catch (e) {
    return undefined;
  }
  return require(src).Formatter;
}
