/* */ 
"use strict";
Object.defineProperty(exports, "__esModule", {value: true});
var tslib_1 = require('../../../tslib/tslib');
var Lint = require('../index');
var Rule = (function(_super) {
  tslib_1.__extends(Rule, _super);
  function Rule() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  Rule.prototype.apply = function(sourceFile) {
    var length = sourceFile.text.length;
    if (length === 0 || sourceFile.text[length - 1] === "\n") {
      return [];
    }
    var fix;
    var lines = sourceFile.getLineStarts();
    if (lines.length > 1) {
      fix = Lint.Replacement.appendText(length, sourceFile.text[lines[1] - 2] === "\r" ? "\r\n" : "\n");
    }
    return [new Lint.RuleFailure(sourceFile, length, length, Rule.FAILURE_STRING, this.ruleName, fix)];
  };
  Rule.metadata = {
    ruleName: "eofline",
    description: "Ensures the file ends with a newline.",
    descriptionDetails: "Fix for single-line files is not supported.",
    rationale: "It is a [standard convention](http://stackoverflow.com/q/729692/3124288) to end files with a newline.",
    optionsDescription: "Not configurable.",
    options: null,
    optionExamples: [true],
    hasFix: true,
    type: "maintainability",
    typescriptOnly: false
  };
  Rule.FAILURE_STRING = "file should end with a newline";
  return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
