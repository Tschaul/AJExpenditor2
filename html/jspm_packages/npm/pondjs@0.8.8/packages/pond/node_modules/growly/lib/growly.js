/* */ 
(function(Buffer) {
  var GNTP = require('./gntp');
  function Growly() {
    this.appname = 'Growly';
    this.notifications = undefined;
    this.labels = undefined;
    this.count = 0;
    this.registered = false;
    this.host = undefined;
    this.port = undefined;
  }
  Growly.prototype.getLabels = function() {
    return this.notifications.map(function(notif) {
      return notif.label;
    });
  };
  Growly.prototype.setHost = function(host, port) {
    this.host = host;
    this.port = port;
  };
  Growly.prototype.register = function(appname, appicon, notifications, callback) {
    var gntp;
    if (typeof appicon === 'object') {
      notifications = appicon;
      appicon = undefined;
    }
    if (notifications === undefined || !notifications.length) {
      notifications = [{
        label: 'default',
        dispname: 'Default Notification',
        enabled: true
      }];
    }
    if (typeof arguments[arguments.length - 1] === 'function') {
      callback = arguments[arguments.length - 1];
    } else {
      callback = function() {};
    }
    this.appname = appname;
    this.notifications = notifications;
    this.labels = this.getLabels();
    this.registered = true;
    gntp = new GNTP('REGISTER', {
      host: this.host,
      port: this.port
    });
    gntp.add('Application-Name', appname);
    gntp.add('Application-Icon', appicon);
    gntp.add('Notifications-Count', notifications.length);
    gntp.newline();
    notifications.forEach(function(notif) {
      if (notif.enabled === undefined)
        notif.enabled = true;
      gntp.add('Notification-Name', notif.label);
      gntp.add('Notification-Display-Name', notif.dispname);
      gntp.add('Notification-Enabled', notif.enabled ? 'True' : 'False');
      gntp.add('Notification-Icon', notif.icon);
      gntp.newline();
    });
    gntp.send(callback);
  };
  Growly.prototype.notify = function(text, opts, callback) {
    var self = this,
        gntp;
    if (!this.registered) {
      this.register(this.appname, function(err) {
        if (err)
          console.log(err);
        self.notify.call(self, text, opts, callback);
      });
      return;
    }
    opts = opts || {};
    if (typeof opts === 'function') {
      callback = opts;
      opts = {};
    }
    gntp = new GNTP('NOTIFY', {
      host: this.host,
      port: this.port
    });
    gntp.add('Application-Name', this.appname);
    gntp.add('Notification-Name', opts.label || this.labels[0]);
    gntp.add('Notification-ID', ++this.count);
    gntp.add('Notification-Title', opts.title);
    gntp.add('Notification-Text', text);
    gntp.add('Notification-Sticky', opts.sticky ? 'True' : 'False');
    gntp.add('Notification-Priority', opts.priority);
    gntp.add('Notification-Icon', opts.icon);
    gntp.add('Notification-Coalescing-ID', opts.coalescingId || undefined);
    gntp.add('Notification-Callback-Context', callback ? 'context' : undefined);
    gntp.add('Notification-Callback-Context-Type', callback ? 'string' : undefined);
    gntp.add('Notification-Callback-Target', undefined);
    gntp.newline();
    gntp.send(function(err, resp) {
      if (callback && err) {
        callback(err);
      } else if (callback && resp.state === 'CALLBACK') {
        callback(undefined, resp['Notification-Callback-Result'].toLowerCase());
      }
    });
  };
  module.exports = new Growly();
})(require('buffer').Buffer);
