/* */ 
'use strict';
const expect = require('../../jest-matchers/build/index');
var _require = require('../../jest-snapshot/build/index');
const addSerializer = _require.addSerializer,
    toMatchSnapshot = _require.toMatchSnapshot,
    toThrowErrorMatchingSnapshot = _require.toThrowErrorMatchingSnapshot;
module.exports = (config) => {
  global.expect = expect;
  expect.setState({expand: config.expand});
  expect.extend({
    toMatchSnapshot,
    toThrowErrorMatchingSnapshot
  });
  expect.addSnapshotSerializer = addSerializer;
  const jasmine = global.jasmine;
  jasmine.anything = expect.anything;
  jasmine.any = expect.any;
  jasmine.objectContaining = expect.objectContaining;
  jasmine.arrayContaining = expect.arrayContaining;
  jasmine.stringMatching = expect.stringMatching;
  jasmine.addMatchers = (jasmineMatchersObject) => {
    const jestMatchersObject = Object.create(null);
    Object.keys(jasmineMatchersObject).forEach((name) => {
      jestMatchersObject[name] = function() {
        const result = jasmineMatchersObject[name](jasmine.matchersUtil, null);
        const negativeCompare = result.negativeCompare || result.compare;
        return this.isNot ? negativeCompare.apply(null, arguments) : result.compare.apply(null, arguments);
      };
    });
    const expect = global.expect;
    expect.extend(jestMatchersObject);
  };
};
