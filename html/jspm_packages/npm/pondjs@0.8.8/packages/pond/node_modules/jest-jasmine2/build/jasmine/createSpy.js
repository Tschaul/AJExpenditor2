/* */ 
'use strict';
const CallTracker = require('./CallTracker');
const SpyStrategy = require('./SpyStrategy');
function createSpy(name, originalFn) {
  const spyStrategy = new SpyStrategy({
    name,
    fn: originalFn,
    getSpy() {
      return spy;
    }
  });
  const callTracker = new CallTracker();
  const spy = function() {
    const callData = {
      object: this,
      args: Array.prototype.slice.apply(arguments)
    };
    callTracker.track(callData);
    const returnValue = spyStrategy.exec.apply(this, arguments);
    callData.returnValue = returnValue;
    return returnValue;
  };
  for (const prop in originalFn) {
    if (prop === 'and' || prop === 'calls') {
      throw new Error("Jasmine spies would overwrite the 'and' and 'calls' properties " + 'on the object being spied upon');
    }
    spy[prop] = originalFn[prop];
  }
  spy.and = spyStrategy;
  spy.calls = callTracker;
  return spy;
}
module.exports = createSpy;
