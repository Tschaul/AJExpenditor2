/* */ 
"use strict";
const nodeType = require('../node-type');
const FocusEvent = require('../generated/FocusEvent');
const idlUtils = require('../generated/utils');
const isDisabled = require('./form-controls').isDisabled;
const focusableFormElements = new Set(["input", "select", "textarea", "button"]);
exports.isFocusableAreaElement = (elImpl) => {
  if (!elImpl._ownerDocument._defaultView && !elImpl._defaultView) {
    return false;
  }
  if (elImpl._nodeType === nodeType.DOCUMENT_NODE) {
    return true;
  }
  if (!Number.isNaN(parseInt(elImpl.getAttribute("tabindex")))) {
    return true;
  }
  if (elImpl._namespaceURI === "http://www.w3.org/1999/xhtml") {
    if (elImpl._localName === "iframe") {
      return true;
    }
    if (elImpl._localName === "a" && elImpl.hasAttribute("href")) {
      return true;
    }
    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {
      if (elImpl._localName === "input" && elImpl.type === "hidden") {
        return false;
      }
      return true;
    }
  }
  return false;
};
exports.fireFocusEventWithTargetAdjustment = (name, target, relatedTarget) => {
  if (target === null) {
    return;
  }
  const event = FocusEvent.createImpl([name, {
    bubbles: false,
    cancelable: false,
    relatedTarget,
    view: target._ownerDocument._defaultView,
    detail: 0
  }], {isTrusted: true});
  if (target._defaultView) {
    target = idlUtils.implForWrapper(target._defaultView);
  }
  target._dispatch(event);
};
