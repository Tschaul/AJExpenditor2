/* */ 
"use strict";
const internalQuerySelector = require('./selectors').querySelector;
const whatwgURL = require('../../../../../whatwg-url/lib/public-api');
exports.documentBaseURL = (document) => {
  const firstBase = internalQuerySelector(document, "base[href]");
  const fallbackBaseURL = exports.fallbackBaseURL(document);
  if (firstBase === null) {
    return fallbackBaseURL;
  }
  return frozenBaseURL(firstBase, fallbackBaseURL);
};
exports.documentBaseURLSerialized = (document) => {
  return whatwgURL.serializeURL(exports.documentBaseURL(document));
};
exports.fallbackBaseURL = (document) => {
  if (document.URL === "about:blank" && document._defaultView && document._defaultView._parent !== document._defaultView) {
    return exports.documentBaseURL(document._defaultView._parent._document);
  }
  return document._URL;
};
exports.parseURLToResultingURLRecord = (url, document) => {
  const baseURL = exports.documentBaseURL(document);
  return whatwgURL.parseURL(url, {baseURL});
};
function frozenBaseURL(baseElement, fallbackBaseURL) {
  const baseHrefAttribute = baseElement.getAttribute("href");
  const result = whatwgURL.parseURL(baseHrefAttribute, {baseURL: fallbackBaseURL});
  return result === "failure" ? fallbackBaseURL : result;
}
