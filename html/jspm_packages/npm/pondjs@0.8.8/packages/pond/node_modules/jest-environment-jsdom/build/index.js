/* */ 
'use strict';
var _require = require('../../jest-util/build/index');
const FakeTimers = _require.FakeTimers,
    installCommonGlobals = _require.installCommonGlobals;
const mock = require('../../jest-mock/build/index');
class JSDOMEnvironment {
  constructor(config) {
    this.document = require('../../jsdom/lib/jsdom').jsdom(undefined, {url: config.testURL});
    const global = this.global = this.document.defaultView;
    this.global.Error.stackTraceLimit = 100;
    installCommonGlobals(global, config.globals);
    this.moduleMocker = new mock.ModuleMocker(global);
    this.fakeTimers = new FakeTimers(global, this.moduleMocker, config);
  }
  dispose() {
    if (this.fakeTimers) {
      this.fakeTimers.dispose();
    }
    if (this.global) {
      this.global.close();
    }
    this.global = null;
    this.document = null;
    this.fakeTimers = null;
  }
  runScript(script) {
    if (this.global) {
      return require('../../jsdom/lib/jsdom').evalVMScript(this.global, script);
    }
    return null;
  }
}
module.exports = JSDOMEnvironment;
