/* */ 
'use strict';
const path = require('path');
var _require = require('../../jest-regex-util/build/index');
const escapePathForRegex = _require.escapePathForRegex;
const micromatch = require('../../micromatch/index');
const MOCKS_PATTERN = new RegExp(escapePathForRegex(path.sep + '__mocks__' + path.sep));
const shouldInstrument = (filename, options, config) => {
  if (!options.collectCoverage) {
    return false;
  }
  if (config.testRegex && filename.match(config.testRegex)) {
    return false;
  }
  if (config.testMatch && config.testMatch.length && micromatch.any(filename, config.testMatch)) {
    return false;
  }
  if (options.collectCoverageOnlyFrom && !options.collectCoverageOnlyFrom[filename]) {
    return false;
  }
  if (!options.collectCoverageOnlyFrom && options.collectCoverageFrom && !micromatch([path.relative(config.rootDir, filename)], options.collectCoverageFrom).length) {
    return false;
  }
  if (config.coveragePathIgnorePatterns && config.coveragePathIgnorePatterns.some((pattern) => filename.match(pattern))) {
    return false;
  }
  if (MOCKS_PATTERN.test(filename)) {
    return false;
  }
  return true;
};
module.exports = shouldInstrument;
