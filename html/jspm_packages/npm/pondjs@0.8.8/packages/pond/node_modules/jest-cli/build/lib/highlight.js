/* */ 
'use strict';
const path = require('path');
const chalk = require('../../../chalk/index');
const colorize = require('./colorize');
const trim = '...';
const relativePathHead = './';
const highlight = (rawPath, filePath, pattern, rootDir) => {
  let regexp;
  try {
    regexp = new RegExp(pattern, 'i');
  } catch (e) {
    return chalk.dim(filePath);
  }
  rawPath = chalk.stripColor(rawPath);
  filePath = chalk.stripColor(filePath);
  const match = rawPath.match(regexp);
  if (!match) {
    return chalk.dim(filePath);
  }
  let offset;
  let trimLength;
  if (filePath.startsWith(trim)) {
    offset = rawPath.length - filePath.length;
    trimLength = trim.length;
  } else if (filePath.startsWith(relativePathHead)) {
    offset = rawPath.length - filePath.length;
    trimLength = relativePathHead.length;
  } else {
    offset = rootDir.length + path.sep.length;
    trimLength = 0;
  }
  const start = match.index - offset;
  const end = start + match[0].length;
  return colorize(filePath, Math.max(start, 0), Math.max(end, trimLength));
};
module.exports = highlight;
