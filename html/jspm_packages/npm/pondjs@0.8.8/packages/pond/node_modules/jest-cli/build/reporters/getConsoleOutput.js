/* */ 
'use strict';
const path = require('path');
const chalk = require('../../../chalk/index');
module.exports = (root, verbose, buffer) => {
  const TITLE_INDENT = verbose ? '  ' : '    ';
  const CONSOLE_INDENT = TITLE_INDENT + '  ';
  return buffer.reduce((output, _ref) => {
    let type = _ref.type,
        message = _ref.message,
        origin = _ref.origin;
    origin = path.relative(root, origin);
    message = message.split(/\n/).map((line) => CONSOLE_INDENT + line).join('\n');
    let typeMessage = 'console.' + type;
    if (type === 'warn') {
      message = chalk.yellow(message);
      typeMessage = chalk.yellow(typeMessage);
    } else if (type === 'error') {
      message = chalk.red(message);
      typeMessage = chalk.red(typeMessage);
    }
    return (output + TITLE_INDENT + chalk.dim(typeMessage) + ' ' + chalk.dim(origin) + '\n' + message + '\n');
  }, '');
};
