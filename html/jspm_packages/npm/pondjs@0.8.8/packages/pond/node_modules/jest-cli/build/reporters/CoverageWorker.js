/* */ 
(function(process) {
  'use strict';
  const fs = require('fs');
  const generateEmptyCoverage = require('../generateEmptyCoverage');
  function formatCoverageError(error, filename) {
    const message = `
    Failed to collect coverage from ${filename}
    ERROR: ${error}
    STACK: ${error.stack}
  `;
    return {
      message,
      stack: error.stack,
      type: 'ERROR'
    };
  }
  process.on('uncaughtException', (err) => {
    console.error(err.stack);
    process.exit(1);
  });
  module.exports = (_ref, callback) => {
    let config = _ref.config,
        globalConfig = _ref.globalConfig,
        path = _ref.path;
    try {
      const source = fs.readFileSync(path, 'utf8');
      const result = generateEmptyCoverage(source, path, globalConfig, config);
      callback(null, result);
    } catch (error) {
      callback(formatCoverageError(error, path), undefined);
    }
  };
})(require('process'));
