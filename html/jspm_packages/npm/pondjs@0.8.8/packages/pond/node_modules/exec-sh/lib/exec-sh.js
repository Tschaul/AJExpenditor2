/* */ 
(function(process) {
  var cp = require('child_process'),
      merge = require('../../merge/merge');
  var sh,
      cmd,
      defSpawnOptions = {stdio: "inherit"};
  function getShell() {
    if (process.platform === "win32") {
      return {
        cmd: "cmd",
        arg: "/C"
      };
    } else {
      return {
        cmd: "sh",
        arg: "-c"
      };
    }
  }
  function execSh(command, options, callback) {
    if (Array.isArray(command)) {
      command = command.join(";");
    }
    if (options === true) {
      options = {stdio: null};
    }
    if (typeof options === "function") {
      callback = options;
      options = defSpawnOptions;
    } else {
      options = options || {};
      options = merge(true, defSpawnOptions, options);
      callback = callback || function() {};
    }
    var child,
        stdout = "",
        stderr = "",
        shell = getShell();
    try {
      child = cp.spawn(shell.cmd, [shell.arg, command], options);
    } catch (e) {
      callback(e, stdout, stderr);
      return;
    }
    if (child.stdout) {
      child.stdout.on("data", function(data) {
        stdout += data;
      });
    }
    if (child.stderr) {
      child.stderr.on("data", function(data) {
        stderr += data;
      });
    }
    child.on("close", function(code) {
      if (code) {
        var e = new Error("Shell command exit with non zero code: " + code);
        e.code = code;
        callback(e, stdout, stderr);
      } else {
        callback(null, stdout, stderr);
      }
    });
    return child;
  }
  module.exports = execSh;
})(require('process'));
