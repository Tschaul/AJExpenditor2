/* */ 
'use strict';
const defaultConfig = require('./defaultConfig');
const _validate = (config, options) => {
  let hasDeprecationWarnings = false;
  for (const key in config) {
    if (options.deprecatedConfig && key in options.deprecatedConfig && typeof options.deprecate === 'function') {
      const isDeprecatedKey = options.deprecate(config, key, options.deprecatedConfig, options);
      hasDeprecationWarnings = hasDeprecationWarnings || isDeprecatedKey;
    } else if (hasOwnProperty.call(options.exampleConfig, key)) {
      if (typeof options.condition === 'function' && typeof options.error === 'function' && !options.condition(config[key], options.exampleConfig[key])) {
        options.error(key, config[key], options.exampleConfig[key], options);
      }
    } else {
      options.unknown && options.unknown(config, options.exampleConfig, key, options);
    }
  }
  return {hasDeprecationWarnings};
};
const validate = (config, options) => {
  _validate(options, defaultConfig);
  const defaultedOptions = Object.assign({}, defaultConfig, options, {title: Object.assign({}, defaultConfig.title, options.title)});
  var _validate2 = _validate(config, defaultedOptions);
  const hasDeprecationWarnings = _validate2.hasDeprecationWarnings;
  return {
    hasDeprecationWarnings,
    isValid: true
  };
};
module.exports = validate;
